var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AccordionRecursion.html",[0,0.047,1,0.673]],["body/components/AccordionRecursion.html",[0,0.078,1,1.126,2,0.797,3,0.069,4,0.069,5,0.603,6,0.581,7,0.603,8,0.047,9,2.667,10,0.5,11,1.512,12,0.89,13,4.528,14,0.138,15,0.316,16,4.687,17,5.385,18,0.795,19,4.528,20,3.16,21,4.528,22,4.528,23,4.528,24,1.415,25,5.385,26,5.385,27,5.948,28,5.385,29,0.463,30,2.406,31,2.936,32,0.309,33,4.528,34,0.92,35,0.014,36,0.523,37,0.309,38,0.958,39,2.232,40,3.065,41,3.065,42,3.065,43,3.065,44,4.528,45,3.065,46,5.948,47,0.848,48,3.065,49,1.047,50,4.528,51,3.065,52,3.065,53,3.065,54,3.065,55,3.065,56,1.809,57,0.519,58,0.481,59,2.026,60,3.065,61,0.356,62,1.781,63,1.551,64,0.283,65,1.812,66,0.08,67,0.088,68,3.065,69,2.462,70,4.226,71,4.226,72,3.065,73,5.385,74,2.842,75,3.065,76,3.265,77,0.36,78,3.065,79,2.667,80,1.103,81,2.667,82,2.21,83,3.065,84,2.667,85,1.64,86,3.941,87,0.767,88,2.6,89,1.92,90,1.715,91,2.106,92,1.812,93,2.283,94,2.21,95,2.406,96,2.534,97,3.065,98,2.842,99,1.415,100,2.21,101,2.406,102,3.065,103,2.667,104,3.554,105,3.065,106,1.069,107,1.299,108,2.21,109,2.054,110,3.065,111,3.065,112,3.265,113,5.385,114,3.065,115,3.065,116,3.065,117,4.528,118,3.065,119,2.667,120,3.065,121,2.667,122,3.034,123,3.065,124,3.554,125,3.065,126,1.924,127,2.21,128,2.406,129,3.065,130,3.065,131,3.065,132,2.21,133,3.065,134,2.667,135,3.554,136,3.065,137,3.065,138,1.084,139,3.065,140,3.065,141,3.065,142,2.054,143,3.941,144,2.21,145,3.065,146,3.065,147,2.054,148,1.415,149,2.406,150,4.528,151,4.528,152,0.539,153,0.89,154,0.89,155,0.5,156,0.603,157,0.603,158,0.519,159,0.603,160,0.519,161,0.603,162,0.519,163,0.603,164,0.519,165,0.603,166,0.519,167,0.603,168,0.519,169,0.603,170,0.603,171,0.519,172,0.603,173,0.519,174,0.603,175,0.519,176,0.603,177,0.519,178,0.603,179,0.5,180,0.603,181,0.519,182,0.603,183,0.519,184,0.603,185,0.519,186,0.519,187,0.603,188,0.519,189,0.603,190,0.519,191,0.603,192,0.519,193,0.603,194,0.519,195,0.603,196,0.603,197,0.519,198,0.603,199,0.519,200,0.603,201,0.519,202,0.827,203,0.827,204,0.603,205,0.519,206,0.603,207,0.519,208,0.603,209,0.519,210,0.603,211,0.519,212,0.603,213,0.519,214,0.603,215,0.519,216,0.603,217,0.519,218,0.603,219,0.519,220,0.603,221,0.603,222,0.519,223,0.581,224,0.603,225,0.519,226,0.603,227,0.519,228,0.539,229,0.603,230,0.519,231,0.603,232,0.519,233,0.603,234,0.519,235,0.539,236,0.603,237,0.539,238,0.581,239,0.603,240,0.005,241,0.007,242,0.005]],["title/components/AccountComponent.html",[0,0.047,158,0.673]],["body/components/AccountComponent.html",[0,0.064,1,0.531,2,0.81,3,0.07,4,0.07,5,0.616,6,0.594,7,0.616,8,0.048,10,0.511,11,1.514,12,0.905,14,0.141,15,0.321,18,0.615,29,0.473,32,0.298,34,0.668,35,0.014,36,0.475,37,0.284,38,0.695,47,0.729,49,0.96,56,1.833,57,1.086,58,1.005,59,1.179,61,0.362,64,0.29,66,0.082,67,0.09,77,0.64,80,1.794,87,1.086,89,1.952,91,2.352,93,1.329,106,1.605,107,1.329,138,0.981,142,3.085,143,5.233,144,3.32,152,0.552,153,0.905,154,0.905,155,0.511,156,0.616,157,0.616,158,1.019,159,0.616,160,0.531,161,0.616,162,0.531,163,0.616,164,0.531,165,0.616,166,0.531,167,0.616,168,0.531,169,0.616,170,0.616,171,0.531,172,0.616,173,0.531,174,0.616,175,0.531,176,0.616,177,0.531,178,0.616,179,0.511,180,0.616,181,0.531,182,0.616,183,0.531,184,0.616,185,0.531,186,0.531,187,0.616,188,0.531,189,0.616,190,0.531,191,0.616,192,0.531,193,0.616,194,0.531,195,0.616,196,0.616,197,0.531,198,0.616,199,0.531,200,0.616,201,0.531,202,0.841,203,0.841,204,0.616,205,0.531,206,0.616,207,0.531,208,0.616,209,0.531,210,0.616,211,0.531,212,0.616,213,0.531,214,0.616,215,0.531,216,0.616,217,0.531,218,0.616,219,0.531,220,0.616,221,0.616,222,0.531,223,0.594,224,0.616,225,0.531,226,0.616,227,0.531,228,0.96,229,0.616,230,0.531,231,0.616,232,0.531,233,0.616,234,0.531,235,0.552,236,0.616,237,0.552,238,0.594,239,0.616,240,0.005,241,0.008,242,0.005,243,2.728,244,3.613,245,4.604,246,5.456,247,5.456,248,5.456,249,5.456,250,5.456,251,4.604,252,6.013,253,6.013,254,2.46,255,2.96,256,4.604,257,4.604,258,4.749,259,3.135,260,2.446,261,3.135,262,3.135,263,4.604,264,4.604,265,4.604,266,4.604,267,3.135,268,4.604,269,4.604,270,4.604,271,4.604,272,4.604,273,4.604,274,4.604,275,4.604,276,4.604,277,3.135,278,4.604,279,4.604,280,4.604,281,4.007,282,4.604,283,4.604,284,4.604,285,3.135,286,3.135,287,1.754,288,3.135,289,3.135,290,3.135,291,3.135,292,3.135,293,3.135,294,5.456,295,4.604,296,4.604,297,4.604,298,6.013,299,4.604,300,4.604,301,4.604,302,4.604,303,4.007,304,4.007,305,4.604,306,4.604,307,3.613,308,4.007,309,4.604,310,4.604,311,4.604,312,3.085,313,3.613,314,4.604,315,3.32,316,5.827,317,4.604,318,4.007,319,4.604,320,3.613,321,4.604,322,4.604,323,4.007,324,4.604,325,5.572,326,2.223,327,7.099,328,4.604,329,3.613,330,4.604,331,4.007]],["title/components/AddObservation.html",[0,0.047,160,0.673]],["body/components/AddObservation.html",[0,0.073,1,0.669,2,0.955,3,0.088,4,0.088,5,0.776,6,0.749,7,0.776,8,0.06,10,0.644,11,1.536,12,1.067,14,0.178,15,0.379,29,0.935,32,0.255,35,0.014,36,0.595,37,0.223,57,0.92,58,1.047,61,0.31,64,0.365,66,0.103,67,0.114,87,0.669,93,2.3,96,3.734,127,4.469,132,4.811,138,1.089,152,0.695,153,1.067,154,1.067,155,0.644,156,0.776,157,0.776,158,0.669,159,0.776,160,1.225,161,0.776,162,0.669,163,0.776,164,0.669,165,0.776,166,0.669,167,0.776,168,0.669,169,0.776,170,0.776,171,0.669,172,0.776,173,0.669,174,0.776,175,0.669,176,0.776,177,0.669,178,0.776,179,0.644,180,0.776,181,0.669,182,0.776,183,0.669,184,0.776,185,0.669,186,0.669,187,0.776,188,0.669,189,0.776,190,0.669,191,0.776,192,0.669,193,0.776,194,0.669,195,0.776,196,0.776,197,0.669,198,0.776,199,0.669,200,0.776,201,0.669,202,0.991,203,0.991,204,0.776,205,0.669,206,0.776,207,0.669,208,0.776,209,0.669,210,0.776,211,0.669,212,0.776,213,0.669,214,0.776,215,0.669,216,0.776,217,0.669,218,0.776,219,0.669,220,0.776,221,0.776,222,0.669,223,0.749,224,0.776,225,0.669,226,0.776,227,0.669,228,0.695,229,0.776,230,0.669,231,0.776,232,0.669,233,0.776,234,0.669,235,0.695,236,0.776,237,0.695,238,0.749,239,0.776,240,0.007,241,0.009,242,0.007,332,3.437,333,5.426,334,6.198,335,5.426,336,3.912,337,3.249,338,4.722,339,4.258,340,4.722,341,4.258,342,5.426,343,4.722,344,4.722,345,4.722,346,5.426,347,4.722,348,2.21,349,3.949,350,5.426,351,5.426,352,4.258,353,4.258]],["title/classes/AllergyIntolerance.html",[67,0.114,354,2.862]],["body/classes/AllergyIntolerance.html",[3,0.137,4,0.137,8,0.093,14,0.274,15,0.5,32,0.294,35,0.014,37,0.312,66,0.159,67,0.176,77,0.892,240,0.01,241,0.012,242,0.01,337,3.093,354,5.162,355,2.209,356,5.309,357,2.859,358,3.241,359,6.1,360,6.1,361,2.816]],["title/components/AppComponent.html",[0,0.047,162,0.673]],["body/components/AppComponent.html",[0,0.079,1,0.782,2,1.059,3,0.103,4,0.103,5,0.907,6,0.874,7,0.907,8,0.071,10,0.752,11,1.548,12,1.183,29,1.011,32,0.189,35,0.014,36,0.497,61,0.363,64,0.426,66,0.12,67,0.133,87,0.782,138,1.159,152,0.812,153,1.183,154,1.183,155,0.752,156,0.907,157,0.907,158,0.782,159,0.907,160,0.782,161,0.907,162,1.204,163,0.907,164,0.782,165,0.907,166,0.782,167,0.907,168,0.782,169,0.907,170,0.907,171,0.782,172,0.907,173,0.782,174,0.907,175,0.782,176,0.907,177,0.782,178,0.907,179,0.752,180,0.907,181,0.782,182,0.907,183,0.782,184,0.907,185,0.782,186,0.782,187,0.907,188,0.782,189,0.907,190,0.782,191,0.907,192,0.782,193,0.907,194,0.782,195,0.907,196,0.907,197,0.782,198,0.907,199,0.782,200,0.907,201,0.782,202,1.1,203,1.1,204,0.907,205,0.782,206,0.907,207,0.782,208,0.907,209,0.782,210,0.907,211,0.782,212,0.907,213,0.782,214,0.907,215,0.782,216,0.907,217,0.782,218,0.907,219,0.782,220,0.907,221,0.907,222,0.782,223,0.874,224,0.907,225,0.782,226,0.907,227,0.782,228,0.812,229,0.907,230,0.782,231,0.907,232,0.782,233,0.907,234,0.782,235,0.812,236,0.907,237,0.812,238,0.874,239,0.907,240,0.008,241,0.01,242,0.008,244,4.725,329,4.725,362,4.014,363,5.239,364,6.02,365,4.612,366,6.02,367,5.239,368,6.02,369,3.778]],["title/modules/AppModule.html",[370,2.492,371,2.862]],["body/modules/AppModule.html",[0,0.072,1,1.036,2,0.435,3,0.055,4,0.055,8,0.038,31,2.703,35,0.014,61,0.651,64,0.356,66,0.064,67,0.071,88,1.194,90,2.643,92,1.463,152,0.435,158,1.082,160,1.036,162,1.215,164,1.036,166,1.036,171,1.036,173,1.036,175,1.036,177,1.036,179,0.997,181,1.036,183,1.036,185,1.036,188,1.082,190,1.119,192,1.036,194,1.036,197,1.036,199,1.036,207,1.036,209,1.036,211,1.036,213,1.036,215,1.036,217,1.036,225,1.036,227,1.036,230,1.036,232,1.036,234,0.419,240,0.004,241,0.006,242,0.004,244,1.941,255,2.703,369,1.552,370,1.552,371,6.084,372,1.657,373,1.657,374,3.707,375,2.965,376,3.707,377,1.941,378,2.153,379,2.153,380,2.153,381,2.153,382,2.153,383,4.097,384,3.421,385,3.615,386,2.822,387,3.615,388,2.488,389,2.952,390,3.838,391,3.421,392,2.391,393,3.838,394,3.615,395,3.02,396,1.552,397,1.941,398,4.638,399,3.349,400,3.848,401,3.848,402,2.473,403,2.153,404,2.473,405,2.473,406,2.473,407,2.473,408,2.473,409,2.473,410,2.473,411,2.473,412,2.473,413,2.473,414,2.473,415,2.473,416,2.473,417,2.473,418,2.473,419,2.473,420,2.473,421,2.473,422,2.473,423,2.473,424,2.473,425,2.473,426,2.473,427,1.941,428,2.473,429,2.473,430,2.473,431,2.473,432,2.473,433,2.473,434,2.473,435,2.473,436,1.701,437,2.579,438,2.153,439,1.552,440,2.473,441,2.473,442,2.473,443,2.473,444,2.473,445,2.473,446,2.473,447,2.473,448,2.473,449,2.473,450,2.473,451,2.473,452,2.473,453,3.848,454,1.463,455,3.848,456,2.153,457,1.657,458,3.349,459,3.349,460,3.02,461,1.783,462,3.349,463,1.941,464,3.848,465,1.314,466,1.941,467,1.941,468,2.153,469,3.848,470,2.473,471,2.473,472,3.165,473,2.473,474,3.345,475,2.153,476,3.02,477,3.02,478,2.153,479,1.463,480,2.473,481,2.473]],["title/interfaces/Associable.html",[482,2.66,483,2.492]],["body/interfaces/Associable.html",[3,0.144,4,0.144,8,0.098,35,0.013,66,0.167,240,0.011,241,0.012,242,0.011,482,4.305,483,4.631,484,6.424,485,5.591]],["title/injectables/AssociationService.html",[384,2.221,486,1.038]],["body/injectables/AssociationService.html",[3,0.076,4,0.076,8,0.052,14,0.153,15,0.341,18,0.654,29,0.739,31,3.14,32,0.298,34,0.96,35,0.014,36,0.491,37,0.298,38,1,47,0.836,49,0.6,57,0.97,58,0.898,61,0.542,64,0.315,66,0.089,67,0.098,77,0.4,80,1.944,88,3.669,89,2.075,92,4.494,103,2.968,148,3.183,240,0.006,241,0.008,242,0.006,260,1.812,337,2.806,384,2.739,386,3.278,465,1.812,474,3.593,486,1.28,487,1.508,488,2.968,489,5.725,490,5.725,491,1.914,492,4.894,493,4.894,494,5.725,495,4.26,496,2.285,497,3.699,498,4.894,499,2.894,500,4.894,501,3.411,502,4.62,503,4.26,504,4.894,505,3.663,506,3.411,507,3.841,508,3.411,509,6.18,510,3.411,511,5.444,512,4.894,513,3.411,514,4.868,515,2.102,516,3.411,517,4.894,518,4.894,519,4.26,520,4.894,521,4.894,522,4.894,523,4.894,524,3.411,525,3.411,526,3.411,527,2.017,528,2.285,529,1.908,530,4.894,531,2.363,532,3.411,533,2.968,534,3.411,535,3.203,536,4.91,537,2.141,538,2.677,539,3.411,540,3.411,541,3.411,542,3.411,543,3.411,544,3.411,545,3.411,546,6.624,547,4.26,548,3.411,549,4.894,550,3.411,551,4.894,552,3.411,553,4.894,554,4.26,555,2.017,556,3.411,557,4.894,558,3.411,559,2.677,560,3.411,561,3.411,562,4.894,563,4.894,564,4.894,565,3.411,566,4.894,567,3.411,568,4.894,569,3.411,570,4.894,571,3.411,572,2.968,573,1.445,574,3.411,575,3.411,576,3.411,577,3.529,578,2.285,579,4.894,580,3.411,581,3.411,582,3.411,583,3.411,584,2.968,585,3.411,586,3.411]],["title/directives/AutoGrowDirective.html",[155,0.648,235,0.699]],["body/directives/AutoGrowDirective.html",[3,0.123,4,0.123,8,0.084,10,0.893,11,1.225,14,0.246,18,0.896,29,0.826,32,0.298,34,0.793,35,0.014,36,0.406,37,0.225,38,0.826,47,0.896,49,1.18,61,0.43,64,0.506,66,0.142,67,0.157,107,2.32,155,1.094,234,0.927,235,1.18,240,0.009,241,0.011,242,0.009,491,1.333,587,6.58,588,4.762,589,6.707,590,7.759,591,7.759,592,4.762,593,5.067,594,6.96,595,5.471,596,5.837,597,5.471,598,5.471,599,5.471,600,4.294,601,5.471,602,5.471,603,6.707,604,5.837,605,4.762,606,5.471,607,5.471]],["title/classes/BaseColumn.html",[67,0.114,608,2.221]],["body/classes/BaseColumn.html",[3,0.102,4,0.102,8,0.07,14,0.205,15,0.416,18,0.797,29,1.005,32,0.32,34,0.66,35,0.014,36,0.337,37,0.273,38,0.687,39,2.375,47,0.944,49,1.244,57,1.244,58,1.045,61,0.469,66,0.118,67,0.192,70,4.683,77,0.7,90,4.213,106,2.081,112,3.28,134,3.959,147,3.049,240,0.008,241,0.01,242,0.008,313,3.571,336,4.8,355,1.647,531,2.197,608,3.338,609,3.959,610,4.8,611,4.461,612,4.8,613,4.302,614,4.735,615,4.735,616,5.095,617,4.549,618,4.549,619,4.549,620,4.302,621,4.549,622,4.302,623,4.549,624,4.549,625,4.549,626,4.549,627,3.571,628,2.197,629,4.549,630,3.049,631,3.28,632,3.959,633,3.571,634,4.549,635,3.049,636,3.959,637,5.966,638,4.549,639,3.571,640,3.528,641,5.192,642,2.881,643,2.881,644,2.69,645,5.966,646,4.549,647,5.966,648,6.657,649,4.549,650,4.549,651,4.549,652,4.549,653,4.549,654,4.549,655,3.571,656,4.549,657,3.28,658,4.549,659,4.549,660,2.856,661,4.549,662,3.049,663,3.959,664,3.959,665,3.959,666,4.549,667,4.549,668,4.549,669,3.959]],["title/classes/Bundle.html",[67,0.114,670,2.221]],["body/classes/Bundle.html",[3,0.135,4,0.135,8,0.092,14,0.272,15,0.497,32,0.292,35,0.014,37,0.292,66,0.185,67,0.205,77,0.835,80,1.904,240,0.01,241,0.012,242,0.01,355,2.187,670,3.983,671,4.74,672,6.586,673,5.237,674,6.039,675,6.039,676,5.256,677,2.916]],["title/classes/CarePlan.html",[67,0.114,479,2.347]],["body/classes/CarePlan.html",[3,0.115,4,0.115,8,0.078,14,0.23,15,0.449,32,0.319,35,0.014,37,0.33,39,1.72,56,1.72,58,0.803,61,0.402,66,0.133,67,0.147,77,0.981,99,2.971,240,0.008,241,0.011,242,0.008,337,2.62,355,1.854,357,2.648,358,3.42,361,2.363,479,3.806,483,4.419,502,4.313,577,3.691,678,4.455,679,4.641,680,7.039,681,3.74,682,5.076,683,4.367,684,5.525,685,5.119,686,5.119,687,5.119,688,5.119,689,5.119,690,5.119,691,4.018,692,3.213,693,3.806,694,3.027,695,5.119,696,5.119,697,5.119,698,5.119,699,5.119,700,4.455,701,5.119,702,5.119,703,3.691]],["title/components/CarePlanComponent.html",[0,0.047,164,0.673]],["body/components/CarePlanComponent.html",[0,0.066,1,0.549,2,0.83,3,0.073,4,0.073,5,0.637,6,0.614,7,0.637,8,0.05,10,0.528,11,1.518,12,0.927,14,0.146,15,0.329,18,0.63,20,3.245,24,1.473,29,0.489,32,0.32,34,0.684,35,0.014,36,0.481,37,0.3,38,0.712,39,1.584,47,0.905,49,1.142,56,1.584,57,1.1,58,0.873,59,1.774,61,0.563,62,1.323,64,0.299,66,0.084,67,0.093,77,0.38,80,1.149,85,1.173,87,0.549,89,1.373,90,2.638,94,4.403,95,4.793,106,1.129,107,1.373,138,0.996,152,0.57,153,0.927,154,0.927,155,0.528,156,0.637,157,0.637,158,0.549,159,0.637,160,0.549,161,0.637,162,0.549,163,0.637,164,1.035,165,0.637,166,0.549,167,0.637,168,0.549,169,0.637,170,0.637,171,0.549,172,0.637,173,0.549,174,0.637,175,0.549,176,0.637,177,0.549,178,0.637,179,0.528,180,0.637,181,0.549,182,0.637,183,0.549,184,0.637,185,0.549,186,0.549,187,0.637,188,0.549,189,0.637,190,0.549,191,0.637,192,0.549,193,0.637,194,0.549,195,0.637,196,0.637,197,0.549,198,0.637,199,0.549,200,0.637,201,0.549,202,0.861,203,0.861,204,0.637,205,0.549,206,0.637,207,0.549,208,0.637,209,0.549,210,0.637,211,0.549,212,0.637,213,0.549,214,0.637,215,0.549,216,0.637,217,0.549,218,0.637,219,0.549,220,0.927,221,0.637,222,0.549,223,0.614,224,0.637,225,0.549,226,0.637,227,0.549,228,0.57,229,0.637,230,0.549,231,0.637,232,0.549,233,0.637,234,0.549,235,0.57,236,0.637,237,0.57,238,0.614,239,0.637,240,0.005,241,0.008,242,0.005,326,2.684,385,4.134,388,2.757,392,2.735,436,1.432,479,3.838,491,1.149,573,0.817,608,4.207,610,3.4,611,3.16,612,3.4,613,3.4,614,3.726,615,3.726,616,4.009,620,2.335,622,2.335,628,1.564,631,2.335,642,2.277,643,2.277,662,3.16,704,2.819,705,3.701,706,4.715,707,5.56,708,4.403,709,4.539,710,6.107,711,2.194,712,2.033,713,4.715,714,3.239,715,3.239,716,5.487,717,2.542,718,2.542,719,2.542,720,2.542,721,3.239,722,3.239,723,3.239,724,3.239,725,2.542,726,2.542,727,2.542,728,2.17,729,2.819,730,1.495,731,2.542,732,1.318,733,1.915,734,2.819,735,2.819,736,2.542,737,2.542,738,2.542,739,3.701,740,3.4,741,2.033,742,1.812,743,3.239,744,2.819,745,3.239,746,2.542,747,3.239,748,2.819,749,3.239]],["title/components/CarePlanDisplay.html",[0,0.047,166,0.673]],["body/components/CarePlanDisplay.html",[0,0.061,1,0.481,2,0.753,3,0.064,4,0.064,5,0.558,6,0.538,7,0.558,8,0.043,10,0.463,11,1.504,12,0.841,14,0.128,15,0.298,18,0.688,24,1.336,29,0.429,32,0.307,34,0.936,35,0.014,36,0.523,37,0.3,38,0.974,47,0.895,49,1.137,56,2.371,57,0.481,58,0.446,59,2.429,61,0.45,62,1.201,63,2.164,64,0.263,66,0.074,67,0.082,74,1.783,77,0.604,80,1.254,87,0.725,88,2.066,89,1.814,106,0.991,107,1.204,109,1.903,122,3.449,138,0.934,152,0.5,153,0.841,154,0.841,155,0.463,156,0.558,157,0.558,158,0.481,159,0.558,160,0.481,161,0.558,162,0.481,163,0.558,164,0.481,165,0.558,166,1.094,167,0.558,168,0.481,169,1.012,170,0.558,171,0.481,172,0.558,173,0.481,174,0.558,175,0.481,176,0.558,177,0.481,178,0.558,179,0.934,180,0.558,181,0.481,182,0.558,183,0.481,184,0.558,185,0.481,186,0.481,187,0.558,188,0.481,189,0.558,190,0.481,191,0.558,192,0.481,193,0.558,194,0.481,195,0.558,196,0.558,197,0.481,198,0.558,199,0.481,200,0.558,201,0.481,202,0.782,203,0.782,204,0.558,205,0.481,206,0.558,207,0.481,208,0.558,209,0.481,210,0.558,211,0.481,212,0.558,213,0.481,214,0.558,215,0.481,216,0.558,217,0.481,218,0.558,219,0.481,220,0.558,221,0.558,222,0.481,223,0.538,224,0.558,225,0.481,226,0.558,227,0.481,228,0.5,229,0.558,230,0.481,231,0.558,232,0.481,233,0.558,234,0.481,235,0.5,236,0.558,237,0.5,238,0.538,239,0.558,240,0.005,241,0.007,242,0.005,260,3.043,312,1.903,326,2.967,361,2.376,392,2.698,479,4.6,515,0.954,531,2.066,537,2.685,555,2.53,573,1.08,600,2.229,640,1.68,642,2.066,643,2.066,660,1.783,681,2.273,692,2.685,694,2.53,708,4.431,730,1.311,731,2.229,733,2.53,741,1.783,744,3.723,750,2.472,751,4.278,752,4.039,753,3.438,754,4.278,755,4.278,756,4.278,757,3.085,758,4.13,759,3.838,760,4.278,761,2.53,762,5.147,763,2.229,764,4.278,765,2.84,766,3.205,767,2.84,768,4.278,769,2.84,770,4.278,771,5.728,772,2.84,773,4.278,774,2.84,775,3.085,776,2.84,777,2.867,778,2.84,779,2.84,780,4.278,781,2.84,782,2.84,783,1.68,784,3.085,785,2.273,786,2.84,787,1.783,788,2.048,789,1.903,790,1.903,791,1.311,792,2.53,793,2.867,794,2.685,795,3.595,796,1.903,797,2.048,798,1.903,799,1.903,800,1.903,801,2.048,802,2.88,803,1.903,804,1.903,805,1.903,806,1.903,807,3.449,808,3.23,809,3.449,810,2.229,811,4.479,812,2.84,813,3.711,814,2.048,815,4.278,816,2.229,817,1.783,818,2.229,819,2.472,820,2.472,821,2.472,822,1.903,823,2.84,824,2.84,825,2.472,826,2.472,827,2.229,828,2.84,829,1.903,830,1.783,831,2.472,832,2.472,833,2.229,834,4.278,835,3.085,836,2.048,837,2.048,838,2.229,839,2.229,840,2.84,841,4.278,842,4.278,843,2.84]],["title/injectables/CarePlanService.html",[385,2.347,486,1.038]],["body/injectables/CarePlanService.html",[3,0.095,4,0.095,8,0.065,14,0.191,15,0.398,18,0.762,29,0.86,32,0.282,34,0.933,35,0.014,36,0.477,37,0.282,38,0.971,47,0.762,57,0.72,58,0.667,61,0.611,64,0.393,66,0.111,67,0.122,77,0.499,80,1.389,94,4.111,95,4.475,240,0.007,241,0.009,242,0.007,385,3.372,388,3.006,465,2.258,474,4.039,479,3.805,486,1.491,487,1.878,491,1.748,497,4.067,499,3.805,514,4.312,515,2.41,573,1.864,628,2.051,630,2.847,670,2.378,677,2.051,682,3.064,692,2.667,694,2.513,708,3.064,711,2.599,712,2.667,731,3.335,732,1.729,802,2.378,844,3.698,845,5.702,846,5.702,847,5.702,848,5.702,849,4.249,850,4.503,851,5.702,852,4.249,853,2.847,854,4.503,855,3.335,856,3.064,857,4.312,858,4.039,859,2.667,860,3.064,861,3.335,862,2.667,863,3.064,864,3.698,865,3.335,866,3.698,867,3.698,868,3.335,869,3.335,870,3.698,871,4.249,872,3.698,873,3.698,874,4.249,875,2.513,876,4.249,877,4.249,878,4.249,879,4.962,880,4.249,881,4.249,882,3.335,883,3.698,884,5.702,885,4.249,886,4.249,887,3.698,888,4.249,889,4.249,890,4.249,891,3.698,892,4.249,893,4.249,894,4.249]],["title/classes/Chart.html",[67,0.114,895,2.66]],["body/classes/Chart.html",[3,0.111,4,0.111,8,0.075,14,0.222,15,0.439,32,0.325,35,0.014,36,0.54,37,0.333,39,2.628,56,2.113,57,0.837,58,1.144,66,0.128,67,0.142,69,2.449,77,0.883,80,1.532,98,3.098,99,2.278,128,3.874,240,0.008,241,0.01,242,0.008,325,4.936,337,2.817,355,1.787,358,3.677,438,3.519,457,4.638,535,2.762,684,5.432,703,3.559,791,2.278,822,4.214,895,5.157,896,4.295,897,6.921,898,6.921,899,6.921,900,6.921,901,6.921,902,4.936,903,4.936,904,4.936,905,4.936,906,4.936,907,4.936,908,4.936,909,4.936,910,3.874,911,4.936,912,4.295,913,4.295,914,4.295,915,4.295,916,4.295,917,3.874,918,4.295,919,4.295,920,4.936,921,4.936,922,4.295,923,4.295,924,4.295]],["title/components/CheckboxInline.html",[0,0.047,168,0.673]],["body/components/CheckboxInline.html",[0,0.076,1,0.712,2,0.996,3,0.094,4,0.094,5,0.826,6,0.796,7,0.826,8,0.064,10,0.685,11,1.541,12,1.113,14,0.189,15,0.395,18,0.756,24,1.768,32,0.294,35,0.014,36,0.474,37,0.263,47,0.756,49,0.74,56,1.902,57,0.959,58,0.888,59,1.581,61,0.33,62,1.588,64,0.388,66,0.109,67,0.121,77,0.664,87,0.712,91,1.644,138,1.166,152,0.74,153,1.113,154,1.113,155,0.685,156,0.826,157,0.826,158,0.712,159,0.826,160,0.712,161,0.826,162,0.712,163,0.826,164,0.712,165,0.826,166,0.712,167,0.826,168,1.16,169,1.405,170,0.826,171,0.712,172,0.826,173,0.712,174,0.826,175,0.712,176,0.826,177,0.712,178,0.826,179,0.685,180,0.826,181,0.712,182,0.826,183,0.712,184,0.826,185,0.712,186,0.712,187,0.826,188,0.712,189,0.826,190,0.712,191,0.826,192,0.712,193,0.826,194,0.712,195,0.826,196,0.826,197,0.712,198,0.826,199,0.712,200,0.826,201,0.712,202,1.034,203,1.034,204,0.826,205,0.712,206,0.826,207,0.712,208,0.826,209,0.712,210,0.826,211,0.712,212,0.826,213,0.712,214,0.826,215,0.712,216,0.826,217,0.712,218,0.826,219,0.712,220,0.826,221,0.826,222,0.712,223,0.796,224,0.826,225,0.712,226,0.826,227,0.712,228,0.74,229,0.826,230,0.712,231,0.826,232,0.712,233,0.826,234,0.712,235,0.74,236,0.826,237,0.74,238,0.796,239,0.826,240,0.007,241,0.009,242,0.007,759,4.588,925,6.407,926,3.657,927,5.659,928,5.659,929,6.399,930,6.399,931,3.581,932,4.288,933,4.202,934,4.202,935,4.202,936,4.202,937,4.202,938,3.657,939,4.202,940,3.792,941,4.925]],["title/classes/Client.html",[67,0.114,942,3.116]],["body/classes/Client.html",[3,0.138,4,0.138,8,0.094,14,0.277,15,0.503,32,0.296,35,0.013,36,0.566,37,0.296,67,0.177,77,0.923,240,0.01,241,0.012,242,0.01,355,2.231,357,2.871,942,5.653,943,5.363,944,6.162,945,6.162]],["title/components/ColumnStateSwitcherComponent.html",[0,0.047,171,0.673]],["body/components/ColumnStateSwitcherComponent.html",[0,0.084,1,0.57,2,0.853,3,0.075,4,0.075,5,0.662,6,0.638,7,0.662,8,0.051,10,0.549,11,1.521,12,0.953,14,0.151,18,0.648,24,1.514,29,0.731,32,0.282,34,0.488,35,0.014,36,0.461,37,0.271,38,0.508,39,2.306,47,0.759,49,0.853,57,1.117,61,0.447,62,1.594,64,0.311,66,0.088,67,0.097,74,3.043,77,0.569,85,1.755,87,0.57,88,2.743,90,4.324,91,1.896,92,3.36,98,3.043,124,3.805,138,1.014,147,3.248,152,0.592,153,0.953,154,0.953,155,0.549,156,0.662,157,0.662,158,0.57,159,0.662,160,0.57,161,0.662,162,0.57,163,0.662,164,0.57,165,0.662,166,0.57,167,0.662,168,0.57,169,0.662,170,0.662,171,1.054,172,0.662,173,0.57,174,0.662,175,0.57,176,0.662,177,0.57,178,0.662,179,0.549,180,0.662,181,0.57,182,0.662,183,0.57,184,0.662,185,0.57,186,0.57,187,0.662,188,0.57,189,0.662,190,0.57,191,0.662,192,0.57,193,0.662,194,0.57,195,0.662,196,0.662,197,0.57,198,0.662,199,0.57,200,0.662,201,0.57,202,0.886,203,0.886,204,0.662,205,0.57,206,0.662,207,0.57,208,0.662,209,0.57,210,0.662,211,0.57,212,0.662,213,0.57,214,0.662,215,0.57,216,0.662,217,0.57,218,0.662,219,0.57,220,0.953,221,0.662,222,0.57,223,0.638,224,0.662,225,0.57,226,0.662,227,0.57,228,0.592,229,0.662,230,0.57,231,0.662,232,0.57,233,0.662,234,0.57,235,0.592,236,0.662,237,0.592,238,0.638,239,0.662,240,0.006,241,0.008,242,0.006,392,2.684,436,2.143,491,0.82,529,1.883,573,1.569,608,3.479,632,5.41,640,2.866,642,3.415,643,3.56,657,3.495,662,3.248,663,4.219,664,5.41,681,1.788,708,4.483,730,1.553,735,2.929,763,2.641,791,2.238,794,3.902,857,3.248,946,2.929,947,4.847,948,4.847,949,4.847,950,6.863,951,6.217,952,6.217,953,5.682,954,4.847,955,3.365,956,6.217,957,4.219,958,3.365,959,4.219,960,4.847,961,3.365,962,4.879,963,3.365,964,4.847,965,4.847,966,4.847,967,3.495,968,3.365,969,3.365,970,5.682,971,3.365,972,3.365,973,2.929,974,2.929]],["title/classes/Condition.html",[67,0.114,148,1.833]],["body/classes/Condition.html",[3,0.118,4,0.118,8,0.08,14,0.237,15,0.457,32,0.332,35,0.014,37,0.334,56,2.506,61,0.414,66,0.137,67,0.151,77,0.977,99,2.429,148,3.023,240,0.009,241,0.011,242,0.009,337,3.036,355,1.905,357,2.682,358,2.796,361,2.429,483,4.474,502,3.526,503,6.203,577,3.794,679,4.721,691,4.13,777,4.776,975,4.579,976,7.128,977,7.128,978,7.128,979,5.14,980,7.128,981,5.262,982,5.262,983,5.262,984,5.262,985,5.262,986,5.262,987,5.262,988,5.262,989,5.262]],["title/injectables/ConditionService.html",[386,1.833,486,1.038]],["body/injectables/ConditionService.html",[3,0.076,4,0.076,8,0.052,14,0.153,15,0.341,18,0.654,29,0.739,32,0.315,34,0.96,35,0.014,36,0.491,37,0.308,38,1,47,0.921,49,0.861,57,1.123,58,0.982,61,0.59,64,0.315,66,0.089,67,0.098,69,1.146,77,0.892,80,1.395,85,1.772,88,3.429,90,2.739,104,2.677,138,0.556,148,3.183,240,0.006,241,0.008,242,0.006,320,3.841,326,1.647,348,1.908,354,3.529,386,2.259,388,2.89,392,2.778,436,1.508,465,1.812,472,2.285,474,3.593,486,1.28,487,1.508,491,1.68,496,2.285,497,3.699,499,2.894,514,2.285,515,1.146,527,2.017,529,1.908,531,1.647,547,4.26,573,1.895,611,3.836,628,1.647,630,2.285,640,2.894,642,1.647,643,1.647,670,1.908,677,2.764,711,2.528,730,1.574,732,1.388,734,2.968,740,3.529,850,4.457,853,2.285,856,2.459,857,3.28,858,3.072,859,3.072,860,2.459,861,3.841,862,3.072,863,3.529,864,2.968,865,2.677,866,4.26,867,4.26,990,2.968,991,5.725,992,4.982,993,6.255,994,6.255,995,4.26,996,4.894,997,4.894,998,4.894,999,4.894,1000,3.411,1001,3.411,1002,4.894,1003,3.411,1004,4.894,1005,3.411,1006,4.894,1007,3.411,1008,4.894,1009,3.411,1010,4.894,1011,3.411,1012,3.411,1013,3.411,1014,3.411,1015,2.968,1016,4.26,1017,3.411,1018,2.968,1019,3.411,1020,3.411,1021,3.411,1022,3.411,1023,3.411,1024,3.411,1025,3.411,1026,3.28,1027,2.677,1028,3.411,1029,3.411,1030,3.411,1031,3.411,1032,2.677,1033,3.411,1034,3.411,1035,2.968,1036,3.841,1037,2.677,1038,2.677,1039,3.411,1040,3.411,1041,3.411,1042,3.411,1043,3.411,1044,3.411,1045,2.968,1046,3.411,1047,3.411,1048,3.411,1049,3.411,1050,3.411,1051,3.411,1052,3.411,1053,3.411]],["title/components/ConditionsChartComponent.html",[0,0.047,173,0.673]],["body/components/ConditionsChartComponent.html",[0,0.051,1,0.364,2,0.606,3,0.077,4,0.048,5,0.423,6,0.407,7,0.423,8,0.033,10,0.351,11,1.469,12,0.677,14,0.097,15,0.24,16,3.751,18,0.46,20,2.619,24,1.076,29,0.52,32,0.313,34,0.877,35,0.014,36,0.493,37,0.299,38,0.912,39,1.934,47,0.924,49,1.217,56,1.813,57,0.914,58,0.986,59,2.364,61,0.475,62,0.967,63,1.743,64,0.199,66,0.056,67,0.062,69,0.722,77,0.836,80,1.655,85,1.247,87,0.584,88,2.38,89,2.664,91,0.841,93,2.287,98,1.349,99,0.992,100,1.55,112,1.55,119,1.871,126,1.349,138,1.025,142,2.888,144,2.484,148,3.07,152,0.378,153,0.677,154,0.677,155,0.351,156,0.423,157,0.423,158,0.364,159,0.423,160,0.364,161,0.423,162,0.364,163,0.423,164,0.364,165,0.423,166,0.364,167,0.423,168,0.364,169,0.423,170,0.423,171,0.364,172,0.423,173,0.836,174,0.423,175,0.364,176,0.423,177,0.364,178,0.423,179,0.351,180,0.423,181,0.364,182,0.423,183,0.364,184,0.423,185,0.364,186,0.364,187,0.423,188,0.364,189,0.423,190,0.364,191,0.423,192,0.364,193,0.423,194,0.364,195,0.423,196,0.423,197,0.364,198,0.423,199,0.364,200,0.423,201,0.364,202,0.629,203,0.629,204,0.423,205,0.364,206,0.423,207,0.364,208,0.423,209,0.364,210,0.423,211,0.364,212,0.423,213,0.364,214,0.423,215,0.364,216,0.423,217,0.364,218,0.423,219,0.364,220,0.423,221,0.423,222,0.364,223,0.407,224,0.423,225,0.364,226,0.423,227,0.364,228,0.378,229,0.423,230,0.364,231,0.423,232,0.364,233,0.423,234,0.364,235,0.378,236,0.423,237,0.378,238,0.407,239,0.423,240,0.004,241,0.006,242,0.004,255,2.673,258,1.871,260,1.83,287,1.203,326,2.081,329,2.704,370,1.349,386,2.658,392,2.365,454,2.037,491,1.05,515,1.813,527,1.271,538,1.687,555,4.155,573,0.869,578,2.308,681,1.83,683,2.037,693,2.549,711,1.865,730,0.992,732,0.875,741,2.162,742,1.203,757,2.484,761,2.037,766,2.759,775,2.484,777,2.308,796,1.441,805,1.441,825,1.871,826,1.871,827,1.687,833,1.687,835,2.484,836,3.108,837,1.55,875,1.271,883,1.871,1054,1.871,1055,3.445,1056,3.445,1057,4.311,1058,3.751,1059,4.311,1060,4.311,1061,3.751,1062,4.93,1063,4.93,1064,3.445,1065,3.445,1066,2.704,1067,3.445,1068,3.445,1069,4.93,1070,4.93,1071,3.383,1072,2.15,1073,3.445,1074,2.15,1075,2.15,1076,2.15,1077,2.15,1078,2.15,1079,3.445,1080,4.311,1081,5.395,1082,4.311,1083,2.15,1084,2.15,1085,2.15,1086,3.445,1087,2.15,1088,2.704,1089,2.15,1090,3.445,1091,2.15,1092,3.303,1093,3.445,1094,2.15,1095,3.445,1096,2.15,1097,2.15,1098,2.15,1099,2.15,1100,2.15,1101,2.15,1102,2.15,1103,2.15,1104,2.15,1105,1.349,1106,1.871,1107,4.898,1108,2.15,1109,3.445,1110,2.15,1111,3.445,1112,2.15,1113,1.871,1114,3.445,1115,2.15,1116,2.15,1117,2.15,1118,3.445,1119,1.687,1120,1.871,1121,2.15,1122,2.15,1123,2.998,1124,2.15,1125,2.15,1126,4.695,1127,3.445,1128,2.15,1129,2.998,1130,2.15,1131,1.349,1132,3.445,1133,2.15,1134,1.55,1135,1.687,1136,2.15,1137,1.871,1138,2.15,1139,2.15,1140,2.15,1141,1.687,1142,1.871,1143,2.15,1144,2.15,1145,1.55,1146,3.445,1147,2.15,1148,3.445,1149,2.15,1150,2.15,1151,1.871,1152,1.871,1153,2.15,1154,2.15,1155,2.15,1156,1.871,1157,2.15,1158,2.15,1159,1.871,1160,4.311,1161,2.15,1162,4.311,1163,2.15,1164,3.445,1165,2.15,1166,3.445,1167,3.445,1168,3.445,1169,3.445,1170,2.15,1171,2.15,1172,1.687,1173,2.998,1174,3.445,1175,2.15,1176,2.15,1177,2.15,1178,2.15,1179,2.15,1180,2.15,1181,2.15,1182,2.15,1183,2.15,1184,2.15,1185,3.445,1186,2.15,1187,2.15,1188,1.871,1189,3.445,1190,2.484,1191,3.445,1192,2.15,1193,2.15,1194,3.445,1195,3.445,1196,2.15,1197,2.15,1198,2.15]],["title/components/ConditionsComponent.html",[0,0.047,175,0.673]],["body/components/ConditionsComponent.html",[0,0.057,1,0.43,2,0.69,3,0.057,4,0.057,5,0.498,6,0.481,7,0.498,8,0.039,10,0.414,11,1.49,12,0.771,14,0.114,15,0.274,18,0.641,20,2.87,24,1.226,29,0.592,32,0.321,34,0.569,35,0.014,36,0.433,37,0.303,38,0.592,39,1.318,47,0.889,49,1.171,56,2.075,57,1.158,58,1.044,59,2.032,61,0.548,62,1.101,63,1.985,64,0.234,66,0.066,67,0.073,77,0.298,80,1.316,85,0.918,87,0.813,88,3.43,89,2.034,90,2.195,91,0.992,100,2.829,106,1.368,124,1.99,138,0.953,148,2.973,152,0.446,153,0.771,154,0.771,155,0.414,156,0.498,157,0.498,158,0.43,159,0.498,160,0.43,161,0.498,162,0.43,163,0.498,164,0.43,165,0.498,166,0.43,167,0.498,168,0.43,169,0.498,170,0.498,171,0.43,172,0.498,173,0.43,174,0.498,175,0.915,176,0.498,177,0.43,178,0.498,179,0.414,180,0.498,181,0.43,182,0.498,183,0.43,184,0.498,185,0.43,186,0.43,187,0.498,188,0.43,189,0.498,190,0.43,191,0.498,192,0.43,193,0.498,194,0.43,195,0.498,196,0.498,197,0.43,198,0.498,199,0.43,200,0.498,201,0.43,202,0.717,203,0.717,204,0.498,205,0.43,206,0.498,207,0.43,208,0.498,209,0.43,210,0.498,211,0.43,212,0.498,213,0.43,214,0.498,215,0.43,216,0.498,217,0.43,218,0.498,219,0.43,220,0.771,221,0.498,222,0.43,223,0.481,224,0.498,225,0.43,226,0.498,227,0.43,228,0.446,229,0.498,230,0.43,231,0.498,232,0.43,233,0.498,234,0.43,235,0.446,236,0.498,237,0.446,238,0.481,239,0.498,240,0.004,241,0.006,242,0.004,255,2.847,287,1.419,308,2.207,326,2.982,386,2.973,388,2.514,392,2.603,436,1.121,454,2.32,491,1.316,515,1.963,527,1.499,531,1.224,538,1.99,573,0.99,608,3.975,610,2.829,611,2.629,612,2.829,613,2.829,614,3.215,615,3.215,616,4.644,620,1.828,622,1.828,628,1.224,631,1.828,640,1.499,642,1.224,643,1.224,657,1.828,662,1.699,705,3.079,709,4.139,711,2.086,712,1.592,716,5.055,717,1.99,718,1.99,719,1.99,720,1.99,725,1.99,726,1.99,727,1.99,728,1.699,730,1.171,732,1.032,737,1.99,738,1.99,739,3.079,740,2.829,741,1.592,742,1.419,746,1.99,748,2.207,761,2.32,766,3.022,790,1.699,791,1.171,817,1.592,829,1.699,922,2.207,938,2.207,967,1.828,979,1.828,1027,3.079,1058,4.176,1061,4.176,1071,3.766,1105,1.592,1106,2.207,1107,4.211,1119,1.99,1120,2.207,1126,2.207,1129,2.207,1145,1.828,1199,1.99,1200,3.923,1201,4.798,1202,5.375,1203,4.798,1204,5.401,1205,4.7,1206,3.923,1207,2.536,1208,2.536,1209,2.536,1210,2.536,1211,2.536,1212,2.536,1213,2.536,1214,2.536,1215,2.536,1216,2.536,1217,2.536,1218,2.536,1219,2.536,1220,2.536,1221,2.536,1222,2.207,1223,1.699,1224,1.99,1225,1.99,1226,2.536,1227,2.536,1228,2.536,1229,1.99,1230,2.536,1231,2.536,1232,2.536,1233,2.207,1234,1.699,1235,3.923,1236,2.536,1237,2.536,1238,2.536,1239,3.079,1240,2.207,1241,2.536,1242,2.207,1243,2.207,1244,2.536,1245,3.923,1246,2.536,1247,2.536,1248,2.536,1249,2.207,1250,3.923,1251,3.923,1252,2.207,1253,2.536,1254,2.536,1255,2.536,1256,2.207,1257,2.536,1258,2.536,1259,2.536,1260,2.207,1261,2.536,1262,2.536,1263,2.536,1264,2.536,1265,2.536,1266,2.536,1267,2.536,1268,2.536,1269,3.923]],["title/components/ConditionsDisplay.html",[0,0.047,177,0.673]],["body/components/ConditionsDisplay.html",[0,0.054,1,0.397,2,0.649,3,0.052,4,0.052,5,0.46,6,0.444,7,0.46,8,0.036,10,0.382,11,1.48,12,0.725,14,0.105,15,0.257,18,0.609,24,1.152,29,0.556,32,0.307,34,0.989,35,0.014,36,0.532,37,0.302,38,1.029,47,0.929,49,1.1,56,2.338,57,0.625,58,0.579,59,2.566,61,0.47,62,1.279,63,1.865,64,0.216,66,0.061,67,0.067,74,1.47,77,0.607,80,1.111,81,2.038,87,0.397,88,3.127,89,0.993,99,1.081,106,0.816,109,1.569,138,0.844,147,2.47,148,3.773,149,1.838,152,0.412,153,0.725,154,0.725,155,0.382,156,0.46,157,0.46,158,0.397,159,0.46,160,0.397,161,0.46,162,0.397,163,0.46,164,0.397,165,0.46,166,0.397,167,0.46,168,0.397,169,0.896,170,0.46,171,0.397,172,0.46,173,0.397,174,0.46,175,0.397,176,0.46,177,1.013,178,0.46,179,0.844,180,0.46,181,0.397,182,0.46,183,0.397,184,0.46,185,0.397,186,0.397,187,0.46,188,0.397,189,0.46,190,0.397,191,0.46,192,0.397,193,0.46,194,0.397,195,0.46,196,0.46,197,0.397,198,0.46,199,0.397,200,0.46,201,0.397,202,0.673,203,0.673,204,0.46,205,0.397,206,0.46,207,0.397,208,0.46,209,0.397,210,0.46,211,0.397,212,0.46,213,0.397,214,0.46,215,0.397,216,0.46,217,0.397,218,0.46,219,0.397,220,0.725,221,0.46,222,0.397,223,0.444,224,0.46,225,0.397,226,0.46,227,0.397,228,0.412,229,0.46,230,0.397,231,0.46,232,0.397,233,0.46,234,0.397,235,0.412,236,0.46,237,0.412,238,0.444,239,0.46,240,0.004,241,0.006,242,0.004,260,3.625,312,1.569,361,2.388,384,3.498,386,2.886,392,2.445,472,1.569,491,1.111,515,1.239,527,1.384,531,2.201,535,1.31,536,1.838,537,2.862,555,2.18,573,1.305,578,2.47,642,3.019,643,3.019,660,1.47,681,1.959,683,2.18,730,1.081,733,2.696,752,3.579,753,3.148,757,2.658,758,3.729,759,3.466,761,2.18,763,1.838,766,2.894,775,2.658,777,2.47,783,1.384,784,2.658,785,1.959,787,1.47,788,1.688,789,3.466,790,2.47,791,1.081,792,2.18,793,2.47,794,2.314,795,3.531,796,1.569,797,1.688,798,1.569,799,1.569,800,1.569,801,1.688,802,3.625,803,1.569,804,1.569,805,1.569,806,1.569,807,3.466,808,3.246,809,3.466,810,2.893,813,3.729,814,1.688,816,1.838,817,1.47,818,1.838,835,2.658,836,1.688,837,1.688,838,2.893,839,2.893,1018,2.038,1066,2.893,1071,3.579,1088,2.893,1105,1.47,1107,2.658,1123,3.208,1159,3.208,1270,2.038,1271,3.686,1272,3.686,1273,3.686,1274,3.686,1275,3.686,1276,3.686,1277,3.686,1278,3.686,1279,4.56,1280,3.686,1281,2.341,1282,2.341,1283,2.341,1284,3.686,1285,2.341,1286,3.686,1287,2.341,1288,3.686,1289,2.341,1290,3.686,1291,2.341,1292,3.686,1293,2.341,1294,3.686,1295,2.341,1296,3.686,1297,2.341,1298,2.341,1299,2.341,1300,3.686,1301,2.341,1302,2.341,1303,2.341,1304,1.838,1305,1.838,1306,2.341,1307,3.208,1308,2.47,1309,4.501,1310,3.686,1311,3.208,1312,2.341,1313,2.341,1314,4.56,1315,2.341,1316,4.56,1317,2.341,1318,3.686,1319,3.686,1320,1.838,1321,3.208,1322,2.341,1323,2.341,1324,2.341,1325,2.341,1326,2.038,1327,2.341,1328,2.341,1329,2.341,1330,2.341,1331,2.341,1332,2.341,1333,2.341,1334,2.341,1335,2.341,1336,2.341,1337,2.341,1338,2.341,1339,2.341,1340,2.341,1341,2.341,1342,3.208,1343,2.341]],["title/components/ContextMenuComponent.html",[0,0.047,179,0.648]],["body/components/ContextMenuComponent.html",[0,0.065,1,0.383,2,0.631,3,0.051,4,0.051,5,0.444,6,0.429,7,0.444,8,0.035,10,0.369,11,1.476,12,0.705,14,0.102,15,0.25,18,0.479,29,0.341,32,0.296,34,0.853,35,0.014,36,0.489,37,0.277,38,0.888,39,1.205,47,0.739,49,0.973,56,1.704,57,1.085,58,1.004,59,2.214,61,0.35,64,0.209,66,0.059,67,0.065,69,2.391,77,0.595,80,0.874,85,2.131,87,0.755,89,1.52,99,2.342,106,2.677,107,0.958,122,2.986,138,0.828,152,0.398,153,0.705,154,0.705,155,0.369,156,0.444,157,0.444,158,0.383,159,0.444,160,0.383,161,0.444,162,0.383,163,0.444,164,0.383,165,0.444,166,0.383,167,0.444,168,0.383,169,0.444,170,0.444,171,0.383,172,0.444,173,0.383,174,0.444,175,0.383,176,0.444,177,0.383,178,0.444,179,0.828,180,0.444,181,0.383,182,0.444,183,0.383,184,0.444,185,0.383,186,0.383,187,0.444,188,0.383,189,0.444,190,0.383,191,0.444,192,0.383,193,0.444,194,0.383,195,0.444,196,0.444,197,0.383,198,0.444,199,0.383,200,0.444,201,0.383,202,0.655,203,0.655,204,0.444,205,0.383,206,0.444,207,0.383,208,0.444,209,0.383,210,0.444,211,0.383,212,0.444,213,0.383,214,0.444,215,0.383,216,0.444,217,0.383,218,0.444,219,0.383,220,0.444,221,0.444,222,0.383,223,0.429,224,0.444,225,0.383,226,0.444,227,0.383,228,0.398,229,0.444,230,0.383,231,0.444,232,0.383,233,0.444,234,0.383,235,0.398,236,0.444,237,0.398,238,0.429,239,0.444,240,0.004,241,0.006,242,0.004,312,2.403,353,3.981,361,2.342,369,2.251,396,1.419,454,2.12,491,1.605,531,1.092,535,2.494,537,2.251,593,3.399,627,1.774,628,1.092,644,1.337,655,1.774,681,2.939,709,3.399,736,1.774,753,4.495,791,1.655,792,4.459,795,3.184,799,1.515,802,2.838,803,4.133,806,2.403,807,2.403,808,3.184,809,2.403,814,2.586,830,3.184,850,2.251,887,3.121,957,4.415,1145,2.586,1172,1.774,1229,3.981,1308,4.697,1344,1.968,1345,3.586,1346,3.586,1347,4.457,1348,3.121,1349,5.398,1350,3.586,1351,3.121,1352,3.586,1353,4.457,1354,5.072,1355,4.457,1356,3.988,1357,3.498,1358,3.879,1359,3.127,1360,3.586,1361,3.586,1362,3.586,1363,5.368,1364,3.981,1365,2.261,1366,3.586,1367,2.814,1368,3.586,1369,3.657,1370,2.261,1371,3.586,1372,2.261,1373,2.797,1374,5.886,1375,3.586,1376,5.886,1377,3.586,1378,2.261,1379,3.981,1380,3.121,1381,4.62,1382,3.586,1383,3.121,1384,2.261,1385,5.072,1386,3.586,1387,3.586,1388,3.586,1389,3.121,1390,3.586,1391,3.586,1392,3.586,1393,2.261,1394,2.261,1395,2.814,1396,2.261,1397,3.586,1398,3.586,1399,3.586,1400,5.072,1401,3.121,1402,3.586,1403,2.261,1404,3.121,1405,3.981,1406,2.261,1407,2.261,1408,2.261,1409,2.261,1410,2.261,1411,2.261,1412,2.261,1413,5.122,1414,2.261,1415,4.457,1416,2.261,1417,3.586,1418,1.774,1419,2.261,1420,2.261,1421,3.121,1422,2.261,1423,1.968,1424,3.586,1425,2.261,1426,2.261,1427,2.261,1428,1.968,1429,2.261,1430,2.261,1431,2.261,1432,4.457,1433,3.586,1434,4.457,1435,1.968,1436,2.261,1437,2.261,1438,2.261,1439,2.261,1440,2.261,1441,2.261,1442,2.261,1443,3.586]],["title/classes/ContextMenuOption.html",[67,0.114,1369,2.862]],["body/classes/ContextMenuOption.html",[3,0.118,4,0.118,8,0.081,14,0.238,15,0.458,32,0.293,34,0.767,35,0.014,36,0.392,37,0.293,49,0.931,66,0.138,67,0.152,69,2.582,77,0.877,99,3.032,122,4.788,179,0.863,240,0.009,241,0.011,242,0.009,355,1.915,361,3.547,375,4.123,535,3.676,681,3.49,753,4.3,791,3.032,792,4.544,795,4.485,808,4.823,1026,4.402,1223,3.544,1308,5.321,1348,5.717,1349,4.736,1369,4.736,1380,5.717,1413,4.603,1444,4.603,1445,5.289,1446,5.289,1447,5.289,1448,6.569,1449,6.569,1450,5.289]],["title/components/DoctorNoteComponent.html",[0,0.047,181,0.673]],["body/components/DoctorNoteComponent.html",[0,0.08,1,0.8,2,1.076,3,0.106,4,0.106,5,0.928,6,0.895,7,0.928,8,0.072,10,0.77,11,1.55,12,1.201,35,0.013,36,0.502,61,0.371,64,0.436,66,0.123,67,0.136,87,0.8,138,1.169,152,0.831,153,1.201,154,1.201,155,0.77,156,0.928,157,0.928,158,0.8,159,0.928,160,0.8,161,0.928,162,0.8,163,0.928,164,0.8,165,0.928,166,0.8,167,0.928,168,0.8,169,0.928,170,0.928,171,0.8,172,0.928,173,0.8,174,0.928,175,0.8,176,0.928,177,0.8,178,0.928,179,0.77,180,0.928,181,1.215,182,0.928,183,0.8,184,0.928,185,0.8,186,0.8,187,0.928,188,0.8,189,0.928,190,0.8,191,0.928,192,0.8,193,0.928,194,0.8,195,0.928,196,0.928,197,0.8,198,0.928,199,0.8,200,0.928,201,0.8,202,1.116,203,1.116,204,0.928,205,0.8,206,0.928,207,0.8,208,0.928,209,0.8,210,0.928,211,0.8,212,0.928,213,0.8,214,0.928,215,0.8,216,0.928,217,0.8,218,0.928,219,0.8,220,0.928,221,0.928,222,0.8,223,0.895,224,0.928,225,0.8,226,0.928,227,0.8,228,0.831,229,0.928,230,0.8,231,0.928,232,0.8,233,0.928,234,0.8,235,0.831,236,0.928,237,0.831,238,0.895,239,0.928,240,0.008,241,0.01,242,0.008,336,4.406,339,4.796,1451,4.108,1452,6.111,1453,6.111]],["title/injectables/DoctorService.html",[255,1.755,486,1.038]],["body/injectables/DoctorService.html",[3,0.102,4,0.102,8,0.069,14,0.204,15,0.416,18,0.796,29,0.685,32,0.309,34,0.965,35,0.014,36,0.493,37,0.309,38,1.004,47,0.796,49,0.8,56,2.003,57,1.128,58,1.108,61,0.523,62,1.673,64,0.42,66,0.118,67,0.131,69,2.003,80,1.917,87,1.276,89,2.82,91,1.777,100,4.298,101,4.678,107,1.926,112,3.275,127,4.298,135,5.221,148,2.097,240,0.008,241,0.01,242,0.008,255,2.635,337,1.849,436,2.635,437,5.043,438,2.542,439,2.851,486,1.558,487,2.008,527,2.686,555,2.686,669,3.953,785,2.414,805,3.044,875,2.686,882,3.565,1032,3.565,1045,3.953,1141,3.565,1223,3.044,1234,3.044,1242,3.953,1454,3.953,1455,6.652,1456,5.79,1457,5.96,1458,7.062,1459,3.953,1460,5.96,1461,4.543,1462,4.543,1463,5.96,1464,4.543,1465,4.543,1466,4.543,1467,4.543,1468,4.543,1469,4.543,1470,5.96,1471,4.543,1472,4.543,1473,4.543,1474,4.543,1475,4.543,1476,4.543,1477,4.543,1478,4.543,1479,4.543,1480,4.543,1481,4.543,1482,4.543,1483,5.187,1484,4.543,1485,4.543,1486,3.953,1487,4.543,1488,4.543,1489,4.543,1490,3.953,1491,4.543,1492,4.543,1493,4.543]],["title/classes/Encounter.html",[67,0.114,1494,2.221]],["body/classes/Encounter.html",[3,0.105,4,0.105,8,0.072,14,0.211,15,0.424,18,0.812,32,0.328,35,0.014,37,0.325,47,0.955,66,0.122,67,0.135,77,0.959,85,2.587,108,3.377,240,0.008,241,0.01,242,0.008,337,1.906,355,1.696,357,2.54,358,3.587,361,3.419,502,3.138,515,2.043,535,2.621,573,1.998,577,4.384,682,4.868,683,4.226,692,2.94,693,4.226,694,2.769,733,2.769,875,2.769,1494,4.144,1495,4.076,1496,4.384,1497,5.472,1498,7.146,1499,7.146,1500,7.146,1501,7.146,1502,4.683,1503,4.683,1504,4.683,1505,4.683,1506,4.683,1507,4.683,1508,4.683,1509,4.683,1510,4.683,1511,4.683,1512,4.683,1513,4.683,1514,6.08,1515,3.676,1516,4.683,1517,5.292,1518,4.683,1519,6.08,1520,4.683,1521,4.683,1522,4.683]],["title/injectables/EncounterService.html",[387,2.347,486,1.038]],["body/injectables/EncounterService.html",[3,0.096,4,0.096,8,0.066,14,0.193,15,0.4,18,0.864,29,0.866,32,0.296,34,1.001,35,0.014,36,0.512,37,0.296,38,1.042,47,0.864,57,0.727,58,0.674,61,0.604,62,1.611,64,0.397,66,0.112,67,0.165,77,0.81,80,1.045,138,0.7,240,0.007,241,0.009,242,0.007,348,2.401,387,3.394,388,3.078,465,2.28,472,2.876,474,4.059,486,1.501,487,1.897,491,1.932,496,2.876,497,4.083,499,3.394,515,1.442,573,1.816,628,2.072,630,2.876,670,2.401,677,2.771,711,2.399,732,1.747,850,4.518,853,2.876,856,3.094,859,2.694,860,3.094,861,3.368,862,2.694,863,3.094,865,3.368,1015,3.735,1016,3.735,1026,2.876,1035,3.735,1036,4.505,1037,3.368,1038,3.368,1135,3.368,1152,3.735,1359,3.436,1494,4.4,1523,3.735,1524,5.74,1525,4.505,1526,5.74,1527,5.74,1528,5.74,1529,4.291,1530,5.74,1531,4.291,1532,5.74,1533,4.291,1534,3.094,1535,4.505,1536,3.735,1537,4.291,1538,4.291,1539,4.291,1540,4.291,1541,4.291,1542,3.735,1543,4.291,1544,5.74,1545,4.291,1546,4.291,1547,4.291]],["title/components/Favorites.html",[0,0.047,183,0.673]],["body/components/Favorites.html",[0,0.073,1,0.657,2,0.943,3,0.087,4,0.087,5,0.763,6,0.735,7,0.763,8,0.059,10,0.633,11,1.534,12,1.053,14,0.174,15,0.374,18,0.716,29,0.585,32,0.285,34,0.777,35,0.014,36,0.515,37,0.252,38,0.809,47,0.82,49,0.943,56,1.303,57,0.657,58,0.609,59,1.459,61,0.483,64,0.359,66,0.101,67,0.112,77,0.629,87,1.041,93,2.807,96,3.705,107,1.644,138,1.08,152,0.683,153,1.053,154,1.053,155,0.633,156,0.763,157,0.763,158,0.657,159,0.763,160,0.657,161,0.763,162,0.657,163,0.763,164,0.657,165,0.763,166,0.657,167,0.763,168,0.657,169,0.763,170,0.763,171,0.657,172,0.763,173,0.657,174,0.763,175,0.657,176,0.763,177,0.657,178,0.763,179,0.633,180,0.763,181,0.657,182,0.763,183,1.307,184,0.763,185,0.657,186,0.657,187,0.763,188,0.657,189,0.763,190,0.657,191,0.763,192,0.657,193,0.763,194,0.657,195,0.763,196,0.763,197,0.657,198,0.763,199,0.657,200,0.763,201,0.657,202,0.979,203,0.979,204,0.763,205,0.657,206,0.763,207,0.657,208,0.763,209,0.657,210,0.763,211,0.657,212,0.763,213,0.657,214,0.763,215,0.657,216,0.763,217,0.657,218,0.763,219,0.657,220,0.763,221,0.763,222,0.657,223,0.735,224,0.763,225,0.657,226,0.763,227,0.657,228,0.683,229,0.763,230,0.657,231,0.763,232,0.657,233,0.763,234,0.657,235,0.683,236,0.763,237,0.683,238,0.735,239,0.763,240,0.006,241,0.009,242,0.006,254,3.044,255,3.177,287,2.17,394,4.356,491,1.305,573,0.979,593,4.936,605,3.375,673,5.03,1367,3.044,1548,3.375,1549,5.358,1550,6.139,1551,6.622,1552,4.206,1553,6.622,1554,5.343,1555,3.879,1556,3.879,1557,5.358,1558,3.879,1559,3.879,1560,5.358,1561,3.879,1562,3.375,1563,3.879,1564,3.879,1565,3.879,1566,3.879,1567,3.879,1568,5.358,1569,5.358,1570,5.358,1571,5.358]],["title/injectables/FhirService.html",[388,1.616,486,1.038]],["body/injectables/FhirService.html",[3,0.108,4,0.108,8,0.074,14,0.217,15,0.432,18,0.827,29,1.033,32,0.319,34,0.992,35,0.014,36,0.507,37,0.314,38,1.033,47,0.965,49,1.09,56,2.299,57,0.817,58,0.756,61,0.487,64,0.445,66,0.125,67,0.139,77,0.953,89,2.625,240,0.008,241,0.01,242,0.008,358,2.56,388,2.52,465,2.56,486,1.619,487,2.13,491,1.667,515,1.619,573,1.563,677,2.99,1359,3.636,1572,4.193,1573,6.843,1574,5.371,1575,6.192,1576,7.223,1577,6.192,1578,6.192,1579,4.818,1580,6.192,1581,4.818,1582,6.192,1583,4.818,1584,6.192,1585,4.818,1586,6.192,1587,6.192,1588,4.818,1589,4.818,1590,4.818,1591,5.389,1592,6.192,1593,6.192,1594,6.502,1595,4.818,1596,4.818,1597,4.818,1598,4.818]],["title/classes/Form.html",[67,0.114,186,0.673]],["body/classes/Form.html",[3,0.136,4,0.136,8,0.093,14,0.272,15,0.497,32,0.311,35,0.014,37,0.332,39,2.394,66,0.157,67,0.174,69,2.545,77,0.836,186,1.208,240,0.01,241,0.012,242,0.01,355,2.191,357,2.849,1599,5.267,1600,6.051,1601,6.051,1602,6.051]],["title/components/FormBuilder.html",[0,0.047,185,0.673]],["body/components/FormBuilder.html",[0,0.068,1,0.577,2,1.165,3,0.076,4,0.076,5,0.67,6,0.646,7,0.67,8,0.052,10,0.556,11,1.523,12,0.961,14,0.153,15,0.341,18,0.764,24,1.528,29,0.863,32,0.318,34,0.494,35,0.014,36,0.464,37,0.312,38,0.514,47,0.884,49,1.249,57,0.577,58,0.535,61,0.384,62,1.605,63,2.474,64,0.315,66,0.089,67,0.098,69,1.145,77,0.734,87,1.06,91,1.333,106,1.188,121,2.965,138,1.08,152,0.6,153,0.961,154,0.961,155,0.556,156,0.67,157,0.67,158,0.577,159,0.67,160,0.577,161,0.67,162,0.577,163,0.67,164,0.577,165,0.67,166,0.577,167,0.67,168,0.577,169,0.67,170,0.67,171,0.577,172,0.67,173,0.577,174,0.67,175,0.577,176,0.67,177,0.577,178,0.67,179,0.556,180,0.67,181,0.577,182,0.67,183,0.577,184,0.67,185,1.06,186,1.231,187,0.67,188,0.577,189,0.67,190,0.577,191,0.67,192,0.577,193,0.67,194,0.577,195,0.67,196,0.67,197,0.577,198,0.67,199,0.577,200,0.67,201,0.577,202,0.893,203,0.893,204,0.67,205,0.577,206,0.67,207,0.577,208,0.67,209,0.577,210,0.67,211,0.577,212,0.67,213,0.577,214,0.67,215,0.577,216,0.67,217,0.577,218,0.67,219,0.577,220,0.67,221,0.67,222,0.577,223,0.646,224,0.67,225,0.577,226,0.67,227,0.577,228,0.6,229,0.67,230,0.577,231,0.67,232,0.577,233,0.67,234,0.577,235,0.6,236,0.67,237,0.6,238,0.646,239,0.67,240,0.006,241,0.008,242,0.006,352,4.49,427,6.125,436,1.506,515,1.145,759,4.189,761,2.892,766,3.498,783,2.015,830,2.138,931,3.201,1131,2.138,1141,2.674,1190,4.125,1359,3.988,1603,5.721,1604,6.792,1605,2.965,1606,4.891,1607,5.721,1608,4.979,1609,4.891,1610,5.721,1611,6.621,1612,5.721,1613,6.252,1614,4.891,1615,6.252,1616,5.721,1617,5.721,1618,5.721,1619,4.891,1620,3.407,1621,3.407,1622,3.407,1623,3.407,1624,3.407,1625,3.407,1626,3.407,1627,3.407,1628,3.407,1629,4.891,1630,3.407,1631,3.407,1632,3.407,1633,3.407,1634,3.407,1635,3.407,1636,2.456,1637,3.407,1638,2.138,1639,3.407,1640,4.891,1641,3.407,1642,3.407,1643,2.965,1644,3.407]],["title/modules/FormCreatorModule.html",[370,2.492,383,2.66]],["body/modules/FormCreatorModule.html",[3,0.108,4,0.108,8,0.074,35,0.014,61,0.619,64,0.445,66,0.125,67,0.138,87,0.815,152,0.847,168,1.377,201,1.377,203,1.13,205,1.377,219,1.377,222,1.377,240,0.008,241,0.01,242,0.008,369,3.019,370,3.019,372,3.223,373,3.223,374,5.367,375,3.019,376,3.775,377,5.367,383,5.571,395,4.855,396,3.019,398,4.186,458,5.384,459,5.384,460,3.775,461,3.468,462,5.384,463,3.775,1645,4.186,1646,4.186,1647,4.186,1648,4.81,1649,4.81,1650,4.81,1651,6.186,1652,4.81,1653,4.81,1654,4.81,1655,4.81,1656,4.81,1657,4.81]],["title/directives/HighlightDirective.html",[155,0.648,237,0.699]],["body/directives/HighlightDirective.html",[3,0.128,4,0.128,8,0.087,10,0.93,11,1.256,14,0.256,24,2.148,29,0.86,32,0.282,34,0.826,35,0.014,36,0.422,37,0.282,38,0.86,57,0.966,58,0.894,61,0.448,62,1.599,64,0.527,66,0.148,67,0.164,77,0.807,107,2.416,155,1.122,234,0.966,237,1.21,238,1.303,240,0.009,241,0.011,242,0.009,361,2.63,491,1.388,592,4.959,593,5.137,594,7.019,596,5.983,1658,4.959,1659,6.875,1660,6.875,1661,5.698,1662,5.698,1663,5.698,1664,5.698]],["title/components/HistoricalTrendsComponent.html",[0,0.047,188,0.673]],["body/components/HistoricalTrendsComponent.html",[0,0.056,1,0.425,2,0.685,3,0.056,4,0.056,5,0.494,6,0.476,7,0.494,8,0.038,10,0.41,11,1.489,12,0.765,14,0.113,15,0.272,18,0.52,29,0.587,31,2.837,32,0.303,34,0.843,35,0.014,36,0.492,37,0.272,38,0.877,39,1.805,47,0.822,49,1.083,57,0.985,58,0.912,59,1.464,61,0.521,64,0.232,65,1.484,66,0.065,67,0.072,69,1.602,70,1.97,74,1.576,85,2.566,87,0.91,88,1.879,93,2.277,96,2.178,106,1.358,109,1.682,132,2.807,138,0.876,152,0.442,153,0.765,154,0.765,155,0.41,156,0.494,157,0.494,158,0.425,159,0.494,160,0.425,161,0.494,162,0.425,163,0.494,164,0.425,165,0.494,166,0.425,167,0.494,168,0.425,169,0.494,170,0.494,171,0.425,172,0.494,173,0.425,174,0.494,175,0.425,176,0.494,177,0.425,178,0.494,179,0.876,180,0.494,181,0.425,182,0.494,183,0.425,184,0.494,185,0.425,186,0.66,187,0.494,188,0.91,189,0.494,190,0.425,191,0.494,192,0.425,193,0.494,194,0.425,195,0.494,196,0.494,197,0.425,198,0.494,199,0.425,200,0.494,201,0.425,202,0.711,203,0.711,204,0.494,205,0.425,206,0.494,207,0.425,208,0.494,209,0.425,210,0.494,211,0.425,212,0.494,213,0.425,214,0.494,215,0.425,216,0.494,217,0.425,218,0.494,219,0.425,220,0.494,221,0.494,222,0.425,223,0.476,224,0.494,225,0.425,226,0.494,227,0.425,228,0.442,229,0.494,230,0.425,231,0.494,232,0.425,233,0.494,234,0.425,235,0.442,236,0.494,237,0.442,238,0.476,239,0.494,240,0.008,241,0.006,242,0.004,281,2.185,315,2.807,316,3.388,323,3.388,326,1.212,336,1.81,352,3.055,361,1.159,389,2.594,391,3.591,392,0.982,396,1.576,454,2.302,457,4.444,491,1.814,515,1.308,519,3.388,529,1.405,573,0.634,604,2.185,627,1.97,628,1.212,635,1.682,639,3.055,644,1.484,655,1.97,660,1.576,692,2.443,693,4.115,694,2.302,703,1.81,709,1.682,711,2.148,732,1.022,742,1.405,753,3.253,758,3.873,783,1.484,784,2.807,785,2.068,787,1.576,788,1.81,791,2.84,792,2.302,793,2.609,794,2.443,795,2.443,796,1.682,797,1.81,798,1.682,799,1.682,800,1.682,801,1.81,802,2.668,804,2.609,806,1.682,807,1.682,808,1.576,809,1.682,813,1.81,830,1.576,850,1.576,858,2.443,869,3.055,875,1.484,895,2.609,910,1.97,914,4.15,915,2.185,917,4.563,967,1.81,973,2.185,1092,3.896,1234,1.682,1239,4.828,1243,2.185,1308,1.682,1309,2.185,1326,5.353,1373,1.576,1389,2.185,1418,3.055,1435,2.185,1665,2.185,1666,3.893,1667,3.893,1668,4.768,1669,4.15,1670,4.15,1671,4.15,1672,4.768,1673,3.893,1674,5.372,1675,3.893,1676,3.893,1677,3.893,1678,2.51,1679,3.893,1680,2.609,1681,2.51,1682,3.893,1683,2.51,1684,2.51,1685,2.51,1686,3.893,1687,2.51,1688,3.893,1689,2.51,1690,3.893,1691,2.51,1692,6.958,1693,3.893,1694,3.388,1695,2.51,1696,2.51,1697,2.51,1698,2.51,1699,2.51,1700,2.51,1701,1.576,1702,1.97,1703,4.675,1704,2.51,1705,2.51,1706,2.51,1707,2.51,1708,3.893,1709,2.185,1710,4.15,1711,4.768,1712,2.51,1713,2.185,1714,3.388,1715,3.388,1716,2.51,1717,2.51,1718,2.51,1719,2.51,1720,5.814,1721,2.51,1722,5.814,1723,2.51,1724,2.185,1725,2.185,1726,2.185,1727,2.51,1728,2.51,1729,3.893,1730,2.51,1731,2.51,1732,2.51,1733,3.893,1734,3.388,1735,3.893,1736,2.51,1737,2.51,1738,3.893,1739,2.51,1740,2.51,1741,2.185,1742,2.51,1743,3.893,1744,3.893,1745,3.893,1746,3.893,1747,3.893,1748,3.055,1749,5.372]],["title/injectables/HistoricalTrendsService.html",[389,1.917,486,1.038]],["body/injectables/HistoricalTrendsService.html",[3,0.067,4,0.067,8,0.045,14,0.134,15,0.309,18,0.591,29,0.798,32,0.287,34,0.908,35,0.014,36,0.565,37,0.257,38,0.945,47,0.837,49,0.931,57,0.75,58,1.031,61,0.416,64,0.275,66,0.077,67,0.086,69,2.537,80,1.078,85,1.602,87,0.504,91,2.794,93,1.26,108,2.143,126,2.778,128,3.473,202,0.543,240,0.005,241,0.007,242,0.005,325,4.15,348,1.663,389,2.137,438,2.476,457,4.787,475,3.851,486,1.157,487,1.314,491,1.288,505,1.579,514,3.926,515,2.349,529,2.476,531,1.435,533,2.586,535,2.476,537,2.778,573,1.803,644,1.757,682,2.143,684,2.332,693,3.884,703,2.143,733,1.757,791,2.043,802,3.505,822,2.965,854,4.27,855,2.332,858,3.932,868,4.15,870,2.586,895,5.457,910,4.598,912,3.851,913,3.851,916,2.586,917,2.332,918,2.586,919,2.586,923,2.586,924,2.586,967,3.813,1026,1.991,1145,2.143,1188,4.602,1222,2.586,1239,2.332,1307,2.586,1359,3.97,1401,2.586,1669,4.602,1670,3.851,1713,2.586,1714,6.084,1715,6.084,1725,2.586,1726,2.586,1734,2.586,1741,5.716,1750,2.586,1751,5.288,1752,4.425,1753,4.425,1754,4.425,1755,4.425,1756,4.425,1757,4.425,1758,4.425,1759,2.972,1760,4.425,1761,2.972,1762,4.425,1763,4.425,1764,2.972,1765,4.425,1766,2.972,1767,4.425,1768,2.972,1769,2.972,1770,2.972,1771,2.972,1772,2.972,1773,4.425,1774,2.972,1775,2.586,1776,2.972,1777,5.858,1778,2.972,1779,2.972,1780,2.972,1781,2.972,1782,4.425,1783,2.972,1784,2.972,1785,2.972,1786,2.972,1787,2.972,1788,6.803,1789,2.972,1790,2.972,1791,4.425,1792,4.425,1793,4.425,1794,2.972,1795,2.972,1796,5.858,1797,2.972,1798,2.972,1799,2.972,1800,2.972,1801,2.972,1802,2.972,1803,2.972,1804,2.972,1805,4.425,1806,4.425,1807,2.972,1808,2.972,1809,2.972,1810,5.288,1811,5.288,1812,2.972,1813,2.972,1814,2.972,1815,2.972,1816,2.972,1817,2.972,1818,2.972,1819,2.972,1820,4.425,1821,4.425,1822,4.425,1823,2.972,1824,4.425,1825,2.972,1826,4.425,1827,2.972,1828,2.972,1829,2.972]],["title/components/HomeComponent.html",[0,0.047,190,0.673]],["body/components/HomeComponent.html",[0,0.072,1,0.645,2,0.931,3,0.085,4,0.085,5,0.748,6,0.721,7,0.748,8,0.058,10,0.621,11,1.533,12,1.04,14,0.171,15,0.369,18,0.706,29,0.574,32,0.25,34,0.767,35,0.014,36,0.512,37,0.217,38,0.798,47,0.508,49,0.67,57,0.645,58,0.597,61,0.576,64,0.352,66,0.099,67,0.11,85,1.915,87,0.645,107,1.613,126,2.389,138,1.071,152,0.67,153,1.04,154,1.04,155,0.621,156,0.748,157,0.748,158,0.645,159,0.748,160,0.645,161,0.748,162,0.645,163,0.748,164,0.645,165,0.748,166,0.645,167,0.748,168,0.645,169,0.748,170,0.748,171,0.645,172,0.748,173,0.645,174,0.748,175,0.645,176,0.748,177,0.645,178,0.748,179,0.621,180,0.748,181,0.645,182,0.748,183,0.645,184,0.748,185,0.645,186,0.645,187,0.748,188,0.645,189,0.748,190,1.113,191,0.748,192,0.645,193,0.748,194,0.645,195,0.748,196,0.748,197,0.645,198,0.748,199,0.645,200,0.748,201,0.645,202,0.966,203,0.966,204,0.748,205,0.645,206,0.748,207,0.645,208,0.748,209,0.645,210,0.748,211,0.645,212,0.748,213,0.645,214,0.748,215,0.645,216,0.748,217,0.645,218,0.748,219,0.645,220,0.748,221,0.748,222,0.645,223,1.002,224,0.748,225,0.645,226,0.748,227,0.645,228,0.67,229,0.748,230,0.645,231,0.748,232,0.645,233,0.748,234,0.645,235,0.67,236,0.748,237,0.67,238,0.721,239,0.748,240,0.006,241,0.009,242,0.006,326,2.934,357,1.989,367,4.602,386,3.383,388,2.908,391,4.1,393,4.599,436,1.682,437,4.91,438,2.129,439,2.389,491,1.681,711,2.314,712,2.389,728,2.55,732,1.549,741,2.389,793,3.544,857,2.55,858,2.389,1105,2.389,1574,4.15,1702,2.987,1709,3.312,1830,3.312,1831,5.288,1832,5.288,1833,7.328,1834,5.288,1835,5.288,1836,3.805,1837,3.805,1838,3.805,1839,3.805,1840,3.805,1841,3.805,1842,3.805,1843,3.805,1844,3.805,1845,3.805,1846,3.805]],["title/components/HoverBoxComponent.html",[0,0.047,192,0.673]],["body/components/HoverBoxComponent.html",[0,0.065,1,0.534,2,0.813,3,0.071,4,0.071,5,0.62,6,0.597,7,0.62,8,0.048,10,0.514,11,1.515,12,0.909,14,0.142,15,0.322,18,0.617,29,0.826,32,0.316,34,0.931,35,0.014,36,0.527,37,0.292,38,0.969,39,2.329,47,0.857,49,0.813,56,2.025,57,1.205,58,1.116,59,1.739,61,0.248,64,0.291,66,0.082,67,0.091,69,1.059,77,0.753,80,1.126,85,2.324,87,0.534,91,1.808,98,2.901,99,2.133,106,2.102,122,2.112,126,1.978,138,1.094,152,0.555,153,0.909,154,0.909,155,0.514,156,0.62,157,0.62,158,0.534,159,0.62,160,0.534,161,0.62,162,0.534,163,0.62,164,0.534,165,0.62,166,0.534,167,0.62,168,0.534,169,0.62,170,0.62,171,0.534,172,0.62,173,0.534,174,0.62,175,0.534,176,0.62,177,0.534,178,0.62,179,0.514,180,0.62,181,0.534,182,0.62,183,0.534,184,0.62,185,0.534,186,0.534,187,0.62,188,0.534,189,0.62,190,0.534,191,0.62,192,1.022,193,0.62,194,0.534,195,0.62,196,0.62,197,0.534,198,0.62,199,0.534,200,0.62,201,0.534,202,0.844,203,1.366,204,0.62,205,0.534,206,0.62,207,0.534,208,0.62,209,0.534,210,0.62,211,0.534,212,0.62,213,0.534,214,0.62,215,0.534,216,0.62,217,0.534,218,0.62,219,0.534,220,0.62,221,0.62,222,0.534,223,0.597,224,0.62,225,0.534,226,0.62,227,0.534,228,0.555,229,0.62,230,0.534,231,0.62,232,0.534,233,0.62,234,0.534,235,0.555,236,0.62,237,0.555,238,0.597,239,0.62,240,0.005,241,0.008,242,0.005,307,2.473,318,5.246,337,1.283,348,1.763,486,1.208,529,1.763,531,1.521,573,0.795,639,2.473,644,1.863,665,2.742,789,3.097,791,1.455,804,2.112,959,5.586,1092,3.667,1229,2.473,1356,3.946,1357,4.295,1358,5.246,1359,3.972,1363,4.022,1364,3.627,1381,2.473,1383,2.742,1404,2.742,1405,4.731,1418,2.473,1423,2.742,1428,2.742,1486,2.742,1490,2.742,1552,2.473,1694,4.022,1703,2.742,1847,2.742,1848,4.022,1849,4.621,1850,5.473,1851,6.028,1852,5.473,1853,6.028,1854,4.621,1855,4.621,1856,4.621,1857,4.621,1858,3.151,1859,3.151,1860,3.151,1861,3.151,1862,3.151,1863,4.621,1864,3.151,1865,3.151,1866,3.151,1867,3.151,1868,3.151,1869,3.151,1870,3.151,1871,3.151,1872,3.151,1873,3.151,1874,3.151,1875,6.187,1876,4.621,1877,3.151,1878,3.151,1879,3.151,1880,3.151,1881,3.151,1882,3.151,1883,4.621,1884,3.151,1885,3.151,1886,3.151,1887,3.151,1888,3.151,1889,3.151,1890,3.151,1891,3.151,1892,3.151,1893,5.246,1894,6.932]],["title/pipes/HumanizeBytesPipe.html",[1895,2.862,1896,3.116]],["body/pipes/HumanizeBytesPipe.html",[3,0.125,4,0.125,8,0.085,10,0.909,18,0.744,32,0.279,34,0.983,35,0.014,36,0.564,37,0.229,38,1.023,47,0.906,58,0.875,61,0.438,64,0.515,66,0.145,67,0.16,77,0.958,93,3.1,240,0.009,241,0.011,242,0.009,573,1.712,679,4.018,1895,4.89,1896,5.323,1897,5.572,1898,4.849,1899,6.782,1900,5.572,1901,6.782,1902,5.572,1903,6.782,1904,5.572,1905,6.782,1906,7.312,1907,5.572,1908,6.782,1909,5.572,1910,5.572,1911,5.572,1912,5.572,1913,5.572,1914,5.572,1915,5.572]],["title/classes/Link.html",[67,0.114,673,2.66]],["body/classes/Link.html",[3,0.135,4,0.135,8,0.092,14,0.272,15,0.497,32,0.292,35,0.014,37,0.292,66,0.185,67,0.205,77,0.917,80,1.734,240,0.01,241,0.012,242,0.01,355,2.187,670,3.379,671,4.74,672,5.256,673,5.071,676,6.586,677,3.654,1916,6.039,1917,6.039]],["title/components/LoadingAnimation.html",[0,0.047,194,0.673]],["body/components/LoadingAnimation.html",[0,0.08,1,0.795,2,1.071,3,0.105,4,0.105,5,0.922,6,0.889,7,0.922,8,0.072,10,0.765,11,1.549,12,1.197,29,1.02,32,0.193,35,0.014,36,0.501,61,0.369,64,0.434,66,0.122,67,0.135,87,0.795,138,1.166,152,0.826,153,1.197,154,1.197,155,0.765,156,0.922,157,0.922,158,0.795,159,0.922,160,0.795,161,0.922,162,0.795,163,0.922,164,0.795,165,0.922,166,0.795,167,0.922,168,0.795,169,0.922,170,0.922,171,0.795,172,0.922,173,0.795,174,0.922,175,0.795,176,0.922,177,0.795,178,0.922,179,0.765,180,0.922,181,0.795,182,0.922,183,0.795,184,0.922,185,0.795,186,0.795,187,0.922,188,0.795,189,0.922,190,0.795,191,0.922,192,0.795,193,0.922,194,1.212,195,1.328,196,0.922,197,0.795,198,0.922,199,0.795,200,0.922,201,0.795,202,1.112,203,1.112,204,0.922,205,0.795,206,0.922,207,0.795,208,0.922,209,0.795,210,0.922,211,0.795,212,0.922,213,0.795,214,0.922,215,0.795,216,0.922,217,0.795,218,0.922,219,0.795,220,0.922,221,0.922,222,0.795,223,0.889,224,0.922,225,0.795,226,0.922,227,0.795,228,0.826,229,0.922,230,0.795,231,0.922,232,0.795,233,0.922,234,0.795,235,0.826,236,0.922,237,0.826,238,0.889,239,0.922,240,0.008,241,0.01,242,0.008,1918,4.082,1919,6.086,1920,6.086,1921,4.691]],["title/injectables/MapService.html",[390,2.492,486,1.038]],["body/injectables/MapService.html",[3,0.091,4,0.091,8,0.062,14,0.182,15,0.385,32,0.166,35,0.013,37,0.166,57,0.685,58,0.635,61,0.318,64,0.374,66,0.105,67,0.116,82,5.776,91,2.847,93,3.086,96,3.771,240,0.007,241,0.009,242,0.007,315,5.91,341,5.951,348,2.263,390,3.461,486,1.442,487,1.788,785,3.334,1359,2.149,1748,5.29,1922,3.52,1923,6.275,1924,6.74,1925,7.582,1926,7.279,1927,6.74,1928,6.74,1929,5.515,1930,5.515,1931,4.799,1932,6.74,1933,5.515,1934,6.74,1935,5.515,1936,7.279,1937,8.325,1938,5.515,1939,5.515,1940,7.582,1941,7.279,1942,6.347,1943,5.515,1944,7.582,1945,6.74,1946,5.515,1947,6.74,1948,5.515,1949,5.515,1950,4.799,1951,4.799,1952,7.279,1953,5.515,1954,5.515,1955,6.74,1956,5.515,1957,5.515,1958,6.74,1959,6.74,1960,5.515,1961,5.515,1962,5.515,1963,5.515,1964,4.799,1965,5.515,1966,5.515,1967,5.515,1968,4.045]],["title/classes/Medication.html",[67,0.114,854,2.492]],["body/classes/Medication.html",[3,0.125,4,0.125,8,0.086,14,0.252,15,0.475,29,0.846,32,0.313,34,0.812,35,0.014,36,0.589,37,0.321,38,0.846,39,1.883,66,0.146,67,0.161,77,0.964,240,0.009,241,0.011,242,0.009,355,2.029,358,2.977,692,3.517,693,4.024,694,3.313,854,4.271,873,6.379,879,6.995,891,4.876,1969,4.876,1970,5.923,1971,5.603,1972,5.603,1973,5.603,1974,5.603,1975,5.603,1976,5.603,1977,5.603]],["title/components/MedicationsComponent.html",[0,0.047,197,0.673]],["body/components/MedicationsComponent.html",[0,0.073,1,0.658,2,0.944,3,0.087,4,0.087,5,0.763,6,0.736,7,0.763,8,0.059,10,0.634,11,1.534,12,1.054,14,0.175,15,0.374,18,0.716,20,3.52,24,1.675,29,0.809,32,0.286,34,0.778,35,0.014,36,0.546,37,0.272,38,0.809,47,0.716,49,0.944,61,0.546,62,1.505,64,0.359,66,0.101,67,0.112,80,1.307,87,0.658,94,2.8,106,2.142,138,1.081,152,0.683,153,1.054,154,1.054,155,0.634,156,0.763,157,0.763,158,0.658,159,0.763,160,0.658,161,0.763,162,0.658,163,0.763,164,0.658,165,0.763,166,0.658,167,0.763,168,0.658,169,0.763,170,0.763,171,0.658,172,0.763,173,0.658,174,0.763,175,0.658,176,0.763,177,0.658,178,0.763,179,0.634,180,0.763,181,0.658,182,0.763,183,0.658,184,0.763,185,0.658,186,0.658,187,0.763,188,0.658,189,0.763,190,0.658,191,0.763,192,0.658,193,0.763,194,0.658,195,0.763,196,0.763,197,1.123,198,0.763,199,0.658,200,0.763,201,0.658,202,0.98,203,0.98,204,0.763,205,0.658,206,0.763,207,0.658,208,0.763,209,0.658,210,0.763,211,0.658,212,0.763,213,0.658,214,0.763,215,0.658,216,0.763,217,0.658,218,0.763,219,0.658,220,0.763,221,0.763,222,0.658,223,0.736,224,0.763,225,0.658,226,0.763,227,0.658,228,0.683,229,0.763,230,0.658,231,0.763,232,0.658,233,0.763,234,0.658,235,0.683,236,0.763,237,0.683,238,0.736,239,0.763,240,0.006,241,0.009,242,0.006,260,2.063,385,4.251,389,3.558,491,1.307,711,2.329,729,3.38,732,1.581,733,3.633,742,2.173,789,2.602,811,3.38,854,4.364,855,3.048,869,5.783,1320,3.048,1701,2.438,1978,3.38,1979,5.363,1980,3.884,1981,5.363,1982,5.363,1983,3.884,1984,3.884,1985,3.884,1986,3.884,1987,3.884,1988,3.38,1989,3.884,1990,3.884,1991,3.884,1992,3.884,1993,5.363]],["title/components/NewCondition.html",[0,0.047,199,0.673]],["body/components/NewCondition.html",[0,0.08,1,0.802,2,1.078,3,0.106,4,0.106,5,0.931,6,0.897,7,0.931,8,0.072,10,0.772,11,1.55,12,1.204,35,0.014,36,0.503,61,0.372,64,0.438,66,0.123,67,0.136,87,0.802,138,1.171,152,0.833,153,1.204,154,1.204,155,0.772,156,0.931,157,0.931,158,0.802,159,0.931,160,0.802,161,0.931,162,0.802,163,0.931,164,0.802,165,0.931,166,0.802,167,0.931,168,0.802,169,0.931,170,0.931,171,0.802,172,0.931,173,0.802,174,0.931,175,0.802,176,0.931,177,0.802,178,0.931,179,0.772,180,0.931,181,0.802,182,0.931,183,0.802,184,0.931,185,0.802,186,0.802,187,0.931,188,0.802,189,0.931,190,0.802,191,0.931,192,0.802,193,0.931,194,0.802,195,0.931,196,0.931,197,0.802,198,0.931,199,1.29,200,0.931,201,0.802,202,1.119,203,1.119,204,0.931,205,0.802,206,0.931,207,0.802,208,0.931,209,0.802,210,0.931,211,0.802,212,0.931,213,0.802,214,0.931,215,0.802,216,0.931,217,0.802,218,0.931,219,0.802,220,0.931,221,0.931,222,0.802,223,0.897,224,0.931,225,0.802,226,0.931,227,0.802,228,0.833,229,0.931,230,0.802,231,0.931,232,0.802,233,0.931,234,0.802,235,0.833,236,0.931,237,0.833,238,0.897,239,0.931,240,0.008,241,0.01,242,0.008,1994,4.121,1995,6.123]],["title/components/NormalBox1.html",[0,0.047,201,0.673]],["body/components/NormalBox1.html",[0,0.077,1,0.734,2,1.016,3,0.097,4,0.097,5,0.851,6,0.82,7,0.851,8,0.066,10,0.706,11,1.543,12,1.135,14,0.195,15,0.403,18,0.771,24,1.803,32,0.267,35,0.014,36,0.482,37,0.237,47,0.578,61,0.34,62,1.62,64,0.4,66,0.113,67,0.125,69,1.454,77,0.678,85,2.09,87,0.734,93,2.447,138,1.13,152,0.762,153,1.135,154,1.135,155,0.706,156,0.851,157,0.851,158,0.734,159,0.851,160,0.734,161,0.851,162,0.734,163,0.851,164,0.734,165,0.851,166,0.734,167,0.851,168,0.734,169,0.851,170,0.851,171,0.734,172,0.851,173,0.734,174,0.851,175,0.734,176,0.851,177,0.734,178,0.851,179,0.706,180,0.851,181,0.734,182,0.851,183,0.734,184,0.851,185,0.734,186,0.734,187,0.851,188,0.734,189,0.851,190,0.734,191,0.851,192,0.734,193,0.851,194,0.734,195,0.851,196,0.851,197,0.734,198,0.851,199,0.734,200,0.851,201,1.174,202,1.356,203,1.439,204,0.851,205,0.734,206,0.851,207,0.734,208,0.851,209,0.734,210,0.851,211,0.734,212,0.851,213,0.734,214,0.851,215,0.734,216,0.851,217,0.734,218,0.851,219,0.734,220,0.851,221,0.851,222,0.734,223,0.82,224,0.851,225,0.734,226,0.851,227,0.734,228,0.762,229,0.851,230,0.734,231,0.851,232,0.734,233,0.851,234,0.734,235,0.762,236,0.851,237,0.762,238,0.82,239,0.851,240,0.007,241,0.01,242,0.007,357,1.628,573,1.457,931,3.877,932,4.352,940,3.868,1996,5.438,1997,3.767,1998,5.773,1999,5.653,2000,4.328,2001,4.328,2002,4.328,2003,5.024,2004,3.121]],["title/components/NormalBox2.html",[0,0.047,205,0.673]],["body/components/NormalBox2.html",[0,0.077,1,0.734,2,1.016,3,0.097,4,0.097,5,0.851,6,0.82,7,0.851,8,0.066,10,0.706,11,1.543,12,1.135,14,0.195,15,0.403,18,0.771,24,1.803,32,0.267,35,0.014,36,0.482,37,0.237,47,0.578,61,0.34,62,1.62,64,0.4,66,0.113,67,0.125,69,1.454,77,0.678,85,2.09,87,0.734,96,3.23,138,1.13,152,0.762,153,1.135,154,1.135,155,0.706,156,0.851,157,0.851,158,0.734,159,0.851,160,0.734,161,0.851,162,0.734,163,0.851,164,0.734,165,0.851,166,0.734,167,0.851,168,0.734,169,0.851,170,0.851,171,0.734,172,0.851,173,0.734,174,0.851,175,0.734,176,0.851,177,0.734,178,0.851,179,0.706,180,0.851,181,0.734,182,0.851,183,0.734,184,0.851,185,0.734,186,0.734,187,0.851,188,0.734,189,0.851,190,0.734,191,0.851,192,0.734,193,0.851,194,0.734,195,0.851,196,0.851,197,0.734,198,0.851,199,0.734,200,0.851,201,0.734,202,1.356,203,1.439,204,0.851,205,1.174,206,0.851,207,0.734,208,0.851,209,0.734,210,0.851,211,0.734,212,0.851,213,0.734,214,0.851,215,0.734,216,0.851,217,0.734,218,0.851,219,0.734,220,0.851,221,0.851,222,0.734,223,0.82,224,0.851,225,0.734,226,0.851,227,0.734,228,0.762,229,0.851,230,0.734,231,0.851,232,0.734,233,0.851,234,0.734,235,0.762,236,0.851,237,0.762,238,0.82,239,0.851,240,0.007,241,0.01,242,0.007,357,1.628,573,1.457,931,3.877,932,4.352,940,3.868,1996,5.438,1999,5.653,2003,5.024,2004,3.121,2005,3.767,2006,5.773,2007,4.328,2008,4.328,2009,4.328]],["title/components/NoteNavigationComponent.html",[0,0.047,207,0.673]],["body/components/NoteNavigationComponent.html",[0,0.07,1,0.622,2,0.908,3,0.082,4,0.082,5,0.722,6,0.696,7,0.722,8,0.056,10,0.599,11,1.529,12,1.014,14,0.165,18,0.689,32,0.29,35,0.014,36,0.442,47,0.944,49,1.243,61,0.289,64,0.339,66,0.096,67,0.106,87,0.622,138,1.055,152,0.646,153,1.014,154,1.014,155,0.599,156,0.722,157,0.722,158,0.622,159,0.722,160,0.622,161,0.722,162,0.622,163,0.722,164,0.622,165,0.722,166,0.622,167,0.722,168,0.622,169,0.722,170,0.722,171,0.622,172,0.722,173,0.622,174,0.722,175,0.622,176,0.722,177,0.622,178,0.722,179,0.599,180,0.722,181,0.622,182,0.722,183,0.622,184,0.722,185,0.622,186,0.622,187,0.722,188,0.622,189,0.722,190,0.622,191,0.722,192,0.622,193,0.722,194,0.622,195,0.722,196,0.722,197,0.622,198,0.722,199,0.622,200,0.722,201,0.622,202,0.942,203,0.942,204,0.722,205,0.622,206,0.722,207,1.096,208,0.722,209,0.622,210,0.722,211,0.622,212,0.722,213,0.622,214,0.722,215,0.622,216,0.722,217,0.622,218,0.722,219,0.622,220,0.722,221,0.722,222,0.622,223,0.696,224,0.722,225,0.622,226,0.722,227,0.622,228,0.646,229,0.722,230,0.622,231,0.722,232,0.622,233,0.722,234,0.622,235,0.646,236,0.722,237,0.646,238,0.696,239,0.722,240,0.006,241,0.009,242,0.006,753,4.638,1405,5.812,1710,4.488,1893,7.214,2010,3.195,2011,5.157,2012,5.157,2013,6.466,2014,6.466,2015,6.466,2016,6.466,2017,6.466,2018,6.466,2019,3.671,2020,3.671,2021,3.671,2022,3.671,2023,3.671,2024,3.671,2025,6.812,2026,6.466,2027,6.812,2028,6.466,2029,5.157,2030,5.962,2031,5.157,2032,5.157]],["title/classes/Observation.html",[67,0.114,505,2.109]],["body/classes/Observation.html",[3,0.099,4,0.099,8,0.068,14,0.2,15,0.409,18,0.784,32,0.333,34,0.953,35,0.014,36,0.488,37,0.332,38,0.992,47,0.935,58,0.696,61,0.349,66,0.115,67,0.128,76,4.741,77,0.928,80,1.705,99,2.048,202,0.81,240,0.007,241,0.01,242,0.007,337,2.676,348,4.184,355,1.606,357,2.474,361,2.709,483,4.127,505,4.31,507,5.161,559,5.161,573,1.766,679,4.231,683,3.888,691,3.482,785,4.163,868,3.482,979,4.741,1223,2.973,1497,3.199,2033,3.861,2034,6.575,2035,6.575,2036,5.722,2037,5.722,2038,6.997,2039,5.868,2040,5.868,2041,5.868,2042,4.436,2043,4.436,2044,4.436,2045,4.436,2046,4.436,2047,4.436,2048,4.436,2049,4.436,2050,4.436,2051,4.436,2052,4.436,2053,5.868,2054,4.436,2055,5.868,2056,4.436,2057,5.868,2058,4.436,2059,4.436,2060,4.436,2061,4.436,2062,4.436,2063,4.436,2064,4.436,2065,4.436,2066,4.436,2067,4.436,2068,4.436]],["title/components/ObservationRecursive.html",[0,0.047,209,0.673]],["body/components/ObservationRecursive.html",[0,0.071,1,0.634,2,0.919,3,0.084,4,0.084,5,0.735,6,0.709,7,0.735,8,0.057,10,0.61,11,1.531,12,1.027,14,0.168,15,0.364,18,0.698,24,1.632,29,0.564,30,2.935,31,3.141,32,0.306,34,0.757,35,0.014,36,0.509,37,0.292,38,0.788,39,2.304,47,0.804,49,0.658,57,0.634,58,0.587,61,0.512,62,1.69,64,0.346,65,2.211,66,0.097,67,0.108,69,2.023,71,4.726,80,1.273,87,0.634,106,2.273,107,1.585,138,1.063,152,0.658,153,1.027,154,1.027,155,0.61,156,0.735,157,0.735,158,0.634,159,0.735,160,0.634,161,0.735,162,0.634,163,0.735,164,0.634,165,0.735,166,0.634,167,0.735,168,0.634,169,1.027,170,0.735,171,0.634,172,0.735,173,0.634,174,0.735,175,0.634,176,0.735,177,0.634,178,0.735,179,0.61,180,0.735,181,0.634,182,0.735,183,0.634,184,0.735,185,0.634,186,0.634,187,0.735,188,0.634,189,0.735,190,0.634,191,0.735,192,0.634,193,0.735,194,0.634,195,0.735,196,0.735,197,0.634,198,0.735,199,0.634,200,0.735,201,0.634,202,0.954,203,0.954,204,0.735,205,0.634,206,0.735,207,0.634,208,0.735,209,1.105,210,0.735,211,0.634,212,0.735,213,0.634,214,0.735,215,0.634,216,0.735,217,0.634,218,0.735,219,0.634,220,0.735,221,0.735,222,0.634,223,0.709,224,0.735,225,0.634,226,0.735,227,0.634,228,0.658,229,0.735,230,0.634,231,0.735,232,0.634,233,0.735,234,0.634,235,0.658,236,0.735,237,0.658,238,0.709,239,0.735,240,0.006,241,0.009,242,0.006,260,2.776,389,3.147,392,2.852,491,1.273,635,2.506,730,1.726,829,2.506,830,2.347,931,3.369,1349,2.696,1379,2.935,1496,4.7,1680,4.035,1701,2.347,2069,3.254,2070,5.224,2071,5.224,2072,6.021,2073,5.24,2074,5.24,2075,5.673,2076,5.224,2077,3.739,2078,3.739,2079,5.224,2080,3.739,2081,3.739,2082,3.739,2083,3.739,2084,3.739,2085,5.224,2086,3.739,2087,3.254,2088,3.254,2089,3.254,2090,3.254,2091,4.547,2092,4.547,2093,4.547,2094,5.224,2095,4.547,2096,4.1]],["title/components/ObservationRecursiveChart.html",[0,0.047,211,0.673]],["body/components/ObservationRecursiveChart.html",[0,0.072,1,0.645,2,0.931,3,0.085,4,0.085,5,0.748,6,0.721,7,0.748,8,0.058,10,0.621,11,1.533,12,1.04,14,0.171,15,0.369,18,0.706,24,1.652,29,0.574,30,2.987,31,3.158,32,0.301,34,0.767,35,0.014,36,0.512,37,0.283,38,0.798,39,2.609,47,0.812,49,0.67,61,0.516,62,1.705,64,0.352,65,2.25,66,0.099,67,0.11,69,2.042,71,4.77,80,1.6,87,0.645,106,2.119,107,1.613,138,1.071,152,0.67,153,1.04,154,1.04,155,0.621,156,0.748,157,0.748,158,0.645,159,0.748,160,0.645,161,0.748,162,0.645,163,0.748,164,0.645,165,0.748,166,0.645,167,0.748,168,0.645,169,0.748,170,0.748,171,0.645,172,0.748,173,0.645,174,0.748,175,0.645,176,0.748,177,0.645,178,0.748,179,0.621,180,0.748,181,0.645,182,0.748,183,0.645,184,0.748,185,0.645,186,0.645,187,0.748,188,0.645,189,0.748,190,0.645,191,0.748,192,0.645,193,0.748,194,0.645,195,0.748,196,0.748,197,0.645,198,0.748,199,0.645,200,0.748,201,0.645,202,0.966,203,0.966,204,0.748,205,0.645,206,0.748,207,0.645,208,0.748,209,0.645,210,0.748,211,1.113,212,0.748,213,0.645,214,0.748,215,0.645,216,0.748,217,0.645,218,0.748,219,0.645,220,0.748,221,0.748,222,0.645,223,0.721,224,0.748,225,0.645,226,0.748,227,0.645,228,0.67,229,0.748,230,0.645,231,0.748,232,0.645,233,0.748,234,0.645,235,0.67,236,0.748,237,0.67,238,0.721,239,0.748,240,0.006,241,0.009,242,0.006,260,3.229,389,3.171,491,0.927,505,2.81,528,2.55,573,1.335,931,3.675,1234,2.55,1320,2.987,1496,4.736,1680,4.073,1701,2.389,2073,5.289,2074,5.716,2075,5.289,2088,3.312,2089,3.312,2090,3.312,2091,4.602,2092,4.602,2093,4.602,2095,4.602,2096,4.15,2097,3.312,2098,5.288,2099,5.288,2100,5.288,2101,3.805,2102,3.805,2103,5.288,2104,3.805,2105,3.805,2106,3.805,2107,3.805,2108,3.805,2109,3.805,2110,5.288]],["title/injectables/ObservationService.html",[31,1.755,486,1.038]],["body/injectables/ObservationService.html",[3,0.053,4,0.053,8,0.036,14,0.107,15,0.26,18,0.498,29,0.562,31,1.648,32,0.316,34,0.911,35,0.014,36,0.466,37,0.299,38,0.949,39,1.546,47,0.973,49,1.229,57,1.019,58,0.943,59,1.731,61,0.494,64,0.22,66,0.062,67,0.068,69,2.346,76,1.712,77,0.82,79,2.066,80,1.864,82,2.688,85,0.86,86,2.066,89,1.007,91,2.954,92,4.129,93,3.202,96,4.366,98,1.49,99,3.323,132,3.758,240,0.004,241,0.006,242,0.004,326,2.222,337,1.517,338,2.066,339,1.864,340,2.066,341,1.864,343,2.066,344,2.066,345,2.066,347,2.066,357,2.82,358,1.262,388,2.446,392,2.459,454,2.204,465,1.262,486,0.974,487,1.05,491,1.121,497,3.082,499,2.721,505,3.009,515,2.02,528,1.591,573,1.429,584,2.066,608,1.329,614,3.493,615,3.493,635,1.591,642,1.146,643,1.146,644,2.204,660,2.888,670,3.363,677,1.146,711,1.207,712,1.49,730,1.096,746,1.864,853,1.591,856,1.712,858,2.34,862,1.49,863,1.712,979,1.712,1026,1.591,1036,2.925,1037,1.864,1038,1.864,1092,3.493,1113,2.066,1119,1.864,1134,1.712,1205,4.536,1233,2.066,1249,2.066,1252,2.066,1256,2.066,1305,2.925,1483,6.469,1496,2.688,1536,2.066,1748,4.933,1931,2.066,1942,2.925,1950,2.066,1951,2.066,1964,2.066,2111,2.066,2112,5.212,2113,4.601,2114,5.664,2115,4.601,2116,4.601,2117,3.727,2118,3.727,2119,4.601,2120,3.727,2121,5.212,2122,3.727,2123,3.727,2124,3.727,2125,5.212,2126,3.727,2127,2.374,2128,2.374,2129,3.727,2130,2.374,2131,2.374,2132,3.727,2133,2.374,2134,3.727,2135,3.727,2136,3.727,2137,2.374,2138,3.727,2139,2.374,2140,3.727,2141,2.374,2142,2.374,2143,3.727,2144,2.374,2145,4.601,2146,2.374,2147,2.374,2148,2.374,2149,2.374,2150,2.374,2151,2.374,2152,2.374,2153,2.374,2154,2.374,2155,2.374,2156,2.374,2157,3.727,2158,2.374,2159,2.374,2160,3.727,2161,2.374,2162,2.374,2163,2.374,2164,2.374,2165,2.374,2166,2.374,2167,2.374,2168,3.727,2169,2.374,2170,2.374,2171,2.374,2172,3.727,2173,2.374,2174,2.374,2175,1.864,2176,2.374,2177,2.374,2178,2.374,2179,2.374,2180,2.374,2181,2.374,2182,2.374,2183,2.374,2184,2.374,2185,2.374,2186,2.374,2187,4.536,2188,2.374,2189,2.374,2190,2.374,2191,2.374,2192,2.374,2193,2.374,2194,2.374,2195,2.374,2196,2.374,2197,2.374,2198,2.374,2199,3.727,2200,2.374,2201,3.727,2202,2.374,2203,2.374,2204,2.374,2205,2.374,2206,2.374,2207,2.374,2208,2.374,2209,2.374,2210,2.374,2211,3.727,2212,2.374,2213,2.374,2214,2.374,2215,2.374,2216,2.374,2217,2.374,2218,2.374,2219,2.374,2220,2.374,2221,3.727,2222,3.727,2223,2.374,2224,2.374,2225,2.374,2226,2.374,2227,2.374,2228,2.374]],["title/components/ObservationsComponent.html",[0,0.047,213,0.673]],["body/components/ObservationsComponent.html",[0,0.063,1,0.507,2,0.782,3,0.067,4,0.067,5,0.588,6,0.567,7,0.588,8,0.046,10,0.488,11,1.509,12,0.874,14,0.134,15,0.31,18,0.594,20,3.122,24,1.389,29,0.671,31,3.013,32,0.316,34,0.644,35,0.014,36,0.466,37,0.303,38,0.671,39,1.494,47,0.839,49,1.105,57,1.116,58,0.922,61,0.581,62,1.649,63,1.512,64,0.276,65,1.768,66,0.078,67,0.086,69,2.11,77,0.522,80,1.293,87,0.507,90,2.487,92,4.141,106,1.042,138,0.959,152,0.526,153,0.874,154,0.874,155,0.488,156,0.588,157,0.588,158,0.507,159,0.588,160,0.507,161,0.588,162,0.507,163,0.588,164,0.507,165,0.588,166,0.507,167,0.588,168,0.507,169,0.588,170,0.588,171,0.507,172,0.588,173,0.507,174,0.588,175,0.507,176,0.588,177,0.507,178,0.588,179,0.488,180,0.588,181,0.507,182,0.588,183,0.507,184,0.588,185,0.507,186,0.507,187,0.588,188,0.507,189,0.588,190,0.507,191,0.588,192,0.507,193,0.588,194,0.507,195,1.043,196,0.588,197,0.507,198,0.588,199,0.507,200,0.588,201,0.507,202,0.812,203,0.812,204,0.588,205,0.507,206,0.588,207,0.507,208,0.588,209,0.507,210,0.588,211,0.507,212,0.588,213,0.996,214,0.588,215,0.507,216,0.588,217,0.507,218,0.588,219,0.507,220,0.874,221,0.588,222,0.507,223,0.567,224,0.588,225,0.507,226,0.588,227,0.507,228,0.526,229,0.588,230,0.507,231,0.588,232,0.507,233,0.588,234,0.507,235,0.526,236,0.588,237,0.526,238,0.567,239,0.588,240,0.005,241,0.007,242,0.005,255,3.013,287,1.673,313,3.489,326,2.562,358,1.588,388,2.679,389,2.837,390,4.278,392,2.666,436,2.598,491,1.603,505,3.621,515,1.004,528,2.003,608,4.135,610,3.205,611,2.978,612,3.205,613,3.205,614,3.556,615,3.556,616,3.826,620,2.155,622,2.155,628,1.443,631,2.155,633,3.489,642,1.443,643,1.443,662,2.978,677,1.443,681,2.362,705,3.489,709,4.692,711,2.318,712,1.876,716,5.349,717,2.346,718,2.346,719,2.346,720,2.346,725,2.346,726,2.346,727,2.346,728,2.003,730,1.38,732,1.217,736,2.346,737,2.346,738,2.346,739,3.489,740,3.205,742,1.673,766,2.487,829,2.978,859,1.876,1131,2.79,1202,2.601,1234,2.978,1379,3.489,1381,3.489,1552,4.165,1680,3.556,1701,1.876,2229,2.601,2230,4.445,2231,5.306,2232,4.445,2233,2.989,2234,2.989,2235,4.445,2236,4.445,2237,2.989,2238,2.989,2239,2.989,2240,2.989,2241,2.989,2242,2.989,2243,2.989,2244,2.989,2245,2.989,2246,2.989,2247,2.989,2248,2.989,2249,2.989]],["title/components/ObservationsDisplay.html",[0,0.047,215,0.673]],["body/components/ObservationsDisplay.html",[0,0.058,1,0.442,2,0.706,3,0.058,4,0.058,5,0.788,6,0.494,7,0.513,8,0.04,10,0.425,11,1.494,12,0.788,14,0.117,15,0.28,18,0.732,20,2.912,24,1.252,29,0.605,32,0.311,34,0.943,35,0.014,36,0.521,37,0.294,38,0.982,47,0.92,49,1.145,56,1.988,57,0.679,58,0.86,59,2.447,61,0.465,62,1.125,63,2.028,64,0.241,66,0.068,67,0.115,74,1.637,77,0.573,80,1.19,87,0.679,88,1.259,89,1.106,92,3.694,106,0.909,109,1.747,138,0.894,148,1.204,149,2.047,152,0.459,153,0.788,154,0.788,155,0.425,156,0.513,157,0.513,158,0.442,159,0.513,160,0.442,161,0.513,162,0.442,163,0.513,164,0.442,165,0.513,166,0.442,167,0.513,168,0.442,169,0.96,170,0.513,171,0.442,172,0.513,173,0.442,174,0.513,175,0.442,176,0.513,177,0.442,178,0.513,179,0.894,180,0.513,181,0.442,182,0.513,183,0.442,184,0.513,185,0.442,186,0.442,187,0.513,188,0.442,189,0.513,190,0.442,191,0.513,192,0.442,193,0.513,194,0.442,195,0.513,196,0.513,197,0.442,198,0.513,199,0.442,200,0.513,201,0.442,202,0.732,203,0.732,204,0.513,205,0.442,206,0.513,207,0.442,208,0.513,209,0.442,210,0.513,211,0.442,212,0.513,213,0.442,214,0.513,215,1.059,216,0.513,217,0.442,218,0.513,219,0.442,220,0.513,221,0.513,222,0.442,223,0.494,224,0.513,225,0.442,226,0.513,227,0.442,228,0.459,229,0.513,230,0.442,231,0.513,232,0.442,233,0.513,234,0.442,235,0.459,236,0.513,237,0.459,238,0.494,239,0.513,240,0.004,241,0.007,242,0.004,260,3.319,312,1.747,326,2.856,361,2.254,384,3.495,392,2.694,491,0.977,505,4.283,515,0.876,528,1.747,531,2.647,535,1.459,536,2.047,537,3.065,555,2.888,559,2.047,573,1.012,578,2.686,600,2.047,640,1.542,642,2.358,643,2.358,660,1.637,730,1.204,733,2.371,741,1.637,752,3.833,753,3.31,757,2.891,758,3.952,759,3.673,761,2.371,766,3.067,775,2.891,777,2.686,783,1.542,784,2.891,785,2.595,787,1.637,788,1.88,789,3.272,790,1.747,791,1.204,792,2.371,793,3.272,794,2.516,795,3.441,796,1.747,797,1.88,798,1.747,799,1.747,800,1.747,801,1.88,802,3.067,803,1.747,804,1.747,805,1.747,806,1.747,807,3.272,808,3.065,809,3.272,810,2.047,813,3.521,814,1.88,816,2.047,817,1.637,818,2.047,819,2.27,820,2.27,822,1.747,827,2.047,829,2.686,830,1.637,831,2.27,832,2.27,833,2.047,835,2.891,836,1.88,837,1.88,838,2.047,839,2.047,1107,1.88,1172,2.047,1304,2.047,1311,2.27,1321,3.489,1342,3.489,2187,2.27,2250,2.27,2251,4.009,2252,4.009,2253,4.009,2254,4.009,2255,4.009,2256,4.009,2257,4.884,2258,2.27,2259,4.009,2260,2.608,2261,2.608,2262,4.009,2263,2.608,2264,4.009,2265,5.482,2266,2.608,2267,2.608,2268,4.009,2269,2.608,2270,4.009,2271,2.608,2272,2.608,2273,2.608,2274,2.608,2275,4.009,2276,2.608,2277,2.608,2278,2.608,2279,2.608,2280,2.608,2281,2.608,2282,2.608,2283,4.884,2284,2.608,2285,2.608,2286,4.009,2287,2.608,2288,2.608,2289,2.608,2290,2.608,2291,2.608,2292,4.009,2293,2.608,2294,4.009,2295,4.009,2296,4.009,2297,4.009,2298,4.009]],["title/classes/Patient.html",[67,0.114,711,1.286]],["body/classes/Patient.html",[3,0.122,4,0.122,8,0.083,14,0.245,15,0.467,32,0.334,35,0.014,36,0.537,37,0.334,56,2.249,66,0.142,67,0.157,77,0.947,80,1.966,142,4.853,240,0.009,241,0.011,242,0.009,355,1.974,357,2.724,711,2.168,2299,4.744,2300,7.242,2301,7.242,2302,7.242,2303,6.302,2304,5.684,2305,7.242,2306,5.452,2307,5.452,2308,5.452,2309,5.452,2310,5.452,2311,5.452,2312,5.452,2313,5.452,2314,5.452]],["title/components/PatientComponent.html",[0,0.047,217,0.673]],["body/components/PatientComponent.html",[0,0.058,1,0.451,2,0.716,3,0.06,4,0.06,5,0.523,6,0.504,7,0.523,8,0.041,10,0.434,11,1.496,12,0.8,14,0.12,15,0.284,18,0.543,20,2.942,29,0.614,32,0.312,34,0.803,35,0.014,36,0.486,37,0.29,38,0.836,47,0.841,49,1.153,56,1.367,57,1.011,58,0.937,59,2.368,61,0.565,62,1.142,63,1.345,64,0.246,66,0.069,67,0.076,77,0.739,80,1.204,84,2.313,85,0.962,87,0.451,89,1.127,91,1.04,93,2.347,99,1.227,106,1.419,127,1.917,138,0.974,148,2.755,152,0.468,153,0.8,154,0.8,155,0.434,156,0.523,157,0.523,158,0.451,159,0.523,160,0.451,161,0.523,162,0.451,163,0.523,164,0.451,165,0.523,166,0.451,167,0.523,168,0.451,169,0.523,170,0.523,171,0.451,172,0.523,173,0.451,174,0.523,175,0.451,176,0.523,177,0.451,178,0.523,179,0.434,180,0.523,181,0.451,182,0.523,183,0.451,184,0.523,185,0.451,186,0.451,187,0.523,188,0.451,189,0.523,190,1.145,191,0.523,192,0.938,193,0.523,194,0.451,195,0.523,196,0.523,197,0.451,198,0.523,199,0.451,200,0.523,201,0.451,202,0.743,203,0.903,204,0.523,205,0.451,206,0.523,207,0.451,208,0.523,209,0.451,210,0.523,211,0.451,212,0.523,213,0.451,214,0.523,215,0.451,216,0.523,217,0.938,218,0.523,219,0.451,220,0.523,221,0.523,222,0.451,223,0.504,224,0.523,225,0.451,226,0.523,227,0.451,228,0.468,229,0.523,230,0.451,231,0.523,232,0.451,233,0.523,234,0.451,235,0.468,236,0.523,237,0.468,238,0.504,239,0.523,240,0.004,241,0.007,242,0.004,255,2.896,287,1.487,320,5.303,386,3.024,387,3.873,436,1.175,437,4.218,438,1.487,439,1.668,486,1.064,491,1.751,527,1.572,529,1.487,573,0.671,711,2.243,732,1.082,742,1.487,783,1.572,785,2.162,787,1.668,791,1.227,802,1.487,872,2.313,875,1.572,962,2.086,992,4.301,995,4.819,1027,2.086,1066,3.193,1088,3.193,1105,1.668,1190,2.933,1364,2.086,1456,4.301,1459,2.313,1494,2.276,1497,4.871,1515,2.086,1517,2.313,1525,4.346,1534,1.917,1535,3.879,1542,2.313,1638,3.951,1875,4.819,2304,3.193,2315,2.313,2316,4.068,2317,4.942,2318,6.926,2319,4.942,2320,4.068,2321,4.068,2322,4.068,2323,4.068,2324,2.658,2325,2.658,2326,2.658,2327,2.658,2328,2.658,2329,4.068,2330,2.658,2331,2.658,2332,2.658,2333,2.658,2334,2.658,2335,4.068,2336,2.658,2337,2.658,2338,2.658,2339,2.658,2340,2.313,2341,2.658,2342,2.658,2343,2.658,2344,2.658,2345,2.658,2346,5.537,2347,2.658,2348,2.658,2349,4.068,2350,4.068,2351,4.068,2352,4.068,2353,2.658,2354,2.658,2355,2.313,2356,2.658,2357,2.658,2358,2.658,2359,2.658,2360,2.658,2361,2.658,2362,4.942,2363,5.537,2364,2.658,2365,2.658,2366,4.301,2367,2.658,2368,2.658,2369,2.658,2370,2.658,2371,2.313,2372,2.658,2373,5.537,2374,2.658,2375,2.658,2376,2.658,2377,2.658,2378,2.658,2379,4.068,2380,3.541,2381,4.068,2382,5.537,2383,2.658,2384,2.658,2385,2.658,2386,2.658,2387,2.658,2388,2.658]],["title/injectables/PatientService.html",[391,2.221,486,1.038]],["body/injectables/PatientService.html",[3,0.103,4,0.103,8,0.071,14,0.208,15,0.42,18,0.805,29,0.909,32,0.303,34,0.874,35,0.014,36,0.447,37,0.275,38,0.909,39,2.025,47,0.805,49,0.813,57,0.783,58,0.725,61,0.594,64,0.427,66,0.12,67,0.133,77,0.542,138,0.754,240,0.008,241,0.01,242,0.008,357,2.674,388,3.134,391,3.372,465,2.454,474,4.209,486,1.575,487,2.042,491,1.796,496,3.095,497,4.203,499,3.563,514,3.095,531,2.23,573,1.521,628,2.23,630,3.095,644,3.966,677,2.23,711,2.558,732,1.88,803,3.095,850,4.209,853,3.095,857,3.095,859,2.899,860,3.33,862,2.899,1134,3.33,1359,3.563,2304,3.625,2371,4.02,2380,4.02,2389,4.02,2390,5.837,2391,7.373,2392,7.108,2393,6.706,2394,6.026,2395,4.619,2396,6.026,2397,4.619,2398,4.619,2399,6.026,2400,4.619,2401,4.619,2402,4.619,2403,4.619,2404,4.619,2405,4.619,2406,4.619,2407,4.619,2408,4.619]],["title/components/ScratchPadUpdate.html",[0,0.047,219,0.673]],["body/components/ScratchPadUpdate.html",[0,0.074,1,0.69,2,0.975,3,0.091,4,0.091,5,0.8,6,0.772,7,0.8,8,0.062,10,0.664,11,1.538,12,1.089,14,0.183,15,0.387,18,0.74,24,1.731,32,0.3,34,0.59,35,0.014,36,0.501,37,0.29,38,0.614,47,0.74,49,0.975,61,0.32,62,1.555,64,0.376,66,0.106,67,0.117,69,1.368,77,0.904,87,0.69,138,1.103,142,3.712,144,3.995,152,0.717,153,1.089,154,1.089,155,0.664,156,0.8,157,0.8,158,0.69,159,0.8,160,0.69,161,0.8,162,0.69,163,0.8,164,0.69,165,0.8,166,0.69,167,0.8,168,0.69,169,0.8,170,0.8,171,0.69,172,0.8,173,0.69,174,0.8,175,0.69,176,0.8,177,0.69,178,0.8,179,0.664,180,0.8,181,0.69,182,0.8,183,0.69,184,0.8,185,0.69,186,0.69,187,0.8,188,0.69,189,0.8,190,0.69,191,0.8,192,0.69,193,0.8,194,0.69,195,0.8,196,0.8,197,0.69,198,0.8,199,0.69,200,0.8,201,0.69,202,1.012,203,1.012,204,0.8,205,0.69,206,0.8,207,0.69,208,0.8,209,0.69,210,0.8,211,0.69,212,0.8,213,0.69,214,0.8,215,0.69,216,0.8,217,0.69,218,0.8,219,1.146,220,1.238,221,0.8,222,0.69,223,0.772,224,0.8,225,0.69,226,0.8,227,0.69,228,0.717,229,0.8,230,0.69,231,0.8,232,0.69,233,0.8,234,0.69,235,0.717,236,0.8,237,0.717,238,0.772,239,0.8,240,0.007,241,0.009,242,0.007,357,1.532,573,1.028,578,4.219,657,3.995,681,3.591,683,3.997,931,3.782,932,4.219,940,3.712,2004,2.936,2409,6.494,2410,3.544,2411,5.54,2412,5.54,2413,5.54,2414,4.072,2415,4.072,2416,5.54,2417,4.072,2418,5.54,2419,4.072,2420,4.072,2421,4.072,2422,4.072,2423,5.54,2424,4.072,2425,5.54]],["title/components/SelectListSingle.html",[0,0.047,222,0.673]],["body/components/SelectListSingle.html",[0,0.077,1,0.731,2,1.014,3,0.097,4,0.097,5,0.848,6,0.818,7,0.848,8,0.066,10,0.704,11,1.543,12,1.133,14,0.194,15,0.402,18,0.77,24,1.8,32,0.266,35,0.014,36,0.481,37,0.237,47,0.577,61,0.339,62,1.617,64,0.399,66,0.112,67,0.124,69,1.45,77,0.676,85,2.086,87,1.321,138,1.129,152,0.76,153,1.133,154,1.133,155,0.704,156,0.848,157,0.848,158,0.731,159,0.848,160,0.731,161,0.848,162,0.731,163,0.848,164,0.731,165,0.848,166,0.731,167,0.848,168,0.731,169,0.848,170,0.848,171,0.731,172,0.848,173,0.731,174,0.848,175,0.731,176,0.848,177,0.731,178,0.848,179,0.704,180,0.848,181,0.731,182,0.848,183,0.731,184,0.848,185,0.731,186,0.731,187,0.848,188,0.731,189,0.848,190,0.731,191,0.848,192,0.731,193,0.848,194,0.731,195,0.848,196,0.848,197,0.731,198,0.848,199,0.731,200,0.848,201,0.731,202,1.053,203,1.053,204,0.848,205,0.731,206,0.848,207,0.731,208,0.848,209,0.731,210,0.848,211,0.731,212,0.848,213,0.731,214,0.848,215,0.731,216,0.848,217,0.731,218,0.848,219,0.731,220,0.848,221,0.848,222,1.173,223,1.367,224,0.848,225,0.731,226,0.848,227,0.731,228,0.76,229,0.848,230,0.731,231,0.848,232,0.731,233,0.848,234,0.731,235,0.76,236,0.848,237,0.76,238,0.818,239,0.848,240,0.007,241,0.01,242,0.007,357,1.624,573,1.454,931,3.873,932,4.346,940,3.861,941,5.014,2004,3.112,2426,6.023,2427,3.756,2428,5.762,2429,5.762,2430,6.486,2431,4.316,2432,4.316,2433,4.316,2434,5.762]],["title/classes/Server.html",[67,0.114,1638,2.492]],["body/classes/Server.html",[3,0.13,4,0.13,8,0.089,14,0.261,15,0.485,29,0.875,32,0.305,34,0.84,35,0.014,36,0.594,37,0.305,38,0.875,66,0.151,67,0.167,77,0.969,240,0.01,241,0.011,242,0.01,355,2.099,677,3.865,1359,4.189,1638,4.36,1970,5.044,2435,5.044,2436,5.796,2437,6.946,2438,5.796]],["title/injectables/SmartService.html",[393,2.492,486,1.038]],["body/injectables/SmartService.html",[3,0.073,4,0.073,8,0.05,10,0.53,14,0.146,15,0.33,18,0.631,29,0.713,32,0.318,34,0.685,35,0.014,36,0.35,37,0.309,38,0.713,47,0.817,49,0.572,57,0.944,58,0.874,61,0.533,64,0.3,66,0.085,67,0.094,77,0.931,85,1.177,101,2.55,108,2.343,138,1.106,186,0.551,240,0.01,241,0.008,242,0.005,307,2.55,337,2.267,369,2.04,388,2.848,391,3.916,393,2.967,436,1.437,437,4.689,438,1.818,439,2.04,465,1.726,466,2.55,467,2.55,468,2.828,472,3.167,486,1.236,487,1.437,491,1.49,496,2.177,497,3.617,499,2.795,515,1.092,529,1.818,573,1.544,640,3.617,677,1.569,711,1.531,728,2.177,822,2.177,859,2.04,862,2.04,1131,2.04,1260,2.828,1574,2.55,1591,4.113,1594,4.848,1702,2.55,2175,3.709,2390,6.362,2439,2.828,2440,6.116,2441,5.57,2442,5.57,2443,5.57,2444,5.901,2445,5.57,2446,6.116,2447,5.57,2448,6.116,2449,4.726,2450,6.116,2451,6.116,2452,3.249,2453,3.249,2454,4.726,2455,3.249,2456,4.726,2457,3.249,2458,3.249,2459,3.249,2460,3.249,2461,4.726,2462,4.726,2463,4.726,2464,4.726,2465,4.726,2466,3.249,2467,3.249,2468,3.249,2469,4.726,2470,3.249,2471,4.726,2472,4.726,2473,3.249,2474,3.249,2475,3.249,2476,6.116,2477,3.249,2478,4.726,2479,4.726,2480,5.57,2481,4.726,2482,4.726,2483,3.249,2484,3.249,2485,3.249,2486,3.249,2487,3.249,2488,3.249,2489,3.249,2490,3.249,2491,3.249,2492,5.57,2493,5.57,2494,3.249,2495,4.726,2496,3.249,2497,4.726,2498,4.726,2499,4.726,2500,3.249,2501,3.249,2502,3.249,2503,3.249,2504,3.249,2505,3.249,2506,3.249,2507,3.249,2508,3.249,2509,3.249,2510,3.249,2511,3.249,2512,3.249,2513,4.726,2514,3.249,2515,3.249,2516,3.249,2517,3.249,2518,3.249,2519,3.249,2520,3.249,2521,3.249,2522,3.249,2523,3.249,2524,3.249,2525,2.828,2526,3.249,2527,5.57,2528,3.249,2529,3.249,2530,3.249,2531,3.249,2532,3.249,2533,3.249,2534,3.249,2535,3.249,2536,3.249,2537,2.828,2538,3.249,2539,3.249,2540,3.249,2541,3.249,2542,4.726,2543,3.249,2544,3.249,2545,3.249,2546,3.249]],["title/classes/Timeline.html",[67,0.114,228,0.699]],["body/classes/Timeline.html",[3,0.126,4,0.126,8,0.086,14,0.253,15,0.476,32,0.33,35,0.014,37,0.33,66,0.147,67,0.162,76,5.298,77,0.933,228,1.202,240,0.009,241,0.011,242,0.009,337,2.99,348,4.543,355,2.04,357,2.764,507,5.767,683,4.345,2036,6.394,2037,6.394,2547,4.904,2548,5.634,2549,5.634,2550,5.634,2551,5.634,2552,5.634,2553,5.634,2554,5.634]],["title/components/TimelineComponent.html",[0,0.047,225,0.673]],["body/components/TimelineComponent.html",[0,0.073,1,0.672,2,0.957,3,0.089,4,0.089,5,0.78,6,0.752,7,0.78,8,0.061,10,0.647,11,1.536,12,1.07,14,0.178,15,0.38,18,0.727,20,3.551,24,1.699,29,0.598,32,0.288,34,0.575,35,0.014,36,0.496,37,0.255,38,0.598,47,0.727,49,1.176,57,0.672,58,0.622,61,0.525,62,1.527,64,0.367,66,0.103,67,0.114,80,1.325,87,0.672,107,1.681,138,1.09,152,0.698,153,1.07,154,1.07,155,0.647,156,0.78,157,0.78,158,0.672,159,0.78,160,0.672,161,0.78,162,0.672,163,0.78,164,0.672,165,0.78,166,0.672,167,0.78,168,0.672,169,0.78,170,0.78,171,0.672,172,0.78,173,0.672,174,0.78,175,0.672,176,0.78,177,0.672,178,0.78,179,0.647,180,0.78,181,0.672,182,0.78,183,0.672,184,0.78,185,0.672,186,0.672,187,0.78,188,0.672,189,0.78,190,0.672,191,0.78,192,0.672,193,0.78,194,0.672,195,0.78,196,0.78,197,0.672,198,0.78,199,0.672,200,0.78,201,0.672,202,0.994,203,0.994,204,0.78,205,0.672,206,0.78,207,0.672,208,0.78,209,0.672,210,0.78,211,0.672,212,0.78,213,0.672,214,0.78,215,0.672,216,0.78,217,0.672,218,0.78,219,0.672,220,0.78,221,0.78,222,0.672,223,0.752,224,0.78,225,1.133,226,0.78,227,0.672,228,0.698,229,0.78,230,0.672,231,0.78,232,0.672,233,0.78,234,0.672,235,0.698,236,0.78,237,0.698,238,0.752,239,0.78,240,0.007,241,0.009,242,0.007,387,4.278,491,1.513,711,2.344,732,1.614,742,2.219,1494,2.219,1525,5.246,1534,2.859,1535,5.246,1988,3.451,2340,3.451,2355,3.451,2555,3.451,2556,5.44,2557,5.44,2558,3.965,2559,5.44,2560,3.965,2561,3.965,2562,3.965,2563,3.965,2564,3.965,2565,3.965,2566,3.965,2567,3.965,2568,5.44,2569,3.965,2570,3.965,2571,3.965,2572,3.965,2573,3.965,2574,3.965]],["title/components/TimelinePopupComponent.html",[0,0.047,227,0.673]],["body/components/TimelinePopupComponent.html",[0,0.072,1,0.652,2,0.938,3,0.086,4,0.086,5,0.757,6,0.73,7,0.757,8,0.059,10,0.628,11,1.534,12,1.048,14,0.173,15,0.372,18,0.712,32,0.271,34,0.773,35,0.014,36,0.514,37,0.271,38,0.804,47,0.712,49,1.162,57,0.652,58,0.604,59,2.005,61,0.519,64,0.356,66,0.1,67,0.111,80,0.938,87,0.652,106,2.417,138,1.077,152,0.677,153,1.048,154,1.048,155,0.628,156,0.757,157,0.757,158,0.652,159,0.757,160,0.652,161,0.757,162,0.652,163,0.757,164,0.652,165,0.757,166,0.652,167,0.757,168,0.652,169,0.757,170,0.757,171,0.652,172,0.757,173,0.652,174,0.757,175,0.652,176,0.757,177,0.652,178,0.757,179,0.628,180,0.757,181,0.652,182,0.757,183,0.652,184,0.757,185,0.652,186,0.652,187,0.757,188,0.652,189,0.757,190,0.652,191,0.757,192,1.119,193,0.757,194,0.652,195,0.757,196,0.757,197,0.652,198,0.757,199,0.652,200,0.757,201,0.652,202,0.974,203,0.974,204,0.757,205,0.652,206,0.757,207,0.652,208,0.757,209,0.652,210,0.757,211,0.652,212,0.757,213,0.652,214,0.757,215,0.652,216,0.757,217,0.652,218,0.757,219,0.652,220,0.757,221,0.757,222,0.652,223,0.73,224,0.757,225,0.652,226,0.757,227,1.119,228,1.076,229,0.757,230,0.652,231,0.757,232,0.652,233,0.757,234,0.652,235,0.677,236,0.757,237,0.677,238,0.73,239,0.757,240,0.006,241,0.009,242,0.006,337,2.686,353,5.18,515,1.791,693,2.276,783,2.276,785,2.832,787,2.416,817,3.346,1190,2.775,1225,4.183,1494,4.113,1497,2.775,1515,3.021,1534,2.775,1671,6.239,1848,5.321,2096,4.183,2575,3.35,2576,5.33,2577,7.169,2578,5.33,2579,3.849,2580,5.33,2581,3.849,2582,5.33,2583,3.849,2584,5.33,2585,3.849,2586,3.35,2587,3.849,2588,3.849,2589,3.849,2590,3.849,2591,3.849,2592,3.849,2593,3.849,2594,5.33,2595,5.33,2596,5.33,2597,5.33]],["title/injectables/ToolBarService.html",[394,2.347,486,1.038]],["body/injectables/ToolBarService.html",[3,0.134,4,0.134,8,0.092,14,0.269,15,0.494,29,1.138,32,0.31,35,0.014,37,0.291,61,0.471,64,0.554,66,0.156,67,0.172,77,0.915,240,0.01,241,0.012,242,0.01,394,4.189,486,1.852,487,2.649,2598,5.214,2599,7.543,2600,7.543,2601,7.084,2602,5.992]],["title/components/ToolbarComponent.html",[0,0.047,230,0.673]],["body/components/ToolbarComponent.html",[0,0.066,1,0.551,2,0.832,3,0.073,4,0.073,5,0.639,6,0.616,7,0.639,8,0.05,10,0.53,11,1.518,12,0.929,14,0.146,15,0.33,18,0.631,24,1.476,29,0.713,31,3.094,32,0.295,34,0.685,35,0.014,36,0.482,37,0.251,38,0.713,47,0.868,49,1.144,56,1.588,57,0.801,58,0.51,59,1.778,61,0.575,62,1.326,64,0.3,65,1.921,66,0.085,67,0.094,87,0.551,91,1.271,93,1.378,135,2.55,138,0.998,152,0.572,153,0.929,154,0.929,155,0.53,156,0.639,157,0.639,158,0.551,159,0.639,160,0.551,161,0.639,162,0.551,163,0.639,164,0.551,165,0.639,166,0.551,167,0.639,168,0.551,169,0.639,170,0.639,171,0.551,172,0.639,173,0.551,174,0.639,175,0.551,176,0.639,177,0.551,178,0.639,179,0.53,180,0.639,181,0.551,182,0.639,183,0.551,184,0.639,185,0.551,186,0.551,187,0.639,188,0.551,189,0.639,190,0.551,191,0.639,192,0.551,193,0.639,194,0.551,195,0.639,196,0.639,197,0.551,198,0.639,199,0.551,200,0.639,201,0.551,202,0.863,203,0.863,204,0.639,205,0.551,206,0.639,207,0.551,208,0.639,209,0.551,210,0.639,211,0.551,212,0.639,213,0.551,214,0.639,215,0.551,216,0.639,217,0.551,218,0.639,219,0.551,220,0.929,221,0.639,222,0.551,223,0.616,224,0.639,225,0.551,226,0.639,227,0.551,228,0.572,229,0.639,230,1.037,231,0.639,232,0.551,233,0.639,234,0.551,235,0.572,236,0.639,237,0.572,238,0.616,239,0.639,240,0.005,241,0.008,242,0.005,255,3.094,287,1.818,384,3.794,386,3.231,389,2.953,392,2.737,394,4.138,396,2.04,436,1.437,491,1.747,495,5.323,509,4.113,511,2.828,572,2.828,593,4.689,642,1.569,643,1.569,711,2.197,730,1.5,732,1.323,794,2.04,821,2.828,962,2.55,1105,2.04,1131,2.04,1304,2.55,1356,2.343,1357,2.55,1367,2.55,1373,2.04,1395,2.55,1421,4.113,1554,4.848,1562,2.828,1608,4.113,1643,2.828,1680,3.733,1701,2.04,2258,2.828,2603,2.828,2604,4.726,2605,4.726,2606,5.57,2607,6.116,2608,6.116,2609,6.116,2610,4.726,2611,4.726,2612,3.249,2613,3.249,2614,3.249,2615,3.249,2616,3.249,2617,4.726,2618,3.249,2619,3.249,2620,3.249,2621,3.249,2622,4.726,2623,3.249,2624,3.249,2625,3.249,2626,4.726,2627,3.249,2628,3.249,2629,3.249,2630,3.249,2631,3.249,2632,3.249,2633,3.249,2634,3.249,2635,3.249,2636,3.249,2637,3.249,2638,3.249,2639,3.249,2640,3.249,2641,3.249,2642,3.249,2643,3.249]],["title/components/TripleListComponent.html",[0,0.047,232,0.673]],["body/components/TripleListComponent.html",[0,0.074,1,0.685,2,0.97,3,0.09,4,0.09,5,0.794,6,0.766,7,0.794,8,0.062,10,0.659,11,1.538,12,1.083,14,0.182,15,0.384,18,0.736,24,1.721,29,0.61,31,3.292,32,0.29,34,0.799,35,0.014,36,0.523,37,0.277,38,0.831,39,1.851,47,0.54,49,0.711,57,0.685,58,0.634,61,0.529,62,1.546,63,2.787,64,0.373,65,2.388,66,0.105,67,0.116,87,0.685,91,2.155,106,2.187,107,1.712,138,1.099,152,0.711,153,1.083,154,1.083,155,0.659,156,0.794,157,0.794,158,0.685,159,0.794,160,0.685,161,0.794,162,0.685,163,0.794,164,0.685,165,0.794,166,0.685,167,0.794,168,0.685,169,0.794,170,0.794,171,0.685,172,0.794,173,0.685,174,0.794,175,0.685,176,0.794,177,0.685,178,0.794,179,0.659,180,0.794,181,0.685,182,0.794,183,0.685,184,0.794,185,0.685,186,0.685,187,0.794,188,0.685,189,0.794,190,0.685,191,0.794,192,0.685,193,0.794,194,0.685,195,0.794,196,0.794,197,0.685,198,0.794,199,0.685,200,0.794,201,0.685,202,1.007,203,1.007,204,0.794,205,0.685,206,0.794,207,0.685,208,0.794,209,0.685,210,0.794,211,0.685,212,0.794,213,0.685,214,0.794,215,0.685,216,0.794,217,0.685,218,0.794,219,0.685,220,0.794,221,0.794,222,0.685,223,0.766,224,0.794,225,0.685,226,0.794,227,0.685,228,0.711,229,0.794,230,0.685,231,0.794,232,1.142,233,1.233,234,0.685,235,0.711,236,0.794,237,0.711,238,0.766,239,0.794,240,0.007,241,0.009,242,0.007,254,3.17,255,3.217,287,2.26,491,0.984,515,1.357,711,2.357,732,1.644,761,3.258,766,3.769,2644,3.515,2645,5.51,2646,6.271,2647,5.51,2648,6.271,2649,5.51,2650,4.039,2651,4.039,2652,5.51,2653,4.039,2654,4.039,2655,4.039,2656,4.039]],["title/classes/User.html",[67,0.114,1373,2.492]],["body/classes/User.html",[3,0.138,4,0.138,8,0.094,14,0.277,15,0.502,32,0.295,35,0.013,36,0.565,37,0.295,39,2.417,66,0.16,67,0.177,77,0.844,240,0.01,241,0.012,242,0.01,355,2.227,357,2.869,1373,4.515,2657,5.352,2658,6.15,2659,6.15]],["title/coverage.html",[2660,4.739]],["body/coverage.html",[0,0.098,1,0.555,8,0.05,9,2.849,31,1.447,35,0.014,37,0.134,67,0.227,82,2.361,87,0.555,91,3.31,148,1.511,155,0.775,158,0.555,160,0.555,162,0.555,164,0.555,166,0.555,168,0.555,171,0.555,173,0.555,175,0.555,177,0.555,179,0.534,181,0.555,183,0.555,185,0.555,186,0.555,188,0.555,190,0.555,192,0.805,194,0.555,197,0.555,199,0.555,201,0.555,203,0.868,205,0.555,207,0.555,209,0.555,211,0.555,213,0.555,215,0.555,217,0.805,219,0.555,222,0.555,225,0.555,227,0.555,228,0.576,230,0.555,232,0.555,235,0.576,237,0.576,240,0.005,241,0.008,242,0.005,243,2.849,255,1.447,315,2.361,332,2.849,354,2.361,356,2.849,362,2.849,384,1.832,385,1.936,386,1.511,387,1.936,388,1.333,389,1.581,390,2.055,391,1.832,392,1.281,393,2.055,394,1.936,397,3.73,427,2.57,476,2.57,477,2.57,479,1.936,482,2.194,483,2.055,485,2.849,486,2.041,488,2.849,505,1.74,515,1.1,587,2.849,588,2.849,608,1.832,609,2.849,670,1.832,671,3.73,673,2.194,678,2.849,704,2.849,711,1.061,750,2.849,844,2.849,854,2.055,895,2.194,896,2.849,925,2.849,926,2.849,942,2.57,943,2.849,946,2.849,975,2.849,990,2.849,1054,2.849,1173,2.849,1199,3.73,1270,2.849,1344,2.849,1369,2.361,1373,2.055,1395,2.57,1444,2.849,1451,2.849,1454,2.849,1494,1.832,1495,2.849,1523,2.849,1548,2.849,1572,2.849,1599,2.849,1604,2.849,1605,2.849,1638,2.055,1658,2.849,1665,2.849,1750,2.849,1830,2.849,1847,4.136,1895,2.361,1896,2.57,1898,2.849,1918,2.849,1922,2.849,1969,2.849,1978,2.849,1994,2.849,1996,3.73,1997,2.849,2005,2.849,2010,2.849,2033,2.849,2069,2.849,2097,2.849,2111,2.849,2229,2.849,2250,2.849,2299,2.849,2303,2.849,2315,4.136,2389,2.849,2409,2.849,2410,2.849,2426,2.849,2427,2.849,2435,2.849,2439,2.849,2547,2.849,2555,2.849,2575,2.849,2598,2.849,2603,2.849,2644,2.849,2657,2.849,2660,2.849,2661,3.274,2662,2.849,2663,5.594,2664,7.014,2665,4.752,2666,5.594,2667,7.324,2668,5.594,2669,6.799,2670,3.274,2671,4.752,2672,3.274,2673,3.274,2674,4.752,2675,3.274,2676,3.274,2677,3.274,2678,7.014,2679,6.138,2680,6.518,2681,5.594,2682,3.274,2683,5.594,2684,5.594,2685,6.799,2686,3.274,2687,3.274,2688,3.274,2689,3.274,2690,3.274,2691,3.274]],["title/dependencies.html",[373,3.204,2692,2.874]],["body/dependencies.html",[10,0.878,35,0.014,64,0.498,240,0.009,241,0.011,242,0.009,373,3.608,375,3.379,403,4.685,436,2.38,438,4.03,439,3.379,454,3.927,456,4.685,457,3.608,460,5.212,461,4.788,463,4.225,466,4.225,467,4.225,628,3.206,636,4.685,1137,4.685,1224,4.225,1351,4.685,1638,3.379,2586,4.685,2693,5.384,2694,8.051,2695,5.384,2696,5.384,2697,5.384,2698,5.384,2699,5.384,2700,5.384,2701,5.384,2702,5.384,2703,5.384,2704,5.384,2705,5.384,2706,5.384,2707,4.685,2708,5.384,2709,5.384,2710,5.384,2711,6.641,2712,5.384,2713,5.384,2714,5.384,2715,5.384,2716,5.384,2717,6.641,2718,5.384,2719,5.384,2720,5.384,2721,5.384,2722,5.384,2723,5.384,2724,5.384,2725,5.384,2726,5.384,2727,5.384]],["title/index.html",[14,0.149,2728,3.302,2729,3.302]],["body/index.html",[0,0.068,2,0.761,6,0.819,8,0.066,35,0.011,37,0.178,104,3.392,126,2.713,138,0.941,147,2.896,223,1.093,240,0.01,241,0.01,242,0.007,303,3.761,304,3.761,331,3.761,337,2.642,363,3.761,375,2.713,482,2.896,502,2.896,554,3.761,555,3.41,633,5.094,635,2.896,641,3.761,694,2.556,700,3.761,711,2.243,753,2.418,790,2.896,792,2.556,798,2.896,800,2.896,817,2.713,875,2.556,882,4.526,974,3.761,1032,3.392,1092,2.896,1131,3.62,1134,4.68,1135,3.392,1142,3.761,1151,3.761,1156,3.761,1223,4.64,1224,3.392,1225,3.392,1240,3.761,1305,3.392,1308,2.896,1349,4.158,1356,3.116,1494,2.418,1636,4.158,1724,3.761,1775,6.027,1942,3.392,2087,3.761,2175,3.392,2366,3.761,2444,5.019,2525,3.761,2537,3.761,2662,3.761,2692,3.761,2707,6.279,2730,6.491,2731,4.322,2732,7.215,2733,4.322,2734,4.322,2735,4.322,2736,4.322,2737,4.322,2738,6.925,2739,4.322,2740,4.322,2741,4.322,2742,4.322,2743,6.925,2744,4.322,2745,6.925,2746,5.767,2747,4.322,2748,5.767,2749,5.767,2750,4.322,2751,6.491,2752,6.925,2753,4.322,2754,6.925,2755,4.322,2756,4.322,2757,4.322,2758,4.322,2759,4.322,2760,5.767,2761,4.322,2762,6.491,2763,4.322,2764,4.322,2765,4.322,2766,5.767,2767,4.322,2768,4.322,2769,4.322,2770,5.767,2771,4.322,2772,5.767,2773,4.322,2774,4.322,2775,4.322,2776,4.322,2777,4.322,2778,5.767,2779,5.767,2780,4.322,2781,4.322,2782,4.322,2783,4.322,2784,4.322,2785,4.322,2786,4.322,2787,4.322,2788,4.322,2789,5.767,2790,4.322,2791,4.322,2792,4.322,2793,4.322,2794,4.322,2795,4.322,2796,5.767,2797,4.322,2798,4.322,2799,4.322,2800,4.322,2801,4.322,2802,4.322,2803,4.322,2804,4.322,2805,4.322,2806,4.322,2807,4.322,2808,4.322,2809,4.322,2810,5.767,2811,4.322,2812,4.322,2813,4.322,2814,4.322,2815,5.767,2816,5.767,2817,4.322,2818,3.392,2819,4.322,2820,4.322,2821,4.322,2822,4.322,2823,4.322,2824,4.322,2825,4.322,2826,4.322,2827,4.322,2828,4.322,2829,4.322,2830,4.322,2831,4.322,2832,4.322,2833,4.322,2834,4.322]],["title/modules.html",[372,3.649]],["body/modules.html",[35,0.012,240,0.011,241,0.012,242,0.011,371,4.632,372,4.305,383,4.305,461,5.32,2835,7.378,2836,7.378,2837,7.378]],["title/overview.html",[2818,4.273]],["body/overview.html",[1,1.009,2,0.645,31,2.632,35,0.014,93,2.183,96,2.881,152,0.645,158,1.009,160,1.009,162,1.229,164,1.009,166,1.009,168,1.229,171,1.009,173,1.009,175,1.009,177,1.009,179,0.971,181,1.009,183,1.009,185,1.009,188,1.009,190,1.009,192,1.009,194,1.009,197,1.009,199,1.009,201,1.229,205,1.229,207,1.009,209,1.009,211,1.009,213,1.009,215,1.009,217,1.009,219,1.229,222,1.229,225,1.009,227,1.009,230,1.009,232,1.009,234,0.621,240,0.006,241,0.009,242,0.006,255,2.632,355,1.326,369,2.299,370,2.299,371,6.155,372,2.454,373,2.454,374,2.875,375,2.299,376,2.875,377,2.875,378,3.187,379,3.187,380,3.187,381,3.187,382,3.187,383,5.396,384,3.332,385,3.521,386,2.749,387,3.521,388,2.423,389,2.875,390,3.737,391,3.332,392,2.329,393,3.737,394,3.521,395,4.041,396,2.299,482,2.454,487,1.619,1645,3.187,1646,3.187,1647,3.187,1895,2.641,2818,2.875,2838,3.662,2839,3.662,2840,3.662]],["title/miscellaneous/variables.html",[1636,3.448,2841,2.874]],["body/miscellaneous/variables.html",[14,0.278,35,0.014,37,0.314,57,1.224,58,1.133,240,0.01,241,0.012,242,0.01,397,4.856,399,5.385,476,5.666,477,5.666,478,5.385,1199,4.856,1636,4.462,2841,5.385,2842,6.188,2843,7.219]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":91,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["0.1.10",{"_index":2716,"title":{},"body":{"dependencies.html":{}}}],["0.19.47",{"_index":2720,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1800,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["0.3.5",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":1245,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["0.8.9",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["0.80",{"_index":2198,"title":{},"body":{"injectables/ObservationService.html":{}}}],["0.9.1",{"_index":2727,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2687,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2668,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2685,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":2690,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1405,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["1",{"_index":93,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/ConditionsChartComponent.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"components/NormalBox1.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["1'},{'name",{"_index":204,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["1.2.0",{"_index":2721,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":2723,"title":{},"body":{"dependencies.html":{}}}],["1.component",{"_index":1652,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["1.component.ts",{"_index":1997,"title":{},"body":{"components/NormalBox1.html":{},"coverage.html":{}}}],["1.component.ts:10",{"_index":2002,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:12",{"_index":2001,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:9",{"_index":2000,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.html",{"_index":1998,"title":{},"body":{"components/NormalBox1.html":{}}}],["1/16",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2688,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":519,"title":{},"body":{"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{}}}],["10.19.0",{"_index":2769,"title":{},"body":{"index.html":{}}}],["10/15",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1395,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1560,"title":{},"body":{"components/Favorites.html":{}}}],["102588006",{"_index":1960,"title":{},"body":{"injectables/MapService.html":{}}}],["10839",{"_index":1934,"title":{},"body":{"injectables/MapService.html":{}}}],["10px",{"_index":302,"title":{},"body":{"components/AccountComponent.html":{}}}],["12",{"_index":317,"title":{},"body":{"components/AccountComponent.html":{}}}],["120px",{"_index":607,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["13.0.2",{"_index":2700,"title":{},"body":{"dependencies.html":{}}}],["13969",{"_index":1945,"title":{},"body":{"injectables/MapService.html":{}}}],["15",{"_index":2839,"title":{},"body":{"overview.html":{}}}],["150",{"_index":2641,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["17",{"_index":2840,"title":{},"body":{"overview.html":{}}}],["17861",{"_index":1943,"title":{},"body":{"injectables/MapService.html":{}}}],["18",{"_index":318,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{}}}],["180",{"_index":620,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["181.us",{"_index":521,"title":{},"body":{"injectables/AssociationService.html":{}}}],["185903001",{"_index":1935,"title":{},"body":{"injectables/MapService.html":{}}}],["2",{"_index":96,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"overview.html":{}}}],["2'},{'name",{"_index":206,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["2.0",{"_index":2834,"title":{},"body":{"index.html":{}}}],["2.24.0",{"_index":2712,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2711,"title":{},"body":{"dependencies.html":{}}}],["2.component",{"_index":1653,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["2.component.ts",{"_index":2005,"title":{},"body":{"components/NormalBox2.html":{},"coverage.html":{}}}],["2.component.ts:10",{"_index":2009,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:12",{"_index":2008,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:9",{"_index":2007,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.compute.amazonaws.com/get_items",{"_index":523,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2.html",{"_index":2006,"title":{},"body":{"components/NormalBox2.html":{}}}],["200",{"_index":1694,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["200px",{"_index":605,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/Favorites.html":{}}}],["2075",{"_index":1929,"title":{},"body":{"injectables/MapService.html":{}}}],["2157",{"_index":1953,"title":{},"body":{"injectables/MapService.html":{}}}],["2160",{"_index":1957,"title":{},"body":{"injectables/MapService.html":{}}}],["220px",{"_index":666,"title":{},"body":{"classes/BaseColumn.html":{}}}],["2345",{"_index":1940,"title":{},"body":{"injectables/MapService.html":{}}}],["249288007",{"_index":1930,"title":{},"body":{"injectables/MapService.html":{}}}],["25",{"_index":1746,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["2571",{"_index":2161,"title":{},"body":{"injectables/ObservationService.html":{}}}],["26450",{"_index":1952,"title":{},"body":{"injectables/MapService.html":{}}}],["26464",{"_index":1944,"title":{},"body":{"injectables/MapService.html":{}}}],["26478",{"_index":1941,"title":{},"body":{"injectables/MapService.html":{}}}],["26511",{"_index":1932,"title":{},"body":{"injectables/MapService.html":{}}}],["26515",{"_index":1947,"title":{},"body":{"injectables/MapService.html":{}}}],["266998003",{"_index":1961,"title":{},"body":{"injectables/MapService.html":{}}}],["267432004",{"_index":1956,"title":{},"body":{"injectables/MapService.html":{}}}],["2710",{"_index":343,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["2823",{"_index":1951,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["28542",{"_index":1933,"title":{},"body":{"injectables/MapService.html":{}}}],["29",{"_index":520,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2951",{"_index":1948,"title":{},"body":{"injectables/MapService.html":{}}}],["29857009",{"_index":1963,"title":{},"body":{"injectables/MapService.html":{}}}],["2c304df8",{"_index":2461,"title":{},"body":{"injectables/SmartService.html":{}}}],["3",{"_index":1748,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3.2.1",{"_index":2709,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["3.4.5",{"_index":2725,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":2714,"title":{},"body":{"dependencies.html":{}}}],["30385",{"_index":1938,"title":{},"body":{"injectables/MapService.html":{}}}],["30428",{"_index":1959,"title":{},"body":{"injectables/MapService.html":{}}}],["3094",{"_index":1964,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3141",{"_index":340,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["32398004",{"_index":1949,"title":{},"body":{"injectables/MapService.html":{}}}],["32623",{"_index":1966,"title":{},"body":{"injectables/MapService.html":{}}}],["33",{"_index":2026,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["330c01a5ca8e",{"_index":2465,"title":{},"body":{"injectables/SmartService.html":{}}}],["34",{"_index":2029,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["35",{"_index":2838,"title":{},"body":{"overview.html":{}}}],["38341003",{"_index":1962,"title":{},"body":{"injectables/MapService.html":{}}}],["39156",{"_index":347,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["4",{"_index":82,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["4/4",{"_index":2686,"title":{},"body":{"coverage.html":{}}}],["44054006",{"_index":1927,"title":{},"body":{"injectables/MapService.html":{}}}],["442311008",{"_index":1965,"title":{},"body":{"injectables/MapService.html":{}}}],["4de9",{"_index":2463,"title":{},"body":{"injectables/SmartService.html":{}}}],["5",{"_index":132,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{}}}],["5.3.0",{"_index":2713,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":518,"title":{},"body":{"injectables/AssociationService.html":{}}}],["54150009",{"_index":1939,"title":{},"body":{"injectables/MapService.html":{}}}],["55284",{"_index":1926,"title":{},"body":{"injectables/MapService.html":{}}}],["6",{"_index":315,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["6.5.4",{"_index":2717,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1937,"title":{},"body":{"injectables/MapService.html":{}}}],["71",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["711d",{"_index":2462,"title":{},"body":{"injectables/SmartService.html":{}}}],["718",{"_index":1936,"title":{},"body":{"injectables/MapService.html":{}}}],["72166",{"_index":1931,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["777",{"_index":1967,"title":{},"body":{"injectables/MapService.html":{}}}],["785",{"_index":1955,"title":{},"body":{"injectables/MapService.html":{}}}],["786",{"_index":1958,"title":{},"body":{"injectables/MapService.html":{}}}],["789",{"_index":1950,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["8",{"_index":1942,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["8.2.14",{"_index":2694,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2696,"title":{},"body":{"dependencies.html":{}}}],["8.3.25",{"_index":2698,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":1693,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["80394007",{"_index":1946,"title":{},"body":{"injectables/MapService.html":{}}}],["8302",{"_index":338,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["8310",{"_index":345,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["8462",{"_index":1928,"title":{},"body":{"injectables/MapService.html":{}}}],["8480",{"_index":1925,"title":{},"body":{"injectables/MapService.html":{}}}],["89765005",{"_index":1954,"title":{},"body":{"injectables/MapService.html":{}}}],["9",{"_index":341,"title":{},"body":{"components/AddObservation.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["90708001",{"_index":1924,"title":{},"body":{"injectables/MapService.html":{}}}],["a['code",{"_index":557,"title":{},"body":{"injectables/AssociationService.html":{}}}],["abnormal",{"_index":324,"title":{},"body":{"components/AccountComponent.html":{}}}],["above",{"_index":104,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ConditionService.html":{},"index.html":{}}}],["access",{"_index":793,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["accessing",{"_index":2805,"title":{},"body":{"index.html":{}}}],["according",{"_index":103,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{}}}],["accordion",{"_index":72,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["accordionrecursion",{"_index":1,"title":{"components/AccordionRecursion.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordionrecursion'},{'name",{"_index":157,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["accordionrecursion.html",{"_index":13,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["account",{"_index":244,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["account'},{'name",{"_index":159,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["account.html",{"_index":245,"title":{},"body":{"components/AccountComponent.html":{}}}],["accountcomponent",{"_index":158,"title":{"components/AccountComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["achieved",{"_index":1031,"title":{},"body":{"injectables/ConditionService.html":{}}}],["actions",{"_index":1571,"title":{},"body":{"components/Favorites.html":{}}}],["active",{"_index":142,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"classes/Patient.html":{},"components/ScratchPadUpdate.html":{}}}],["active/inactive",{"_index":136,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["activities",{"_index":321,"title":{},"body":{"components/AccountComponent.html":{}}}],["activity",{"_index":680,"title":{},"body":{"classes/CarePlan.html":{}}}],["actual_component",{"_index":239,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["actually",{"_index":833,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["adams",{"_index":2783,"title":{},"body":{"index.html":{}}}],["add",{"_index":802,"title":{},"body":{"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["addcategoriesconditions",{"_index":19,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesconditions(arrdata",{"_index":44,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesobservations",{"_index":2117,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addcategoriesobservations(observations",{"_index":2127,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addgraphconfig",{"_index":1457,"title":{},"body":{"injectables/DoctorService.html":{}}}],["addgraphconfig(list",{"_index":1461,"title":{},"body":{"injectables/DoctorService.html":{}}}],["adding",{"_index":1182,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["addmedicationchart",{"_index":1752,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addmedicationchart(medication",{"_index":1758,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservation",{"_index":160,"title":{"components/AddObservation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addobservation'},{'name",{"_index":161,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["addobservation.html",{"_index":333,"title":{},"body":{"components/AddObservation.html":{}}}],["addobservationchart",{"_index":1753,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservationchart(chartname",{"_index":1760,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addoption",{"_index":1360,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["addoption(option",{"_index":1368,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["address",{"_index":2300,"title":{},"body":{"classes/Patient.html":{}}}],["addsetting",{"_index":251,"title":{},"body":{"components/AccountComponent.html":{}}}],["addsetting(checked",{"_index":257,"title":{},"body":{"components/AccountComponent.html":{}}}],["advancedsearch",{"_index":2317,"title":{},"body":{"components/PatientComponent.html":{}}}],["advantage",{"_index":2799,"title":{},"body":{"index.html":{}}}],["afbe",{"_index":2464,"title":{},"body":{"injectables/SmartService.html":{}}}],["again",{"_index":1882,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["albumin",{"_index":283,"title":{},"body":{"components/AccountComponent.html":{}}}],["allergies",{"_index":320,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["allergies.map(allergy",{"_index":2359,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergies/precautions",{"_index":145,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["allergy",{"_index":2318,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergy.code.text",{"_index":2360,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergyintolerance",{"_index":354,"title":{"classes/AllergyIntolerance.html":{}},"body":{"classes/AllergyIntolerance.html":{},"injectables/ConditionService.html":{},"coverage.html":{}}}],["allow",{"_index":1172,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["allows",{"_index":1480,"title":{},"body":{"injectables/DoctorService.html":{}}}],["already",{"_index":126,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["alt",{"_index":281,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["amdateformat:'mm/dd/yyyy",{"_index":2383,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdateformat:\\'mm/dd/yyyy",{"_index":2387,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:'years':false)}}yr",{"_index":2384,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:\\'years\\':false)}}yr",{"_index":2388,"title":{},"body":{"components/PatientComponent.html":{}}}],["amtimeago",{"_index":2096,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelinePopupComponent.html":{}}}],["amtimeago:true",{"_index":1342,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ana",{"_index":276,"title":{},"body":{"components/AccountComponent.html":{}}}],["angular",{"_index":2737,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2693,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2695,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":2697,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2586,"title":{},"body":{"components/TimelinePopupComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["angular/compiler",{"_index":2699,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":1137,"title":{},"body":{"components/ConditionsChartComponent.html":{},"dependencies.html":{}}}],["animate('800ms",{"_index":2624,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["animation",{"_index":1919,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["animation'},{'name",{"_index":196,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["animations",{"_index":2619,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["another",{"_index":2825,"title":{},"body":{"index.html":{}}}],["apache",{"_index":2833,"title":{},"body":{"index.html":{}}}],["api",{"_index":547,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{}}}],["app",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":163,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["app.html",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["app/components/accordionrecursion/accordionrecursion.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/account/account.component",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/addobservation/addobservation.component",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/app/app.component",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplan/careplan.component",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplandisplay/careplandisplay.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/columnstateswitcher/columnstateswitcher.component",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditions/conditions.component",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionschart/conditionschart.component",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionsdisplay/conditionsdisplay.component",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/contextmenu/contextmenu.component",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/doctornote/doctornote.component",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/favorites/favorites.component",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/form",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/historicaltrends/historicaltrends.component",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/home/home.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/hoverbox/hoverbox.component",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loadinganimation/loadinganimation.component",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/medications/medications.component",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/newcondition/newcondition.component",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/notenavigation/notenavigation.component",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursion/observationrecursion.component",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursionchart/observationrecursionchart.component",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observations/observations.component",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationsdisplay/observationsdisplay.component",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/patient/patient.component",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline/timeline.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline_popup/timeline_popup.component",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/toolbar/toolbar.component",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/triplelist/triplelist.component",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/form.module",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/association.service",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/careplan.service",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/condition.service",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/doctor.service",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/encounter.service",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/fhir.service",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/historicaltrends.service",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/map.service",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/observation.service",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/patient.service",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/scratchpad.service",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/smart.service",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/toolbar.service",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1241,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["appears",{"_index":1880,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["application",{"_index":633,"title":{},"body":{"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{},"index.html":{}}}],["application/json",{"_index":1596,"title":{},"body":{"injectables/FhirService.html":{}}}],["application/x",{"_index":2518,"title":{},"body":{"injectables/SmartService.html":{}}}],["appmodule",{"_index":371,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":2804,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingproviders",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approximate",{"_index":667,"title":{},"body":{"classes/BaseColumn.html":{}}}],["apps",{"_index":2780,"title":{},"body":{"index.html":{}}}],["april",{"_index":1330,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["arbitrary",{"_index":1246,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["arg.url",{"_index":2495,"title":{},"body":{"injectables/SmartService.html":{}}}],["arg.valueuri",{"_index":2497,"title":{},"body":{"injectables/SmartService.html":{}}}],["args",{"_index":1906,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["array",{"_index":80,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/Bundle.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["array.from(medicationmap.values",{"_index":894,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["array.from(this.chartsmap.values",{"_index":1811,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["arrayofkeyvalues",{"_index":334,"title":{},"body":{"components/AddObservation.html":{}}}],["arrdata",{"_index":46,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["arriving",{"_index":2479,"title":{},"body":{"injectables/SmartService.html":{}}}],["asc",{"_index":1109,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["assign",{"_index":2403,"title":{},"body":{"injectables/PatientService.html":{}}}],["assignvisible",{"_index":1458,"title":{},"body":{"injectables/DoctorService.html":{}}}],["assignvisible(list",{"_index":1463,"title":{},"body":{"injectables/DoctorService.html":{}}}],["associable",{"_index":483,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{},"coverage.html":{}}}],["associable.model",{"_index":691,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{}}}],["associated",{"_index":535,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Chart.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["associatedconditions",{"_index":549,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapconditions",{"_index":489,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapobservations",{"_index":490,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedobservations",{"_index":551,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association",{"_index":818,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associations",{"_index":536,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associationservice",{"_index":384,"title":{"injectables/AssociationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":1142,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["ast",{"_index":282,"title":{},"body":{"components/AccountComponent.html":{}}}],["aud",{"_index":2440,"title":{},"body":{"injectables/SmartService.html":{}}}],["august",{"_index":1333,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["auth",{"_index":2492,"title":{},"body":{"injectables/SmartService.html":{}}}],["authenticate",{"_index":2448,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorize",{"_index":2496,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorizeurl",{"_index":2441,"title":{},"body":{"injectables/SmartService.html":{}}}],["autogrow",{"_index":589,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["autogrow]'},{'name",{"_index":236,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["autogrowdirective",{"_index":235,"title":{"directives/AutoGrowDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":2774,"title":{},"body":{"index.html":{}}}],["available",{"_index":1841,"title":{},"body":{"components/HomeComponent.html":{}}}],["avoid",{"_index":1775,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"index.html":{}}}],["away",{"_index":1886,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["axis",{"_index":917,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["back",{"_index":1744,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["bar",{"_index":1711,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["base",{"_index":1573,"title":{},"body":{"injectables/FhirService.html":{}}}],["basecolumn",{"_index":608,"title":{"classes/BaseColumn.html":{}},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{}}}],["basecolumn:23",{"_index":717,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:28",{"_index":718,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:29",{"_index":719,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:30",{"_index":720,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:33",{"_index":725,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:36",{"_index":727,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:39",{"_index":726,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["based",{"_index":149,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["basic",{"_index":1132,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["bearer",{"_index":1598,"title":{},"body":{"injectables/FhirService.html":{}}}],["before",{"_index":1879,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["begin",{"_index":2750,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":799,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["being",{"_index":1145,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["below",{"_index":2538,"title":{},"body":{"injectables/SmartService.html":{}}}],["best",{"_index":2526,"title":{},"body":{"injectables/SmartService.html":{}}}],["better",{"_index":1259,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["between",{"_index":663,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["bilirubin",{"_index":284,"title":{},"body":{"components/AccountComponent.html":{}}}],["bind(this",{"_index":813,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["birthdate",{"_index":2301,"title":{},"body":{"classes/Patient.html":{}}}],["blood",{"_index":2165,"title":{},"body":{"injectables/ObservationService.html":{}}}],["blur",{"_index":601,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["bmi",{"_index":346,"title":{},"body":{"components/AddObservation.html":{}}}],["body",{"_index":2175,"title":{},"body":{"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"index.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["bootstrap",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextMenuOption.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":298,"title":{},"body":{"components/AccountComponent.html":{}}}],["bound",{"_index":797,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["box",{"_index":203,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["boxdata",{"_index":1999,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["break",{"_index":2351,"title":{},"body":{"components/PatientComponent.html":{}}}],["brew",{"_index":2748,"title":{},"body":{"index.html":{}}}],["brief",{"_index":2816,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2837,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["buffer",{"_index":1796,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["bugs",{"_index":2793,"title":{},"body":{"index.html":{}}}],["build",{"_index":2739,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1606,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder'},{'name",{"_index":187,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["builder.component",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["builder.component.ts",{"_index":1605,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["builder.component.ts:13",{"_index":1631,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:14",{"_index":1630,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:16",{"_index":1632,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:17",{"_index":1628,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:19",{"_index":1620,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:20",{"_index":1621,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:22",{"_index":1619,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:27",{"_index":1624,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:32",{"_index":1623,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:39",{"_index":1627,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:55",{"_index":1626,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:59",{"_index":1622,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.html",{"_index":1609,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder/form",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/FormBuilder.html":{},"coverage.html":{}}}],["bun",{"_index":280,"title":{},"body":{"components/AccountComponent.html":{}}}],["bundle",{"_index":670,"title":{"classes/Bundle.html":{}},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["bundle.entry",{"_index":865,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["bundle.entry.map(e",{"_index":1536,"title":{},"body":{"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["bundle.entry.map(r",{"_index":866,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["bundle.link.find(link",{"_index":1037,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["button",{"_index":1643,"title":{},"body":{"components/FormBuilder.html":{},"components/ToolbarComponent.html":{}}}],["c",{"_index":555,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["c.clinicalstatus",{"_index":1159,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.id",{"_index":826,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c.isparent",{"_index":837,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.isvisible",{"_index":836,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.parent",{"_index":835,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.relativedatetime",{"_index":1123,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.sort((n1",{"_index":1112,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["c/patient_viewer.git",{"_index":2758,"title":{},"body":{"index.html":{}}}],["c2",{"_index":1237,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c2.onsetdatetime.localecompare(c1.onsetdatetime",{"_index":1238,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c['code']['text",{"_index":1341,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c['selected",{"_index":825,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c[\\'code\\'][\\'text",{"_index":1343,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c[element",{"_index":1177,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cache",{"_index":1048,"title":{},"body":{"injectables/ConditionService.html":{}}}],["calcium",{"_index":272,"title":{},"body":{"components/AccountComponent.html":{}}}],["call",{"_index":572,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["called",{"_index":1234,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["calls",{"_index":1049,"title":{},"body":{"injectables/ConditionService.html":{}}}],["cardiovascular",{"_index":2182,"title":{},"body":{"injectables/ObservationService.html":{}}}],["care",{"_index":94,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/MedicationsComponent.html":{}}}],["careplan",{"_index":479,"title":{"classes/CarePlan.html":{}},"body":{"modules/AppModule.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"coverage.html":{}}}],["careplan'},{'name",{"_index":165,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplan.html",{"_index":706,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplancomponent",{"_index":164,"title":{"components/CarePlanComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay",{"_index":166,"title":{"components/CarePlanDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay'},{'name",{"_index":167,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplandisplay.html",{"_index":751,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanloadfinished",{"_index":707,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplans",{"_index":708,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["careplans.length",{"_index":747,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplanselected",{"_index":762,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanservice",{"_index":385,"title":{"injectables/CarePlanService.html":{}},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/MedicationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":2349,"title":{},"body":{"components/PatientComponent.html":{}}}],["cases",{"_index":2828,"title":{},"body":{"index.html":{}}}],["cast",{"_index":1542,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{}}}],["casted",{"_index":1543,"title":{},"body":{"injectables/EncounterService.html":{}}}],["cat.category",{"_index":150,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.count",{"_index":2092,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["cat.data?.length",{"_index":151,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.display",{"_index":2091,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["catch",{"_index":1178,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["categories",{"_index":2145,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorize",{"_index":2158,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorizedobservations",{"_index":2112,"title":{},"body":{"injectables/ObservationService.html":{}}}],["category",{"_index":76,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Timeline.html":{}}}],["cause",{"_index":2813,"title":{},"body":{"index.html":{}}}],["causes",{"_index":1317,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["cd",{"_index":2759,"title":{},"body":{"index.html":{}}}],["certain",{"_index":2134,"title":{},"body":{"injectables/ObservationService.html":{}}}],["chain",{"_index":1021,"title":{},"body":{"injectables/ConditionService.html":{}}}],["change",{"_index":1467,"title":{},"body":{"injectables/DoctorService.html":{}}}],["changed",{"_index":1047,"title":{},"body":{"injectables/ConditionService.html":{}}}],["changedobs",{"_index":2105,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changedobs.isselected",{"_index":2110,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changesthen",{"_index":2776,"title":{},"body":{"index.html":{}}}],["chart",{"_index":895,"title":{"classes/Chart.html":{}},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["chart.data",{"_index":1788,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.length",{"_index":1821,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.push",{"_index":1784,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.sort((p1",{"_index":1789,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].name",{"_index":1826,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].value",{"_index":1822,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.linechartdata",{"_index":1793,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.normalvalues",{"_index":1804,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.title",{"_index":1777,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemax",{"_index":1802,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemin",{"_index":1801,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chartevent",{"_index":1684,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmaxdate",{"_index":1729,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate",{"_index":1728,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate.gettime",{"_index":1731,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartname",{"_index":1762,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["charts",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"dependencies.html":{}}}],["chartsize",{"_index":1668,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartsmap",{"_index":1751,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["check",{"_index":733,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["check(medication",{"_index":1982,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["checkallcareplans",{"_index":754,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallcareplans(checked",{"_index":768,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallconditions",{"_index":1272,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallconditions(checked",{"_index":1284,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallobservations",{"_index":2252,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkallobservations(checked",{"_index":2262,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkbox",{"_index":169,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["checkboxdata",{"_index":929,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxes",{"_index":939,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxinline",{"_index":168,"title":{"components/CheckboxInline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcareplan",{"_index":755,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcareplan(checked",{"_index":770,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked",{"_index":756,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked(careplan",{"_index":773,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcondition",{"_index":1273,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkcondition(checkedcondition",{"_index":1286,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checked",{"_index":260,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["checked(changedobs",{"_index":2103,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["checked(obs",{"_index":2079,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["checkedcareplan",{"_index":771,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkedcondition",{"_index":1288,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkedconditions",{"_index":511,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedconditions.map(this.extractconditioninfo",{"_index":565,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedconditionsinfo",{"_index":564,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservation",{"_index":2265,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkedobservations",{"_index":509,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedobservations.map(this.extractobservationinfo",{"_index":567,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservationsinfo",{"_index":566,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checking",{"_index":790,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["checkobservation",{"_index":2253,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkobservation(checked",{"_index":2264,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["chief",{"_index":140,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["child",{"_index":660,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["chloride",{"_index":270,"title":{},"body":{"components/AccountComponent.html":{}}}],["cholesteralbattery",{"_index":246,"title":{},"body":{"components/AccountComponent.html":{}}}],["choose",{"_index":1724,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["class",{"_index":67,"title":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":355,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{},"overview.html":{}}}],["clean",{"_index":1475,"title":{},"body":{"injectables/DoctorService.html":{}}}],["cleaning",{"_index":1386,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clear",{"_index":542,"title":{},"body":{"injectables/AssociationService.html":{}}}],["click",{"_index":1349,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/ObservationRecursive.html":{},"index.html":{}}}],["clicked",{"_index":830,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsDisplay.html":{}}}],["clickedset",{"_index":1095,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["clicking",{"_index":806,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["clicks",{"_index":1374,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clicksubscription",{"_index":1353,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["client",{"_index":942,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"coverage.html":{}}}],["client_id",{"_index":2533,"title":{},"body":{"injectables/SmartService.html":{}}}],["clientid",{"_index":2442,"title":{},"body":{"injectables/SmartService.html":{}}}],["clinical",{"_index":2734,"title":{},"body":{"index.html":{}}}],["clinicalstatus",{"_index":976,"title":{},"body":{"classes/Condition.html":{}}}],["clone",{"_index":2756,"title":{},"body":{"index.html":{}}}],["close",{"_index":353,"title":{},"body":{"components/AddObservation.html":{},"components/ContextMenuComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["close(event",{"_index":2578,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["closeable",{"_index":1354,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closeable_delay",{"_index":1355,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closed",{"_index":1425,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closefinalnote",{"_index":2013,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["closeprogressnote",{"_index":2014,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["closes",{"_index":1385,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closesidenote",{"_index":2015,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["cluster_appmodule",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule",{"_index":1645,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_declarations",{"_index":1646,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_exports",{"_index":1647,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["clutter",{"_index":2814,"title":{},"body":{"index.html":{}}}],["cnum",{"_index":1164,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cnum.tostring",{"_index":1168,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["co2",{"_index":271,"title":{},"body":{"components/AccountComponent.html":{}}}],["code",{"_index":337,"title":{},"body":{"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["codes",{"_index":2156,"title":{},"body":{"injectables/ObservationService.html":{}}}],["coding",{"_index":577,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{}}}],["collapse",{"_index":299,"title":{},"body":{"components/AccountComponent.html":{}}}],["collapsequeue",{"_index":1057,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["column",{"_index":90,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["column's",{"_index":960,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnheight",{"_index":610,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnnum",{"_index":25,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["columns",{"_index":134,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{}}}],["columnstate",{"_index":611,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnstateswitcher",{"_index":948,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitcher'},{'name",{"_index":172,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["columnstateswitcher.html",{"_index":949,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitchercomponent",{"_index":171,"title":{"components/ColumnStateSwitcherComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["columntype",{"_index":953,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["combdata",{"_index":1610,"title":{},"body":{"components/FormBuilder.html":{}}}],["combineddata",{"_index":930,"title":{},"body":{"components/CheckboxInline.html":{}}}],["command",{"_index":2770,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2753,"title":{},"body":{"index.html":{}}}],["comment",{"_index":2537,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["comments",{"_index":2822,"title":{},"body":{"index.html":{}}}],["compat",{"_index":2718,"title":{},"body":{"dependencies.html":{}}}],["compiler",{"_index":1833,"title":{},"body":{"components/HomeComponent.html":{}}}],["complaint",{"_index":141,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["completed",{"_index":1570,"title":{},"body":{"components/Favorites.html":{}}}],["completion",{"_index":2801,"title":{},"body":{"index.html":{}}}],["complex",{"_index":2820,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":156,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/form_components/checkbox",{"_index":1649,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/normal",{"_index":1651,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/scrachpad",{"_index":1656,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/select",{"_index":1654,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/home/home.component",{"_index":2341,"title":{},"body":{"components/PatientComponent.html":{}}}],["components/hoverbox/hoverbox.component",{"_index":2587,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["concat",{"_index":1015,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concat(of(conditions",{"_index":1039,"title":{},"body":{"injectables/ConditionService.html":{}}}],["concat(of(encounters",{"_index":1538,"title":{},"body":{"injectables/EncounterService.html":{}}}],["concatmap",{"_index":1016,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concurrently",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":148,"title":{"classes/Condition.html":{}},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["condition.code.coding[0].code",{"_index":2597,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.code.coding[0].display",{"_index":2595,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.isvisible",{"_index":1253,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.onsetdatetime",{"_index":2594,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.relativedatetime",{"_index":1255,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.service",{"_index":525,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['code",{"_index":580,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['system",{"_index":581,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['onsetdatetime",{"_index":582,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionally",{"_index":1023,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditiongrouping",{"_index":1058,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["conditiongroupingname",{"_index":1059,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditiongroupingname[conditiongrouping.indexof(c",{"_index":1191,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditions",{"_index":88,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["conditions'},{'name",{"_index":176,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditions.component.ts",{"_index":1470,"title":{},"body":{"injectables/DoctorService.html":{}}}],["conditions.html",{"_index":1200,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["conditions.map(this.extractconditioninfo",{"_index":569,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionscache",{"_index":991,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditionschart",{"_index":1055,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschart'},{'name",{"_index":174,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionschart.html",{"_index":1056,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschartcomponent",{"_index":173,"title":{"components/ConditionsChartComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionscomponent",{"_index":175,"title":{"components/ConditionsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay",{"_index":177,"title":{"components/ConditionsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay'},{'name",{"_index":178,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionsdisplay.html",{"_index":1271,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["conditionselected",{"_index":1071,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{}}}],["conditionservice",{"_index":386,"title":{"injectables/ConditionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsinfo",{"_index":568,"title":{},"body":{"injectables/AssociationService.html":{}}}],["confidential",{"_index":2781,"title":{},"body":{"index.html":{}}}],["config",{"_index":330,"title":{},"body":{"components/AccountComponent.html":{}}}],["configmode",{"_index":1455,"title":{},"body":{"injectables/DoctorService.html":{}}}],["console.log",{"_index":2808,"title":{},"body":{"index.html":{}}}],["console.log(\"add",{"_index":1712,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["console.log(\"changing",{"_index":2424,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["console.log(\"hi",{"_index":1567,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(\"highlighting",{"_index":1662,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["console.log(\"loaded",{"_index":746,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["console.log(\"no",{"_index":2191,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(\"normal",{"_index":1563,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(\"saved",{"_index":293,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"this",{"_index":1187,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(\"total",{"_index":2655,"title":{},"body":{"components/TripleListComponent.html":{}}}],["console.log('blur",{"_index":606,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('focus",{"_index":602,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('loaded",{"_index":1988,"title":{},"body":{"components/MedicationsComponent.html":{},"components/TimelineComponent.html":{}}}],["console.log('log",{"_index":2571,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('stop",{"_index":2507,"title":{},"body":{"injectables/SmartService.html":{}}}],["console.log('that",{"_index":1180,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(condition",{"_index":1314,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["console.log(data",{"_index":1350,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["console.log(forms",{"_index":1641,"title":{},"body":{"components/FormBuilder.html":{}}}],["console.log(fullpath",{"_index":1184,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(obs",{"_index":2286,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["console.log(plan",{"_index":815,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["console.log(this.elref",{"_index":1564,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(this.elref.nativeelement.queryselector('div').style.left",{"_index":1565,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(this.encounters",{"_index":2567,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log(this.getscratchpadobservations",{"_index":2228,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(this.observations",{"_index":2282,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["const",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{},"injectables/EncounterService.html":{},"injectables/SmartService.html":{}}}],["constitutional",{"_index":2173,"title":{},"body":{"injectables/ObservationService.html":{}}}],["construct",{"_index":2361,"title":{},"body":{"components/PatientComponent.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(associationservice",{"_index":2258,"title":{},"body":{"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["constructor(careplanservice",{"_index":1980,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["constructor(conditionservice",{"_index":1072,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["constructor(cookieservice",{"_index":1459,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["constructor(doctorservice",{"_index":254,"title":{},"body":{"components/AccountComponent.html":{},"components/Favorites.html":{},"components/TripleListComponent.html":{}}}],["constructor(el",{"_index":592,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["constructor(encounterservice",{"_index":2558,"title":{},"body":{"components/TimelineComponent.html":{}}}],["constructor(fhirservice",{"_index":712,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["constructor(http",{"_index":496,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["constructor(name",{"_index":1970,"title":{},"body":{"classes/Medication.html":{},"classes/Server.html":{}}}],["constructor(observationservice",{"_index":30,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelineComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(public",{"_index":2438,"title":{},"body":{"classes/Server.html":{}}}],["constructor(ref",{"_index":1365,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["constructor(scratchpadservice",{"_index":763,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{}}}],["constructor(trendsservice",{"_index":1678,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["contained",{"_index":2136,"title":{},"body":{"injectables/ObservationService.html":{}}}],["contains",{"_index":1143,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["content",{"_index":2517,"title":{},"body":{"injectables/SmartService.html":{}}}],["context",{"_index":792,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["contextmenu",{"_index":1351,"title":{},"body":{"components/ContextMenuComponent.html":{},"dependencies.html":{}}}],["contextmenu'},{'name",{"_index":180,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["contextmenu.component.ts",{"_index":2830,"title":{},"body":{"index.html":{}}}],["contextmenu.html",{"_index":1352,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["contextmenu/contextmenu.component",{"_index":788,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["contextmenucomponent",{"_index":179,"title":{"components/ContextMenuComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contextmenuoption",{"_index":1369,"title":{"classes/ContextMenuOption.html":{}},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["contexts",{"_index":1399,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["continual",{"_index":2235,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["continually",{"_index":1025,"title":{},"body":{"injectables/ConditionService.html":{}}}],["continue",{"_index":1783,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["cookie",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["correct",{"_index":124,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{}}}],["count",{"_index":1483,"title":{},"body":{"injectables/DoctorService.html":{},"injectables/ObservationService.html":{}}}],["coverage",{"_index":2660,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":878,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.code",{"_index":880,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.value",{"_index":892,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.period.end",{"_index":842,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp.period.start",{"_index":841,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp['title",{"_index":840,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp[\\'title",{"_index":843,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["create",{"_index":882,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["created",{"_index":1808,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creating",{"_index":1776,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creatinine",{"_index":278,"title":{},"body":{"components/AccountComponent.html":{}}}],["cross",{"_index":2508,"title":{},"body":{"injectables/SmartService.html":{}}}],["css",{"_index":2741,"title":{},"body":{"index.html":{}}}],["csub.clinicalstatus",{"_index":1194,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub.relativedatetime",{"_index":1195,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['coding'][0]['code",{"_index":1193,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['text",{"_index":1192,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'coding\\'][0][\\'code",{"_index":1198,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'text",{"_index":1197,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ctgry",{"_index":2222,"title":{},"body":{"injectables/ObservationService.html":{}}}],["current",{"_index":70,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{}}}],["currently",{"_index":531,"title":{},"body":{"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["currstatus",{"_index":2418,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["d",{"_index":1324,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getdate",{"_index":1339,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getfullyear",{"_index":1340,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["dailyamount",{"_index":696,"title":{},"body":{"classes/CarePlan.html":{}}}],["daniel",{"_index":2784,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1743,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["dashedlines",{"_index":897,"title":{},"body":{"classes/Chart.html":{}}}],["data",{"_index":69,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["data.length",{"_index":1774,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["data['rest'][0].security.extension.filter(e",{"_index":2487,"title":{},"body":{"injectables/SmartService.html":{}}}],["data[0].code['text",{"_index":1778,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["datafilter",{"_index":139,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["datalocation",{"_index":1080,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["datalocation.foreach(element",{"_index":1175,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date",{"_index":693,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Medication.html":{},"components/TimelinePopupComponent.html":{}}}],["date().gettime",{"_index":1119,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["date(c.onsetdatetime",{"_index":1325,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["date(c.onsetdatetime).gettime",{"_index":1122,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(condition.onsetdatetime).gettime",{"_index":1254,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["date(cp.period.end",{"_index":890,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(cp.period.start",{"_index":889,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(form.maxdate",{"_index":1723,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(form.mindate",{"_index":1721,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(newdate).todatestring",{"_index":1124,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(ob.effectivedatetime).gettime",{"_index":2203,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(point.relativedatetime",{"_index":1785,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["date(this.conditions[0].onsetdatetime).gettime",{"_index":1120,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["date(this.observations[0].effectivedatetime).gettime",{"_index":2200,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(this.period.end",{"_index":1521,"title":{},"body":{"classes/Encounter.html":{}}}],["date(this.period.start",{"_index":1520,"title":{},"body":{"classes/Encounter.html":{}}}],["datepipe",{"_index":2577,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["datepipe('en",{"_index":2582,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dates",{"_index":1239,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["datetime",{"_index":579,"title":{},"body":{"injectables/AssociationService.html":{}}}],["dd",{"_index":2589,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dealing",{"_index":2795,"title":{},"body":{"index.html":{}}}],["debounce",{"_index":652,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debouncetime",{"_index":629,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debugging",{"_index":2539,"title":{},"body":{"injectables/SmartService.html":{}}}],["december",{"_index":1337,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["declarations",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["declare",{"_index":1220,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["declared",{"_index":2791,"title":{},"body":{"index.html":{}}}],["declaring",{"_index":2790,"title":{},"body":{"index.html":{}}}],["decodeuricomponent(tmp[1",{"_index":2546,"title":{},"body":{"injectables/SmartService.html":{}}}],["decorators",{"_index":783,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":1402,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["delete",{"_index":1150,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["demos",{"_index":1244,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["dependencies",{"_index":373,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependenciesif",{"_index":2763,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1487,"title":{},"body":{"injectables/DoctorService.html":{}}}],["desc",{"_index":1110,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["described",{"_index":129,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["description",{"_index":681,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["deserialize",{"_index":1524,"title":{},"body":{"injectables/EncounterService.html":{}}}],["deserialize(input",{"_index":1528,"title":{},"body":{"injectables/EncounterService.html":{}}}],["detail",{"_index":695,"title":{},"body":{"classes/CarePlan.html":{}}}],["details",{"_index":1515,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["determine",{"_index":1321,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["developing",{"_index":2811,"title":{},"body":{"index.html":{}}}],["development",{"_index":2762,"title":{},"body":{"index.html":{}}}],["diff",{"_index":1118,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["different",{"_index":133,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["directive",{"_index":155,"title":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["directives",{"_index":234,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["directly",{"_index":2796,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1430,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["discussed",{"_index":1034,"title":{},"body":{"injectables/ConditionService.html":{}}}],["display",{"_index":99,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{}}}],["display_delay",{"_index":1850,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["displayed",{"_index":791,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["displaying",{"_index":1772,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["div",{"_index":1512,"title":{},"body":{"classes/Encounter.html":{}}}],["do's",{"_index":2788,"title":{},"body":{"index.html":{}}}],["dob",{"_index":2381,"title":{},"body":{"components/PatientComponent.html":{}}}],["doctornote",{"_index":1452,"title":{},"body":{"components/DoctorNoteComponent.html":{}}}],["doctornote'},{'name",{"_index":182,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["doctornotecomponent",{"_index":181,"title":{"components/DoctorNoteComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["doctorservice",{"_index":255,"title":{"injectables/DoctorService.html":{}},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["document",{"_index":1376,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["document.getelementbyid",{"_index":2806,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"cg",{"_index":1167,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["document.getelementbyid(\"finalnote\").style.width",{"_index":2028,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["document.getelementbyid(\"progressnote\").style.width",{"_index":2027,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["document.getelementbyid(\"sidenote\").style.width",{"_index":2025,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["documentation",{"_index":2661,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":2797,"title":{},"body":{"index.html":{}}}],["doit",{"_index":1900,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["doit(n",{"_index":1901,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["don't",{"_index":2376,"title":{},"body":{"components/PatientComponent.html":{}}}],["done",{"_index":2785,"title":{},"body":{"index.html":{}}}],["dont's",{"_index":2802,"title":{},"body":{"index.html":{}}}],["dosage",{"_index":891,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["dosageunits",{"_index":879,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["doubles/triples",{"_index":1477,"title":{},"body":{"injectables/DoctorService.html":{}}}],["driven",{"_index":2733,"title":{},"body":{"index.html":{}}}],["due",{"_index":322,"title":{},"body":{"components/AccountComponent.html":{}}}],["duration",{"_index":1052,"title":{},"body":{"injectables/ConditionService.html":{}}}],["dynamic",{"_index":636,"title":{},"body":{"classes/BaseColumn.html":{},"dependencies.html":{}}}],["e.resource",{"_index":2186,"title":{},"body":{"injectables/ObservationService.html":{}}}],["e.url",{"_index":2488,"title":{},"body":{"injectables/SmartService.html":{}}}],["each",{"_index":147,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"index.html":{}}}],["earliest",{"_index":1725,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["ears",{"_index":2177,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ease",{"_index":2625,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["edge",{"_index":1887,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["effective",{"_index":583,"title":{},"body":{"injectables/AssociationService.html":{}}}],["effectivedatetime",{"_index":507,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["el",{"_index":596,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["elapsed",{"_index":1427,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["electrolytes",{"_index":247,"title":{},"body":{"components/AccountComponent.html":{}}}],["element",{"_index":154,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["elementref",{"_index":593,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"directives/HighlightDirective.html":{},"components/ToolbarComponent.html":{}}}],["elements",{"_index":922,"title":{},"body":{"classes/Chart.html":{},"components/ConditionsComponent.html":{}}}],["ellipsestoggle",{"_index":1062,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["elref",{"_index":1554,"title":{},"body":{"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["empty",{"_index":868,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{}}}],["emsp",{"_index":1894,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["enableprodmode",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["enc",{"_index":2372,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getlogvalue()/5",{"_index":2570,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.getreason",{"_index":2374,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getstartdate",{"_index":2574,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.position",{"_index":2569,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encodeuri(request",{"_index":2541,"title":{},"body":{"injectables/SmartService.html":{}}}],["encodeuri(this.redirecturi",{"_index":2514,"title":{},"body":{"injectables/SmartService.html":{}}}],["encounter",{"_index":1494,"title":{"classes/Encounter.html":{}},"body":{"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{},"index.html":{}}}],["encounter.getreason",{"_index":2591,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["encounters",{"_index":1535,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["encounters.foreach(enc",{"_index":2568,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encounterservice",{"_index":387,"title":{"injectables/EncounterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["end",{"_index":694,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{},"index.html":{}}}],["endpoint",{"_index":530,"title":{},"body":{"injectables/AssociationService.html":{}}}],["ent",{"_index":2181,"title":{},"body":{"injectables/ObservationService.html":{}}}],["entry",{"_index":672,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["entry.description",{"_index":941,"title":{},"body":{"components/CheckboxInline.html":{},"components/SelectListSingle.html":{}}}],["enumerated",{"_index":1479,"title":{},"body":{"injectables/DoctorService.html":{}}}],["error",{"_index":1179,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["errors",{"_index":1154,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["even",{"_index":1230,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["event",{"_index":106,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{},"components/TripleListComponent.html":{}}}],["event.pagex",{"_index":1423,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["event.pagey",{"_index":1420,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.preventdefault",{"_index":1432,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.shiftkey",{"_index":2088,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["event.target.checked",{"_index":1990,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["event.target.innerheight",{"_index":658,"title":{},"body":{"classes/BaseColumn.html":{}}}],["eventemitter",{"_index":766,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/TripleListComponent.html":{}}}],["events",{"_index":1433,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["example",{"_index":957,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ContextMenuComponent.html":{}}}],["examples",{"_index":2829,"title":{},"body":{"index.html":{}}}],["excessive",{"_index":654,"title":{},"body":{"classes/BaseColumn.html":{}}}],["excludes",{"_index":1484,"title":{},"body":{"injectables/DoctorService.html":{}}}],["exec",{"_index":795,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["execute",{"_index":1347,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["executed",{"_index":1380,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["exist",{"_index":883,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{}}}],["existing",{"_index":881,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["exists",{"_index":1188,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["exp",{"_index":1911,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["expand",{"_index":757,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expand(parent",{"_index":775,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expected",{"_index":912,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["extends",{"_index":705,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["extra",{"_index":1797,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["extract",{"_index":546,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo",{"_index":492,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo(condition",{"_index":500,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractnewobservations",{"_index":2118,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractnewobservations(observations",{"_index":2129,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractobservationinfo",{"_index":493,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractobservationinfo(observation",{"_index":504,"title":{},"body":{"injectables/AssociationService.html":{}}}],["eyes",{"_index":2176,"title":{},"body":{"injectables/ObservationService.html":{}}}],["false",{"_index":59,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["favorites",{"_index":183,"title":{"components/Favorites.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favorites'},{'name",{"_index":184,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["favorites.html",{"_index":1549,"title":{},"body":{"components/Favorites.html":{}}}],["february",{"_index":1328,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["female",{"_index":2350,"title":{},"body":{"components/PatientComponent.html":{}}}],["fhir.service",{"_index":853,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["fhirbaseurl",{"_index":2443,"title":{},"body":{"injectables/SmartService.html":{}}}],["fhirservice",{"_index":388,"title":{"injectables/FhirService.html":{}},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["field",{"_index":1181,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["fields",{"_index":563,"title":{},"body":{"injectables/AssociationService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":135,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"components/ToolbarComponent.html":{}}}],["filtering",{"_index":2631,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterscratchpad",{"_index":2607,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterset",{"_index":2113,"title":{},"body":{"injectables/ObservationService.html":{}}}],["final",{"_index":2032,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["find",{"_index":1889,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["findgetparameter",{"_index":2449,"title":{},"body":{"injectables/SmartService.html":{}}}],["findgetparameter(parametername",{"_index":2454,"title":{},"body":{"injectables/SmartService.html":{}}}],["finding",{"_index":350,"title":{},"body":{"components/AddObservation.html":{}}}],["findings",{"_index":323,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["finished",{"_index":735,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["first",{"_index":108,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/SmartService.html":{}}}],["firstiteration",{"_index":26,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["fit",{"_index":1745,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["fix",{"_index":2523,"title":{},"body":{"injectables/SmartService.html":{}}}],["fixed",{"_index":1544,"title":{},"body":{"injectables/EncounterService.html":{}}}],["fixed[prop",{"_index":1546,"title":{},"body":{"injectables/EncounterService.html":{}}}],["focus",{"_index":600,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["folder",{"_index":2771,"title":{},"body":{"index.html":{}}}],["following",{"_index":2752,"title":{},"body":{"index.html":{}}}],["follows",{"_index":75,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["foo",{"_index":1664,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["force",{"_index":2772,"title":{},"body":{"index.html":{}}}],["form",{"_index":186,"title":{"classes/Form.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["format",{"_index":128,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["formbuilder",{"_index":185,"title":{"components/FormBuilder.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcreatormodule",{"_index":383,"title":{"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["forminput",{"_index":1616,"title":{},"body":{"components/FormBuilder.html":{}}}],["forms",{"_index":1611,"title":{},"body":{"components/FormBuilder.html":{}}}],["formsmodule",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["found",{"_index":2162,"title":{},"body":{"injectables/ObservationService.html":{}}}],["fromevent",{"_index":627,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(document",{"_index":1435,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(window",{"_index":650,"title":{},"body":{"classes/BaseColumn.html":{}}}],["front",{"_index":2731,"title":{},"body":{"index.html":{}}}],["fullpath",{"_index":1174,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["function",{"_index":122,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HoverBoxComponent.html":{}}}],["function(condition",{"_index":1309,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["function(data",{"_index":1346,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["function(obs",{"_index":2283,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["functionality",{"_index":635,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["functions",{"_index":796,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["g",{"_index":2761,"title":{},"body":{"index.html":{}}}],["gender",{"_index":2302,"title":{},"body":{"classes/Patient.html":{}}}],["genderstring",{"_index":2320,"title":{},"body":{"components/PatientComponent.html":{}}}],["genderstring(patient",{"_index":2323,"title":{},"body":{"components/PatientComponent.html":{}}}],["generalchange",{"_index":305,"title":{},"body":{"components/AccountComponent.html":{}}}],["generally",{"_index":920,"title":{},"body":{"classes/Chart.html":{}}}],["generate",{"_index":1478,"title":{},"body":{"injectables/DoctorService.html":{}}}],["generic",{"_index":2826,"title":{},"body":{"index.html":{}}}],["getassociations",{"_index":494,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations(checkedconditions",{"_index":508,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcheckedconditions",{"_index":993,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getcheckedobservations",{"_index":2119,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getcode",{"_index":2038,"title":{},"body":{"classes/Observation.html":{}}}],["getcolumnstate",{"_index":994,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getdata",{"_index":931,"title":{},"body":{"components/CheckboxInline.html":{},"components/FormBuilder.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["getdaterange",{"_index":1754,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdaterange(chart",{"_index":1763,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdatestring",{"_index":1274,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getdatestring(c",{"_index":1290,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getenddate",{"_index":1498,"title":{},"body":{"classes/Encounter.html":{}}}],["getforms",{"_index":1613,"title":{},"body":{"components/FormBuilder.html":{}}}],["getgrouping",{"_index":2120,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getgrouping(code",{"_index":2132,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getlevel",{"_index":2074,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["getlogvalue",{"_index":1499,"title":{},"body":{"classes/Encounter.html":{}}}],["getreason",{"_index":1500,"title":{},"body":{"classes/Encounter.html":{}}}],["getrequestoptions",{"_index":1575,"title":{},"body":{"injectables/FhirService.html":{}}}],["getrequestoptions(withauth",{"_index":1580,"title":{},"body":{"injectables/FhirService.html":{}}}],["gets",{"_index":1045,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{}}}],["getscratchpadcareplans",{"_index":710,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["getscratchpadconditions",{"_index":1204,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["getscratchpadcount",{"_index":950,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["getscratchpadobservations",{"_index":2121,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getstartdate",{"_index":1501,"title":{},"body":{"classes/Encounter.html":{}}}],["getters",{"_index":1265,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["gettext",{"_index":2039,"title":{},"body":{"classes/Observation.html":{}}}],["gettext(o",{"_index":2053,"title":{},"body":{"classes/Observation.html":{}}}],["getting",{"_index":2728,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":2450,"title":{},"body":{"injectables/SmartService.html":{}}}],["getunits",{"_index":2040,"title":{},"body":{"classes/Observation.html":{}}}],["getunits(o",{"_index":2055,"title":{},"body":{"classes/Observation.html":{}}}],["geturl",{"_index":1576,"title":{},"body":{"injectables/FhirService.html":{}}}],["getvalue",{"_index":2041,"title":{},"body":{"classes/Observation.html":{}}}],["getvalue(o",{"_index":2057,"title":{},"body":{"classes/Observation.html":{}}}],["getvaluerange",{"_index":1755,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getvaluerange(chart",{"_index":1765,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["gfr",{"_index":279,"title":{},"body":{"components/AccountComponent.html":{}}}],["git",{"_index":2755,"title":{},"body":{"index.html":{}}}],["given",{"_index":858,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{}}}],["giving",{"_index":2817,"title":{},"body":{"index.html":{}}}],["glitch",{"_index":1398,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["global",{"_index":1635,"title":{},"body":{"components/FormBuilder.html":{}}}],["glu",{"_index":275,"title":{},"body":{"components/AccountComponent.html":{}}}],["glyphicon",{"_index":809,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["graphconfig",{"_index":1456,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["graphdata",{"_index":2072,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["groupconditions",{"_index":1063,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouping",{"_index":2034,"title":{},"body":{"classes/Observation.html":{}}}],["groupingcount",{"_index":1082,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouplist",{"_index":2157,"title":{},"body":{"injectables/ObservationService.html":{}}}],["groupmap",{"_index":2114,"title":{},"body":{"injectables/ObservationService.html":{}}}],["grow.directive.ts",{"_index":588,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["grow.directive.ts:10",{"_index":595,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:15",{"_index":598,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:19",{"_index":597,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grunt",{"_index":2738,"title":{},"body":{"index.html":{}}}],["guaranteed",{"_index":131,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["guidelines",{"_index":2787,"title":{},"body":{"index.html":{}}}],["handle",{"_index":661,"title":{},"body":{"classes/BaseColumn.html":{}}}],["handledocclick",{"_index":1361,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handledocclick(event",{"_index":1371,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleobservationbundle",{"_index":2122,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleobservationbundle(bundle",{"_index":2138,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleoptionclick",{"_index":1362,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleoptionclick(option",{"_index":1377,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleresize",{"_index":613,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handleresize(event",{"_index":622,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handlers",{"_index":2084,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["handles",{"_index":1379,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsComponent.html":{}}}],["hardcode",{"_index":1888,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hardcoded",{"_index":1806,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["hashing",{"_index":2524,"title":{},"body":{"injectables/SmartService.html":{}}}],["hasing\")).tostring",{"_index":2529,"title":{},"body":{"injectables/SmartService.html":{}}}],["hba1c",{"_index":274,"title":{},"body":{"components/AccountComponent.html":{}}}],["hdl",{"_index":265,"title":{},"body":{"components/AccountComponent.html":{}}}],["headers",{"_index":1594,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["headers.append('authorization",{"_index":1597,"title":{},"body":{"injectables/FhirService.html":{}}}],["headings",{"_index":83,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["heart",{"_index":2167,"title":{},"body":{"injectables/ObservationService.html":{}}}],["height",{"_index":336,"title":{},"body":{"components/AddObservation.html":{},"classes/BaseColumn.html":{},"components/DoctorNoteComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["height_offset",{"_index":612,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["here",{"_index":84,"title":{},"body":{"components/AccordionRecursion.html":{},"components/PatientComponent.html":{}}}],["hide",{"_index":1363,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hide(event",{"_index":1383,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hiding",{"_index":1391,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["high",{"_index":924,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["highlight",{"_index":238,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["highlightdirective",{"_index":237,"title":{"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["highlighted",{"_index":1018,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{}}}],["highlighttext",{"_index":1659,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["hii",{"_index":2779,"title":{},"body":{"index.html":{}}}],["historical",{"_index":311,"title":{},"body":{"components/AccountComponent.html":{}}}],["historicaltrends",{"_index":1666,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrends'},{'name",{"_index":189,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["historicaltrends.html",{"_index":1667,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrendscomponent",{"_index":188,"title":{"components/HistoricalTrendsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["historicaltrendsservice",{"_index":389,"title":{"injectables/HistoricalTrendsService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["history",{"_index":2170,"title":{},"body":{"injectables/ObservationService.html":{}}}],["home",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":191,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["home.html",{"_index":1831,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":190,"title":{"components/HomeComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["horizontal",{"_index":918,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["host",{"_index":599,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["hover",{"_index":1875,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["hoverbox",{"_index":1848,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["hoverbox'},{'name",{"_index":193,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["hoverbox.component.ts",{"_index":2831,"title":{},"body":{"index.html":{}}}],["hoverbox.html",{"_index":1849,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hoverbox/hoverbox.component",{"_index":2342,"title":{},"body":{"components/PatientComponent.html":{}}}],["hoverboxcomponent",{"_index":192,"title":{"components/HoverBoxComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hoverstyling",{"_index":2319,"title":{},"body":{"components/PatientComponent.html":{}}}],["hspc",{"_index":2777,"title":{},"body":{"index.html":{}}}],["html",{"_index":153,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["http",{"_index":499,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["http://ec2",{"_index":517,"title":{},"body":{"injectables/AssociationService.html":{}}}],["http://fhir",{"_index":2489,"title":{},"body":{"injectables/SmartService.html":{}}}],["http://localhost:9000",{"_index":2469,"title":{},"body":{"injectables/SmartService.html":{}}}],["httpclient",{"_index":497,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["httpclientmodule",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1591,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["httpheaders({'accept",{"_index":1595,"title":{},"body":{"injectables/FhirService.html":{}}}],["https://github.com/hii",{"_index":2757,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/45594609/which",{"_index":1019,"title":{},"body":{"injectables/ConditionService.html":{}}}],["humanizebytes",{"_index":1899,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["humanizebytespipe",{"_index":1896,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["icon",{"_index":808,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["icons",{"_index":1448,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["id",{"_index":357,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"components/HomeComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Patient.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"classes/User.html":{}}}],["id.type",{"_index":2405,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.type.coding[0].code",{"_index":2406,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.value",{"_index":2408,"title":{},"body":{"injectables/PatientService.html":{}}}],["id=\"tableparentele",{"_index":1196,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["identifier",{"_index":2303,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["ie",{"_index":641,"title":{},"body":{"classes/BaseColumn.html":{},"index.html":{}}}],["implement",{"_index":973,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["implemented",{"_index":1231,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["implements",{"_index":679,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Observation.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["imports",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["inactive",{"_index":144,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1316,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["information",{"_index":1890,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["inherited",{"_index":716,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["initial",{"_index":313,"title":{},"body":{"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{}}}],["initialize",{"_index":938,"title":{},"body":{"components/CheckboxInline.html":{},"components/ConditionsComponent.html":{}}}],["initialized",{"_index":109,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["injectable",{"_index":486,"title":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"coverage.html":{}}}],["injectables",{"_index":487,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"overview.html":{}}}],["inline",{"_index":927,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline'},{'name",{"_index":170,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["inline.component",{"_index":1650,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["inline.component.ts",{"_index":926,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["inline.component.ts:10",{"_index":936,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:11",{"_index":937,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:13",{"_index":935,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:20",{"_index":934,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:9",{"_index":933,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.html",{"_index":928,"title":{},"body":{"components/CheckboxInline.html":{}}}],["input",{"_index":62,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["input('highlighttext",{"_index":1661,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["input[prop",{"_index":1547,"title":{},"body":{"injectables/EncounterService.html":{}}}],["inputdata",{"_index":932,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.name",{"_index":940,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.status",{"_index":2425,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["install",{"_index":2707,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["installed",{"_index":2746,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1151,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["instructions",{"_index":2766,"title":{},"body":{"index.html":{}}}],["interface",{"_index":482,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":484,"title":{},"body":{"interfaces/Associable.html":{}}}],["internal",{"_index":1136,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["interval",{"_index":1426,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["invalid",{"_index":1717,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["isallchecked",{"_index":752,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ischecked",{"_index":1311,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["isconditionassociated",{"_index":1275,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionassociated(condition",{"_index":1292,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked",{"_index":1276,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked(condition",{"_index":1294,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected",{"_index":1277,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected(condition",{"_index":1296,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isdate",{"_index":1854,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isdate(x",{"_index":1859,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth",{"_index":1855,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth(x",{"_index":1861,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isn't",{"_index":2061,"title":{},"body":{"classes/Observation.html":{}}}],["isobservationassociated",{"_index":2254,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationassociated(observation",{"_index":2268,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked",{"_index":2255,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked(observation",{"_index":2270,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isparent",{"_index":977,"title":{},"body":{"classes/Condition.html":{}}}],["isvisible",{"_index":978,"title":{},"body":{"classes/Condition.html":{}}}],["it's",{"_index":1183,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["item",{"_index":1893,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["item.split",{"_index":2544,"title":{},"body":{"injectables/SmartService.html":{}}}],["items",{"_index":959,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HoverBoxComponent.html":{}}}],["iteration",{"_index":1482,"title":{},"body":{"injectables/DoctorService.html":{}}}],["itself",{"_index":1771,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["january",{"_index":1327,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["john",{"_index":303,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["jquery",{"_index":1224,"title":{},"body":{"components/ConditionsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":1135,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{},"index.html":{}}}],["json.parse(json.stringify(this.conditions",{"_index":1128,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["json.parse(this.cookieservice.get('graphconfig",{"_index":2345,"title":{},"body":{"components/PatientComponent.html":{}}}],["json.stringify(this.graphconfig",{"_index":1493,"title":{},"body":{"injectables/DoctorService.html":{}}}],["july",{"_index":1332,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["june",{"_index":1331,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["justcreated",{"_index":1201,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["keep",{"_index":1705,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["keeps",{"_index":638,"title":{},"body":{"classes/BaseColumn.html":{}}}],["key",{"_index":2243,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["kidneyfunction",{"_index":248,"title":{},"body":{"components/AccountComponent.html":{}}}],["know",{"_index":1046,"title":{},"body":{"injectables/ConditionService.html":{}}}],["known",{"_index":1568,"title":{},"body":{"components/Favorites.html":{}}}],["lab",{"_index":327,"title":{},"body":{"components/AccountComponent.html":{}}}],["largest",{"_index":1819,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["last",{"_index":1051,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lastindex",{"_index":2073,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["latest",{"_index":1726,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["launch",{"_index":2444,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["layout",{"_index":2742,"title":{},"body":{"index.html":{}}}],["ldl",{"_index":264,"title":{},"body":{"components/AccountComponent.html":{}}}],["leave",{"_index":1489,"title":{},"body":{"injectables/DoctorService.html":{}}}],["leaving",{"_index":2807,"title":{},"body":{"index.html":{}}}],["left",{"_index":1356,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["leftoffset",{"_index":1851,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["leftposition",{"_index":2599,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["legend",{"_index":152,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["level",{"_index":71,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["leveldata",{"_index":27,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["levelnum",{"_index":28,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["libraries",{"_index":2803,"title":{},"body":{"index.html":{}}}],["library",{"_index":1449,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["license",{"_index":2832,"title":{},"body":{"index.html":{}}}],["line",{"_index":822,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["linear",{"_index":309,"title":{},"body":{"components/AccountComponent.html":{}}}],["linechartdata",{"_index":898,"title":{},"body":{"classes/Chart.html":{}}}],["lines",{"_index":919,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["link",{"_index":673,"title":{"classes/Link.html":{}},"body":{"classes/Bundle.html":{},"components/Favorites.html":{},"classes/Link.html":{},"coverage.html":{}}}],["link.relation",{"_index":1038,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["links",{"_index":2236,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["linux",{"_index":2767,"title":{},"body":{"index.html":{}}}],["list",{"_index":87,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["listdata",{"_index":2430,"title":{},"body":{"components/SelectListSingle.html":{}}}],["lists",{"_index":1472,"title":{},"body":{"injectables/DoctorService.html":{}}}],["lite",{"_index":2710,"title":{},"body":{"dependencies.html":{}}}],["literal",{"_index":358,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"injectables/FhirService.html":{},"classes/Medication.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["liverfunction",{"_index":249,"title":{},"body":{"components/AccountComponent.html":{}}}],["load",{"_index":734,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{}}}],["loadallergies",{"_index":995,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["loadallergies(patient",{"_index":1002,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadcareplans",{"_index":845,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadcareplans(patient",{"_index":848,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadconditions",{"_index":996,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditions(patient",{"_index":1004,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage",{"_index":997,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage(url",{"_index":1006,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loaded",{"_index":1202,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["loadencounters",{"_index":1525,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["loadencounters(patient",{"_index":1530,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage",{"_index":1526,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage(url",{"_index":1532,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loader",{"_index":2702,"title":{},"body":{"dependencies.html":{}}}],["loadfinished",{"_index":16,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["loading",{"_index":195,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["loadinganimation",{"_index":194,"title":{"components/LoadingAnimation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadinganimation.html",{"_index":1920,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["loadmedications",{"_index":846,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadmedications(patient",{"_index":851,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadobservationspage",{"_index":2123,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadobservationspage(url",{"_index":2140,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadpatient",{"_index":2392,"title":{},"body":{"injectables/PatientService.html":{}}}],["locally",{"_index":2812,"title":{},"body":{"index.html":{}}}],["location",{"_index":1418,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["location.search.substr(1).split(\"&\").foreach(item",{"_index":2543,"title":{},"body":{"injectables/SmartService.html":{}}}],["logarithmic",{"_index":310,"title":{},"body":{"components/AccountComponent.html":{}}}],["logic",{"_index":1141,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{}}}],["long",{"_index":1155,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["longer",{"_index":1388,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["losing",{"_index":820,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["low",{"_index":923,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["lower",{"_index":2090,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["m.name",{"_index":1993,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["mac",{"_index":2764,"title":{},"body":{"index.html":{}}}],["magnesium",{"_index":273,"title":{},"body":{"components/AccountComponent.html":{}}}],["main_list",{"_index":1607,"title":{},"body":{"components/FormBuilder.html":{}}}],["maintaining",{"_index":819,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["make",{"_index":1240,"title":{},"body":{"components/ConditionsComponent.html":{},"index.html":{}}}],["male",{"_index":2352,"title":{},"body":{"components/PatientComponent.html":{}}}],["manager",{"_index":2744,"title":{},"body":{"index.html":{}}}],["map",{"_index":514,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/PatientService.html":{}}}],["mapping",{"_index":2135,"title":{},"body":{"injectables/ObservationService.html":{}}}],["mappings",{"_index":2231,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["maps",{"_index":533,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mapservice",{"_index":390,"title":{"injectables/MapService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapservice.static_mappings",{"_index":2245,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["march",{"_index":1329,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["mark",{"_index":553,"title":{},"body":{"injectables/AssociationService.html":{}}}],["matching",{"_index":241,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(recency_multiplier",{"_index":1252,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["math.log(this.getstartdate().gettime",{"_index":1522,"title":{},"body":{"classes/Encounter.html":{}}}],["math.max(max",{"_index":1825,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.min(min",{"_index":1823,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.pow(1024",{"_index":1910,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["max",{"_index":1715,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate",{"_index":1669,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate.gettime",{"_index":1828,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["maximum",{"_index":915,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["md5",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["md5.hashstr(\"testing",{"_index":2528,"title":{},"body":{"injectables/SmartService.html":{}}}],["md5/dist/md5",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{}}}],["med",{"_index":884,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["med.periods.push",{"_index":888,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication",{"_index":854,"title":{"classes/Medication.html":{}},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"coverage.html":{}}}],["medication(cp.title",{"_index":886,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication.dosageunits",{"_index":1814,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.name",{"_index":1813,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.periods[i",{"_index":1815,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medicationmap",{"_index":877,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.get(cp.title",{"_index":885,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.set(cp.title",{"_index":893,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medications",{"_index":869,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{}}}],["medications'},{'name",{"_index":198,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["medications.html",{"_index":1979,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["medicationscomponent",{"_index":197,"title":{"components/MedicationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menu",{"_index":753,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["merged",{"_index":874,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["method",{"_index":1131,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["methods",{"_index":18,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["min",{"_index":1714,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mindate",{"_index":1670,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["minimum",{"_index":914,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["miscellaneous",{"_index":2841,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":331,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["model",{"_index":127,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["model.code",{"_index":351,"title":{},"body":{"components/AddObservation.html":{}}}],["models",{"_index":2794,"title":{},"body":{"index.html":{}}}],["models/allergyintolerance.model",{"_index":1017,"title":{},"body":{"injectables/ConditionService.html":{}}}],["models/bundle.model",{"_index":856,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["models/careplan.model",{"_index":731,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{}}}],["models/chart.model",{"_index":1770,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["models/condition.model",{"_index":527,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["models/contextmenuoption.model",{"_index":1410,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["models/encounter.model",{"_index":1534,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["models/form.model",{"_index":1634,"title":{},"body":{"components/FormBuilder.html":{}}}],["models/medication.model",{"_index":855,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{}}}],["models/observation.model",{"_index":528,"title":{},"body":{"injectables/AssociationService.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["models/patient.model",{"_index":732,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["models/server.model",{"_index":2343,"title":{},"body":{"components/PatientComponent.html":{}}}],["modified",{"_index":1144,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["modifiers",{"_index":1469,"title":{},"body":{"injectables/DoctorService.html":{}}}],["module",{"_index":370,"title":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["modules",{"_index":372,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"dependencies.html":{}}}],["moment().subtract(months",{"_index":1739,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().subtract(years",{"_index":1736,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().todate",{"_index":1738,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.maxdate).isvalid",{"_index":1719,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.mindate).isvalid",{"_index":1718,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(newdate).toisostring",{"_index":1125,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["moment(relativedatetime).toisostring",{"_index":1256,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["momentmodule",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":316,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["months",{"_index":1326,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["months').todate",{"_index":1740,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["months[d.getmonth",{"_index":1338,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["more",{"_index":1242,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["mouse",{"_index":1703,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["mouseevent",{"_index":1671,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["mousemove",{"_index":1707,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mousesubscription",{"_index":1672,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mouth",{"_index":2179,"title":{},"body":{"injectables/ObservationService.html":{}}}],["movements",{"_index":1704,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moving",{"_index":1885,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["mr",{"_index":2407,"title":{},"body":{"injectables/PatientService.html":{}}}],["mrn",{"_index":2304,"title":{},"body":{"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["ms",{"_index":1878,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["multiple",{"_index":872,"title":{},"body":{"injectables/CarePlanService.html":{},"components/PatientComponent.html":{}}}],["n",{"_index":1903,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["n1.code['coding'][0]['code",{"_index":1114,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n1.effectivedatetime",{"_index":2196,"title":{},"body":{"injectables/ObservationService.html":{}}}],["n1.onsetdatetime",{"_index":1116,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2",{"_index":1113,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{}}}],["n2.code['coding'][0]['code",{"_index":1115,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2.onsetdatetime",{"_index":1117,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["nav2",{"_index":2606,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["navigation",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1221,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["need",{"_index":1490,"title":{},"body":{"injectables/DoctorService.html":{},"components/HoverBoxComponent.html":{}}}],["needed",{"_index":1389,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["needs",{"_index":1474,"title":{},"body":{"injectables/DoctorService.html":{}}}],["new",{"_index":515,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{},"components/TimelinePopupComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["newcolumnstate",{"_index":1010,"title":{},"body":{"injectables/ConditionService.html":{}}}],["newcondition",{"_index":199,"title":{"components/NewCondition.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newcondition'},{'name",{"_index":200,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["newcondition.html",{"_index":1995,"title":{},"body":{"components/NewCondition.html":{}}}],["newdate",{"_index":1121,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newly",{"_index":1807,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["newtable",{"_index":1064,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtable(tablename",{"_index":1079,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtest",{"_index":1550,"title":{},"body":{"components/Favorites.html":{}}}],["newtoken",{"_index":1586,"title":{},"body":{"injectables/FhirService.html":{}}}],["next",{"_index":1026,"title":{},"body":{"injectables/ConditionService.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["nextlink",{"_index":1036,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["nextobservations",{"_index":2185,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ngafterviewinit",{"_index":758,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ngmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["ngonchanges",{"_index":20,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["ngoninit",{"_index":759,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{}}}],["ngx",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"injectables/DoctorService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":2745,"title":{},"body":{"index.html":{}}}],["none",{"_index":1190,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["normal",{"_index":202,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["normalbox1",{"_index":201,"title":{"components/NormalBox1.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalbox2",{"_index":205,"title":{"components/NormalBox2.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalvalues",{"_index":899,"title":{},"body":{"classes/Chart.html":{}}}],["nose",{"_index":2178,"title":{},"body":{"injectables/ObservationService.html":{}}}],["note",{"_index":74,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["notenavigation",{"_index":2011,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["notenavigation'},{'name",{"_index":208,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["notenavigation.html",{"_index":2012,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["notenavigationcomponent",{"_index":207,"title":{"components/NoteNavigationComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notes.html",{"_index":1453,"title":{},"body":{"components/DoctorNoteComponent.html":{}}}],["nothing",{"_index":1716,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["november",{"_index":1336,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["now",{"_index":112,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{}}}],["npm",{"_index":2743,"title":{},"body":{"index.html":{}}}],["null",{"_index":85,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["number",{"_index":39,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["numeric",{"_index":1780,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["o",{"_index":559,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["o.date",{"_index":2095,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["o.id",{"_index":2290,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.name",{"_index":2093,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["o.relativedatetime",{"_index":2298,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.value",{"_index":2094,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["o['code']['coding'][0]['display",{"_index":2067,"title":{},"body":{"classes/Observation.html":{}}}],["o['code']['text",{"_index":2066,"title":{},"body":{"classes/Observation.html":{}}}],["o['selected",{"_index":2289,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o['valuequantity']['unit",{"_index":2065,"title":{},"body":{"classes/Observation.html":{}}}],["o['valuequantity']['value",{"_index":2063,"title":{},"body":{"classes/Observation.html":{}}}],["ob",{"_index":2202,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ob.relativedatetime",{"_index":2204,"title":{},"body":{"injectables/ObservationService.html":{}}}],["object",{"_index":348,"title":{},"body":{"components/AddObservation.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["object.keys(observationsbycategory",{"_index":2223,"title":{},"body":{"injectables/ObservationService.html":{}}}],["obs",{"_index":2075,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["obs.isselected",{"_index":2085,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["obscount",{"_index":2646,"title":{},"body":{"components/TripleListComponent.html":{}}}],["observable",{"_index":850,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/PatientService.html":{}}}],["observable.concat",{"_index":1033,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observables",{"_index":1022,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observation",{"_index":505,"title":{"classes/Observation.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["observation.category[0].text",{"_index":2217,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.gettext(o",{"_index":2295,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getunits(o",{"_index":2297,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getvalue(o",{"_index":2296,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.grouping",{"_index":2206,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('category",{"_index":2215,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('valuequantity",{"_index":2214,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.service",{"_index":526,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation?patient",{"_index":2247,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observation['code']['coding'][0]['code",{"_index":584,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ObservationService.html":{}}}],["observation['code']['coding'][0]['system",{"_index":585,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation['effectivedatetime",{"_index":586,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationcategory",{"_index":2216,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationrecursion",{"_index":2070,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observationrecursion'},{'name",{"_index":210,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursion.html",{"_index":2071,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observationrecursionchart",{"_index":2098,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationrecursionchart'},{'name",{"_index":212,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursive",{"_index":209,"title":{"components/ObservationRecursive.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationrecursivechart",{"_index":211,"title":{"components/ObservationRecursiveChart.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationreturned",{"_index":2242,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations",{"_index":92,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["observations'},{'name",{"_index":214,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observations.html",{"_index":2230,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations.map(this.extractobservationinfo",{"_index":571,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationsbycategory",{"_index":2213,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory.hasownproperty(observationcategory",{"_index":2218,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[ctgry",{"_index":2225,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory",{"_index":2219,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory].push(observation",{"_index":2220,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationschart.html",{"_index":2099,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationscomponent",{"_index":213,"title":{"components/ObservationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay",{"_index":215,"title":{"components/ObservationsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay'},{'name",{"_index":216,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationsdisplay.html",{"_index":2251,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationselected",{"_index":2257,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationservice",{"_index":31,"title":{"injectables/ObservationService.html":{}},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsinfo",{"_index":570,"title":{},"body":{"injectables/AssociationService.html":{}}}],["occurrence",{"_index":1787,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["occurs",{"_index":2478,"title":{},"body":{"injectables/SmartService.html":{}}}],["october",{"_index":1335,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["of(conditions",{"_index":1041,"title":{},"body":{"injectables/ConditionService.html":{}}}],["of(encounters",{"_index":1540,"title":{},"body":{"injectables/EncounterService.html":{}}}],["onblur",{"_index":590,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["once",{"_index":974,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"index.html":{}}}],["onchanges",{"_index":1138,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ondatapointselect",{"_index":1673,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["ondatapointselect(chartevent",{"_index":1682,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["one",{"_index":875,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["onfocus",{"_index":591,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["onloadcomplete",{"_index":1205,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["onradiochanged",{"_index":2413,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onradiochanged(currstatus",{"_index":2416,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onrightclick",{"_index":1551,"title":{},"body":{"components/Favorites.html":{}}}],["onset",{"_index":578,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{}}}],["onsetdatetime",{"_index":503,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Condition.html":{}}}],["onsubmitclick",{"_index":1618,"title":{},"body":{"components/FormBuilder.html":{}}}],["onto",{"_index":2368,"title":{},"body":{"components/PatientComponent.html":{}}}],["opacity",{"_index":2622,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["open",{"_index":817,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["open(encounter",{"_index":2580,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["opened",{"_index":1400,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["openid",{"_index":2471,"title":{},"body":{"injectables/SmartService.html":{}}}],["operator",{"_index":1020,"title":{},"body":{"injectables/ConditionService.html":{}}}],["option",{"_index":1308,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["option.exec",{"_index":1437,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.exec(this.data",{"_index":1439,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.text",{"_index":1443,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["options",{"_index":803,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["options).pipe(map(res",{"_index":2402,"title":{},"body":{"injectables/PatientService.html":{}}}],["order",{"_index":1222,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["other_grouping",{"_index":2211,"title":{},"body":{"injectables/ObservationService.html":{}}}],["otherwise",{"_index":1516,"title":{},"body":{"classes/Encounter.html":{}}}],["out",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"injectables/SmartService.html":{},"overview.html":{}}}],["output",{"_index":63,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TripleListComponent.html":{}}}],["outputs",{"_index":761,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{},"components/TripleListComponent.html":{}}}],["outside",{"_index":1375,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["over",{"_index":871,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["overridden",{"_index":2227,"title":{},"body":{"injectables/ObservationService.html":{}}}],["overriden",{"_index":659,"title":{},"body":{"classes/BaseColumn.html":{}}}],["overview",{"_index":2818,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oxygen_saturation",{"_index":342,"title":{},"body":{"components/AddObservation.html":{}}}],["p1.name",{"_index":1791,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2",{"_index":1790,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2.name",{"_index":1792,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["package",{"_index":2692,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":643,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["paddedtable",{"_index":297,"title":{},"body":{"components/AccountComponent.html":{}}}],["paddedtd",{"_index":295,"title":{},"body":{"components/AccountComponent.html":{}}}],["padding:10px",{"_index":296,"title":{},"body":{"components/AccountComponent.html":{}}}],["page",{"_index":1027,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/PatientComponent.html":{}}}],["pages",{"_index":1029,"title":{},"body":{"injectables/ConditionService.html":{}}}],["paginated",{"_index":1024,"title":{},"body":{"injectables/ConditionService.html":{}}}],["param",{"_index":1413,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["parameter",{"_index":1382,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["parametername",{"_index":2456,"title":{},"body":{"injectables/SmartService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["parent",{"_index":777,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["parsed",{"_index":102,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseddata",{"_index":17,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseint(left.replace(/px",{"_index":2640,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["parseint(top.replace(/px",{"_index":2643,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["particularly",{"_index":2819,"title":{},"body":{"index.html":{}}}],["pass",{"_index":1481,"title":{},"body":{"injectables/DoctorService.html":{}}}],["passed",{"_index":1381,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["passthrough",{"_index":2648,"title":{},"body":{"components/TripleListComponent.html":{}}}],["password",{"_index":306,"title":{},"body":{"components/AccountComponent.html":{}}}],["path",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["patient",{"_index":711,"title":{"classes/Patient.html":{}},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["patient'},{'name",{"_index":218,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["patient.birthdate",{"_index":2382,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender",{"_index":2348,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender.charat(0).touppercase",{"_index":2379,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.html",{"_index":2316,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.id",{"_index":861,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["patient.mrn",{"_index":2380,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["patient.name[0].family[0",{"_index":2386,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0",{"_index":2385,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0",{"_index":2378,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient_viewer",{"_index":2760,"title":{},"body":{"index.html":{}}}],["patientcomponent",{"_index":217,"title":{"components/PatientComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["patientid",{"_index":2391,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientservice",{"_index":391,"title":{"injectables/PatientService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["pencil",{"_index":810,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["period",{"_index":682,"title":{},"body":{"classes/CarePlan.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{}}}],["periods",{"_index":873,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["persona",{"_index":2782,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1895,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(concatmap(bundle",{"_index":1035,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["pipe(debouncetime(100",{"_index":651,"title":{},"body":{"classes/BaseColumn.html":{}}}],["pipe(map(bundle",{"_index":864,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["pipes",{"_index":1897,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pipetransform",{"_index":1908,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pixel",{"_index":1891,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["pixels",{"_index":665,"title":{},"body":{"classes/BaseColumn.html":{},"components/HoverBoxComponent.html":{}}}],["place",{"_index":2821,"title":{},"body":{"index.html":{}}}],["plan",{"_index":811,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/MedicationsComponent.html":{}}}],["plans",{"_index":95,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{}}}],["please",{"_index":2510,"title":{},"body":{"injectables/SmartService.html":{}}}],["point",{"_index":1741,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["point.name",{"_index":1829,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.name.gettime",{"_index":1827,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.value",{"_index":1824,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity",{"_index":1781,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity['value",{"_index":1782,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["points",{"_index":910,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["popover",{"_index":1269,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["populatecategories",{"_index":2124,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populatecategories(categories",{"_index":2143,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populated",{"_index":2059,"title":{},"body":{"classes/Observation.html":{}}}],["popup",{"_index":1225,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["popup'},{'name",{"_index":229,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["pos",{"_index":2573,"title":{},"body":{"components/TimelineComponent.html":{}}}],["position",{"_index":1496,"title":{},"body":{"classes/Encounter.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{}}}],["position:string",{"_index":1513,"title":{},"body":{"classes/Encounter.html":{}}}],["possible",{"_index":947,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["potassium",{"_index":269,"title":{},"body":{"components/AccountComponent.html":{}}}],["practice",{"_index":125,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prefer",{"_index":2789,"title":{},"body":{"index.html":{}}}],["preparing",{"_index":2736,"title":{},"body":{"index.html":{}}}],["presses",{"_index":2630,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["pressure",{"_index":2166,"title":{},"body":{"injectables/ObservationService.html":{}}}],["prevent",{"_index":653,"title":{},"body":{"classes/BaseColumn.html":{}}}],["preventions/exposures",{"_index":146,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prevents",{"_index":1397,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["previously",{"_index":2400,"title":{},"body":{"injectables/PatientService.html":{}}}],["print",{"_index":2375,"title":{},"body":{"components/PatientComponent.html":{}}}],["printmsg",{"_index":1278,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["printmsg(condition",{"_index":1300,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["prior",{"_index":543,"title":{},"body":{"injectables/AssociationService.html":{}}}],["private",{"_index":491,"title":{},"body":{"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["probably",{"_index":1258,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["problem",{"_index":319,"title":{},"body":{"components/AccountComponent.html":{}}}],["problems",{"_index":143,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{}}}],["produces",{"_index":1247,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["product",{"_index":697,"title":{},"body":{"classes/CarePlan.html":{}}}],["productcodableconcept",{"_index":698,"title":{},"body":{"classes/CarePlan.html":{}}}],["productreference",{"_index":702,"title":{},"body":{"classes/CarePlan.html":{}}}],["profile",{"_index":2472,"title":{},"body":{"injectables/SmartService.html":{}}}],["progress",{"_index":2031,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["project",{"_index":2732,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1545,"title":{},"body":{"injectables/EncounterService.html":{}}}],["proper",{"_index":2370,"title":{},"body":{"components/PatientComponent.html":{}}}],["properties",{"_index":15,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["provided",{"_index":1820,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["providers",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["provides",{"_index":634,"title":{},"body":{"classes/BaseColumn.html":{}}}],["providing",{"_index":1794,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["proxy.herokuapp.com/token",{"_index":2522,"title":{},"body":{"injectables/SmartService.html":{}}}],["public",{"_index":1359,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/PatientService.html":{},"classes/Server.html":{}}}],["pug",{"_index":2281,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["purposes",{"_index":101,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"injectables/SmartService.html":{}}}],["push",{"_index":1476,"title":{},"body":{"injectables/DoctorService.html":{}}}],["pushing",{"_index":2809,"title":{},"body":{"index.html":{}}}],["px",{"_index":1421,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{}}}],["quality",{"_index":1081,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["queued",{"_index":1881,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["r",{"_index":1518,"title":{},"body":{"classes/Encounter.html":{}}}],["r.resource",{"_index":867,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["r.text",{"_index":1519,"title":{},"body":{"classes/Encounter.html":{}}}],["random",{"_index":816,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["range",{"_index":1803,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["ranges",{"_index":2060,"title":{},"body":{"classes/Observation.html":{}}}],["rate",{"_index":2168,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reactivity",{"_index":1140,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["readable",{"_index":1914,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["readonly",{"_index":2390,"title":{},"body":{"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["realistic",{"_index":1248,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["reason",{"_index":1497,"title":{},"body":{"classes/Encounter.html":{},"classes/Observation.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["reasons",{"_index":1514,"title":{},"body":{"classes/Encounter.html":{}}}],["reasontext",{"_index":2373,"title":{},"body":{"components/PatientComponent.html":{}}}],["rebuild",{"_index":123,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["recency_multiplier",{"_index":1249,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["recent",{"_index":1243,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["recently",{"_index":1569,"title":{},"body":{"components/Favorites.html":{}}}],["recompile",{"_index":2775,"title":{},"body":{"index.html":{}}}],["reconstruct",{"_index":111,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions",{"_index":21,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions(arrdata",{"_index":50,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings",{"_index":22,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings(arrdata",{"_index":52,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations",{"_index":23,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations(arrdata",{"_index":54,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructedobject",{"_index":2221,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reconstructedobject.push",{"_index":2224,"title":{},"body":{"injectables/ObservationService.html":{}}}],["recursion",{"_index":97,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["redirect",{"_index":2503,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirect_uri",{"_index":2513,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirecturi",{"_index":2445,"title":{},"body":{"injectables/SmartService.html":{}}}],["ref",{"_index":1367,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["reference",{"_index":703,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["referencerange",{"_index":2035,"title":{},"body":{"classes/Observation.html":{}}}],["reflect",{"_index":2715,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":832,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["registry.smarthealthit.org/structuredefinition/oauth",{"_index":2490,"title":{},"body":{"injectables/SmartService.html":{}}}],["relation",{"_index":676,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["relativedatetime",{"_index":979,"title":{},"body":{"classes/Condition.html":{},"components/ConditionsComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{}}}],["relevant",{"_index":562,"title":{},"body":{"injectables/AssociationService.html":{}}}],["remain",{"_index":1030,"title":{},"body":{"injectables/ConditionService.html":{}}}],["remove",{"_index":1307,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/HistoricalTrendsService.html":{}}}],["removechart",{"_index":1756,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["removechart(chartname",{"_index":1767,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["renderer",{"_index":594,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["rendering",{"_index":1257,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["repository",{"_index":2810,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1445,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["request",{"_index":2531,"title":{},"body":{"injectables/SmartService.html":{}}}],["requestauth",{"_index":2451,"title":{},"body":{"injectables/SmartService.html":{}}}],["res",{"_index":2371,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["res['identifier",{"_index":2404,"title":{},"body":{"injectables/PatientService.html":{}}}],["res['selectedconditions",{"_index":550,"title":{},"body":{"injectables/AssociationService.html":{}}}],["res['selectedobservations",{"_index":552,"title":{},"body":{"injectables/AssociationService.html":{}}}],["reset",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetdaterange",{"_index":1674,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["resettodefaultview",{"_index":2608,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resize",{"_index":648,"title":{},"body":{"classes/BaseColumn.html":{}}}],["resizing",{"_index":637,"title":{},"body":{"classes/BaseColumn.html":{}}}],["respiration",{"_index":2169,"title":{},"body":{"injectables/ObservationService.html":{}}}],["response",{"_index":548,"title":{},"body":{"injectables/AssociationService.html":{}}}],["response_type=code",{"_index":2532,"title":{},"body":{"injectables/SmartService.html":{}}}],["result",{"_index":240,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.tofixed(0",{"_index":1913,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["result.tofixed(2",{"_index":1912,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["results",{"_index":242,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":2246,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["retrieve",{"_index":857,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{}}}],["retrieved",{"_index":2367,"title":{},"body":{"components/PatientComponent.html":{}}}],["retrieves",{"_index":1267,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["return",{"_index":573,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["reusable",{"_index":1345,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["review",{"_index":2171,"title":{},"body":{"injectables/ObservationService.html":{}}}],["right",{"_index":805,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{}}}],["root",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":2701,"title":{},"body":{"dependencies.html":{}}}],["routermodule",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["routing",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1156,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["runassociationstool",{"_index":495,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["runassociationstool(checkedconditions",{"_index":512,"title":{},"body":{"injectables/AssociationService.html":{}}}],["running",{"_index":2751,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":628,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":630,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["s",{"_index":2346,"title":{},"body":{"components/PatientComponent.html":{}}}],["same",{"_index":81,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{}}}],["sandbox",{"_index":2778,"title":{},"body":{"index.html":{}}}],["sass",{"_index":2740,"title":{},"body":{"index.html":{}}}],["save",{"_index":328,"title":{},"body":{"components/AccountComponent.html":{}}}],["savesettings",{"_index":252,"title":{},"body":{"components/AccountComponent.html":{}}}],["scale",{"_index":308,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsComponent.html":{}}}],["scaledates",{"_index":2125,"title":{},"body":{"injectables/ObservationService.html":{}}}],["scaledtimesinceconditiononset",{"_index":1251,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scaledtimesinceobservation",{"_index":2201,"title":{},"body":{"injectables/ObservationService.html":{}}}],["schema",{"_index":105,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["scope",{"_index":2446,"title":{},"body":{"injectables/SmartService.html":{}}}],["scoping",{"_index":800,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["scrachpad",{"_index":2411,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["scratch",{"_index":642,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["scratchpad",{"_index":220,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["scratchpadcheckboxes",{"_index":1065,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadcheckboxes(checked",{"_index":1086,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadconditions",{"_index":1203,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scratchpadmode",{"_index":1279,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["scratchpadservice",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scratchpadservice.statechange$.subscribe",{"_index":738,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["scratchpadupdate",{"_index":219,"title":{"components/ScratchPadUpdate.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screen",{"_index":1876,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["scripting",{"_index":2509,"title":{},"body":{"injectables/SmartService.html":{}}}],["seems",{"_index":668,"title":{},"body":{"classes/BaseColumn.html":{}}}],["select",{"_index":223,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["selectcareplan",{"_index":760,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcareplan(careplan",{"_index":780,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcondition",{"_index":1066,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selectcondition(condition",{"_index":1088,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selected",{"_index":326,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["selectedcondition",{"_index":992,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["selectedconditions",{"_index":575,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectedobservations",{"_index":576,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectlistsingle",{"_index":222,"title":{"components/SelectListSingle.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectobservation",{"_index":2256,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selectobservation(observation",{"_index":2275,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["selectpatientbyid",{"_index":1832,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectpatientbyid(id",{"_index":1835,"title":{},"body":{"components/HomeComponent.html":{}}}],["selects",{"_index":1315,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["separate",{"_index":300,"title":{},"body":{"components/AccountComponent.html":{}}}],["september",{"_index":1334,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["series",{"_index":913,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["serve",{"_index":2773,"title":{},"body":{"index.html":{}}}],["server",{"_index":1638,"title":{"classes/Server.html":{}},"body":{"components/FormBuilder.html":{},"components/PatientComponent.html":{},"classes/Server.html":{},"coverage.html":{},"dependencies.html":{}}}],["service",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["services",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["services/association.service",{"_index":1304,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/careplan.service",{"_index":729,"title":{},"body":{"components/CarePlanComponent.html":{},"components/MedicationsComponent.html":{}}}],["services/condition.service",{"_index":1105,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/doctor.service",{"_index":287,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/Favorites.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["services/encounter.service",{"_index":2340,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["services/fhir.service",{"_index":728,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{}}}],["services/historicaltrends.service",{"_index":1701,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/map.service",{"_index":2241,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["services/observation.service",{"_index":65,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["services/patient.service",{"_index":1702,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["services/scratchpad.service",{"_index":730,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/smart.service",{"_index":1837,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/toolbar.service",{"_index":1562,"title":{},"body":{"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["session",{"_index":1053,"title":{},"body":{"injectables/ConditionService.html":{}}}],["set",{"_index":644,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["setcolumnstate",{"_index":998,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setcolumnstate(newcolumnstate",{"_index":1008,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setdaterange",{"_index":1675,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterange(form",{"_index":1686,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths",{"_index":1676,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths(months",{"_index":1688,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears",{"_index":1677,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears(years",{"_index":1690,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setpatientid",{"_index":2393,"title":{},"body":{"injectables/PatientService.html":{}}}],["setpatientid(patientid",{"_index":2396,"title":{},"body":{"injectables/PatientService.html":{}}}],["sets",{"_index":1735,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setters",{"_index":1266,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["settimeout",{"_index":1428,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["setting",{"_index":258,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["settings",{"_index":250,"title":{},"body":{"components/AccountComponent.html":{}}}],["settoken",{"_index":1577,"title":{},"body":{"injectables/FhirService.html":{}}}],["settoken(newtoken",{"_index":1584,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl",{"_index":1578,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl(url",{"_index":1587,"title":{},"body":{"injectables/FhirService.html":{}}}],["shift",{"_index":2086,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["shouldn't",{"_index":1805,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["show",{"_index":1364,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["show(data",{"_index":1392,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["show(items",{"_index":1863,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["showallergyhover",{"_index":2321,"title":{},"body":{"components/PatientComponent.html":{}}}],["showallergyhover(event",{"_index":2329,"title":{},"body":{"components/PatientComponent.html":{}}}],["showdefault",{"_index":614,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["shown",{"_index":804,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{}}}],["showscratchpad",{"_index":615,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["si[exp",{"_index":1915,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["side",{"_index":1710,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["sieve",{"_index":137,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["sign",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":2749,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1152,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{}}}],["single",{"_index":2428,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single'},{'name",{"_index":224,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["single.component",{"_index":1655,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["single.component.ts",{"_index":2427,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["single.component.ts:10",{"_index":2433,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:12",{"_index":2432,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:9",{"_index":2431,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.html",{"_index":2429,"title":{},"body":{"components/SelectListSingle.html":{}}}],["site",{"_index":2480,"title":{},"body":{"injectables/SmartService.html":{}}}],["skip",{"_index":1779,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["small",{"_index":1795,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smallest",{"_index":1818,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smartextension",{"_index":2486,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartextension[0].extension.foreach(arg",{"_index":2494,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartservice",{"_index":393,"title":{"injectables/SmartService.html":{}},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["smith",{"_index":304,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["sodium",{"_index":268,"title":{},"body":{"components/AccountComponent.html":{}}}],["sort",{"_index":1786,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["sortcondition",{"_index":1067,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["sortcondition(x",{"_index":1090,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["space",{"_index":1798,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["spacing",{"_index":301,"title":{},"body":{"components/AccountComponent.html":{}}}],["spad",{"_index":739,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["specific",{"_index":1713,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["specifically",{"_index":2768,"title":{},"body":{"index.html":{}}}],["specify",{"_index":1749,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/.../app.module.ts",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../conditions.component.ts",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts",{"_index":9,"title":{},"body":{"components/AccordionRecursion.html":{},"coverage.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:120",{"_index":55,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:128",{"_index":53,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:26",{"_index":42,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:29",{"_index":40,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:32",{"_index":43,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:35",{"_index":41,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:38",{"_index":60,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:39",{"_index":33,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:48",{"_index":48,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:71",{"_index":51,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:75",{"_index":45,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/account/account.component.ts",{"_index":243,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/components/account/account.component.ts:10",{"_index":286,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:11",{"_index":277,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:12",{"_index":267,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:13",{"_index":285,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:14",{"_index":256,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:18",{"_index":259,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:27",{"_index":261,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:33",{"_index":262,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/addobservation/addobservation.component.ts",{"_index":332,"title":{},"body":{"components/AddObservation.html":{},"coverage.html":{}}}],["src/app/components/addobservation/addobservation.component.ts:8",{"_index":349,"title":{},"body":{"components/AddObservation.html":{}}}],["src/app/components/addobservation/addobservation.component.ts:9",{"_index":335,"title":{},"body":{"components/AddObservation.html":{}}}],["src/app/components/app/app.component.ts",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/app/app.component.ts:7",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/basecolumn.ts",{"_index":609,"title":{},"body":{"classes/BaseColumn.html":{},"coverage.html":{}}}],["src/app/components/basecolumn.ts:23",{"_index":623,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:28",{"_index":624,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:29",{"_index":625,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:30",{"_index":626,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:33",{"_index":618,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:36",{"_index":621,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:39",{"_index":619,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:9",{"_index":617,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/careplan/careplan.component.ts",{"_index":704,"title":{},"body":{"components/CarePlanComponent.html":{},"coverage.html":{}}}],["src/app/components/careplan/careplan.component.ts:18",{"_index":723,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:19",{"_index":722,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:22",{"_index":721,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:25",{"_index":724,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:27",{"_index":713,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:43",{"_index":715,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:56",{"_index":714,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts",{"_index":750,"title":{},"body":{"components/CarePlanDisplay.html":{},"coverage.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:111",{"_index":769,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:21",{"_index":786,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:24",{"_index":782,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:27",{"_index":765,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:28",{"_index":767,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:30",{"_index":764,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:39",{"_index":779,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:44",{"_index":778,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:77",{"_index":781,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:85",{"_index":774,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:94",{"_index":772,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:98",{"_index":776,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts",{"_index":946,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"coverage.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:16",{"_index":955,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:22",{"_index":954,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:29",{"_index":961,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:40",{"_index":963,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:53",{"_index":958,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts",{"_index":1199,"title":{},"body":{"components/ConditionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/conditions/conditions.component.ts:122",{"_index":1211,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:131",{"_index":1208,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:30",{"_index":1217,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:33",{"_index":1213,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:34",{"_index":1216,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:37",{"_index":1215,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:39",{"_index":1219,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:40",{"_index":1212,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:41",{"_index":1214,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:44",{"_index":1218,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:46",{"_index":1207,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:47",{"_index":1206,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:73",{"_index":1209,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:87",{"_index":1210,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts",{"_index":1054,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:111",{"_index":1075,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:121",{"_index":1096,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:129",{"_index":1087,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:145",{"_index":1097,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:149",{"_index":1076,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:159",{"_index":1077,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:16",{"_index":1102,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:17",{"_index":1101,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:18",{"_index":1104,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:181",{"_index":1094,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:19",{"_index":1098,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:195",{"_index":1083,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:20",{"_index":1099,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:21",{"_index":1100,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:22",{"_index":1103,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:24",{"_index":1074,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:26",{"_index":1073,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:34",{"_index":1085,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:45",{"_index":1089,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:53",{"_index":1091,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:82",{"_index":1078,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts",{"_index":1270,"title":{},"body":{"components/ConditionsDisplay.html":{},"coverage.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:104",{"_index":1302,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:109",{"_index":1287,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:116",{"_index":1297,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:121",{"_index":1295,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:126",{"_index":1293,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:131",{"_index":1285,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:138",{"_index":1289,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:147",{"_index":1301,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:151",{"_index":1291,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:23",{"_index":1303,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:26",{"_index":1281,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:27",{"_index":1283,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:30",{"_index":1282,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:32",{"_index":1280,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:45",{"_index":1299,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:50",{"_index":1298,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts",{"_index":1344,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:113",{"_index":1378,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:133",{"_index":1384,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:28",{"_index":1407,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:33",{"_index":1403,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:35",{"_index":1409,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:36",{"_index":1408,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:37",{"_index":1406,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:43",{"_index":1394,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:50",{"_index":1396,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:51",{"_index":1366,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:58",{"_index":1370,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:67",{"_index":1372,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:82",{"_index":1393,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/doctornote/doctornote.component.ts",{"_index":1451,"title":{},"body":{"components/DoctorNoteComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts",{"_index":1548,"title":{},"body":{"components/Favorites.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:10",{"_index":1555,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:13",{"_index":1561,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:15",{"_index":1556,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:19",{"_index":1558,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:26",{"_index":1559,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/form",{"_index":1604,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["src/app/components/form_components/checkbox",{"_index":925,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["src/app/components/form_components/normal",{"_index":1996,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"coverage.html":{}}}],["src/app/components/form_components/scrachpad",{"_index":2409,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["src/app/components/form_components/select",{"_index":2426,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts",{"_index":1665,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:101",{"_index":1691,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:108",{"_index":1689,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:114",{"_index":1683,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:20",{"_index":1695,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:23",{"_index":1698,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:24",{"_index":1696,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:27",{"_index":1700,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:29",{"_index":1697,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:32",{"_index":1699,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:35",{"_index":1679,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:54",{"_index":1681,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:70",{"_index":1687,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:81",{"_index":1685,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1830,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:16",{"_index":1834,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:41",{"_index":1836,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts",{"_index":1847,"title":{},"body":{"components/HoverBoxComponent.html":{},"coverage.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:13",{"_index":1868,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:16",{"_index":1874,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:19",{"_index":1872,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:20",{"_index":1869,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:21",{"_index":1873,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:22",{"_index":1870,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:25",{"_index":1871,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:28",{"_index":1857,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:32",{"_index":1864,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:63",{"_index":1858,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:79",{"_index":1866,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:83",{"_index":1860,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:87",{"_index":1862,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts",{"_index":1918,"title":{},"body":{"components/LoadingAnimation.html":{},"coverage.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts:7",{"_index":1921,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["src/app/components/medications/medications.component.ts",{"_index":1978,"title":{},"body":{"components/MedicationsComponent.html":{},"coverage.html":{}}}],["src/app/components/medications/medications.component.ts:14",{"_index":1985,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:15",{"_index":1981,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:22",{"_index":1984,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:31",{"_index":1983,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/newcondition/newcondition.component.ts",{"_index":1994,"title":{},"body":{"components/NewCondition.html":{},"coverage.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts",{"_index":2010,"title":{},"body":{"components/NoteNavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:10",{"_index":2024,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:14",{"_index":2021,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:24",{"_index":2023,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:29",{"_index":2020,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:37",{"_index":2022,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:43",{"_index":2019,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts",{"_index":2069,"title":{},"body":{"components/ObservationRecursive.html":{},"coverage.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:12",{"_index":2078,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:13",{"_index":2077,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:14",{"_index":2083,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:15",{"_index":2076,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:24",{"_index":2080,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:61",{"_index":2081,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:65",{"_index":2082,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts",{"_index":2097,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"coverage.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:13",{"_index":2102,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:14",{"_index":2101,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:15",{"_index":2100,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:20",{"_index":2106,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:24",{"_index":2107,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:29",{"_index":2104,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observations/observations.component.ts",{"_index":2229,"title":{},"body":{"components/ObservationsComponent.html":{},"coverage.html":{}}}],["src/app/components/observations/observations.component.ts:20",{"_index":2239,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:21",{"_index":2240,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:22",{"_index":2238,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:24",{"_index":2233,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:27",{"_index":2237,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:30",{"_index":2232,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:60",{"_index":2234,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts",{"_index":2250,"title":{},"body":{"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:102",{"_index":2271,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:107",{"_index":2266,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:112",{"_index":2263,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:120",{"_index":2269,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:124",{"_index":2267,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:22",{"_index":2278,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:25",{"_index":2279,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:28",{"_index":2277,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:31",{"_index":2260,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:32",{"_index":2261,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:34",{"_index":2259,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:45",{"_index":2273,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:49",{"_index":2274,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:54",{"_index":2272,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:92",{"_index":2276,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/patient/patient.component.ts",{"_index":2315,"title":{},"body":{"components/PatientComponent.html":{},"coverage.html":{}}}],["src/app/components/patient/patient.component.ts:109",{"_index":2330,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:23",{"_index":2339,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:24",{"_index":2338,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:25",{"_index":2331,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:26",{"_index":2334,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:29",{"_index":2332,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:30",{"_index":2333,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:31",{"_index":2336,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:32",{"_index":2337,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:34",{"_index":2322,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:46",{"_index":2324,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:59",{"_index":2328,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:63",{"_index":2327,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:70",{"_index":2325,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:92",{"_index":2326,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts",{"_index":2555,"title":{},"body":{"components/TimelineComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline/timeline.component.ts:13",{"_index":2562,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:14",{"_index":2559,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:18",{"_index":2561,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:22",{"_index":2560,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts",{"_index":2575,"title":{},"body":{"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:14",{"_index":2585,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:15",{"_index":2583,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:16",{"_index":2581,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:25",{"_index":2579,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts",{"_index":2603,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:27",{"_index":2612,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:28",{"_index":2611,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:41",{"_index":2616,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:45",{"_index":2615,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:52",{"_index":2613,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:63",{"_index":2614,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:67",{"_index":2618,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts",{"_index":2644,"title":{},"body":{"components/TripleListComponent.html":{},"coverage.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:14",{"_index":2650,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:15",{"_index":2651,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:16",{"_index":2649,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:22",{"_index":2653,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/directives/auto",{"_index":587,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts",{"_index":1658,"title":{},"body":{"directives/HighlightDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts:8",{"_index":1660,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["src/app/models/allergyintolerance.model.ts",{"_index":356,"title":{},"body":{"classes/AllergyIntolerance.html":{},"coverage.html":{}}}],["src/app/models/allergyintolerance.model.ts:2",{"_index":360,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/allergyintolerance.model.ts:3",{"_index":359,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/associable.model.ts",{"_index":485,"title":{},"body":{"interfaces/Associable.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts",{"_index":671,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts:3",{"_index":674,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:4",{"_index":675,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:8",{"_index":1916,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/bundle.model.ts:9",{"_index":1917,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/careplan.model.ts",{"_index":678,"title":{},"body":{"classes/CarePlan.html":{},"coverage.html":{}}}],["src/app/models/careplan.model.ts:10",{"_index":688,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:15",{"_index":685,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:4",{"_index":687,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:5",{"_index":690,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:6",{"_index":689,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:7",{"_index":686,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/chart.model.ts",{"_index":896,"title":{},"body":{"classes/Chart.html":{},"coverage.html":{}}}],["src/app/models/chart.model.ts:14",{"_index":905,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:23",{"_index":909,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:24",{"_index":908,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:28",{"_index":906,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:3",{"_index":907,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:4",{"_index":902,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:5",{"_index":903,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:8",{"_index":904,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/client.model.ts",{"_index":943,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/app/models/client.model.ts:2",{"_index":944,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/client.model.ts:3",{"_index":945,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/condition.model.ts",{"_index":975,"title":{},"body":{"classes/Condition.html":{},"coverage.html":{}}}],["src/app/models/condition.model.ts:10",{"_index":984,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:11",{"_index":987,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:12",{"_index":982,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:4",{"_index":983,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:5",{"_index":986,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:6",{"_index":988,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:7",{"_index":989,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:8",{"_index":981,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:9",{"_index":985,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/contextmenuoption.model.ts",{"_index":1444,"title":{},"body":{"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["src/app/models/contextmenuoption.model.ts:10",{"_index":1447,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:15",{"_index":1450,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:23",{"_index":1446,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/encounter.model.ts",{"_index":1495,"title":{},"body":{"classes/Encounter.html":{},"coverage.html":{}}}],["src/app/models/encounter.model.ts:11",{"_index":1507,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:16",{"_index":1504,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:18",{"_index":1505,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:29",{"_index":1510,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:3",{"_index":1502,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:4",{"_index":1506,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:44",{"_index":1511,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:45",{"_index":1508,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:47",{"_index":1509,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:6",{"_index":1503,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/form.model.ts",{"_index":1599,"title":{},"body":{"classes/Form.html":{},"coverage.html":{}}}],["src/app/models/form.model.ts:2",{"_index":1601,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:3",{"_index":1602,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:4",{"_index":1600,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/medication.model.ts",{"_index":1969,"title":{},"body":{"classes/Medication.html":{},"coverage.html":{}}}],["src/app/models/medication.model.ts:10",{"_index":1971,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:3",{"_index":1973,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:4",{"_index":1972,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:6",{"_index":1974,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/observation.model.ts",{"_index":2033,"title":{},"body":{"classes/Observation.html":{},"coverage.html":{}}}],["src/app/models/observation.model.ts:10",{"_index":2051,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:11",{"_index":2050,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:14",{"_index":2047,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:15",{"_index":2045,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:18",{"_index":2058,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:23",{"_index":2056,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:28",{"_index":2054,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:33",{"_index":2052,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:4",{"_index":2046,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:5",{"_index":2049,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:6",{"_index":2044,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:7",{"_index":2048,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:8",{"_index":2042,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:9",{"_index":2043,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/patient.model.ts",{"_index":2299,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["src/app/models/patient.model.ts:10",{"_index":2314,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:11",{"_index":2312,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:3",{"_index":2306,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:4",{"_index":2310,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:5",{"_index":2308,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:6",{"_index":2309,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:7",{"_index":2307,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:8",{"_index":2311,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:9",{"_index":2313,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/server.model.ts",{"_index":2435,"title":{},"body":{"classes/Server.html":{},"coverage.html":{}}}],["src/app/models/server.model.ts:1",{"_index":2436,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/server.model.ts:4",{"_index":2437,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/timeline.model.ts",{"_index":2547,"title":{},"body":{"classes/Timeline.html":{},"coverage.html":{}}}],["src/app/models/timeline.model.ts:2",{"_index":2551,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:3",{"_index":2552,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:4",{"_index":2550,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:5",{"_index":2548,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:6",{"_index":2549,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:7",{"_index":2554,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:8",{"_index":2553,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/user.model.ts",{"_index":2657,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:3",{"_index":2658,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":2659,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/form.module.ts",{"_index":1648,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts",{"_index":1898,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:12",{"_index":1902,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:8",{"_index":1907,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/services/association.service.ts",{"_index":488,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{}}}],["src/app/services/association.service.ts:13",{"_index":524,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:17",{"_index":516,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:18",{"_index":498,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:26",{"_index":513,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:64",{"_index":510,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:88",{"_index":501,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:97",{"_index":506,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/careplan.service.ts",{"_index":844,"title":{},"body":{"injectables/CarePlanService.html":{},"coverage.html":{}}}],["src/app/services/careplan.service.ts:16",{"_index":847,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:24",{"_index":849,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:40",{"_index":852,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/condition.service.ts",{"_index":990,"title":{},"body":{"injectables/ConditionService.html":{},"coverage.html":{}}}],["src/app/services/condition.service.ts:17",{"_index":1013,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:19",{"_index":1011,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:21",{"_index":1014,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:23",{"_index":1012,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:24",{"_index":999,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:36",{"_index":1007,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:51",{"_index":1005,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:56",{"_index":1000,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:63",{"_index":1003,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:77",{"_index":1001,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:82",{"_index":1009,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/doctor.service.ts",{"_index":1454,"title":{},"body":{"injectables/DoctorService.html":{},"coverage.html":{}}}],["src/app/services/doctor.service.ts:10",{"_index":1460,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:15",{"_index":1464,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:46",{"_index":1462,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:8",{"_index":1466,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:9",{"_index":1465,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/encounter.service.ts",{"_index":1523,"title":{},"body":{"injectables/EncounterService.html":{},"coverage.html":{}}}],["src/app/services/encounter.service.ts:15",{"_index":1527,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:22",{"_index":1533,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:39",{"_index":1531,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:46",{"_index":1529,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/fhir.service.ts",{"_index":1572,"title":{},"body":{"injectables/FhirService.html":{},"coverage.html":{}}}],["src/app/services/fhir.service.ts:10",{"_index":1590,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:12",{"_index":1583,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:16",{"_index":1588,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:20",{"_index":1585,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:24",{"_index":1581,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:5",{"_index":1579,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:9",{"_index":1589,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/historicaltrends.service.ts",{"_index":1750,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["src/app/services/historicaltrends.service.ts:12",{"_index":1757,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:138",{"_index":1768,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:147",{"_index":1766,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:165",{"_index":1764,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:17",{"_index":1761,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:80",{"_index":1759,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:9",{"_index":1769,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/map.service.ts",{"_index":1922,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/services/map.service.ts:5",{"_index":1968,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/services/observation.service.ts",{"_index":2111,"title":{},"body":{"injectables/ObservationService.html":{},"coverage.html":{}}}],["src/app/services/observation.service.ts:132",{"_index":2141,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:139",{"_index":2139,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:14",{"_index":2154,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:15",{"_index":2149,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:157",{"_index":2142,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:16",{"_index":2151,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:17",{"_index":2150,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:175",{"_index":2131,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:179",{"_index":2146,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:18",{"_index":2152,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:19",{"_index":2153,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:190",{"_index":2130,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:20",{"_index":2155,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:206",{"_index":2133,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:217",{"_index":2144,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:22",{"_index":2126,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:255",{"_index":2128,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:284",{"_index":2137,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:289",{"_index":2147,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:293",{"_index":2148,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/patient.service.ts",{"_index":2389,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/app/services/patient.service.ts:12",{"_index":2398,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:15",{"_index":2394,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:23",{"_index":2397,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:28",{"_index":2395,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/scratchpad.service.ts",{"_index":2689,"title":{},"body":{"coverage.html":{}}}],["src/app/services/smart.service.ts",{"_index":2439,"title":{},"body":{"injectables/SmartService.html":{},"coverage.html":{}}}],["src/app/services/smart.service.ts:106",{"_index":2455,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:17",{"_index":2466,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:18",{"_index":2473,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:19",{"_index":2470,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:21",{"_index":2467,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:22",{"_index":2460,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:23",{"_index":2475,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:24",{"_index":2468,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:25",{"_index":2474,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:26",{"_index":2459,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:28",{"_index":2453,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:73",{"_index":2457,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:88",{"_index":2458,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:9",{"_index":2452,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/toolbar.service.ts",{"_index":2598,"title":{},"body":{"injectables/ToolBarService.html":{},"coverage.html":{}}}],["src/app/services/toolbar.service.ts:5",{"_index":2602,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["src/app/services/toolbar.service.ts:6",{"_index":2601,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["standard",{"_index":1431,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["start",{"_index":692,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{}}}],["started",{"_index":2729,"title":{"index.html":{}},"body":{}}],["state",{"_index":640,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["state('in",{"_index":2621,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["statements",{"_index":2662,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["states",{"_index":664,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["static",{"_index":785,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["static_mappings",{"_index":1923,"title":{},"body":{"injectables/MapService.html":{}}}],["stats",{"_index":814,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["status",{"_index":683,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"classes/Observation.html":{},"components/ScratchPadUpdate.html":{},"classes/Timeline.html":{}}}],["store",{"_index":967,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["stored",{"_index":2159,"title":{},"body":{"injectables/ObservationService.html":{}}}],["storedata",{"_index":1614,"title":{},"body":{"components/FormBuilder.html":{}}}],["storedata(data",{"_index":1625,"title":{},"body":{"components/FormBuilder.html":{}}}],["stores",{"_index":911,"title":{},"body":{"classes/Chart.html":{}}}],["strange",{"_index":798,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"classes/Medication.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"injectables/ToolBarService.html":{},"classes/User.html":{}}}],["strings",{"_index":2357,"title":{},"body":{"components/PatientComponent.html":{}}}],["structure",{"_index":73,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["structures",{"_index":1050,"title":{},"body":{"injectables/ConditionService.html":{}}}],["stuff",{"_index":748,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{}}}],["style",{"_index":1608,"title":{},"body":{"components/FormBuilder.html":{},"components/ToolbarComponent.html":{}}}],["styles",{"_index":1603,"title":{},"body":{"components/FormBuilder.html":{}}}],["subheading",{"_index":78,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["subheadings",{"_index":86,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["submit",{"_index":352,"title":{},"body":{"components/AddObservation.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{}}}],["submitclick",{"_index":1615,"title":{},"body":{"components/FormBuilder.html":{}}}],["subs",{"_index":79,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["subscribe",{"_index":736,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsComponent.html":{}}}],["subscribe((bundle",{"_index":2183,"title":{},"body":{"injectables/ObservationService.html":{}}}],["subscribe((event",{"_index":655,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["subscribe(res",{"_index":541,"title":{},"body":{"injectables/AssociationService.html":{}}}],["subscribe){data",{"_index":1473,"title":{},"body":{"injectables/DoctorService.html":{}}}],["subscription",{"_index":709,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["subtracts",{"_index":1733,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["such",{"_index":554,"title":{},"body":{"injectables/AssociationService.html":{},"index.html":{}}}],["super",{"_index":631,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["support",{"_index":2835,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":2827,"title":{},"body":{"index.html":{}}}],["sure",{"_index":2525,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["svg",{"_index":2836,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":962,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["switcher",{"_index":956,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switching",{"_index":662,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["switchnav",{"_index":2609,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["switchtodefault",{"_index":951,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switchtoscratchpad",{"_index":952,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["symbol",{"_index":1867,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["symptoms",{"_index":2174,"title":{},"body":{"injectables/ObservationService.html":{}}}],["system",{"_index":502,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"index.html":{}}}],["system:{{condition.code.coding[0].system",{"_index":2596,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["systemjs",{"_index":2719,"title":{},"body":{"dependencies.html":{}}}],["systems",{"_index":2172,"title":{},"body":{"injectables/ObservationService.html":{}}}],["table",{"_index":1173,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["tablename",{"_index":1084,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation",{"_index":1068,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation(clickedset",{"_index":1093,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2691,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2798,"title":{},"body":{"index.html":{}}}],["taken",{"_index":870,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["takes",{"_index":68,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["telecom",{"_index":2305,"title":{},"body":{"classes/Patient.html":{}}}],["temp",{"_index":1148,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temperature",{"_index":344,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["templateurl",{"_index":12,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["temptablevar",{"_index":1166,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temptablevar.hidden",{"_index":1169,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["terminal",{"_index":2754,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":2786,"title":{},"body":{"index.html":{}}}],["test",{"_index":1552,"title":{},"body":{"components/Favorites.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["test(ref",{"_index":1557,"title":{},"body":{"components/Favorites.html":{}}}],["test2",{"_index":1553,"title":{},"body":{"components/Favorites.html":{}}}],["tested",{"_index":2087,"title":{},"body":{"components/ObservationRecursive.html":{},"index.html":{}}}],["testing",{"_index":100,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["text",{"_index":361,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["textinputforedit",{"_index":1060,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["thanks",{"_index":2511,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.addcategoriesconditions(arrdata",{"_index":130,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.allergies",{"_index":2358,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies.length",{"_index":2362,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies[0",{"_index":2364,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergy",{"_index":2363,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.associatedmapconditions.clear",{"_index":544,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapconditions.set(c",{"_index":558,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.clear",{"_index":545,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.set(o",{"_index":561,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.associatedmapconditions.get(condition",{"_index":1323,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.associationservice.associatedmapobservations.get(observation",{"_index":2293,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.associationservice.runassociationstool(checkedconditions",{"_index":2629,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.aud",{"_index":2481,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.authorizeurl",{"_index":2499,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.base",{"_index":1592,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.boxdata",{"_index":2003,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["this.careplanloadfinished",{"_index":745,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.careplans",{"_index":744,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{}}}],["this.careplanselected.emit(this.selected",{"_index":823,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.careplanservice.loadcareplans(this.patient).subscribe(careplans",{"_index":743,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.careplanservice.loadmedications(this.patient).subscribe(medications",{"_index":1986,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.categorizedobservations",{"_index":2163,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.charts",{"_index":1810,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.delete(chartname",{"_index":1817,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(chartname",{"_index":1773,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(medication.name",{"_index":1812,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(chartname",{"_index":1809,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(medication.name",{"_index":1816,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.clicksubscription",{"_index":1434,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clicksubscription.unsubscribe",{"_index":1442,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clientid",{"_index":2534,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.closeable",{"_index":1415,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.closeable_delay",{"_index":1429,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.column",{"_index":964,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.columnstate",{"_index":965,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showdefault",{"_index":968,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showscratchpad",{"_index":969,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.updateservice",{"_index":966,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.columnheight",{"_index":645,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.columnnum",{"_index":113,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.columnstate",{"_index":740,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.columntype",{"_index":970,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.compiler.clearcache",{"_index":1838,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.conditiongrouping",{"_index":1111,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping.indexof(c",{"_index":1165,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0",{"_index":1160,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0].push(c",{"_index":1161,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1",{"_index":1162,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1].push(c",{"_index":1163,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount",{"_index":1185,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount].push(c",{"_index":1186,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.indexof(tablename",{"_index":1170,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.push(tablename",{"_index":1171,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditions",{"_index":1107,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.conditions.concat(conditions",{"_index":1232,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.filter(c",{"_index":1043,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.conditions.length",{"_index":1235,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.sort((c1",{"_index":1236,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions[value].isselected",{"_index":1146,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionselected.emit(this.selected",{"_index":1108,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionservice.conditions",{"_index":538,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.getcheckedconditions",{"_index":2627,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.conditionservice.getcolumnstate",{"_index":1306,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.loadallergies(this.patient).subscribe(allergies",{"_index":2356,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.conditionservice.loadconditions(this.patient).subscribe(conditions",{"_index":1106,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.selectedcondition",{"_index":1318,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.setcolumnstate(this.columnstate",{"_index":1264,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.cookieservice.get('state",{"_index":2504,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.get('tokenurl",{"_index":2516,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('fhirbaseurl",{"_index":2501,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('graphconfig",{"_index":1492,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.cookieservice.set('state",{"_index":2530,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('tokenurl",{"_index":2500,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.data",{"_index":1417,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.datepipe.transform(encounter.getstartdate(),'mm",{"_index":2588,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.description",{"_index":2422,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.deserialize(e['resource",{"_index":1537,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.doctorservice.addgraphconfig(this.settings",{"_index":292,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.assignvisible(this.conditions",{"_index":1129,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.doctorservice.configmode",{"_index":294,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.filter",{"_index":290,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doit(parseint(value",{"_index":1909,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["this.dosageunits",{"_index":1977,"title":{},"body":{"classes/Medication.html":{}}}],["this.el.nativeelement.textcontent",{"_index":1663,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["this.elref.nativeelement.queryselector('div').style.left",{"_index":2637,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elref.nativeelement.queryselector('div').style.top",{"_index":2638,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.encounters",{"_index":2564,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.concat(encounters",{"_index":2565,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.length",{"_index":2566,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(encounters",{"_index":2563,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(res",{"_index":2369,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.extractconditioninfo(c)['code",{"_index":556,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.extractnewobservations(nextobservations",{"_index":2189,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.extractobservationinfo(o)['code",{"_index":560,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.fhirbaseurl",{"_index":2476,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions",{"_index":863,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["this.fhirservice.getrequestoptions(false)).subscribe(data",{"_index":2485,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions(true",{"_index":2401,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.fhirservice.geturl",{"_index":859,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.fhirservice.settoken(data['access_token",{"_index":1844,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.cookieservice.get('fhirbaseurl",{"_index":1839,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.fhirbaseurl",{"_index":2484,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.token",{"_index":1840,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterset.add(code",{"_index":2209,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.filterset.has(code",{"_index":2205,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.findgetparameter(\"code",{"_index":2512,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"iss",{"_index":2477,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"launch",{"_index":2483,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter('state",{"_index":2505,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.firstiteration",{"_index":110,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.formbuilderservice.gettemplate().then(forms",{"_index":1639,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forminput",{"_index":1642,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forms",{"_index":1640,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getassociations",{"_index":540,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.getforms",{"_index":1637,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getgrouping(code",{"_index":2207,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.getscratchpadconditions",{"_index":1228,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.gettoken",{"_index":2506,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.getvaluerange(chart",{"_index":1799,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.graphconfig",{"_index":2344,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.graphconfig.push(list",{"_index":1491,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.groupconditions",{"_index":1130,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.groupmap",{"_index":2160,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.groupmap[x].indexof(code",{"_index":2210,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handledocclick(event",{"_index":1436,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.handleobservationbundle(bundle",{"_index":2184,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handleresize(event",{"_index":656,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.height_offset",{"_index":647,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.hide(event",{"_index":1440,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.hide(null",{"_index":1416,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.historicaltrendsservice.addmedicationchart(medication",{"_index":1991,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.historicaltrendsservice.removechart(medication.name",{"_index":1992,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.hover.show(this.allergies",{"_index":2377,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.hoverbox.hide(event",{"_index":2593,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverbox.show(details",{"_index":2592,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverstyling",{"_index":2365,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.http.get(url",{"_index":862,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.http.post(\"https://mongo",{"_index":2521,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.http.post(this.path",{"_index":574,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.inputdata.id",{"_index":2004,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["this.isallchecked",{"_index":839,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.items",{"_index":1884,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.justcreated",{"_index":1226,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.launch",{"_index":2482,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.left",{"_index":1422,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.level",{"_index":2109,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.leveldata",{"_index":118,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.listdata",{"_index":2434,"title":{},"body":{"components/SelectListSingle.html":{}}}],["this.loadallergies",{"_index":2354,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.loadcareplans(patient).pipe(map(careplans",{"_index":876,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["this.loadconditionspage(nextlink.url",{"_index":1040,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loadconditionspage(url",{"_index":1042,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loaded",{"_index":1261,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.loadencounters",{"_index":2355,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.loadencounterspage(nextlink.url",{"_index":1539,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadencounterspage(url",{"_index":1541,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadfinished",{"_index":119,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["this.loadobservationspage(nextlink.url",{"_index":2190,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.mappings",{"_index":2244,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.maxdate",{"_index":1722,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.maxdate.gettime",{"_index":1732,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.medications",{"_index":1987,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.medications.length",{"_index":1989,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.menu.addoption",{"_index":807,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.menu.show(null",{"_index":1742,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mindate",{"_index":1720,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mouseevent",{"_index":1708,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mousesubscription",{"_index":1706,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.name",{"_index":1976,"title":{},"body":{"classes/Medication.html":{}}}],["this.nav2",{"_index":2626,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.newtest",{"_index":1566,"title":{},"body":{"components/Favorites.html":{}}}],["this.obs",{"_index":2108,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.obscount",{"_index":2656,"title":{},"body":{"components/TripleListComponent.html":{}}}],["this.observations",{"_index":2187,"title":{},"body":{"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["this.observations.concat(nextobservations",{"_index":2188,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.reverse",{"_index":2192,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.sort((n1",{"_index":2195,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observationselected.emit(this.selected",{"_index":2287,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.observationservice.getcheckedobservations",{"_index":2628,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.observationservice.loadobservationspage(url",{"_index":2249,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.observationservice.observations",{"_index":539,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.onloadcomplete",{"_index":1233,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["this.options",{"_index":1411,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.options.concat(option",{"_index":1412,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.parseddata",{"_index":117,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.passthrough.emit(this.patient",{"_index":2654,"title":{},"body":{"components/TripleListComponent.html":{}}}],["this.path",{"_index":860,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["this.patient",{"_index":742,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.patient.id",{"_index":2248,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.patientid",{"_index":2399,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.loadpatient().subscribe(patient",{"_index":1709,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{}}}],["this.patientservice.setpatientid(id",{"_index":1846,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.periods",{"_index":1975,"title":{},"body":{"classes/Medication.html":{}}}],["this.reason",{"_index":1517,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{}}}],["this.reconstructdataconditions(this.leveldata",{"_index":114,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdatafindings(this.leveldata",{"_index":116,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdataobservations(this.leveldata",{"_index":115,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.redirecturi",{"_index":2535,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.ref.nativeelement.contains(event.target",{"_index":1414,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.renderer.setelementstyle(this.el.nativeelement",{"_index":603,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["this.requestauth",{"_index":2502,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scope",{"_index":2536,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scratchpadconditions",{"_index":1227,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.addcareplan(plan",{"_index":812,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.addcondition(condition",{"_index":1313,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.addconditionstoscratchpad",{"_index":2632,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.addobservation(observation",{"_index":2285,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.addobservationtoscratchpad",{"_index":2633,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.buttonclicked(true",{"_index":1158,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.checkcareplan(checked",{"_index":834,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkcondition(checked",{"_index":1319,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapcareplans.get(careplan",{"_index":828,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.foreach((ischecked",{"_index":1310,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(c",{"_index":1044,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(condition",{"_index":1322,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.foreach((ischecked",{"_index":2284,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(o",{"_index":2197,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(observation",{"_index":2291,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkobservation(checked",{"_index":2292,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.conditions.length",{"_index":971,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.getcareplans",{"_index":749,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.scratchpadservice.getconditions",{"_index":1268,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.getobservations",{"_index":2226,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.initconditions(this.conditions",{"_index":1263,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.observations.length",{"_index":972,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.removecondition(condition",{"_index":1312,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.switchtoscratchpad(false",{"_index":2636,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.switchtoscratchpad(true",{"_index":2635,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.indexof(this.conditions[value",{"_index":1149,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.push(this.conditions[value",{"_index":1147,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.splice(temp",{"_index":1157,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.totalcareplans",{"_index":824,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.totalobservations",{"_index":2288,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.selected",{"_index":741,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selected.id",{"_index":827,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selectedcondition",{"_index":2353,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectpatientbyid(data['patient",{"_index":1845,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectpatientbyid(this.patientservice.patientid",{"_index":1842,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.settings",{"_index":291,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.push(setting",{"_index":288,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.splice(this.settings.indexof(setting",{"_index":289,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.smartservice.authenticate().subscribe(data",{"_index":1843,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.state",{"_index":2527,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.status",{"_index":2423,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.subscription",{"_index":737,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.timeouthandle",{"_index":1883,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.token",{"_index":1593,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.tokenurl",{"_index":2498,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.toolbarservice.leftposition",{"_index":2639,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.toolbarservice.topposition",{"_index":2642,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.top",{"_index":1419,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.totaldata",{"_index":1644,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.trendsservice.charts",{"_index":1727,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.trendsservice.getdaterange(chart",{"_index":1730,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.uniqueobservations.length",{"_index":2193,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservations.push(observation",{"_index":2208,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservationsloadfinished",{"_index":2194,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.viewconditionlist",{"_index":1127,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.viewtoggle",{"_index":1126,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.visible",{"_index":1424,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this['code']['coding'][0]['code",{"_index":2068,"title":{},"body":{"classes/Observation.html":{}}}],["thismodel",{"_index":1485,"title":{},"body":{"injectables/DoctorService.html":{}}}],["three",{"_index":632,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["throat",{"_index":2180,"title":{},"body":{"injectables/ObservationService.html":{}}}],["through",{"_index":1032,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["throw",{"_index":1153,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tied",{"_index":1438,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["time",{"_index":307,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/SmartService.html":{}}}],["timeframe",{"_index":314,"title":{},"body":{"components/AccountComponent.html":{}}}],["timeline",{"_index":228,"title":{"classes/Timeline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["timeline.html",{"_index":2557,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timeline_popup.html",{"_index":2576,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["timelinecomponent",{"_index":225,"title":{"components/TimelineComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinepopupcomponent",{"_index":227,"title":{"components/TimelinePopupComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelines",{"_index":2556,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timelines'},{'name",{"_index":226,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["timeouthandle",{"_index":1852,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["times",{"_index":2030,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["timesinceconditiononset",{"_index":1250,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["timesinceobservation",{"_index":2199,"title":{},"body":{"injectables/ObservationService.html":{}}}],["title",{"_index":684,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["tmp",{"_index":2542,"title":{},"body":{"injectables/SmartService.html":{}}}],["tmp[0",{"_index":2545,"title":{},"body":{"injectables/SmartService.html":{}}}],["today's",{"_index":1734,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["todo",{"_index":529,"title":{},"body":{"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["toggle",{"_index":329,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["toggleconfigmode",{"_index":253,"title":{},"body":{"components/AccountComponent.html":{}}}],["toggleexpansion",{"_index":1069,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["togglefinalnote",{"_index":2016,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["toggleprogressnote",{"_index":2017,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["togglesidenote",{"_index":2018,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["toggling",{"_index":1133,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tok",{"_index":2493,"title":{},"body":{"injectables/SmartService.html":{}}}],["token",{"_index":1574,"title":{},"body":{"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["token_url",{"_index":2515,"title":{},"body":{"injectables/SmartService.html":{}}}],["tokenurl",{"_index":2447,"title":{},"body":{"injectables/SmartService.html":{}}}],["tool",{"_index":537,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["toolbar",{"_index":2604,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":231,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["toolbar.html",{"_index":2605,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":230,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolbarservice",{"_index":394,"title":{"injectables/ToolBarService.html":{}},"body":{"modules/AppModule.html":{},"components/Favorites.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":1189,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["top",{"_index":1357,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{}}}],["topoffset",{"_index":1853,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["topposition",{"_index":2600,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["total",{"_index":263,"title":{},"body":{"components/AccountComponent.html":{}}}],["totalconditions",{"_index":1262,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["totalcount",{"_index":2212,"title":{},"body":{"injectables/ObservationService.html":{}}}],["totaldata",{"_index":1612,"title":{},"body":{"components/FormBuilder.html":{}}}],["track",{"_index":639,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["tracking",{"_index":534,"title":{},"body":{"injectables/AssociationService.html":{}}}],["transactions",{"_index":2735,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1904,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transform(value",{"_index":1905,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transition('void",{"_index":2623,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["trend",{"_index":312,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["trends",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"injectables/HistoricalTrendsService.html":{}}}],["trendsservice",{"_index":1680,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["trick",{"_index":2280,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["trigger('fadein",{"_index":2620,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["triggered",{"_index":1229,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["triggering",{"_index":1390,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["triglycerides",{"_index":266,"title":{},"body":{"components/AccountComponent.html":{}}}],["triplelist",{"_index":233,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist.html",{"_index":2645,"title":{},"body":{"components/TripleListComponent.html":{}}}],["triplelistcomponent",{"_index":232,"title":{"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":89,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["try",{"_index":1176,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ts",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["tslib",{"_index":2722,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":921,"title":{},"body":{"classes/Chart.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1856,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["typeof(x",{"_index":1865,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["typescript",{"_index":2724,"title":{},"body":{"dependencies.html":{}}}],["typescript's",{"_index":2800,"title":{},"body":{"index.html":{}}}],["typescript/javascript",{"_index":801,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ui",{"_index":1139,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["unavailable",{"_index":532,"title":{},"body":{"injectables/AssociationService.html":{}}}],["uncheck",{"_index":838,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["unchecked",{"_index":1320,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{}}}],["unclicked",{"_index":831,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["undefined",{"_index":1486,"title":{},"body":{"injectables/DoctorService.html":{},"components/HoverBoxComponent.html":{}}}],["unintuitive",{"_index":2792,"title":{},"body":{"index.html":{}}}],["uniqueobservations",{"_index":2115,"title":{},"body":{"injectables/ObservationService.html":{}}}],["uniqueobservationsloadfinished",{"_index":2116,"title":{},"body":{"injectables/ObservationService.html":{}}}],["unit",{"_index":2294,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["units",{"_index":2064,"title":{},"body":{"classes/Observation.html":{}}}],["unknown",{"_index":2347,"title":{},"body":{"components/PatientComponent.html":{}}}],["unsubscribe",{"_index":1441,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["until",{"_index":1028,"title":{},"body":{"injectables/ConditionService.html":{}}}],["up",{"_index":1387,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["update",{"_index":657,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["update'},{'name",{"_index":221,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["update.component",{"_index":1657,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["update.component.ts",{"_index":2410,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["update.component.ts:11",{"_index":2419,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:12",{"_index":2421,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:13",{"_index":2420,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:15",{"_index":2415,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:19",{"_index":2417,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:9",{"_index":2414,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.html",{"_index":2412,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["updateposition",{"_index":2610,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updateposition(ref",{"_index":2617,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updatescratchpad",{"_index":1070,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["updateservice",{"_index":616,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["updatetotal",{"_index":2647,"title":{},"body":{"components/TripleListComponent.html":{}}}],["updatetotal(event",{"_index":2652,"title":{},"body":{"components/TripleListComponent.html":{}}}],["upon",{"_index":1348,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["upper",{"_index":2089,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["uri",{"_index":699,"title":{},"body":{"classes/CarePlan.html":{}}}],["uris",{"_index":2491,"title":{},"body":{"injectables/SmartService.html":{}}}],["url",{"_index":677,"title":{},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{}}}],["urlencoded",{"_index":2520,"title":{},"body":{"injectables/SmartService.html":{}}}],["usage",{"_index":887,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ContextMenuComponent.html":{}}}],["use",{"_index":1223,"title":{},"body":{"components/ConditionsComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Observation.html":{},"index.html":{}}}],["used",{"_index":98,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{}}}],["user",{"_index":1373,"title":{"classes/User.html":{}},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["userid",{"_index":1617,"title":{},"body":{"components/FormBuilder.html":{}}}],["userselected",{"_index":701,"title":{},"body":{"classes/CarePlan.html":{}}}],["uses",{"_index":121,"title":{},"body":{"components/AccordionRecursion.html":{},"components/FormBuilder.html":{}}}],["using",{"_index":1134,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"index.html":{}}}],["utility",{"_index":120,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["val",{"_index":2572,"title":{},"body":{"components/TimelineComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/variables.html":{}}}],["valuecodeableconcept",{"_index":2036,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["valuequantity",{"_index":2037,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["values",{"_index":325,"title":{},"body":{"components/AccountComponent.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["var",{"_index":138,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["variable",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1636,"title":{"miscellaneous/variables.html":{}},"body":{"components/FormBuilder.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verificationstatus",{"_index":980,"title":{},"body":{"classes/Condition.html":{}}}],["version",{"_index":700,"title":{},"body":{"classes/CarePlan.html":{},"index.html":{}}}],["very",{"_index":2824,"title":{},"body":{"index.html":{}}}],["via",{"_index":2747,"title":{},"body":{"index.html":{}}}],["view",{"_index":794,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["viewchild",{"_index":787,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["viewchild('hover",{"_index":2335,"title":{},"body":{"components/PatientComponent.html":{}}}],["viewchild('hoverbox",{"_index":2584,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["viewchild('menu",{"_index":784,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["viewchildren",{"_index":1633,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewchildren('form",{"_index":1629,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewer",{"_index":2730,"title":{},"body":{"index.html":{}}}],["views",{"_index":2634,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewtoggle",{"_index":1061,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["visible",{"_index":1358,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["visiblities",{"_index":1468,"title":{},"body":{"injectables/DoctorService.html":{}}}],["visit",{"_index":2366,"title":{},"body":{"components/PatientComponent.html":{},"index.html":{}}}],["vitals",{"_index":2164,"title":{},"body":{"injectables/ObservationService.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["waiting",{"_index":1877,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["want",{"_index":1488,"title":{},"body":{"injectables/DoctorService.html":{}}}],["way",{"_index":1260,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/SmartService.html":{}}}],["weight",{"_index":339,"title":{},"body":{"components/AddObservation.html":{},"components/DoctorNoteComponent.html":{},"injectables/ObservationService.html":{}}}],["west",{"_index":522,"title":{},"body":{"injectables/AssociationService.html":{}}}],["whatever",{"_index":2062,"title":{},"body":{"classes/Observation.html":{}}}],["whenever",{"_index":829,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["whenver",{"_index":821,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ToolbarComponent.html":{}}}],["wherever",{"_index":1404,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["whether",{"_index":789,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["width",{"_index":604,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/HistoricalTrendsComponent.html":{}}}],["window",{"_index":649,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerheight",{"_index":646,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerwidth",{"_index":1892,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["window.location.href",{"_index":2540,"title":{},"body":{"injectables/SmartService.html":{}}}],["windows",{"_index":2765,"title":{},"body":{"index.html":{}}}],["wipes",{"_index":1471,"title":{},"body":{"injectables/DoctorService.html":{}}}],["withauth",{"_index":1582,"title":{},"body":{"injectables/FhirService.html":{}}}],["within",{"_index":1305,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["without",{"_index":1401,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["work",{"_index":669,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/DoctorService.html":{}}}],["write",{"_index":2815,"title":{},"body":{"index.html":{}}}],["writing",{"_index":2823,"title":{},"body":{"index.html":{}}}],["www",{"_index":2519,"title":{},"body":{"injectables/SmartService.html":{}}}],["x",{"_index":1092,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["y",{"_index":916,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["year",{"_index":1747,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years",{"_index":1692,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years').todate",{"_index":1737,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["yscalemax",{"_index":900,"title":{},"body":{"classes/Chart.html":{}}}],["yscalemin",{"_index":901,"title":{},"body":{"classes/Chart.html":{}}}],["yyyy').tostring",{"_index":2590,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["zone.js",{"_index":2726,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccordionRecursion.html":{"url":"components/AccordionRecursion.html","title":"component - AccordionRecursion","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionRecursion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/accordionRecursion/accordionRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                accordionRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./accordionRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFinished\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                reconstructDataConditions\n                            \n                            \n                                reconstructDataFindings\n                            \n                            \n                                reconstructDataObservations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnNum\n                            \n                            \n                                firstIteration\n                            \n                            \n                                levelData\n                            \n                            \n                                levelNum\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstIteration\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesConditions\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataConditions\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataFindings\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataFindings(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataObservations\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataObservations(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output } from '@angular/core';\nimport { ObservationService } from '../../services/observation.service';\n\n@Component({\n    selector: 'accordionRecursion',\n    templateUrl: './accordionRecursion.html'\n})\nexport class AccordionRecursion {\n\n    /* This component takes in the data at the current level of the accordion structure:\n    Note that the structure of the data should be as follows:\n        {[\n            category: string,\n            subheading: boolean,\n            subs: [array of the same 4 headings here] // null if subheadings is false\n            data: [array of the list of conditions for that level] // null if subheadings is true\n        ]}\n    */\n    @Input() levelData: any;\n\n    // This is the type of the column (conditions: 0, observations: 1, or care plans: 2)\n    @Input() columnNum: number;\n\n    // This is the current level of recursion (used for the display)\n    @Input() levelNum: number;\n\n    // for testing purposes\n    @Input() firstIteration: number;\n\n    // Parsed data according to the above data schema \n    parsedData: any;\n    loadFinished: boolean = false;\n\n    // ===============================================================================================================================================\n    // ================================================================== EVENT METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    constructor(private observationService: ObservationService) { }\n\n    // When the component is first initialized\n    ngOnChanges() {\n        if (this.firstIteration == 1) {\n            // reconstruct the data for now\n            if (this.columnNum == 0)\n                this.reconstructDataConditions(this.levelData);\n            else if (this.columnNum == 1) {\n                this.reconstructDataObservations(this.levelData);\n            }\n            else if (this.columnNum == 2)\n                this.reconstructDataFindings(this.levelData);\n        } else {\n            this.parsedData = this.levelData;\n        }\n\n        this.loadFinished = true;\n    }\n\n    // ===============================================================================================================================================\n    // ================================================================== UTILITY METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    // NOTE: The current component uses this function to rebuild the data into correct structure, but in practice, this function should not be used\n    // since the data should already in the correct model format (described above levelData)\n    reconstructDataConditions(arrData: any) {\n        this.parsedData = this.addCategoriesConditions(arrData);\n    }\n\n    addCategoriesConditions(arrData: any) {\n        // For conditions, there are guaranteed to be 5 different columns; for now, just filter by active/inactive\n\n        // data sieve\n        var dataFilter =\n        {\n            'Chief Complaint': [],\n            'Active Problems': [],\n            'Inactive Problems': [],\n            'Allergies/Precautions': [],\n            'Preventions/Exposures': []\n        };\n\n        // Filter each condition into a category based on the data\n        for (var i = 0; i \n    \n\n    \n        \n\n  \n    \n        {{cat.category}} ({{cat.data?.length}})\n    \n    \n      \n        \n          \n        \n        \n          \n        \n            \n          \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{cat.category}} ({{cat.data?.length}})                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionRecursion'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/account.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                account\n            \n\n\n\n\n            \n                templateUrl\n                ./account.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cholesteralBattery\n                            \n                            \n                                electrolytes\n                            \n                            \n                                kidneyFunction\n                            \n                            \n                                liverFunction\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSetting\n                            \n                            \n                                saveSettings\n                            \n                            \n                                toggleConfigMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSetting\n                        \n                        \n                    \n                \n            \n            \n                \naddSetting(checked: boolean, setting: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveSettings\n                        \n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleConfigMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleConfigMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cholesteralBattery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            electrolytes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kidneyFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Creatinine\", \"GFR\", \"BUN\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            liverFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\n\n@Component({\n  selector: 'account',\n  templateUrl: './account.html',\n})\nexport class AccountComponent {\n  settings: Array = [];\n  electrolytes: Array = [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"];\n  cholesteralBattery: Array = [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"];\n  liverFunction: Array = [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"];\n  kidneyFunction: Array = [\"Creatinine\", \"GFR\", \"BUN\"];\n\n  constructor(private doctorService: DoctorService) { }\n\n  addSetting(checked: boolean, setting: string) {\n    if (checked) {\n      this.settings.push(setting);\n    }\n    else {\n      this.settings.splice(this.settings.indexOf(setting), 1);\n    }\n  }\n\n  saveSettings() {\n    this.doctorService.filter = this.settings;\n    this.doctorService.addGraphConfig(this.settings);\n    console.log(\"saved\");\n  }\n\n  toggleConfigMode() {\n    if (this.doctorService.configMode == true) {\n      this.doctorService.configMode = false;\n    }\n    else {\n      this.doctorService.configMode = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  .paddedtd {\n    padding:10px 0;\n  }\n  .paddedtable {\n    border-collapse: separate;\n    border-spacing: 10px 0;\n  }\n\n\n  \n    \n      \n         John Smith\n        \n          GeneralChange password\n          Event Timeline\n          Time Scale:\n            Linear\n            Logarithmic\n          \n          Historical Trend\n          Initial Timeframe:\n          \n            6 month\n            12 month\n            18 month\n          \n          Problem List\n          \n            \n              \n                \n              \n              Active Problems\n              \n                \n              \n              Allergies\n            \n            \n              \n                \n              \n              Inactive Problems\n              \n                \n              \n              Activities Due\n            \n          \n          Findings List\n          \n            \n              \n                \n              \n              Abnormal Values\n              \n                \n              \n              All Values\n            \n            \n              \n                \n              \n              No Values\n              \n                \n              \n              Selected Values\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n                \n              \n            \n          \n          Save\n          Toggle Config Mode\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .paddedtd {    padding:10px 0;  }  .paddedtable {    border-collapse: separate;    border-spacing: 10px 0;  }                     John Smith                  GeneralChange password          Event Timeline          Time Scale:            Linear            Logarithmic                    Historical Trend          Initial Timeframe:                      6 month            12 month            18 month                    Problem List                                                                                Active Problems                                                          Allergies                                                                                  Inactive Problems                                                          Activities Due                                Findings List                                                                                Abnormal Values                                                          All Values                                                                                  No Values                                                          Selected Values                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                              Save          Toggle Config Mode                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddObservation.html":{"url":"components/AddObservation.html","title":"component - AddObservation","body":"\n                   \n\n\n\n\n\n  Components\n  AddObservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/addObservation/addObservation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                addObservation\n            \n\n\n\n\n            \n                templateUrl\n                ./addObservation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrayOfKeyValues\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/addObservation/addObservation.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayOfKeyValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{ name: 'height', code: '8302-2' }, { name: 'weight', code: '3141-9' }, { name: 'oxygen_saturation', code: '2710-2' }, { name: 'temperature', code: '8310-5' }, { name: 'bmi', code: '39156-5' }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/addObservation/addObservation.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: '', code: \"1\" }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/addObservation/addObservation.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'addObservation',\n  templateUrl: './addObservation.html'\n})\nexport class AddObservation {\n  model = { name: '', code: \"1\" };\n  arrayOfKeyValues: any[] = [{ name: 'height', code: '8302-2' }, { name: 'weight', code: '3141-9' }, { name: 'oxygen_saturation', code: '2710-2' }, { name: 'temperature', code: '8310-5' }, { name: 'bmi', code: '39156-5' }];\n\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n      \n      \n        Finding:\n          \n        \n        code: {{model.code}}\n        Value:\n          \n        \n        submit\n      \n      \n        Close\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×                    Finding:                          code: {{model.code}}        Value:                          submit                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddObservation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllergyIntolerance.html":{"url":"classes/AllergyIntolerance.html","title":"class - AllergyIntolerance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllergyIntolerance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/allergyIntolerance.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AllergyIntolerance {\n    id: string;\n    code: {\n        text: string;\n    };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app/app.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.html'\n})\nexport class AppComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      Toggle navigation   \n    \n    \n      \n         Home\n         Account\n         Sign Out\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Toggle navigation                          Home         Account         Sign Out            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAddObservation\n\nAddObservation\n\nAppModule -->\n\nAddObservation->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanComponent\n\nCarePlanComponent\n\nAppModule -->\n\nCarePlanComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nDoctorNoteComponent\n\nDoctorNoteComponent\n\nAppModule -->\n\nDoctorNoteComponent->AppModule\n\n\n\n\n\nFavorites\n\nFavorites\n\nAppModule -->\n\nFavorites->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nNewCondition\n\nNewCondition\n\nAppModule -->\n\nNewCondition->AppModule\n\n\n\n\n\nNoteNavigationComponent\n\nNoteNavigationComponent\n\nAppModule -->\n\nNoteNavigationComponent->AppModule\n\n\n\n\n\nObservationRecursive\n\nObservationRecursive\n\nAppModule -->\n\nObservationRecursive->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionRecursion\n                        \n                        \n                            AccountComponent\n                        \n                        \n                            AddObservation\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CarePlanComponent\n                        \n                        \n                            CarePlanDisplay\n                        \n                        \n                            ColumnStateSwitcherComponent\n                        \n                        \n                            ConditionsChartComponent\n                        \n                        \n                            ConditionsComponent\n                        \n                        \n                            ConditionsDisplay\n                        \n                        \n                            ContextMenuComponent\n                        \n                        \n                            DoctorNoteComponent\n                        \n                        \n                            Favorites\n                        \n                        \n                            FormBuilder\n                        \n                        \n                            HistoricalTrendsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HoverBoxComponent\n                        \n                        \n                            LoadingAnimation\n                        \n                        \n                            MedicationsComponent\n                        \n                        \n                            NewCondition\n                        \n                        \n                            NoteNavigationComponent\n                        \n                        \n                            ObservationRecursive\n                        \n                        \n                            ObservationRecursiveChart\n                        \n                        \n                            ObservationsComponent\n                        \n                        \n                            ObservationsDisplay\n                        \n                        \n                            PatientComponent\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelinePopupComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TripleListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AssociationService\n                        \n                        \n                            CarePlanService\n                        \n                        \n                            ConditionService\n                        \n                        \n                            DoctorService\n                        \n                        \n                            EncounterService\n                        \n                        \n                            FhirService\n                        \n                        \n                            HistoricalTrendsService\n                        \n                        \n                            MapService\n                        \n                        \n                            ObservationService\n                        \n                        \n                            PatientService\n                        \n                        \n                            ScratchPadService\n                        \n                        \n                            SmartService\n                        \n                        \n                            ToolBarService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormCreatorModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, enableProdMode } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// COMPONENT IMPORTS\nimport { AppComponent } from './app/components/app/app.component';\nimport { HomeComponent } from './app/components/home/home.component';\nimport { PatientComponent } from './app/components/patient/patient.component';\nimport { ConditionsComponent } from './app/components/conditions/conditions.component';\nimport { TimelineComponent } from './app/components/timeline/timeline.component';\nimport { TimelinePopupComponent } from './app/components/timeline_popup/timeline_popup.component';\nimport { ObservationsComponent } from './app/components/observations/observations.component';\nimport { CarePlanComponent } from './app/components/carePlan/carePlan.component';\nimport { HoverBoxComponent } from \"./app/components/hoverBox/hoverBox.component\";\nimport { LoadingAnimation } from './app/components/loadingAnimation/loadingAnimation.component';\nimport { DoctorNoteComponent } from './app/components/doctorNote/doctorNote.component';\nimport { AccountComponent } from './app/components/account/account.component';\nimport { ToolbarComponent } from './app/components/toolbar/toolbar.component';\nimport { TripleListComponent } from './app/components/tripleList/tripleList.component';\nimport { ObservationRecursive } from './app/components/observationRecursion/observationRecursion.component';\nimport { AddObservation } from './app/components/addObservation/addObservation.component';\nimport { Favorites } from './app/components/favorites/favorites.component';\nimport { ObservationRecursiveChart } from './app/components/observationRecursionChart/observationRecursionChart.component';\nimport { MedicationsComponent } from './app/components/medications/medications.component';\nimport { ConditionsChartComponent } from './app/components/conditionsChart/conditionsChart.component';\nimport { ColumnStateSwitcherComponent } from './app/components/columnStateSwitcher/columnStateSwitcher.component';\nimport { NewCondition } from './app/components/newCondition/newCondition.component';\nimport { FormBuilder } from './app/components/form-builder/form-builder.component'\nimport { ContextMenuComponent } from './app/components/contextMenu/contextMenu.component';\nimport { CarePlanDisplay } from './app/components/carePlanDisplay/carePlanDisplay.component';\nimport { NoteNavigationComponent } from './app/components/noteNavigation/noteNavigation.component';\nimport { AccordionRecursion } from './app/components/accordionRecursion/accordionRecursion.component';\nimport { ConditionsDisplay } from './app/components/conditionsDisplay/conditionsDisplay.component';\nimport { HistoricalTrendsComponent } from './app/components/historicalTrends/historicalTrends.component';\nimport { ObservationsDisplay } from './app/components/observationsDisplay/observationsDisplay.component';\n\n// SERVICE IMPORTS\nimport { CookieService } from 'ngx-cookie-service';\nimport { EncounterService } from './app/services/encounter.service';\nimport { FhirService } from './app/services/fhir.service';\nimport { PatientService } from './app/services/patient.service';\nimport { ConditionService } from './app/services/condition.service';\nimport { CarePlanService } from './app/services/carePlan.service';\nimport { ObservationService } from './app/services/observation.service';\nimport { MapService } from './app/services/map.service';\nimport { DoctorService } from './app/services/doctor.service';\nimport { SmartService } from './app/services/smart.service';\nimport { HistoricalTrendsService } from './app/services/historicalTrends.service';\nimport { ScratchPadService } from './app/services/scratchPad.service';\nimport { ToolBarService } from './app/services/toolbar.service';\nimport { AssociationService } from './app/services/association.service';\n\nimport { MomentModule } from 'ngx-moment';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n\nenableProdMode();\n\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormCreatorModule } from './app/modules/form.module';\n\nconst appRoutes: Routes = [\n  { path: 'account', component: AccountComponent },\n  { path: 'trends', component: HistoricalTrendsComponent },\n  { path: '', component: HomeComponent },\n  { path: '**', component: HomeComponent }\n]\nconst appRoutingProviders: any[] = [];\nconst routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n@NgModule({\n  imports: [\n    FormCreatorModule,\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    MomentModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  declarations: [ // Components and Directives\n    AppComponent,\n    HomeComponent,\n    PatientComponent,\n    AccordionRecursion,\n\n    // OBSERVATIONS COLUMN\n    ObservationsComponent,\n    ObservationsDisplay,\n\n    // CONDITIONS COLUMN\n    ConditionsComponent,\n    ConditionsDisplay,\n\n    // CAREPLAN COLUMN\n    CarePlanComponent,\n    CarePlanDisplay,\n    MedicationsComponent,\n\n    TimelineComponent,\n    TimelinePopupComponent,\n    LoadingAnimation,\n    FormBuilder,\n    AccountComponent,\n    DoctorNoteComponent,\n    ToolbarComponent,\n    TripleListComponent,\n    ObservationRecursive,\n    AddObservation,\n    Favorites,\n    ObservationRecursiveChart,\n    ConditionsChartComponent,\n    ColumnStateSwitcherComponent,\n    NewCondition,\n    ContextMenuComponent,\n    NoteNavigationComponent,\n    HoverBoxComponent,\n    HistoricalTrendsComponent,\n  ],\n  providers: [ // Services\n    appRoutingProviders,\n    CookieService,\n    EncounterService,\n    FhirService,\n    PatientService,\n    ObservationService,\n    ConditionService,\n    MapService,\n    DoctorService,\n    SmartService,\n    CarePlanService,\n    HistoricalTrendsService,\n    ScratchPadService,\n    ToolBarService,\n    AssociationService,\n  ],\n  bootstrap: [AppComponent] // Root Component\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Associable.html":{"url":"interfaces/Associable.html","title":"interface - Associable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Associable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/associable.model.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface Associable {\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associatedMapConditions\n                            \n                            \n                                associatedMapObservations\n                            \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractConditionInfo\n                            \n                            \n                                    Private\n                                extractObservationInfo\n                            \n                            \n                                    Private\n                                getAssociations\n                            \n                            \n                                runAssociationsTool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, conditionService: ConditionService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractConditionInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractConditionInfo(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; onsetDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractObservationInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractObservationInfo(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; effectiveDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAssociations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssociations(checkedConditions: Array, checkedObservations: Array, conditions: Array, observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool(checkedConditions: Array, checkedObservations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConditionService } from './condition.service';\nimport { ObservationService } from './observation.service';\n\nimport { Condition } from '../models/condition.model';\nimport { Observation } from '../models/observation.model';\n\n@Injectable()\nexport class AssociationService {\n    // TODO: This endpoint is currently unavailable\n    private path = 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items';\n\n    // Maps for tracking which conditions and observations\n    // are currently associated (according to the associations tool)\n    associatedMapConditions: Map = new Map();\n    associatedMapObservations: Map = new Map();\n\n    constructor(\n        private http: HttpClient,\n        private conditionService: ConditionService,\n        private observationService: ObservationService\n    ) { }\n\n    runAssociationsTool(checkedConditions: Array, checkedObservations: Array) {\n        let conditions = this.conditionService.conditions;\n        let observations = this.observationService.observations;\n\n        this.getAssociations(\n            checkedConditions,\n            checkedObservations,\n            conditions,\n            observations\n        ).subscribe(res => {\n            // Clear prior associations\n            this.associatedMapConditions.clear();\n            this.associatedMapObservations.clear();\n\n            // Extract associations API response\n            let associatedConditions = res['selectedConditions'];\n            let associatedObservations = res['selectedObservations'];\n\n            // Mark associated conditions as such\n            for (let a of associatedConditions) {\n                for (let c of conditions) {\n                    if (this.extractConditionInfo(c)['code'] == a['code']) {\n                        this.associatedMapConditions.set(c, true);\n                    }\n                }\n            }\n\n            // Mark associated observations as such\n            for (let a of associatedObservations) {\n                for (let o of observations) {\n                    if (this.extractObservationInfo(o)['code'] == a['code']) {\n                        this.associatedMapObservations.set(o, true);\n                    }\n                }\n            }\n        });\n    }\n\n    private getAssociations(\n        checkedConditions: Array,\n        checkedObservations: Array,\n        conditions: Array,\n        observations: Array,\n    ) {\n        // Extract relevant fields from checked conditions and observations\n        let checkedConditionsInfo = checkedConditions.map(this.extractConditionInfo);\n        let checkedObservationsInfo = checkedObservations.map(this.extractObservationInfo);\n\n        // Extract relevant fields from all conditions and observations\n        let conditionsInfo = conditions.map(this.extractConditionInfo);\n        let observationsInfo = observations.map(this.extractObservationInfo);\n\n        // Call associations API endpoint\n        return this.http.post(this.path, {\n            selectedConditions: checkedConditionsInfo,\n            selectedObservations: checkedObservationsInfo,\n            conditions: conditionsInfo,\n            observations: observationsInfo,\n        });\n    }\n\n    // Extract the code, coding system, and onset datetime from a condition\n    private extractConditionInfo(condition: Condition) {\n        return {\n            code: condition['code']['coding'][0]['code'],\n            system: condition['code']['coding'][0]['system'],\n            onsetDateTime: condition['onsetDateTime'],\n        }\n    }\n\n    // Extract the code, coding system, and effective datetime from an observation\n    private extractObservationInfo(observation: Observation) {\n        return {\n            code: observation['code']['coding'][0]['code'],\n            system: observation['code']['coding'][0]['system'],\n            effectiveDateTime: observation['effectiveDateTime'],\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutoGrowDirective.html":{"url":"directives/AutoGrowDirective.html","title":"directive - AutoGrowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AutoGrowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/auto-grow.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [autoGrow]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/auto-grow.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFocus\n                        \n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer} from '@angular/core';\n\n@Directive({\n\tselector: '[autoGrow]',\n\thost: {\n\t\t'(focus)': 'onFocus()',\n\t\t'(blur)': 'onBlur()'\n\t}\n})\nexport class AutoGrowDirective {\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t}\n\n\tonFocus() {\n\t\t// console.log('focus!');\n\t\tthis.renderer.setElementStyle(this.el.nativeElement, 'width', '200px');\n\t}\n\t onBlur() {\n\t\t//  console.log('blur');\n\t\t this.renderer.setElementStyle(this.el.nativeElement, 'width', '120px');\n\t }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseColumn.html":{"url":"classes/BaseColumn.html","title":"class - BaseColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/baseColumn.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/baseColumn.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/*\nSuper class of all three columns in the application. Provides\nfunctionality for dynamic resizing, and keeps track of which\nstate the column is currently in (ie, scratch pad or default).\n*/\nexport class BaseColumn {\n  constructor() {\n    // Set the initial height of the column.\n    this.columnHeight = window.innerHeight - this.HEIGHT_OFFSET;\n\n    // Resize the column on each window resize event.\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(100)) // Debounce to prevent excessive resizing.\n      .subscribe((event) => {\n        this.handleResize(event);\n    });\n  }\n\n  // Update the height of the column.\n  handleResize(event) {\n    this.columnHeight = event.target.innerHeight - this.HEIGHT_OFFSET;\n  }\n\n  // Can be overriden in the child class to handle switching between states.\n  showDefault() { }\n  showScratchPad() { }\n  updateService() { }\n\n  // The current height (in pixels) of the column.\n  columnHeight: number;\n\n  // 220px is an approximate value that seems to work for now.\n  HEIGHT_OFFSET: number = 180;\n\n  // The current state (ie, scratch pad) of the column.\n  columnState: string = \"default\";\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bundle.html":{"url":"classes/Bundle.html","title":"class - Bundle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bundle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                link\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CarePlan.html":{"url":"classes/CarePlan.html","title":"class - CarePlan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CarePlan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/carePlan.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class CarePlan implements Associable {\n    id: string;\n    title: string;\n    status: string;\n    description: string;\n\n\n    period: {\n        start: Date;\n        end: Date;\n    }\n\n    activity: {\n        detail: {\n            status: string;\n            dailyAmount: {\n                value: number;\n                system: string;\n                code: string;\n            }\n            product: {\n                productCodableConcept: {\n                    coding: {\n                        // URI\n                        system: string;\n                        version: string;\n                        code: string;\n                        display: string;\n                        userSelected: boolean;\n                    }[],\n                    text: string;\n                }\n                productReference: {\n                    reference: string;\n                    type: string;\n                    display: string;\n                }\n            }\n        }\n    }[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanComponent.html":{"url":"components/CarePlanComponent.html","title":"component - CarePlanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlan/carePlan.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                carePlan\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlan.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carePlanLoadFinished\n                            \n                            \n                                carePlans\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCarePlans\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, carePlanService: CarePlanService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlan/carePlan.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCarePlans()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlan/carePlan.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlan/carePlan.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlanLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlans\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { CarePlan } from '../../models/carePlan.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'carePlan',\n  templateUrl: './carePlan.html'\n})\nexport class CarePlanComponent extends BaseColumn {\n\n  selected: CarePlan;\n  carePlans: Array;\n  \n  // check for load finished\n  carePlanLoadFinished: boolean = false;\n\n  // for column switching\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n\n  constructor(private fhirService: FhirService, private carePlanService: CarePlanService, private scratchPadService: ScratchPadService) {\n    super();\n\n    // subscribe to scratch pad service for column switching\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.carePlanService.loadCarePlans(this.patient).subscribe(carePlans => {\n        this.carePlans = carePlans;\n        this.carePlanLoadFinished = true;\n        console.log(\"Loaded \" + carePlans.length + \" care plans.\");\n      });\n    }\n  }\n\n  // get the scratch pad stuff for care plans\n  getScratchPadCarePlans() {\n    return this.scratchPadService.getCarePlans();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Care Plans\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Care Plans                                                                                            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanDisplay.html":{"url":"components/CarePlanDisplay.html","title":"component - CarePlanDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                careplanDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlanDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllCarePlans\n                            \n                            \n                                checkCarePlan\n                            \n                            \n                                checkClicked\n                            \n                            \n                                expand\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectCarePlan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                carePlans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                careplanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        carePlans\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        careplanSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllCarePlans(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCarePlan(checked: boolean, checkedCarePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedCarePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncheckClicked(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \nselectCarePlan(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { CarePlan } from '../../models/carePlan.model';\n\n@Component({\n  selector: 'careplanDisplay',\n  templateUrl: './carePlanDisplay.html'\n})\nexport class CarePlanDisplay {\n  // The currently selected careplan in the list.\n  selected: CarePlan;\n\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of careplans to be displayed\n  @Input() carePlans: Array;\n  @Output() careplanSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu !: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(private scratchPadService: ScratchPadService) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking careplans.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function (plan) {\n        this.scratchPadService.addCarePlan(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  //whenver a line is selected\n  selectCarePlan(carePlan: CarePlan) {\n    this.selected = carePlan;\n    this.careplanSelected.emit(this.selected);\n    for (let c of this.scratchPadService.totalCareplans) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  checkClicked(carePlan: CarePlan) {\n    if (this.scratchPadService.checkedMapCareplans.get(carePlan)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkCarePlan(checked: boolean, checkedCarePlan: CarePlan) {\n    this.scratchPadService.checkCarePlan(checked, checkedCarePlan);\n  }\n\n  expand(parent: string) {\n    /*\n    for (let c of this.carePlans) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n\n  // Check or uncheck all conditions.\n  checkAllCarePlans(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let carePlan of this.carePlans) {\n      this.scratchPadService.checkCarePlan(checked, carePlan);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      Description\n      Start\n      End\n    \n  \n  \n     \n      \n        \n      \n      {{cP['title']}}\n      {{cP.period.start}}\n      {{cP.period.end}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Description      Start      End                                       {{cP[\\'title\\']}}      {{cP.period.start}}      {{cP.period.end}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarePlanService.html":{"url":"injectables/CarePlanService.html","title":"injectable - CarePlanService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CarePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/carePlan.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCarePlans\n                            \n                            \n                                loadMedications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \nloadCarePlans(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMedications\n                        \n                        \n                    \n                \n            \n            \n                \nloadMedications(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/CarePlan'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Patient } from '../models/patient.model';\nimport { CarePlan } from '../models/carePlan.model';\nimport { Medication } from '../models/medication.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class CarePlanService {\n  private path = '/CarePlan';\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient\n  ) { }\n\n  // Retrieve care plans for a given patient\n  loadCarePlans(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no care plans, so return an empty array\n          return new Array();\n        }\n      }));\n  }\n\n  // Retrieve medications for a given patient.\n  // If a given medication is taken over multiple periods, it is merged into one.\n  loadMedications(patient: Patient): Observable> {\n    return this.loadCarePlans(patient).pipe(map(carePlans => {\n      let medicationMap: Map = new Map();\n\n      for (let cp of carePlans) {\n        let dosageUnits = cp.activity[0].detail.dailyAmount.code;\n\n        // Retrieve the existing medication, or create it if it does not yet exist.\n        let med: Medication = medicationMap.get(cp.title) || new Medication(cp.title, dosageUnits);\n\n        // Add a period of usage to the medication.\n        med.periods.push({\n          start: new Date(cp.period.start),\n          end: new Date(cp.period.end),\n          dosage: cp.activity[0].detail.dailyAmount.value\n        });\n\n        medicationMap.set(cp.title, med);\n      }\n\n      return Array.from(medicationMap.values());\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chart.html":{"url":"classes/Chart.html","title":"class - Chart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chart.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                dashedLines\n                            \n                            \n                                data\n                            \n                            \n                                lineChartData\n                            \n                            \n                                normalValues\n                            \n                            \n                                title\n                            \n                            \n                                yScaleMax\n                            \n                            \n                                yScaleMin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashedLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Chart {\n  title: string;\n  code: string;\n  dashedLines: boolean;\n\n  // An array of data points associated with the chart.\n  data: {\n    value: number;\n    name: any;\n  }[] = [];\n\n  // Stores the chart in the format expected for line charts by NGX-Charts.\n  lineChartData: {\n    name: any;\n    series: {\n      value: number;\n      name: any;\n    }[];\n  }[];\n\n  // The minimum and maximum Y-axis values to be displayed on the chart.\n  yScaleMin: number;\n  yScaleMax: number;\n\n  // Used to display horizontal \"reference\" lines in the NGX-Charts line chart.\n  // Generally an array of two elements (the low and high values).\n  normalValues: {\n    name: string;\n    value: number;\n  }[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxInline.html":{"url":"components/CheckboxInline.html","title":"component - CheckboxInline","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxInline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/checkbox-inline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                checkbox-inline\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-inline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxData\n                            \n                            \n                                combinedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkboxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"checkbox-inline\",\n\ttemplateUrl: \"./checkbox-inline.html\"\n})\n\nexport class CheckboxInline{\n\t@Input() inputData: any;\n\tcheckboxData : boolean[] = [];\n\tcombinedData: String[] = [];\n\t\n\tngOnInit(){\n\t\t// initialize the checkboxes all to false\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n      \n       {{entry.description}} \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}                    {{entry.description}}           '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxInline'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/client.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class Client {\n\tid: string;\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColumnStateSwitcherComponent.html":{"url":"components/ColumnStateSwitcherComponent.html","title":"component - ColumnStateSwitcherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColumnStateSwitcherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component for switching between the three states of each column.\nThe three possible states are: Default, Note Pad, and Scratch Pad.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                columnStateSwitcher\n            \n\n\n\n\n            \n                templateUrl\n                ./columnStateSwitcher.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCount\n                            \n                            \n                                switchToDefault\n                            \n                            \n                                switchToScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                columnType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         BaseColumn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n                \n                    \n                        The type of the column in which the switcher is used.\nFor example, 'conditions', 'observations', or 'careplans'.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:53\n                \n            \n\n\n            \n                \n                    Retrieve the number of items in the column's scratch pad. This \nnumber is displayed in the switcher component.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToDefault\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:29\n                \n            \n\n\n            \n                \n                    Switch to the default view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:40\n                \n            \n\n\n            \n                \n                    Switch to the scratch pad view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { BaseColumn } from '../baseColumn';\n\n\n /**\n  * Component for switching between the three states of each column.\n  * The three possible states are: Default, Note Pad, and Scratch Pad.\n  */\n@Component({\n  selector: 'columnStateSwitcher',\n  templateUrl: './columnStateSwitcher.html'\n})\nexport class ColumnStateSwitcherComponent {\n  @Input() column: BaseColumn;\n\n  /**\n   * The type of the column in which the switcher is used.\n   * For example, 'conditions', 'observations', or 'careplans'.\n   */\n  @Input() columnType: string;\n\n  constructor (private scratchPadService: ScratchPadService) { }\n\n  /**\n   * Switch to the default view of the column.\n   */\n  switchToDefault() {\n    if (this.column != null) {\n      this.column.columnState = 'default';\n      this.column.updateService(); // Update the service to store correct column state\n      this.column.showDefault();\n    }\n  }\n\n  /**\n   * Switch to the scratch pad view of the column.\n   */\n  switchToScratchPad() {\n    if (this.column != null) {\n      this.column.columnState = 'scratchpad';\n      // Update the service to store correct column state\n      this.column.updateService(); \n      this.column.showScratchPad();\n    }\n  }\n\n  /**\n   * Retrieve the number of items in the column's scratch pad. This \n   * number is displayed in the switcher component.\n   */\n  getScratchPadCount(): number {\n    if (this.columnType == 'conditions') {\n      return this.scratchPadService.conditions.length;\n    } else if (this.columnType == 'observations') {\n      return this.scratchPadService.observations.length;\n    } else if (this.columnType == 'careplans') {\n      // TODO: Implement once scratch pad is finished for careplans.\n      return 0;\n    }\n    return 0;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      {{ getScratchPadCount() }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ getScratchPadCount() }}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColumnStateSwitcherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condition.html":{"url":"classes/Condition.html","title":"class - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/condition.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clinicalStatus\n                            \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                isParent\n                            \n                            \n                                isVisible\n                            \n                            \n                                onsetDateTime\n                            \n                            \n                                parent\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                verificationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clinicalStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onsetDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verificationStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Condition implements Associable {\n    id: string;\n    onsetDateTime: string;\n    relativeDateTime: string;\n    verificationStatus: string;\n    clinicalStatus: string;\n    isVisible: boolean;\n    isParent: boolean;\n    parent: string;\n\tcode: {\n        coding: [{code: string, display: string, system: string}],\n        text: string\n    };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConditionService.html":{"url":"injectables/ConditionService.html","title":"injectable - ConditionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConditionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/condition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnState\n                            \n                            \n                                conditions\n                            \n                            \n                                conditionsCache\n                            \n                            \n                                    Private\n                                path\n                            \n                            \n                                selectedCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCheckedConditions\n                            \n                            \n                                getColumnState\n                            \n                            \n                                loadAllergies\n                            \n                            \n                                loadConditions\n                            \n                            \n                                loadConditionsPage\n                            \n                            \n                                setColumnState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnState\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         String\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \nloadAllergies(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditions\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditions(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditionsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditionsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setColumnState\n                        \n                        \n                    \n                \n            \n            \n                \nsetColumnState(newColumnState: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newColumnState\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionsCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Condition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of, concat } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Condition } from '../models/condition.model';\nimport { AllergyIntolerance } from '../models/allergyIntolerance.model';\n\n@Injectable()\nexport class ConditionService {\n  private path = '/Condition';\n\n  conditions: Array = [];\n  // The currently selected (highlighted) condition \n  selectedCondition: Condition = null;\n\n  conditionsCache = {};\n  columnState: String;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  // https://stackoverflow.com/questions/45594609/which-operator-to-chain-observables-conditionally\n  // Because the conditions are paginated in the API, we must continually\n  // load the next page until no pages remain. This is achieved through\n  // concatMap and Observable.concat, as discussed above.\n  loadConditionsPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        const conditions = >bundle.entry.map(r => r.resource);\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(conditions), this.loadConditionsPage(nextLink.url));\n        } else {\n          return of(conditions);\n        }\n      }));\n  }\n\n  // Retrieve conditions for a given patient\n  loadConditions(patient: Patient): Observable> {\n    var url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadConditionsPage(url);\n  }\n\n  getCheckedConditions() {\n    return this.conditions.filter(c => {\n      return this.scratchPadService.checkedMapConditions.get(c);\n    });\n  }\n\n  // Retrieve allergies for a given patient\n  loadAllergies(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + \"/AllergyIntolerance\" + \"?patient=\" + patient.id;\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no allergies\n          return new Array();\n        }\n      }));\n  }\n\n  // Gets the state of the conditions column (default or scratch pad)\n  getColumnState(): String {\n    return this.columnState;\n  }\n\n  // Let the service know that the column state has changed\n  setColumnState(newColumnState: String): void {\n    this.columnState = newColumnState;\n  }\n\n  // TODO: Cache API calls into data structures that last for the duration of a session \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsChartComponent.html":{"url":"components/ConditionsChartComponent.html","title":"component - ConditionsChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsChart/conditionsChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsChart\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collapseQueue\n                            \n                            \n                                conditionGrouping\n                            \n                            \n                                conditionGroupingName\n                            \n                            \n                                conditions\n                            \n                            \n                                selected\n                            \n                            \n                                textInputForEdit\n                            \n                            \n                                viewToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ellipsesToggle\n                            \n                            \n                                expand\n                            \n                            \n                                groupConditions\n                            \n                            \n                                loadFinished\n                            \n                            \n                                newTable\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                scratchPadCheckBoxes\n                            \n                            \n                                selectCondition\n                            \n                            \n                                sortCondition\n                            \n                            \n                                tableNavigation\n                            \n                            \n                                toggleExpansion\n                            \n                            \n                                updateScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ellipsesToggle\n                        \n                        \n                    \n                \n            \n            \n                \nellipsesToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            groupConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngroupConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadFinished\n                        \n                        \n                    \n                \n            \n            \n                \nloadFinished()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newTable\n                        \n                        \n                    \n                \n            \n            \n                \nnewTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLocation\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scratchPadCheckBoxes\n                        \n                        \n                    \n                \n            \n            \n                \nscratchPadCheckBoxes(checked: boolean, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsortCondition(x: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tableNavigation\n                        \n                        \n                    \n                \n            \n            \n                \ntableNavigation(clickedSet: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clickedSet\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleExpansion\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapseQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGroupingName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Active\", \"Inactive\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInputForEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'conditionsChart',\n  templateUrl: './conditionsChart.html'\n})\nexport class ConditionsChartComponent {\n  selected: Condition;\n  conditions: Array = [];\n  viewToggle: boolean = false;\n  collapseQueue: Array = [];\n  conditionGrouping: Array = [];\n  conditionGroupingName: Array = [\"Active\", \"Inactive\"];\n  textInputForEdit: String;\n\n  @Input() patient: Patient;\n\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  constructor(\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = conditions;\n        this.loadFinished();\n      });\n    }\n  }\n\n  selectCondition(condition: Condition) {\n    this.selected = condition;\n    this.conditionSelected.emit(this.selected);\n    for (let c of this.conditions) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  sortCondition(x: string) {\n    if (x == \"date-asc\" || x == \"date-desc\") {\n      var a = 1;\n      if (x == \"date-asc\") {\n        a = -a;\n      }\n\n      for (let c of this.conditionGrouping) {\n        c.sort((n1, n2) => {\n          if (n1.code['coding'][0]['code'] > n2.code['coding'][0]['code']) {\n            return a;\n          }\n          if (n1.code['coding'][0]['code']  {\n      if (n1.onsetDateTime  n2.onsetDateTime) {\n        return -1;\n      }\n    })\n    var diff = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n\n    for (let c of this.conditions) {\n      c.isVisible = true;\n      var newDate = new Date(c.onsetDateTime).getTime() + diff;\n      c.relativeDateTime = new Date(newDate).toDateString();\n      c.relativeDateTime = moment(newDate).toISOString();\n    }\n    if (this.viewToggle == false) {\n      //this.viewConditionList = JSON.parse(JSON.stringify(this.conditions));\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n    this.conditionService.conditions = this.conditions;\n    this.groupConditions();\n  }\n\n  // Method for basic toggling, using JSON functions to toggle internal Angular2 module OnChanges for UI reactivity\n  ellipsesToggle() {\n    // Basic logic for toggle, assuming this.conditions contains all info, and this.viewConditionList is the modified list being used to display data\n    if (this.viewToggle == false) {\n      for (let c of this.conditions) {\n        c.isVisible = true;\n      }\n      this.viewToggle = true;\n    }\n  }\n\n  toggleExpansion() {\n\n    if (this.viewToggle == true) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n      this.viewToggle = false;\n    }\n  }\n\n  scratchPadCheckBoxes(checked: boolean, value) {\n\n    if (checked) {\n      // this.conditions[value].isSelected = true;\n      this.scratchPadService.toAddToCondSpArray.push(this.conditions[value]);\n    }\n    else {\n      // this.conditions[value].isSelected = false;\n      let temp = this.scratchPadService.toAddToCondSpArray.indexOf(this.conditions[value]);\n      if (temp > -1) {\n        // This will actually delete instead of simply setting to null, which will throw errors in the long run\n        this.scratchPadService.toAddToCondSpArray.splice(temp, 1);\n      }\n    }\n  }\n\n  updateScratchPad() {\n    //this.scratchPadService.buttonClicked(true);\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n\n  groupConditions() {\n    for (let c of this.conditions) {\n      if (c.clinicalStatus == \"active\") {\n        if (!this.conditionGrouping[0]) {\n          this.conditionGrouping[0] = [c];\n        }\n        else {\n          this.conditionGrouping[0].push(c);\n        }\n      }\n      else {\n        if (!this.conditionGrouping[1]) {\n          this.conditionGrouping[1] = [c];\n        }\n        else {\n          this.conditionGrouping[1].push(c);\n        }\n      }\n    }\n    // this.conditionGrouping[1] = this.conditionGrouping[0];\n  }\n\n  tableNavigation(clickedSet: number) {\n    for (let c of this.conditionGrouping) {\n      let cNum = this.conditionGrouping.indexOf(c);\n      if (cNum != clickedSet) {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = true;\n      }\n      else {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = false;\n      }\n    }\n  }\n\n  newTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number) {\n    if (this.conditionGroupingName.indexOf(tableName) == -1) {\n      this.conditionGroupingName.push(tableName);\n      for (let c of this.conditions) {\n        // Right now this will only allow for a table with one quality!\n        var fullPath = c;\n        dataLocation.forEach(element => {\n          try {\n            fullPath = c[element];\n          }\n          catch (error) {\n            console.log('That field does not exist on this Condition' + c);\n          }\n        });\n        // Testing condition and adding if it's true\n        if (quality) {\n          console.log(fullPath);\n          if (!this.conditionGrouping[groupingCount]) {\n            this.conditionGrouping[groupingCount] = [c];\n          }\n          else {\n            this.conditionGrouping[groupingCount].push(c);\n\n          }\n        }\n      }\n    }\n    else {\n      console.log(\"This table already exists\");\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Tools\n    \n      \n      \n    \n  \n  (none)\n  \n    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}\n    \n    \n      \n        \n          \n          Description\n          Status\n          Onset\n           \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              ... {{cSub['code']['text']}} {{cSub['code']['coding'][0]['code']}}\n            \n            {{cSub.clinicalStatus}}\n            {{cSub.relativeDateTime}}\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tools                        (none)   0\" id=\"tableParentEle\">    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}                                          Description          Status          Onset                                                                                                                 ... {{cSub[\\'code\\'][\\'text\\']}} {{cSub[\\'code\\'][\\'coding\\'][0][\\'code\\']}}                        {{cSub.clinicalStatus}}            {{cSub.relativeDateTime}}                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsComponent.html":{"url":"components/ConditionsComponent.html","title":"component - ConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditions/conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditions\n            \n\n\n\n\n            \n                templateUrl\n                ./conditions.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conditionGrouping\n                            \n                            \n                                conditions\n                            \n                            \n                                justCreated\n                            \n                            \n                                loaded\n                            \n                            \n                                scratchPadConditions\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                viewToggle\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                updateService\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            justCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scratchPadConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\ndeclare var $: any; //Necessary in order to use jQuery to open popup.\n\n@Component({\n  selector: 'conditions',\n  templateUrl: './conditions.html'\n})\nexport class ConditionsComponent extends BaseColumn {\n  // The currently selected condition in the list.\n  selected: Condition;\n\n  // The list of conditions being displayed.\n  conditions: Array = [];\n  scratchPadConditions: any = [];\n\n  // for checking whenever the page is loaded\n  loaded: boolean = false;\n\n  viewToggle: boolean = false;\n  conditionGrouping: Array = [];\n  justCreated: boolean;\n\n  // for column switching\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private fhirService: FhirService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService\n  ) {\n    super();\n    this.justCreated = true;\n    this.scratchPadConditions = this.getScratchPadConditions();\n\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    // Triggered if a new patient is selected (not even implemented yet).\n    this.selected = null;\n    this.conditions = [];\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = this.conditions.concat(conditions);\n        this.onLoadComplete();\n      });\n    }\n  }\n\n  // Called when all conditions have been loaded.\n  onLoadComplete() {\n    console.log(\"Loaded \" + this.conditions.length + \" conditions.\");\n\n    this.conditions.sort((c1, c2) => {\n      return c2.onsetDateTime.localeCompare(c1.onsetDateTime);\n    });\n\n    // Scale dates to make them appear more recent for demos.\n    // 0.8 is an arbitrary value that produces realistic dates.\n    if (this.conditions.length > 0) {\n      let RECENCY_MULTIPLIER = 0.8;\n      let timeSinceConditionOnset = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n      let scaledTimeSinceConditionOnset = Math.floor(RECENCY_MULTIPLIER * timeSinceConditionOnset);\n\n      for (let condition of this.conditions) {\n        condition.isVisible = true;\n        let relativeDateTime = new Date(condition.onsetDateTime).getTime() + scaledTimeSinceConditionOnset;\n        condition.relativeDateTime = moment(relativeDateTime).toISOString();\n      }\n    }\n\n    if (!this.viewToggle) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n\n    this.conditionService.conditions = this.conditions;\n\n    // for rendering elements only after page is loaded (there probably is a better way)\n    this.loaded = true;\n\n    // initialize the scratchPadService totalConditions with all the stuff\n    this.scratchPadService.initConditions(this.conditions);\n  }\n\n  // Update the service to store correct column state\n  updateService(): void {\n    this.conditionService.setColumnState(this.columnState);\n  }\n\n  // ===============================================================================================================================================\n  // ======================================================== GETTERS AND SETTERS===================================================================\n  // ===============================================================================================================================================\n\n  // retrieves the selected conditions from the scratch pad\n  getScratchPadConditions() {\n    return this.scratchPadService.getConditions();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Conditions\n      \n        \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Testing condition popover\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Conditions                                                                          Testing condition popover  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsDisplay.html":{"url":"components/ConditionsDisplay.html","title":"component - ConditionsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllConditions\n                            \n                            \n                                checkCondition\n                            \n                            \n                                expand\n                            \n                            \n                                getDateString\n                            \n                            \n                                isConditionAssociated\n                            \n                            \n                                isConditionChecked\n                            \n                            \n                                isConditionSelected\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printmsg\n                            \n                            \n                                selectCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditions\n                            \n                            \n                                scratchPadMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService, conditionService: ConditionService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditions\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scratchPadMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllConditions\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllConditions(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCondition\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCondition(checkedCondition: Condition, checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedCondition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateString\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateString(c: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionAssociated(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionChecked(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionSelected(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printmsg\n                        \n                        \n                    \n                \n            \n            \n                \nprintmsg(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Condition } from '../../models/condition.model';\n\n@Component({\n  selector: 'conditionsDisplay',\n  templateUrl: './conditionsDisplay.html'\n})\nexport class ConditionsDisplay {\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() conditions: Array;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // Whether this display of conditions is within the scratch pad.\n  @Input() scratchPadMode: boolean = false;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private scratchPadService: ScratchPadService,\n    private conditionService: ConditionService,\n    private associationService: AssociationService\n  ) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking conditions.\n    if (this.conditionService.getColumnState() === \"scratchpad\") {\n      // Add 'Remove from Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Remove from Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.removeCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    } else {\n      // Add 'Add to Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Add to Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.addCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    }\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n  }\n\n  // Selects an individual condition (which causes it to be highlighted).\n  // This is NOT the same as checking a condition.\n  selectCondition(condition: Condition) {\n    this.conditionService.selectedCondition = condition;\n  }\n\n  // Check or uncheck an individual condition\n  checkCondition(checkedCondition: Condition, checked: boolean) {\n    this.scratchPadService.checkCondition(checked, checkedCondition);\n  \n    // When an individual condition is checked, the \"check all\" checkbox should be unchecked.\n    this.isAllChecked = false;\n  }\n\n  isConditionSelected(condition: Condition) {\n    return condition == this.conditionService.selectedCondition;\n  }\n\n  // Determine whether a condition is currently checked.\n  isConditionChecked(condition: Condition) {\n    return this.scratchPadService.checkedMapConditions.get(condition) || false;\n  }\n\n  // Determine whether a condition is currently associated (based on associations tool)\n  isConditionAssociated(condition: Condition) {\n    return this.associationService.associatedMapConditions.get(condition) || false;\n  }\n\n  // Check or uncheck all conditions.\n  checkAllConditions(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let condition of this.conditions) {\n        this.scratchPadService.checkCondition(checked, condition);\n    }\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n  printmsg(condition: Condition) {\n      console.log(condition);\n  }\n\n  getDateString(c: Condition) {\n    let d = new Date(c.onsetDateTime);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Description\n        Status\n        Onset\n      \n    \n    \n       \n        \n          \n        \n        \n          ... {{c['code']['text']}} \n        \n        {{c.clinicalStatus}}\n        {{c.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Description        Status        Onset                                                                 ... {{c[\\'code\\'][\\'text\\']}}                 {{c.clinicalStatus}}        {{c.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContextMenuComponent.html":{"url":"components/ContextMenuComponent.html","title":"component - ContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contextMenu/contextMenu.component.ts\n\n\n    \n        Description\n    \n    \n        A reusable context menu component.\nExample Usage:\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    this.menu.addOption({\n  'icon': 'glyphicon-stats', // icon to display\n  'text': 'Add to Trend Tool', // text to display\n  'exec': function(data) { // what to execute upon click\n      console.log(data);\n  }\n});\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                contextMenu\n            \n\n\n\n\n            \n                templateUrl\n                ./contextMenu.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickSubscription\n                            \n                            \n                                closeable\n                            \n                            \n                                CLOSEABLE_DELAY\n                            \n                            \n                                data\n                            \n                            \n                                left\n                            \n                            \n                                options\n                            \n                            \n                                top\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addOption\n                            \n                            \n                                    Private\n                                handleDocClick\n                            \n                            \n                                    Private\n                                handleOptionClick\n                            \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addOption\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOption(option: ContextMenuOption)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:58\n                \n            \n\n\n            \n                \n                    Add an option to the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                ContextMenuOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleDocClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDocClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:67\n                \n            \n\n\n            \n                \n                    Hide the context menu if user clicks outside of it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleOptionClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleOptionClick(option, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:113\n                \n            \n\n\n            \n                \n                    Handles clicks on context menu options. If the option \nhas an associated exec function, it is executed with \ndata passed as the parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The context menu option that was clicked.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:133\n                \n            \n\n\n            \n                \n                    Closes the context menu. Also handles cleaning up \nthe click subscription, which is no longer needed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event triggering the hiding.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(data, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:82\n                \n            \n\n\n            \n                \n                    Show the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to be passed to the context menu.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered the menu.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:43\n                            \n                        \n\n                \n                    \n                        Observable subscription to document clicks. Clicking out of the \ncontext menu closes it.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLOSEABLE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:50\n                            \n                        \n\n                \n                    \n                        Prevents a glitch in contexts where the menu is opened by a left click.\nWithout this delay on being able to close the menu, the menu would close\nthe moment it opened.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:33\n                            \n                        \n\n                \n                    \n                        The data passed into the menu from wherever it was triggered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:28\n                            \n                        \n\n                \n                    \n                        The list of options displayed in the menu.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { ContextMenuOption } from '../../models/contextMenuOption.model';\nimport { fromEvent } from 'rxjs';\n\n/**\n * A reusable context menu component.\n * \n * Example Usage:\n * \n * @example\n * this.menu.addOption({\n *              'icon': 'glyphicon-stats', // icon to display\n *              'text': 'Add to Trend Tool', // text to display\n *              'exec': function(data) { // what to execute upon click\n *                  console.log(data);\n *              }\n * });\n */\n@Component({\n  selector: 'contextMenu',\n  templateUrl: './contextMenu.html'\n})\nexport class ContextMenuComponent {\n\n  /**\n  * The list of options displayed in the menu.\n  */\n  options: Array = [];\n\n  /**\n  * The data passed into the menu from wherever it was triggered.\n  */\n  data: any = null;\n\n  visible: boolean = false;\n  top: string = '0px';\n  left: string = '0px';\n\n  /**\n  * Observable subscription to document clicks. Clicking out of the \n  * context menu closes it.\n  */\n  clickSubscription: any = null;\n\n  /**\n  * Prevents a glitch in contexts where the menu is opened by a left click.\n  * Without this delay on being able to close the menu, the menu would close\n  * the moment it opened.\n  */\n  CLOSEABLE_DELAY: number = 100;\n  closeable: boolean = false;\n\n  constructor(private ref: ElementRef) { }\n\n  /**\n   * Add an option to the context menu.\n   */\n  public addOption(option: ContextMenuOption) {\n    this.options = this.options.concat(option);\n  }\n\n  /**\n  * Hide the context menu if user clicks outside of it.\n  * \n  * @param event The click event on the document.\n  */\n  private handleDocClick(event) {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      // Only hide the menu if it is currently closeable.\n      if (this.closeable) {\n          this.hide(null);\n      }\n    }\n  }\n\n  /**\n   * Show the context menu.\n   * \n   * @param data Data to be passed to the context menu.\n   * @param event The click event that triggered the menu.\n   */\n  public show(data, event) {\n    this.data = data;\n\n    // Set the location of the menu to where the user clicked.\n    this.top = event.pageY + 'px';\n    this.left = event.pageX + 'px';\n\n    this.visible = true;\n    this.closeable = false;\n\n    // Allow the menu to be closed only after an interval has elapsed.\n    setTimeout(() => { this.closeable = true; }, this.CLOSEABLE_DELAY);\n\n    // Disable the standard click behavior.\n    event.preventDefault();\n\n    // Subscribe to document click events.\n    this.clickSubscription = fromEvent(document, 'click')\n      .subscribe((event) => {\n        this.handleDocClick(event);\n    });\n  }\n\n  /**\n   * Handles clicks on context menu options. If the option \n   * has an associated `exec` function, it is executed with \n   * `data` passed as the parameter.\n   * \n   * @param option The context menu option that was clicked.\n   * @param event The click event on the option\n   */\n  private handleOptionClick(option, event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (option.exec) {\n      // Execute the function tied to the clicked menu option.\n      option.exec(this.data);\n    }\n\n    // Hide the context menu.\n    this.hide(event);\n  }\n\n  /**\n   * Closes the context menu. Also handles cleaning up \n   * the click subscription, which is no longer needed.\n   * \n   * @param event The click event triggering the hiding.\n   */\n  private hide(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    // Unsubscribe from document click events.\n    if (this.clickSubscription) {\n      this.clickSubscription.unsubscribe();\n      this.clickSubscription = null;\n    }\n\n    // Hide the menu and reset the associated data.\n    this.visible = false;\n    this.data = null;\n  }\n}\n    \n\n    \n        \n\n  {{ option.text }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ option.text }}'\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextMenuOption.html":{"url":"classes/ContextMenuOption.html","title":"class - ContextMenuOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextMenuOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contextMenuOption.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a context menu option for use with \nContextMenuComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exec\n                            \n                            \n                                icon\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:23\n                            \n                        \n\n                \n                    \n                        Function to be executed upon click of the option\nin the context menu. \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                Data associated with the context menu.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:10\n                            \n                        \n\n                \n                    \n                        Icon to display next to the option (from the \nBootstrap Icons library).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:15\n                            \n                        \n\n                \n                    \n                        Text to be displayed in the option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ContextMenuOption {\n    /**\n     * Icon to display next to the option (from the \n     * Bootstrap Icons library).\n     */\n    icon: string;\n\n    /**\n     * Text to be displayed in the option.\n     */\n    text: string;\n\n    /**\n     * Function to be executed upon click of the option\n     * in the context menu. \n     * \n     * @param data Data associated with the context menu.\n     */\n    exec: (data) => void;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoctorNoteComponent.html":{"url":"components/DoctorNoteComponent.html","title":"component - DoctorNoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DoctorNoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/doctorNote/doctorNote.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                doctorNote\n            \n\n\n\n\n            \n                templateUrl\n                ./notes.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'doctorNote',\n  templateUrl: './notes.html'\n})\nexport class DoctorNoteComponent { }\n\n    \n\n    \n        \n\n  \n    \n    \n  \n  Weight:\n    \n  \n  Height:\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Weight:        Height:      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'DoctorNoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DoctorService.html":{"url":"injectables/DoctorService.html","title":"injectable - DoctorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DoctorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/doctor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configMode\n                            \n                            \n                                filter\n                            \n                            \n                                graphConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGraphConfig\n                            \n                            \n                                assignVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGraphConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddGraphConfig(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assignVisible\n                        \n                        \n                    \n                \n            \n            \n                \nassignVisible(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { Condition } from '../models/condition.model';\n\n@Injectable()\nexport class DoctorService {\n  filter: Array = [];\n  configMode: boolean = true;\n  graphConfig: Array> = [];\n\n  constructor(private cookieService: CookieService) { }\n\n  // The change to visiblities modifiers for the list should be an input to assignVisible(), and input through conditions.component.ts\n  assignVisible(list: Array) {\n    // Wipes the lists, as assignVisible() gets called on subscribe){data == true} for conditions.component.ts\n    // Needs to have a clean list, or it will push doubles/triples, or more\n\n    // Use \"let of\" to generate enumerated list, allows for pass by value iteration\n    let count = 0;\n    for (let c of list) {\n      // Right now the logic only excludes one code, for testing purposes\n      // thisModel is a undefined data model, depending on if we want to leave the service with the data we need to create a static model, but\n      // it should work for testing purposes\n\n      if (count ) {\n    this.graphConfig.push(list);\n    this.cookieService.set('graphConfig', JSON.stringify(this.graphConfig));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encounter.html":{"url":"classes/Encounter.html","title":"class - Encounter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encounter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/encounter.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                position\n                            \n                            \n                                reason\n                            \n                            \n                                status\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEndDate\n                            \n                            \n                                getLogValue\n                            \n                            \n                                getReason\n                            \n                            \n                                getStartDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEndDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetEndDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReason\n                        \n                        \n                    \n                \n            \n            \n                \ngetReason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStartDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetStartDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Encounter {\n  \n  id: string;\n  status: string;\n\n  period: {\n    start: string;\n    end: string;\n  };\n\n  text: {\n    status: string;\n    div: string;\n  }\n\n  position:string;\n  // Reasons for the encounter.\n  reason: {\n    text: string;\n\n    // Coding details for the encounter reason.\n    coding: {\n      system: string;\n      code: string;\n    }[];\n  }[];\n\n  // Get the first reason for the encounter (if there is one). Otherwise, return null.\n  getReason(): string {\n    // Check if there are any reasons. If not, return null.\n    if (!this.reason) {\n      return null;\n    }\n\n    for (let r of this.reason) {\n      if (r.text) {\n        // Return the text associated with the reason.\n        return r.text;\n      }\n    }\n\n    return null;\n  }\n  getStartDate(): Date { return new Date(this.period.start)}\n  getEndDate(): Date { return new Date(this.period.end)}\n\n  getLogValue(): any {\n    return Math.log(this.getStartDate().getTime())\n  }\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncounterService.html":{"url":"injectables/EncounterService.html","title":"injectable - EncounterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EncounterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encounter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                    Public\n                                loadEncounters\n                            \n                            \n                                    Private\n                                loadEncountersPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/encounter.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Encounter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncountersPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncountersPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Encounter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/encounter.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, concat } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Encounter } from '../models/encounter.model';\n\n\n@Injectable()\nexport class EncounterService {\n  private path = '/Encounter';\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  private loadEncountersPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        let encounters: Array = [];\n        if (bundle.entry) {\n          encounters = bundle.entry.map(e => this.deserialize(e['resource']));\n        }\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(encounters), this.loadEncountersPage(nextLink.url));\n        } else {\n          return of(encounters);\n        }\n      }));\n  }\n\n  public loadEncounters(patient: Patient): Observable> {\n    const url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadEncountersPage(url);\n  }\n\n  // We cannot simply cast the JSON object to an Encounter, because this casted\n  // Encounter will not have the methods of the Encounter class.\n  private deserialize(input: any): Encounter {\n    var fixed: Encounter = new Encounter();\n\n    for (let prop in input) {\n      fixed[prop] = input[prop];\n    }\n\n    return fixed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Favorites.html":{"url":"components/Favorites.html","title":"component - Favorites","body":"\n                   \n\n\n\n\n\n  Components\n  Favorites\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                favorites\n            \n\n\n\n\n            \n                templateUrl\n                ./favorites.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newTest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onRightClick\n                            \n                            \n                                test\n                            \n                            \n                                test2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService, elRef: ElementRef, toolbarService: ToolBarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRightClick\n                        \n                        \n                    \n                \n            \n            \n                \nonRightClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            test\n                        \n                        \n                    \n                \n            \n            \n                \ntest(ref: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            test2\n                        \n                        \n                    \n                \n            \n            \n                \ntest2()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"100px\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ToolBarService } from '../../services/toolbar.service';\n\n@Component({\n  selector: 'favorites',\n  templateUrl: './favorites.html'\n})\nexport class Favorites {\n  constructor(private doctorService: DoctorService, private elRef: ElementRef, private toolbarService: ToolBarService) { }\n\n  newTest: string = \"100px\";\n\n  onRightClick() {\n    return false;\n  }\n\n  test(ref: ElementRef) {\n    /*console.log(\"normal\");\n    console.log(this.elRef);\n    console.log(this.elRef.nativeElement.querySelector('div').style.left);*/\n    this.newTest = \"200px\";\n  }\n\n  test2() {\n    console.log(\"hi\");\n  }\n}\n\n    \n\n    \n        \n\n  \n    Favorites List\n    Known Favorites\n    \n      Link 1\n      Link 2\n    \n    Recently Completed Actions\n    \n      Link 1\n      Link 2\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Favorites List    Known Favorites          Link 1      Link 2        Recently Completed Actions          Link 1      Link 2      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'Favorites'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FhirService.html":{"url":"injectables/FhirService.html","title":"injectable - FhirService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FhirService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/fhir.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                base\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequestOptions\n                            \n                            \n                                getUrl\n                            \n                            \n                                setToken\n                            \n                            \n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/fhir.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestOptions(withAuth: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withAuth\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetToken(newToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class FhirService {\n\n  constructor() { }\n\n  private base: string;\n  public token: string;\n\n  getUrl(): string {\n    return this.base;\n  }\n\n  setUrl(url: string) {\n    this.base = url;\n  }\n\n  setToken(newToken: string) {\n    this.token = newToken;\n  }\n\n  getRequestOptions(withAuth: boolean = true): { headers: HttpHeaders } {\n    let headers = new HttpHeaders({'Accept': 'application/json'});\n    if (withAuth) {\n      headers = headers.append('Authorization', 'Bearer ' + this.token);\n    }\n    return { headers: headers };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/form.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Form {\n\tid: number;\n\ttype: string;\n\tdata : any;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormBuilder.html":{"url":"components/FormBuilder.html","title":"component - FormBuilder","body":"\n                   \n\n\n\n\n\n  Components\n  FormBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-builder/form-builder.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                form-builder\n            \n\n\n            \n                styles\n                #main_list {list-style-type: none;}\n            \n\n\n            \n                templateUrl\n                ./form-builder.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                combData\n                            \n                            \n                                components\n                            \n                            \n                                    Public\n                                forms\n                            \n                            \n                                totalData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getData\n                            \n                            \n                                getForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                storeData\n                            \n                            \n                                    Public\n                                submitClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formInput\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmitClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formInput\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSubmitClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForms\n                        \n                        \n                    \n                \n            \n            \n                \ngetForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('form')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Form[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Form } from '../../models/form.model';\n\n@Component({\n  selector: 'form-builder',\n  templateUrl: './form-builder.html',\n  styles: [\"#main_list {list-style-type: none;}\"]\n})\n\nexport class FormBuilder  {\n\t// GLOBAL VARIABLES\n\tpublic forms: Form[];\n\t@ViewChildren('form') components: any;\n\t\n\ttotalData: String[] = [];\n\tcombData: any;\n\t\n\t@Input() formInput: any[];\n\t@Input() userId: String; \n\t\n\t@Output() onSubmitClick: EventEmitter = new EventEmitter();\n\t\n\t// ============================== EVENT METHODS ==================================\n\tconstructor(){}\n\t\n\tngOnInit(): void {\n\t\tthis.getForms();\n\t}\n\t\t\n\t// method that uses service to get the forms from the server\n\tgetForms(): void {\n\t\t//this.formBuilderService.getTemplate().then(forms => {this.forms = forms; console.log(forms);});\n\t\tthis.forms = this.formInput;\n\t}\n\t\n\t// ===================== LOGIC WHEN SUBMIT BUTTON CLICKED ========================\n\t\n\tpublic submitClick(): void {\n\t\tthis.totalData = [];\n\t\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n  \n    \n    \n       \n    \n    \n       \n    \n    \n       \n    \n    \n      \n    \n    \n      \n    \n  \n   Submit \n\n    \n\n    \n            #main_list {list-style-type: none;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Submit '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormBuilder'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormCreatorModule.html":{"url":"modules/FormCreatorModule.html","title":"module - FormCreatorModule","body":"\n                   \n\n\n\n\n    Modules\n    FormCreatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { CheckboxInline } from '../components/form_components/checkbox-inline.component';\nimport { NormalBox1 } from '../components/form_components/normal-box-1.component';\nimport { NormalBox2 } from '../components/form_components/normal-box-2.component';\nimport { SelectListSingle } from '../components/form_components/select-list-single.component';\nimport { ScratchPadUpdate } from '../components/form_components/scrachpad-update.component';\n\n@NgModule({\n\timports: [\n\t\tFormsModule,\n\t\tBrowserModule\n\t],\n\tdeclarations: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t], exports: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t]\n})\n\nexport class FormCreatorModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HighlightDirective.html":{"url":"directives/HighlightDirective.html","title":"directive - HighlightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  HighlightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/highlight.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [highlight]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlightText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlightText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer, Input} from '@angular/core';\n\n@Directive({\n\tselector: '[highlight]'\n})\nexport class HighlightDirective {\n\n\t@Input('highlightText') text: string = '';\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t\tconsole.log(\"Highlighting!\");\n\t\tthis.el.nativeElement.textContent = 'foo';\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoricalTrendsComponent.html":{"url":"components/HistoricalTrendsComponent.html","title":"component - HistoricalTrendsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoricalTrendsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/historicalTrends/historicalTrends.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                historicalTrends\n            \n\n\n\n\n            \n                templateUrl\n                ./historicalTrends.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartSize\n                            \n                            \n                                    Private\n                                maxDate\n                            \n                            \n                                menu\n                            \n                            \n                                    Private\n                                minDate\n                            \n                            \n                                mouseEvent\n                            \n                            \n                                mouseSubscription\n                            \n                            \n                                    Private\n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onDataPointSelect\n                            \n                            \n                                resetDateRange\n                            \n                            \n                                setDateRange\n                            \n                            \n                                setDateRangeMonths\n                            \n                            \n                                setDateRangeYears\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trendsService: HistoricalTrendsService, observationService: ObservationService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDataPointSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonDataPointSelect(chartEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartEvent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nresetDateRange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRange(form)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeMonths\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeMonths(months)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    months\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeYears\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeYears(years)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    years\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [800, 200]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            patient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\nimport * as moment from 'moment';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { PatientService } from '../../services/patient.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'historicalTrends',\n  templateUrl: './historicalTrends.html'\n})\nexport class HistoricalTrendsComponent {\n  // Width and height of displayed charts.\n  private chartSize: number[] = [800, 200];\n\n  // The minimum and maximum dates for the x-axis of the displayed charts.\n  private minDate: Date = null;\n  private maxDate: Date = null;\n\n  // Reference to the current patient.\n  private patient: Patient;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // Observable subscription to mouse movements.\n  mouseSubscription: any = null;\n\n  // Store the most recent mouse event to keep track of the mouse location.\n  mouseEvent: any = null;\n\n  constructor(\n    private trendsService: HistoricalTrendsService,\n    private observationService: ObservationService,\n    private patientService: PatientService\n  ) {\n      // Track the location of the mouse (needed for context menu).\n      this.mouseSubscription = fromEvent(document, 'mousemove')\n        .subscribe((event) => {\n          this.mouseEvent = event;\n      });\n\n      this.patientService.loadPatient().subscribe(patient => {\n        this.patient = patient;\n      })\n    }\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add option to the context menu shown when clicking data points.\n    this.menu.addOption({\n      'icon': 'glyphicon-list-alt',\n      'text': 'Add to Side Bar',\n      'exec': function(condition) {\n        console.log(\"Add to Side Bar\");\n        // TODO: Implement Add to Side Bar functionality.\n      }.bind(this)\n    });\n  }\n\n  // Set specific (user selected) min and max dates for the x-axis of displayed charts.\n  setDateRange(form) {\n    // Do nothing if one of the dates is invalid.\n    if (!moment(form.minDate).isValid() || !moment(form.maxDate).isValid()) {\n      return;\n    }\n\n    this.minDate = new Date(form.minDate);\n    this.maxDate = new Date(form.maxDate);\n  }\n\n  // Reset the min and max dates for the x-axis of displayed charts (so all data is shown).\n  resetDateRange() {\n    this.minDate = null;\n    this.maxDate = null;\n\n    // Choose the earliest date of all charts, and the latest date of all charts.\n    for (let chart of this.trendsService.charts) {\n      let [chartMinDate, chartMaxDate] = this.trendsService.getDateRange(chart);\n\n      if (this.minDate == null || chartMinDate.getTime()  this.maxDate.getTime()) {\n        this.maxDate = chartMaxDate;\n      }\n    }\n  }\n\n  // Subtracts the given number of years from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeYears(years) {\n    this.minDate = moment().subtract(years, 'years').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Subtracts the given number of months from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeMonths(months) {\n    this.minDate = moment().subtract(months, 'months').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Called when a data point is clicked on a chart.\n  onDataPointSelect(chartEvent) {\n    this.menu.show(null, this.mouseEvent);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n       Dashboard\n      Back\n    \n    \n      \n        \n          Conditions\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Findings List\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Medications\n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Fit All\n    25 Years\n    10 Years\n    5 Years\n    2 Years\n    1 Year\n    6 Months\n    3 Months\n    1 Month\n    \n       Specify\n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n      Specify start and end dates\n        ×\n      \n      \n        \n          \n          \n          Submit\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Dashboard      Back                                Conditions                                                                                                                Findings List                                                                                                                Medications                                                                                                    Fit All    25 Years    10 Years    5 Years    2 Years    1 Year    6 Months    3 Months    1 Month           Specify                                Specify start and end dates        ×                                                  Submit                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HistoricalTrendsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoricalTrendsService.html":{"url":"injectables/HistoricalTrendsService.html","title":"injectable - HistoricalTrendsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoricalTrendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/historicalTrends.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charts\n                            \n                            \n                                chartsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMedicationChart\n                            \n                            \n                                    Public\n                                addObservationChart\n                            \n                            \n                                    Public\n                                getDateRange\n                            \n                            \n                                    Private\n                                getValueRange\n                            \n                            \n                                    Public\n                                removeChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMedicationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMedicationChart(medication: Medication)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addObservationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addObservationChart(chartName, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDateRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDateRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChart(chartName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            charts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Chart } from '../models/chart.model';\nimport { Medication } from '../models/medication.model';\n\n@Injectable()\nexport class HistoricalTrendsService {\n  // Maps the name of a chart to the chart object itself.\n  chartsMap: Map = new Map();\n  \n  // Store all the charts currently being displayed.\n  charts: Array = [];\n\n  constructor() { }\n\n  // Add a new chart displaying a specific observation in the trends tool.\n  public addObservationChart(chartName, data) {\n    // A chart already exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      return;\n    }\n\n    if (data == null || data.length == 0) {\n      // Avoid creating an empty chart.\n      return;\n    }\n\n    let chart = new Chart();\n\n    // Get the title associated with the data point.\n    chart.title = data[0].code['text'];\n\n    for (let point of data) {\n      // Skip data points without a numeric value.\n      if (!point.valueQuantity || !point.valueQuantity['value']) {\n        continue;\n      }\n\n      // Add the data point to the chart.\n      chart.data.push({\n        name: new Date(point.relativeDateTime),\n        value: point.valueQuantity['value']\n      });\n    }\n\n    // Sort data points in order of date of occurrence.\n    chart.data = chart.data.sort((p1, p2) => p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    // Set the min and max y-axis values for the chart, providing a small buffer\n    // of extra space.\n    let [min, max] = this.getValueRange(chart);\n    let buffer = (max - min) * 0.2;\n\n    chart.yScaleMin = min - buffer;\n    chart.yScaleMax = max + buffer;\n\n    // Add the normal range values for the chart (displayed as horizontal \"reference\" lines).\n    chart.normalValues = [\n      {\n        name: \"Low\",\n        value: min // TODO: These shouldn't be hardcoded.\n      },\n      {\n        name: \"High\",\n        value: max // TODO: These shouldn't be hardcoded.\n      }\n    ];\n\n    // Add the newly created chart to the list of charts.\n    this.chartsMap.set(chartName, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  public addMedicationChart(medication: Medication) {\n    // A chart already exists for the given medication.\n    if (this.chartsMap.has(medication.name)) {\n      return;\n    }\n\n    let chart = new Chart();\n    chart.title = medication.name + ' (' + medication.dosageUnits + ')';\n\n    // Add every period the medication was taken to the chart.\n    for (let i = 0; i  0 ? medication.periods[i - 1] : null;\n      let next = i  p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    this.chartsMap.set(medication.name, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  // Remove the chart with the given name from the trends tool.\n  public removeChart(chartName) {\n    // First check if a chart exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      this.chartsMap.delete(chartName);\n      this.charts = Array.from(this.chartsMap.values());\n    }\n  }\n\n  // Get the smallest and largest values from a given chart.\n  private getValueRange(chart: Chart) {\n    // If the data provided is empty, return [0, 0].\n    if (!chart.data || chart.data.length == 0) {\n      return [0, 0];\n    }\n\n    let min = chart.data[0].value;\n    let max = chart.data[0].value;\n\n    for (let point of chart.data) {\n      min = Math.min(min, point.value);\n      max = Math.max(max, point.value);\n    }\n\n    return [min, max];\n  }\n\n  // Get the earliest and latest dates associated with any point in a chart.\n  public getDateRange(chart: Chart) {\n    // If the data provided is empty, return today's date.\n    if (!chart.data || chart.data.length == 0) {\n      return [new Date(), new Date()];\n    }\n    \n    let minDate: Date = chart.data[0].name;\n    let maxDate: Date = chart.data[0].name;\n\n    for (let point of chart.data) {\n      if (point.name.getTime()  maxDate.getTime()) {\n        maxDate = point.name;\n      }\n    }\n\n    return [minDate, maxDate];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectPatientById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, patientService: PatientService, cookieService: CookieService, smartService: SmartService, conditionService: ConditionService, compiler: Compiler)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartService\n                                                  \n                                                        \n                                                                        SmartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compiler\n                                                  \n                                                        \n                                                                        Compiler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectPatientById\n                        \n                        \n                    \n                \n            \n            \n                \nselectPatientById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Compiler } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { PatientService } from '../../services/patient.service';\nimport { SmartService } from '../../services/smart.service';\nimport { FhirService } from '../../services/fhir.service';\nimport { ConditionService } from '../../services/condition.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n    selector: 'home',\n    templateUrl: './home.html'\n})\nexport class HomeComponent {\n    selected: Patient = null;\n\n    constructor(private fhirService: FhirService,\n        private patientService: PatientService,\n        private cookieService: CookieService,\n        private smartService: SmartService,\n        private conditionService: ConditionService,\n        private compiler: Compiler) {\n\n        this.compiler.clearCache();\n        this.fhirService.setUrl(this.cookieService.get('fhirBaseUrl'));\n\n        if (this.fhirService.token) {\n            // Access token is already available.\n            this.selectPatientById(this.patientService.patientId);\n        } else {\n            // Retrieve the access token and patient.\n            this.smartService.authenticate().subscribe(data => {\n                this.fhirService.setToken(data['access_token']);\n                this.selectPatientById(data['patient']);\n            });\n        }\n    }\n\n    // Select a patient with the given ID\n    selectPatientById(id) {\n        this.patientService.setPatientId(id);\n        this.patientService.loadPatient().subscribe(patient => {\n            this.selected = patient;\n        });\n    }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoverBoxComponent.html":{"url":"components/HoverBoxComponent.html","title":"component - HoverBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HoverBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hoverBox/hoverBox.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hoverBox\n            \n\n\n\n\n            \n                templateUrl\n                ./hoverBox.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DISPLAY_DELAY\n                            \n                            \n                                items\n                            \n                            \n                                left\n                            \n                            \n                                leftOffset\n                            \n                            \n                                timeoutHandle\n                            \n                            \n                                top\n                            \n                            \n                                topOffset\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                isDate\n                            \n                            \n                                    Public\n                                isMonth\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                typeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hoverBox/hoverBox.component.ts:28\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDate(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMonth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMonth(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(items, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeOf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeOf(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"string\" | \"number\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISPLAY_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeoutHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable } from '@angular/core';\n\n\n@Component({\n  selector: 'hoverBox',\n  templateUrl: './hoverBox.html'\n})\n\n@Injectable()\n\nexport class HoverBoxComponent {\n  // The data passed into the hover box from wherever it was triggered.\n  items: Array = null;\n\n  // Whether the hover box is currently visible.\n  visible: boolean = false;\n\n  // Where the hover box is displayed on the screen.\n  top: string = '0px';\n  left: string = '0px';\n  topOffset: number = 18;\n  leftOffset: number = 18;\n\n  // Used to track whether the hover box is waiting to be shown.\n  timeoutHandle: any = null;\n\n  // Time (in ms) before the hover box appears.\n  DISPLAY_DELAY: number = 200;\n\n  constructor() { }\n\n  public show(items, event) {\n    // The hover box is already queued to display, no need to display again.\n    if (this.timeoutHandle != null) {\n      return;\n    }\n\n    \n    this.timeoutHandle = setTimeout(() => {\n      this.items = items;\n\n      // Set the location of the hover box to where the mouse is.\n      var topOffset = 0;\n      var leftOffset = 0;\n      // Code used to test moving the hover box away from the edge of the screen. \n      // TODO: do not hardcode pixels, find information of the pixel box\n       \n      if (window.innerWidth - event.pageX \n    \n\n    \n        \n\n   \n        {{item}}\n        &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;\n      {{item}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{item}}                           {{item}}'\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HoverBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HumanizeBytesPipe.html":{"url":"pipes/HumanizeBytesPipe.html","title":"pipe - HumanizeBytesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HumanizeBytesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/humanizeBytes.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        humanizeBytes\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doIt\n                        \n                        \n                    \n                \n            \n            \n                \ndoIt(n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, args: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'humanizeBytes'\n})\nexport class HumanizeBytesPipe implements PipeTransform {\n\n    transform(value: string, args: string[]) {\n        return this.doIt(parseInt(value));\n    }\n\n    doIt(n): string {\n        if (n  (1 / Math.pow(1024, exp - 1))) ? result.toFixed(2) : result.toFixed(0);\n        return readable + si[exp - 1];\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingAnimation.html":{"url":"components/LoadingAnimation.html","title":"component - LoadingAnimation","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loadingAnimation/loadingAnimation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loading-animation\n            \n\n\n\n\n            \n                templateUrl\n                ./loadingAnimation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loadingAnimation/loadingAnimation.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'loading-animation',\n  templateUrl: './loadingAnimation.html'\n})\nexport class LoadingAnimation {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingAnimation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/map.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                STATIC_MAPPINGS\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            STATIC_MAPPINGS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapService {\n    public static STATIC_MAPPINGS = {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medication.html":{"url":"classes/Medication.html","title":"class - Medication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/medication.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dosageUnits\n                            \n                            \n                                name\n                            \n                            \n                                periods\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, dosageUnits: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/medication.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dosageUnits\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dosageUnits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Medication {\n    name: string;\n    dosageUnits: string;\n\n    periods: {\n        start: Date;\n        end: Date;\n        dosage: number;\n    }[];\n    \n    constructor(name: string, dosageUnits: string) {\n        this.periods = [];\n        this.name = name;\n        this.dosageUnits = dosageUnits;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MedicationsComponent.html":{"url":"components/MedicationsComponent.html","title":"component - MedicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MedicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/medications/medications.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                medications\n            \n\n\n\n\n            \n                templateUrl\n                ./medications.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                medications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carePlanService: CarePlanService, historicalTrendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historicalTrendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck(medication: Medication, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Medication } from '../../models/medication.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'medications',\n  templateUrl: './medications.html'\n})\nexport class MedicationsComponent {\n  medications: Array;\n  @Input() patient: Patient;\n\n  constructor(\n    private carePlanService: CarePlanService,\n    private historicalTrendsService: HistoricalTrendsService\n  ) { }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.carePlanService.loadMedications(this.patient).subscribe(medications => {\n        this.medications = medications;\n        console.log('Loaded ' + this.medications.length + ' medications.');\n      })\n    }\n  }\n\n  check(medication: Medication, event: any) {\n    // Check whether care plan was checked or unchecked.\n    if (event.target.checked) {\n      this.historicalTrendsService.addMedicationChart(medication);\n    } else {\n      this.historicalTrendsService.removeChart(medication.name);\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    \n      \n      Name\n    \n  \n  \n     \n      \n        \n      \n      {{m.name}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Name                                       {{m.name}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'MedicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewCondition.html":{"url":"components/NewCondition.html","title":"component - NewCondition","body":"\n                   \n\n\n\n\n\n  Components\n  NewCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newCondition/newCondition.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                newCondition\n            \n\n\n\n\n            \n                templateUrl\n                ./newCondition.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'newCondition',\n  templateUrl: './newCondition.html'\n})\nexport class NewCondition { }\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n      \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×                  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewCondition'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox1.html":{"url":"components/NormalBox1.html","title":"component - NormalBox1","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-1.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-1\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-1.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-1.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-1\",\n\ttemplateUrl: \"./normal-box-1.html\"\n})\n\nexport class NormalBox1{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox2.html":{"url":"components/NormalBox2.html","title":"component - NormalBox2","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-2.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-2\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-2.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-2.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-2\",\n\ttemplateUrl: \"./normal-box-2.html\"\n})\n\nexport class NormalBox2{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteNavigationComponent.html":{"url":"components/NoteNavigationComponent.html","title":"component - NoteNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoteNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/noteNavigation/noteNavigation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                noteNavigation\n            \n\n\n\n\n            \n                templateUrl\n                ./noteNavigation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeFinalNote\n                            \n                            \n                                closeProgressNote\n                            \n                            \n                                closeSideNote\n                            \n                            \n                                toggleFinalNote\n                            \n                            \n                                toggleProgressNote\n                            \n                            \n                                toggleSideNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeFinalNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseFinalNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeProgressNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseProgressNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeSideNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseSideNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFinalNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFinalNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleProgressNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleProgressNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSideNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSideNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'noteNavigation',\n  templateUrl: './noteNavigation.html',\n})\n\nexport class NoteNavigationComponent {\n\n    toggleSideNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n    }\n\n    closeSideNote() {\n        document.getElementById(\"sideNote\").style.width = \"0px\";\n        if (document.getElementById(\"sideNote\").style.width == \"0px\")\n        {\n            document.getElementById(\"progressNote\").style.width = \"0px\";\n            document.getElementById(\"finalNote\").style.width = \"0px\";\n        }\n\n    }\n\n    toggleProgressNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n        document.getElementById(\"progressNote\").style.width = \"34%\";\n    }\n\n    closeProgressNote() {\n        document.getElementById(\"progressNote\").style.width = \"0px\";\n        if (document.getElementById(\"progressNote\").style.width == \"0px\")\n        {\n            document.getElementById(\"finalNote\").style.width = \"0px\";\n        }\n    }\n\n    toggleFinalNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n        document.getElementById(\"progressNote\").style.width = \"34%\";\n        document.getElementById(\"finalNote\").style.width = \"33%\";\n    }\n\n    closeFinalNote() {\n        document.getElementById(\"finalNote\").style.width = \"0px\";\n    }\n}\n\n    \n\n    \n        \n\n  \n     \n    \n    \n  \n\n&times;\n  \n    Side\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n&times;\n  \n    Progress\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n&times;\n  \n    Final\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 ×      Side    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  ×      Progress    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  ×      Final    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoteNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Observation.html":{"url":"classes/Observation.html","title":"class - Observation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Observation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/observation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                grouping\n                            \n                            \n                                id\n                            \n                            \n                                referenceRange\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCode\n                            \n                            \n                                    Static\n                                getText\n                            \n                            \n                                    Static\n                                getUnits\n                            \n                            \n                                    Static\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnits(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Observation implements Associable {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\trelativeDateTime: string;\n\tcategory: Array;\n\tcode: Array;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n\n\t// This should be populated with the normal ranges, but isn't for whatever reason.\n\treferenceRange: Object;\n\tgrouping: string;\n\n\t// Get the value of an observation\n\tstatic getValue(o: Observation) {\n\t\treturn o['valueQuantity']['value'];\n\t}\n\n\t// Get the units for an observation\n\tstatic getUnits(o: Observation) {\n\t\treturn o['valueQuantity']['unit'];\n\t}\n\n\t// Get the text for an observation\n\tstatic getText(o: Observation) {\n\t\t// If the text is empty, use the display.\n\t\treturn o['code']['text'] || o['code']['coding'][0]['display'];\n\t}\n\n\tgetCode() {\n\t\treturn this['code']['coding'][0]['code'];\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursive.html":{"url":"components/ObservationRecursive.html","title":"component - ObservationRecursive","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursion/observationRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./observationRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graphData\n                            \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService, scratchpadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursion/observationRecursion.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchpadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(obs: any, event, position, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\n@Component({\n  selector: 'observationRecursion',\n  templateUrl: './observationRecursion.html'\n})\nexport class ObservationRecursive {\n  @Input() obs: any;\n  @Input() level: number;\n  graphData: Array = [];\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n              private trendsService: HistoricalTrendsService,\n              private scratchpadService: ScratchPadService) { }\n\n  // ========================================= EVENT HANDLERS ==============================\n\n  // handles whenever a checkbox is clicked\n  checked(obs: any, event, position, data) {\n    obs.isSelected = !obs.isSelected;\n\n    // shift click functionality [not tested]\n    if (event.shiftKey) {\n      let upper, lower;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.value}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.value}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursive'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursiveChart.html":{"url":"components/ObservationRecursiveChart.html","title":"component - ObservationRecursiveChart","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursiveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursionChart\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(changedObs: any, event, position: number, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changedObs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationRecursionChart',\n  templateUrl: './observationsChart.html'\n})\nexport class ObservationRecursiveChart {\n  @Input() obs: Array;\n  @Input() level: number;\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n    private trendsService: HistoricalTrendsService) { }\n\n  getData(): Array {\n    return this.obs;\n  }\n\n  getLevel(): number {\n    return this.level;\n  }\n\n  // Called when an observation is either checked or unchecked.\n  checked(changedObs: any, event, position: number, data) {\n    changedObs.isSelected = !changedObs.isSelected;\n\n    if (event.shiftKey) {\n      let upper: number, lower: number;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursiveChart'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObservationService.html":{"url":"injectables/ObservationService.html","title":"injectable - ObservationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/observation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categorizedObservations\n                            \n                            \n                                count\n                            \n                            \n                                filterSet\n                            \n                            \n                                groupMap\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                uniqueObservations\n                            \n                            \n                                uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesObservations\n                            \n                            \n                                extractNewObservations\n                            \n                            \n                                getCheckedObservations\n                            \n                            \n                                getGrouping\n                            \n                            \n                                getScratchPadObservations\n                            \n                            \n                                handleObservationBundle\n                            \n                            \n                                loadObservationsPage\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                populateCategories\n                            \n                            \n                                scaleDates\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesObservations\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractNewObservations\n                        \n                        \n                    \n                \n            \n            \n                \nextractNewObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrouping\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrouping(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:206\n                \n            \n\n\n            \n                \n                    Given a certain observation ID, returns the position mapping of that\n ID contained within the groupMap\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleObservationBundle\n                        \n                        \n                    \n                \n            \n            \n                \nhandleObservationBundle(bundle: Bundle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bundle\n                                    \n                                                Bundle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadObservationsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadObservationsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateCategories\n                        \n                        \n                    \n                \n            \n            \n                \npopulateCategories(categories: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDates\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categorizedObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as moment from 'moment';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Observation } from '../models/observation.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class ObservationService {\n  uniqueObservations: Array = [];\n  categorizedObservations: any;\n  groupMap: { [x: string]: Array };\n  count = 0;\n  observations: Array = [];\n  selected: Array = [];\n  uniqueObservationsLoadFinished = false;\n\n  filterSet = new Set();\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient,\n    private scratchPadService: ScratchPadService\n  ) {\n    // these are the codes of the observations; \n    // groupList is used to categorize where in categorizedObservations this is stored\n    this.groupMap = {\n      \"1-1\": [\"8302-2\", \"3141-9\", \"2710-2\"],\n      \"1-2\": [],\n      \"1-3\": [],\n      \"1-4\": [\"39156-5\", \"8310-5\"],\n      \"1-5\": [],\n      \"2-1\": [\"2571-8\"],\n      \"2-2-1\": [\"789-8\", \"3094-0\", \"72166-2\"],\n      \"2-2-2\": [],\n      \"2-2-3\": [\"2823-3\"]\n    };\n\n    // categories of the observations; found using groupList\n    this.categorizedObservations = {\n      \"categories\": [\n        {\n          \"display\": \"Vitals\",\n          \"id\": \"1\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Weight\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-1\"\n            },\n            {\n              \"display\": \"Blood Pressure\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-2\"\n            },\n            {\n              \"display\": \"Heart Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-3\"\n            },\n            {\n              \"display\": \"Respiration Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-4\"\n            },\n            {\n              \"display\": \"Temperature\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-5\"\n            }\n          ]\n        },\n\n        {\n          \"display\": \"Patient History / Review of Systems\",\n          \"id\": \"2\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Constitutional Symptoms\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"2-1\"\n            },\n            {\n              \"display\": \"Body Systems\",\n              \"count\": 0,\n              \"id\": \"2-2\",\n              \"child\": [\n                {\n                  \"display\": \"Eyes\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-1\"\n                },\n                {\n                  \"display\": \"Ears, Nose, Mouth and Throat (ENT)\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-2\"\n                },\n                {\n                  \"display\": \"Cardiovascular\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-3\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"display\": \"Other\",\n          \"id\": \"3\",\n          \"count\": 0,\n          \"data\": []\n        }\n      ]\n    };\n  }\n\n  loadObservationsPage(url: string): void {\n    this.http.get(url, this.fhirService.getRequestOptions())\n      .subscribe((bundle) => {\n        this.handleObservationBundle(bundle);\n      });\n  }\n\n  handleObservationBundle(bundle: Bundle): void {\n    if (bundle) {\n      let nextObservations = >bundle.entry.map(e => e.resource);\n      this.observations = this.observations.concat(nextObservations);\n      this.extractNewObservations(nextObservations);\n\n      let nextLink = bundle.link.find(link => link.relation == 'next');\n      if (nextLink) {\n        this.loadObservationsPage(nextLink.url);\n      } else {\n        this.onLoadComplete();\n      }\n    } else {\n      console.log(\"No observations for patient.\");\n      this.observations = new Array();\n    }\n  }\n\n  onLoadComplete() {\n    this.observations = this.observations.reverse();\n    console.log(\"Loaded \" + this.uniqueObservations.length + \" observations.\");\n    this.uniqueObservationsLoadFinished = true;\n\n    this.observations.sort((n1, n2) => {\n      return n1.effectiveDateTime  this.scratchPadService.checkedMapObservations.get(o));\n  }\n\n  scaleDates(): void {\n    let RECENCY_MULTIPLIER = 0.80;\n    let timeSinceObservation = new Date().getTime() - new Date(this.observations[0].effectiveDateTime).getTime();\n    let scaledTimeSinceObservation = Math.floor(RECENCY_MULTIPLIER * timeSinceObservation);\n\n    for (let ob of this.observations) {\n      let relativeDateTime = new Date(ob.effectiveDateTime).getTime() + scaledTimeSinceObservation;\n      ob.relativeDateTime = moment(relativeDateTime).toISOString();\n    }\n  }\n\n  extractNewObservations(observations: Array): void {\n    for (let observation of observations) {\n      let code: string = observation['code']['coding'][0]['code'];\n      if (!this.filterSet.has(code)) {\n        observation.grouping = this.getGrouping(code);\n        this.uniqueObservations.push(observation);\n\n        this.filterSet.add(code);\n      }\n    }\n  }\n\n  /**\n  * Given a certain observation ID, returns the position mapping of that\n   * ID contained within the groupMap\n   */\n  getGrouping(code: string): string {\n    for (let x in this.groupMap) {\n      if (this.groupMap[x].indexOf(code) !== -1) {\n        return x;\n      }\n    }\n\n    let OTHER_GROUPING = '3';\n    return OTHER_GROUPING;\n  }\n\n  populateCategories(categories: Array): number {\n    let totalCount = 0;\n    for (let i = 0; i ): Array {\n    let observationsByCategory: { [x: string]: Array } = {};\n\n    for (let observation of observations) {\n      if (observation.hasOwnProperty('valueQuantity') && observation.hasOwnProperty('category')) {\n        let observationCategory = observation.category[0].text;\n\n        if (!observationsByCategory.hasOwnProperty(observationCategory)) {\n          observationsByCategory[observationCategory] = [];\n        }\n        observationsByCategory[observationCategory].push(observation);\n      }\n    }\n\n    let reconstructedObject: Array = [];\n    for (let ctgry of Object.keys(observationsByCategory)) {\n      reconstructedObject.push({\n        category: ctgry,\n        subheadings: false,\n        subs: null,\n        data: observationsByCategory[ctgry]\n      });\n    }\n\n    return reconstructedObject;\n  }\n\n  // ====================== SCRATCH PAD FUNCTIONALITY =============================\n\n  getScratchPadObservations() {\n    return this.scratchPadService.getObservations();\n  }\n\n  // OVERRIDDEN FROM BASECOLUMN:\n  showDefault() {\n\n  }\n\n  showScratchPad() {\n    console.log(this.getScratchPadObservations());\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsComponent.html":{"url":"components/ObservationsComponent.html","title":"component - ObservationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observations/observations.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observations\n            \n\n\n\n\n            \n                templateUrl\n                ./observations.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mappings\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                test\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, observationService: ObservationService, mapService: MapService, doctorService: DoctorService, trendsService: HistoricalTrendsService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observations/observations.component.ts:60\n                \n            \n\n\n            \n                \n                    Description: This method is called whenever the patient data is passed as input to the application. Handles\nthe initial subscription to the observation service and continual loading of the data links.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ObservationService } from '../../services/observation.service';\nimport { MapService } from '../../services/map.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Observation } from '../../models/observation.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'observations',\n  templateUrl: './observations.html'\n})\nexport class ObservationsComponent extends BaseColumn{\n  selected: Observation;\n  test: Observation;\n  observations: Array = [];\n\n  @Input() patient: Patient;\n  //@Output() observationReturned: EventEmitter> = new EventEmitter();\n\n  mappings: { [key: string]: Array } = {};\n\n  // for column switching\n  subscription: Subscription;\n\n  constructor(\n    private fhirService: FhirService,\n    private observationService: ObservationService,\n    private mapService: MapService,\n    private doctorService: DoctorService,\n    private trendsService: HistoricalTrendsService,\n    private scratchPadService: ScratchPadService\n  ) {\n      super();\n      this.mappings = MapService.STATIC_MAPPINGS;\n\n      // subscribe to scratch pad service for column switching\n      this.subscription = scratchPadService.stateChange$.subscribe(\n        sPad => {\n          if (sPad)\n            this.columnState = \"scratchpad\";\n          else\n            this.columnState = \"default\";\n        }\n      );\n  }\n\n  // ===================== FOR DATA RETRIEVAL FROM OBSERVATIONS SERVICE ============\n\n  /**\n   * Description: This method is called whenever the patient data is passed as input to the application. Handles\n   * the initial subscription to the observation service and continual loading of the data links.\n   **/\n  ngOnChanges() {\n    if (this.patient) { //If the patient is loaded\n      let url = this.fhirService.getUrl() + \"/Observation?patient=\" + this.patient.id;\n      this.observationService.loadObservationsPage(url);    \n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Observations\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Observations                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsDisplay.html":{"url":"components/ObservationsDisplay.html","title":"component - ObservationsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationsDisplay/observationsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                Observation\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllObservations\n                            \n                            \n                                checkObservation\n                            \n                            \n                                expand\n                            \n                            \n                                isObservationAssociated\n                            \n                            \n                                isObservationChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectObservation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                observationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        observations\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        observationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllObservations\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllObservations(checked)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkObservation\n                        \n                        \n                    \n                \n            \n            \n                \ncheckObservation(checked: boolean, checkedObservation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationAssociated(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationChecked(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectObservation\n                        \n                        \n                    \n                \n            \n            \n                \nselectObservation(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Observation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Observation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationsDisplay',\n  templateUrl: './observationsDisplay.html'\n})\nexport class ObservationsDisplay {\n  // Trick to allow access to static methods of Observation class in pug template\n  Observation = Observation;\n\n  // The currently selected condition in the list.\n  selected: Observation;\n\n  //Whether the checkbox for checking all observations are currently checked\n  isAllChecked : boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() observations: Array;\n  @Output() observationSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private associationService: AssociationService, \n    private scratchPadService: ScratchPadService\n  ) { }\n\n  ngOnChanges() {\n    //console.log(this.observations);\n  }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n    \n    // Add options to the context menu shown when right clicking observations.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function(obs) {\n        // Add every checked observation to the scratch pad\n        this.scratchPadService.checkedMapObservations.forEach((isChecked, observation) => {\n          if (isChecked) {\n            this.scratchPadService.addObservation(observation);\n          }\n        });\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(obs) {\n        console.log(obs);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(obs) {\n        console.log(obs);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  // Whenever a line is selected\n  selectObservation(observation: Observation) {\n    this.selected = observation;\n    this.observationSelected.emit(this.selected);\n\n    for (let o of this.scratchPadService.totalObservations) {\n      o['selected'] = (o.id == this.selected.id);\n    }\n  }\n\n  // Determine whether an observation is currently checked.\n  isObservationChecked(observation: Observation) {\n    return this.scratchPadService.checkedMapObservations.get(observation) || false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkObservation(checked: boolean, checkedObservation: Observation) {\n    this.scratchPadService.checkObservation(checked, checkedObservation);\n  }\n  \n  //Check or uncheck all observations\n  checkAllObservations(checked){\n    this.isAllChecked = checked;\n    for (let c of this.observations){\n      this.scratchPadService.checkObservation(checked, c);\n    }\n  }\n\n  // Determine whether an observation is currently associated (based on associations tool)\n  isObservationAssociated(observation: Observation) {\n    return this.associationService.associatedMapObservations.get(observation) || false;\n  }\n\n  expand(parent: string) {\n    /**\n    for (let c of this.conditions) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Observation\n        Value\n        Unit\n        Onset\n      \n    \n    \n      \n        \n          \n        \n        \n          ... {{Observation.getText(o)}}\n        \n        {{Observation.getValue(o)}}\n        {{Observation.getUnits(o)}}\n        {{o.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Observation        Value        Unit        Onset                                                                ... {{Observation.getText(o)}}                {{Observation.getValue(o)}}        {{Observation.getUnits(o)}}        {{o.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Patient.html":{"url":"classes/Patient.html","title":"class - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/patient.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                address\n                            \n                            \n                                birthDate\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                identifier\n                            \n                            \n                                mrn\n                            \n                            \n                                name\n                            \n                            \n                                telecom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telecom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Patient {\n\n    active: boolean;\n    id: string;\n    birthDate: string;\n    gender: string;\n    address: Array;\n    identifier: Array;\n    name: Array;\n    telecom: Array;\n    mrn: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientComponent.html":{"url":"components/PatientComponent.html","title":"component - PatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/patient/patient.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                patient\n            \n\n\n\n\n            \n                templateUrl\n                ./patient.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                advancedSearch\n                            \n                            \n                                allergies\n                            \n                            \n                                allergy\n                            \n                            \n                                graphConfig\n                            \n                            \n                                hover\n                            \n                            \n                                hoverStyling\n                            \n                            \n                                reason\n                            \n                            \n                                selectedCondition\n                            \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                genderString\n                            \n                            \n                                    Private\n                                loadAllergies\n                            \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectCondition\n                            \n                            \n                                showAllergyHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, doctorService: DoctorService, homeComponent: HomeComponent, conditionService: ConditionService, encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        homeComponent\n                                                  \n                                                        \n                                                                        HomeComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genderString\n                        \n                        \n                    \n                \n            \n            \n                \ngenderString(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllergies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAllergyHover\n                        \n                        \n                    \n                \n            \n            \n                \nshowAllergyHover(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            advancedSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hover', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverStyling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Server\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input, Output, ViewChild } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { EncounterService } from '../../services/encounter.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { HomeComponent } from '../../components/home/home.component';\nimport { HoverBoxComponent } from '../hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\nimport { Server } from '../../models/server.model';\nimport { Condition } from '../../models/condition.model';\n\n@Injectable()\n@Component({\n  selector: 'patient',\n  templateUrl: './patient.html'\n})\nexport class PatientComponent {\n  @Input() patient: Patient;\n  server: Server;\n  selectedCondition: Condition;\n  advancedSearch = false;\n  graphConfig: any;\n\n  //allergy details\n  allergies: Array = [];\n  allergy: string = '';\n  hoverStyling: boolean = false;\n  reason: string = '';\n\n  @ViewChild('hover', { static: false }) hover: HoverBoxComponent;\n\n  constructor(\n    private cookieService: CookieService,\n    private doctorService: DoctorService,\n    private homeComponent: HomeComponent,\n    private conditionService: ConditionService,\n    private encounterService: EncounterService\n  ) {\n    this.graphConfig = JSON.parse(this.cookieService.get('graphConfig') || '{}');\n  }\n\n  genderString(patient: Patient) {\n    var s = 'Unknown';\n    switch (patient.gender) {\n      case 'female':\n        s = 'Female';\n        break;\n      case 'male':\n        s = 'Male';\n        break;\n    }\n    return s;\n  }\n\n  selectCondition(condition) {\n    this.selectedCondition = condition;\n  }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.loadAllergies();\n      this.loadEncounters();\n    }\n  }\n\n  private loadAllergies(): void {\n    this.conditionService.loadAllergies(this.patient).subscribe(allergies => {\n      if (allergies) {\n        //add allergy strings to allergies\n        this.allergies = allergies.map(allergy => allergy.code.text);\n\n        // Construct displayed allergy string\n        if (this.allergies.length == 0) {\n          this.allergy = \"None\";\n        } else if (this.allergies.length == 1) {\n          this.allergy = this.allergies[0];\n        } else {\n          this.allergy = \"Multiple...\";\n          this.hoverStyling = true;\n        }\n      }\n      else { //no allergies\n        this.allergy = \"None\";\n      }\n    });\n  }\n\n  private loadEncounters(): void {\n    // TODO: Display the reason for visit retrieved here onto the page.\n    this.encounterService.loadEncounters(this.patient).subscribe(res => {\n      // Cast the array of encounters to the proper model (Encounter).\n      let encounters = >res;\n\n      for (let enc of encounters) {\n        let reasonText = enc.getReason();\n\n        // Only print if reasonText is not null.\n        if (reasonText) {\n          this.reason = reasonText;\n        }\n      }\n    });\n  }\n\n  showAllergyHover(event) {\n    // Don't show hover box if there is only one allergy.\n    if (this.allergies.length > 1) {\n      this.hover.show(this.allergies, event);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n        \n          {{patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0]}}\n            \n               {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}}, \n            DOB: {{patient.birthDate | amDateFormat:'MM/DD/YYYY'}} ({{-1 * (patient.birthDate | amDifference:today:'years':false)}}yr)\n\t\t  \n        \n  \n  \n    \n        \n          \n            \n\t\t\t\tAllergies:\n              {{allergy}}\n            \n            Reason for Visit: {{reason}}\n          \n        \n  \n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{patient.name[0].given[0]}} {{patient.name[0].family[0]}}                           {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}},             DOB: {{patient.birthDate | amDateFormat:\\'MM/DD/YYYY\\'}} ({{-1 * (patient.birthDate | amDifference:today:\\'years\\':false)}}yr)\t\t                                                \t\t\t\tAllergies:              {{allergy}}                        Reason for Visit: {{reason}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                            \n                                    Public\n                                patientId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPatient\n                            \n                            \n                                setPatientId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPatient\n                        \n                        \n                    \n                \n            \n            \n                \nloadPatient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPatientId\n                        \n                        \n                    \n                \n            \n            \n                \nsetPatientId(patientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Patient'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { Patient } from '../models/patient.model';\n\n@Injectable()\nexport class PatientService {\n  private readonly path = '/Patient';\n\n  // The id of the currently set patient\n  public patientId: number;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  // Set the id of the patient\n  setPatientId(patientId) {\n    this.patientId = patientId;\n  }\n\n  // Retrieve the patient with the id previously set using setPatientId()\n  loadPatient(): Observable {\n    var url = this.fhirService.getUrl() + this.path + '/' + this.patientId;\n    let options = this.fhirService.getRequestOptions(true);\n\n    return this.http.get(url, options).pipe(map(res => {\n      let patient = res;\n\n      // Assign patient MRN\n      for (let id of res['identifier']) {\n        if (id.type && id.type.coding[0].code == \"MR\") {\n          patient.mrn = id.value;\n        }\n      }\n      return patient;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScratchPadUpdate.html":{"url":"components/ScratchPadUpdate.html","title":"component - ScratchPadUpdate","body":"\n                   \n\n\n\n\n\n  Components\n  ScratchPadUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/scrachpad-update.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scratchpad-update\n            \n\n\n\n\n            \n                templateUrl\n                ./scrachpad-update.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                onset\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                onRadioChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRadioChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonRadioChanged(currStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"scratchpad-update\",\n\ttemplateUrl: \"./scrachpad-update.html\"\n})\n\nexport class ScratchPadUpdate{\n\t@Input() inputData: any;\n\t\n\tdescription: string;\n\tstatus: string;\n\tonset: string;\n\t\n\tgetData(): any {\t\t\n\t\treturn {id: this.inputData.id, data: {description: this.description, status: this.status}};\n\t}\n\t\n\tonRadioChanged(currStatus: string): void {\n\t\tconsole.log(\"changing!!!\");\n\t\tthis.status = currStatus;\n\t}\n}\n    \n\n    \n        \n\n  {{inputData.data.name}} : {{inputData.data.status}}\n  \n    \n      \n    \n    \n      \n        \n          Active\n        \n        \n          Inactive\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{inputData.data.name}} : {{inputData.data.status}}                                            Active                          Inactive                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScratchPadUpdate'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectListSingle.html":{"url":"components/SelectListSingle.html","title":"component - SelectListSingle","body":"\n                   \n\n\n\n\n\n  Components\n  SelectListSingle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/select-list-single.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                select-list-single\n            \n\n\n\n\n            \n                templateUrl\n                ./select-list-single.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/select-list-single.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"select-list-single\",\n\ttemplateUrl: \"./select-list-single.html\"\n})\n\nexport class SelectListSingle{\n\t@Input() inputData: any;\n\tlistData: String;\n\t\n\tgetData(): any {\n\t\tif (this.listData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.listData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n     {{entry.description}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}            {{entry.description}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectListSingle'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Server.html":{"url":"classes/Server.html","title":"class - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/server.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/server.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Server {\n\t// name: String;\n    // url: String;\n\tconstructor(public name: string, public url: string) {\n\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartService.html":{"url":"injectables/SmartService.html","title":"injectable - SmartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SmartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aud\n                            \n                            \n                                authorizeUrl\n                            \n                            \n                                    Readonly\n                                clientId\n                            \n                            \n                                fhirBaseUrl\n                            \n                            \n                                launch\n                            \n                            \n                                    Readonly\n                                redirectUri\n                            \n                            \n                                    Readonly\n                                scope\n                            \n                            \n                                state\n                            \n                            \n                                tokenUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                findGetParameter\n                            \n                            \n                                getToken\n                            \n                            \n                                requestAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService, fhirService: FhirService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smart.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findGetParameter\n                        \n                        \n                    \n                \n            \n            \n                \nfindGetParameter(parameterName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameterName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestAuth\n                        \n                        \n                    \n                \n            \n            \n                \nrequestAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aud\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorizeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"2c304df8-711d-4de9-afbe-330c01a5ca8e\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fhirBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            launch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            redirectUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:9000\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"launch patient/*.* openid profile\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FhirService } from '../services/fhir.service';\nimport { PatientService } from '../services/patient.service';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class SmartService {\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private fhirService: FhirService,\n    private patientService: PatientService\n  ) { }\n\n  readonly clientId: string = \"2c304df8-711d-4de9-afbe-330c01a5ca8e\";\n  readonly scope: string = \"launch patient/*.* openid profile\";\n  readonly redirectUri: string = \"http://localhost:9000\";\n\n  fhirBaseUrl: string;\n  authorizeUrl: string;\n  tokenUrl: string;\n  launch: string;\n  state: string;\n  aud: string;\n\n  authenticate() {\n    this.fhirBaseUrl = this.findGetParameter(\"iss\");\n\n    if (this.fhirBaseUrl) {\n      // Occurs when arriving to the site for the first time.\n      this.aud = this.fhirBaseUrl;\n      this.launch = this.findGetParameter(\"launch\");\n\n      this.fhirService.setUrl(this.fhirBaseUrl);\n\n      const url = this.fhirService.getUrl() + '/metadata';\n      this.http.get(url, this.fhirService.getRequestOptions(false)).subscribe(data => {\n        var smartExtension = data['rest'][0].security.extension.filter(e => {\n          return (e.url === \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\");\n        });\n\n        var auth;\n        var tok;\n\n        smartExtension[0].extension.forEach(arg => {\n          if (arg.url === \"authorize\") {\n            auth = arg.valueUri;\n          } else if (arg.url === \"token\") {\n            tok = arg.valueUri;\n          }\n        });\n\n        this.tokenUrl = tok;\n        this.authorizeUrl = auth;\n\n        this.cookieService.set('tokenUrl', this.tokenUrl);\n        this.cookieService.set('fhirBaseUrl', this.fhirBaseUrl);\n\n        this.requestAuth();\n      });\n    } else {\n      // Occurs when arriving to the site after the redirect.\n      if (this.cookieService.get('state') == this.findGetParameter('state')) {\n        return this.getToken();\n      } else {\n        console.log('Stop cross-site scripting please, thanks');\n      }\n    }\n  }\n\n  getToken() {\n    var code = this.findGetParameter(\"code\");\n\n    var body = 'code=' + code\n      + '&redirect_uri=' + encodeURI(this.redirectUri)\n      + '&token_url=' + this.cookieService.get('tokenUrl');\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n\n    return this.http.post(\"https://mongo-proxy.herokuapp.com/token\",\n      body, { headers: headers });\n  }\n\n  requestAuth() {\n    //TODO Fix hashing method - not sure best way to do it\n\n    this.state = (Md5.hashStr(\"testing Hasing\")).toString();\n    this.cookieService.set('state', this.state);\n\n    var request = this.authorizeUrl + \"?response_type=code\"\n      + \"&client_id=\" + this.clientId\n      + \"&redirect_uri=\" + this.redirectUri\n      + \"&launch=\" + this.launch\n      + \"&scope=\" + this.scope\n      + \"&state=\" + this.state\n      + \"&aud=\" + this.aud;\n\n    // Comment out the below line for debugging purposes.\n    window.location.href = encodeURI(request);\n  }\n\n  findGetParameter(parameterName) {\n    let result = null;\n    let tmp = [];\n\n    location.search.substr(1).split(\"&\").forEach(item => {\n      tmp = item.split(\"=\");\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeline.html":{"url":"classes/Timeline.html","title":"class - Timeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/timeline.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Timeline {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\tcategory: Object;\n\tcode: Object;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineComponent.html":{"url":"components/TimelineComponent.html","title":"component - TimelineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline/timeline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timelines\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encounters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encounters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { EncounterService } from '../../services/encounter.service';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'timelines',\n  templateUrl: './timeline.html'\n})\nexport class TimelineComponent {\n  encounters: Array = [];\n  @Input() patient: Patient;\n\n  constructor(private encounterService: EncounterService) { }\n\n  ngOnChanges(): void {\n    this.loadEncounters();\n  }\n\n  private loadEncounters(): void {\n    if (this.patient) {\n      this.encounterService.loadEncounters(this.patient).subscribe(encounters => {\n        this.encounters = this.encounters.concat(encounters);\n        console.log('Loaded ' + this.encounters.length + ' encounters.');\n        console.log(this.encounters);\n\n        encounters.forEach(enc => enc.position = enc.getLogValue()/5 + \"%\")\n        encounters.forEach(enc =>  console.log('Log Val pos: ' + enc.getStartDate()))\n        \n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinePopupComponent.html":{"url":"components/TimelinePopupComponent.html","title":"component - TimelinePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelinePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline_popup/timeline_popup.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timeline-popup\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline_popup.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePipe\n                            \n                            \n                                hoverBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(encounter: Encounter, event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encounter\n                                    \n                                                Encounter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePipe\n\n                        \n                    \n                    \n                        \n                            Default value : new DatePipe('en-US')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hoverBox', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { HoverBoxComponent } from '../../components/hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\n\n@Component({\n  selector: 'timeline-popup',\n  templateUrl: './timeline_popup.html'\n})\n\nexport class TimelinePopupComponent {\n  @ViewChild('hoverBox', { static: false }) hoverBox: HoverBoxComponent;\n   datePipe: DatePipe = new DatePipe('en-US');\n  open(encounter: Encounter, event: MouseEvent): void {\n   \n    let details: Array = [\n      'Date: ' + this.datePipe.transform(encounter.getStartDate(),'MM-dd-yyyy').toString(),\n      'Reason: ' + (encounter.getReason() || 'None')\n    ];\n    this.hoverBox.show(details, event);\n  }\n\n  close(event: MouseEvent): void {\n    this.hoverBox.hide(event);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n        Encounter from {{condition.onsetDateTime | amTimeAgo}}\n      \n      \n        {{condition.code.coding[0].display}}\n        Code System:{{condition.code.coding[0].system}}\n        Code: {{condition.code.coding[0].code}}\n      \n      \n        Close\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×        Encounter from {{condition.onsetDateTime | amTimeAgo}}                    {{condition.code.coding[0].display}}        Code System:{{condition.code.coding[0].system}}        Code: {{condition.code.coding[0].code}}                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolBarService.html":{"url":"injectables/ToolBarService.html","title":"injectable - ToolBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToolBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toolbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftPosition\n                            \n                            \n                                topPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ToolBarService {\n  leftPosition: string;\n  topPosition: string;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/toolbar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nav2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterScratchPad\n                            \n                            \n                                resetToDefaultView\n                            \n                            \n                                runAssociationsTool\n                            \n                            \n                                switchNav\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, conditionService: ConditionService, doctorService: DoctorService, observationService: ObservationService, scratchPadService: ScratchPadService, toolbarService: ToolBarService, trendsService: HistoricalTrendsService, elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/toolbar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nfilterScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetToDefaultView\n                        \n                        \n                    \n                \n            \n            \n                \nresetToDefaultView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchNav\n                        \n                        \n                    \n                \n            \n            \n                \nswitchNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePosition\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePosition(ref: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nav2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ToolBarService } from '../../services/toolbar.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { ObservationService} from '../../services/observation.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.html'\n  // animations: [\n  // \ttrigger('fadeIn', [\n  // \t\tstate('in', style({ opacity: '1' })),\n  // \t\ttransition('void => *', [\n  // \t\t\tstyle({ opacity: '0' }),\n  // \t\t\tanimate('800ms ease-in')\n  // \t\t])\n  // \t])\n  // ]\n})\nexport class ToolbarComponent {\n  @Input() patient: Patient;\n  nav2: boolean = false;\n\n  constructor(\n    private associationService: AssociationService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private observationService: ObservationService,\n    private scratchPadService: ScratchPadService,\n    private toolbarService: ToolBarService,\n    private trendsService: HistoricalTrendsService,\n    private elRef: ElementRef\n  ) { }\n\n  switchNav() {\n    this.nav2 = !this.nav2;\n  }\n\n  runAssociationsTool() {\n    let checkedConditions = this.conditionService.getCheckedConditions();\n    let checkedObservations = this.observationService.getCheckedObservations();\n    this.associationService.runAssociationsTool(checkedConditions, checkedObservations);\n  }\n\n  // whenver the user presses the filter button\n  filterScratchPad() {\n    \n    // Call the filtering method in the service\n    this.scratchPadService.addConditionsToScratchPad();\n    this.scratchPadService.addObservationToScratchPad();\n\n    // also switch the views to the scratch pad view\n    this.scratchPadService.switchToScratchPad(true);\n  }\n\n  // reset to default (not scratchPad)\n  resetToDefaultView() {\n    this.scratchPadService.switchToScratchPad(false);\n  }\n\n  updatePosition(ref: ElementRef) {\n    let left = this.elRef.nativeElement.querySelector('div').style.left;\n    let top = this.elRef.nativeElement.querySelector('div').style.top;\n\n    this.toolbarService.leftPosition = (parseInt(left.replace(/px/, \"\")) + 150) + \"px\";\n    this.toolbarService.topPosition = (parseInt(top.replace(/px/, \"\")) + 100) + \"px\";\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n    \n    \n    \n    \n     \n  \n  \n    \n    \n    \n     \n    \n     \n    \n     \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripleListComponent.html":{"url":"components/TripleListComponent.html","title":"component - TripleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tripleList/tripleList.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                triplelist\n            \n\n\n\n\n            \n                templateUrl\n                ./tripleList.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                obsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                passThrough\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        passThrough\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTotal\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTotal(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tripleList/tripleList.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obsCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { DoctorService } from '../../services/doctor.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'triplelist',\n  templateUrl: './tripleList.html'\n})\n\nexport class TripleListComponent {\n  @Input() patient: Patient;\n  @Output() passThrough: EventEmitter = new EventEmitter();\n  obsCount: number = 0;\n\n  constructor(private doctorService: DoctorService, private observationService: ObservationService) {\n    this.passThrough.emit(this.patient);\n  }\n\n  updateTotal(event) {\n    console.log(\"total:\" + event);\n    this.obsCount = event;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n\tid: number;\n\tname: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            appRoutingProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/accordionRecursion/accordionRecursion.component.ts\n            \n            component\n            AccordionRecursion\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/addObservation/addObservation.component.ts\n            \n            component\n            AddObservation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/baseColumn.ts\n            \n            class\n            BaseColumn\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/carePlan/carePlan.component.ts\n            \n            component\n            CarePlanComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n            \n            component\n            CarePlanDisplay\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n            \n            component\n            ColumnStateSwitcherComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            component\n            ConditionsComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/conditionsChart/conditionsChart.component.ts\n            \n            component\n            ConditionsChartComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n            \n            component\n            ConditionsDisplay\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/contextMenu/contextMenu.component.ts\n            \n            component\n            ContextMenuComponent\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                src/app/components/doctorNote/doctorNote.component.ts\n            \n            component\n            DoctorNoteComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            component\n            Favorites\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form-builder/form-builder.component.ts\n            \n            component\n            FormBuilder\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/form_components/checkbox-inline.component.ts\n            \n            component\n            CheckboxInline\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-1.component.ts\n            \n            component\n            NormalBox1\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-2.component.ts\n            \n            component\n            NormalBox2\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/scrachpad-update.component.ts\n            \n            component\n            ScratchPadUpdate\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/form_components/select-list-single.component.ts\n            \n            component\n            SelectListSingle\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/historicalTrends/historicalTrends.component.ts\n            \n            component\n            HistoricalTrendsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/hoverBox/hoverBox.component.ts\n            \n            component\n            HoverBoxComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/hoverBox/hoverBox.component.ts\n            \n            injectable\n            HoverBoxComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/loadingAnimation/loadingAnimation.component.ts\n            \n            component\n            LoadingAnimation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/medications/medications.component.ts\n            \n            component\n            MedicationsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/newCondition/newCondition.component.ts\n            \n            component\n            NewCondition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/noteNavigation/noteNavigation.component.ts\n            \n            component\n            NoteNavigationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursion/observationRecursion.component.ts\n            \n            component\n            ObservationRecursive\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n            \n            component\n            ObservationRecursiveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/observations/observations.component.ts\n            \n            component\n            ObservationsComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/components/observationsDisplay/observationsDisplay.component.ts\n            \n            component\n            ObservationsDisplay\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            component\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            injectable\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/timeline_popup/timeline_popup.component.ts\n            \n            component\n            TimelinePopupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/tripleList/tripleList.component.ts\n            \n            component\n            TripleListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/directives/auto-grow.directive.ts\n            \n            directive\n            AutoGrowDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/directives/highlight.directive.ts\n            \n            directive\n            HighlightDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/allergyIntolerance.model.ts\n            \n            class\n            AllergyIntolerance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/associable.model.ts\n            \n            interface\n            Associable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Bundle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/carePlan.model.ts\n            \n            class\n            CarePlan\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/chart.model.ts\n            \n            class\n            Chart\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/client.model.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/condition.model.ts\n            \n            class\n            Condition\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/contextMenuOption.model.ts\n            \n            class\n            ContextMenuOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/encounter.model.ts\n            \n            class\n            Encounter\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/form.model.ts\n            \n            class\n            Form\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/medication.model.ts\n            \n            class\n            Medication\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/observation.model.ts\n            \n            class\n            Observation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/patient.model.ts\n            \n            class\n            Patient\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/server.model.ts\n            \n            class\n            Server\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/timeline.model.ts\n            \n            class\n            Timeline\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pipes/humanizeBytes.pipe.ts\n            \n            pipe\n            HumanizeBytesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/carePlan.service.ts\n            \n            injectable\n            CarePlanService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/condition.service.ts\n            \n            injectable\n            ConditionService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/doctor.service.ts\n            \n            injectable\n            DoctorService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/encounter.service.ts\n            \n            injectable\n            EncounterService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/fhir.service.ts\n            \n            injectable\n            FhirService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/historicalTrends.service.ts\n            \n            injectable\n            HistoricalTrendsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/map.service.ts\n            \n            injectable\n            MapService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/observation.service.ts\n            \n            injectable\n            ObservationService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/services/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/scratchPad.service.ts\n            \n            injectable\n            ScratchPadService\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/services/smart.service.ts\n            \n            injectable\n            SmartService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/toolbar.service.ts\n            \n            injectable\n            ToolBarService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/cli : ^8.3.25\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            angular2-router-loader : ^0.3.5\n        \n            bootstrap : ^3.3.7\n        \n            concurrently : ^3.4.0\n        \n            install : ^0.8.9\n        \n            jquery : ^3.2.1\n        \n            lite-server : ^2.3.0\n        \n            moment : ^2.24.0\n        \n            ngx-contextmenu : ^5.3.0\n        \n            ngx-cookie-service : ^2.3.0\n        \n            ngx-moment : ^3.5.0\n        \n            reflect-metadata : ^0.1.10\n        \n            rxjs : ^6.5.4\n        \n            rxjs-compat : ^6.5.4\n        \n            systemjs : ^0.19.47\n        \n            ts-md5 : ^1.2.0\n        \n            tslib : ^1.9.0\n        \n            typescript : ^3.4.5\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPatient Viewer\n\nFront-end project for context-driven clinical transactions.\nPreparing the Application\nThis is an Angular 8 project using grunt as the build system, SASS for CSS, and Bootstrap for layout. npm is the package manager. \nAssuming you already have node installed via brew install node or similar, begin by running the following commands in the terminal:\ngit clone https://github.com/HII-C/patient_viewer.git\ncd patient_viewer\nnpm install -g grunt\nnpm install # to install project development dependenciesIf you do not have npm installed, do the following:\n\nMac: brew install node in Terminal\nWindows: Instructions\nLinux: Instructions\n\nThe project was tested specifically with node version 10.19.0.\nRunning the Application\nTo launch in development mode, run the following terminal command from the patient_viewer folder:\ngrunt --force # to serve the project and automatically recompile on file changesThen, do the following:\n\nVisit HSPC Sandbox, select the \"HII-C\" sandbox, choose the \"Apps\" option from the left menu, click on the \"HII-C Confidential [USE THIS]\" app, and then click \"Launch\". \nSelect the persona \"John Smith\", and patient Adams, Daniel X in the popup. This should open the Patient Viewer application.\nOnce you are done running Patient Viewer, make sure to terminate the grunt --force command in the terminal.\n\nDevelopment Guidelines\nDo's:\n\nPrefer to use let rather than var for declaring variables. The scoping for variables declared with var is unintuitive and can result in strange bugs.\nPrefer to create models (such as Encounter) rather than dealing with JSON directly. By doing so, we can take advantage of Typescript's type checking and code completion.\n\nDont's:\n\nAvoid using libraries like jQuery. Also avoid using any other approach to accessing the DOM directly (ie, document.getElementById(..)).\nAvoid leaving console.log(..) statements in the code when pushing to the repository. You can use them while developing locally but it can cause clutter in the repository.\nWrite a brief comment above each component and method that you write giving a brief overview of the functionality. If some code is particularly complex, place comments within the body of the method too.\nAvoid writing components that are very similar to one another. Instead, create a generic component that supports all use cases through an interface (examples are contextMenu.component.ts and hoverBox.component.ts).\n\nLicense\nApache 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormCreatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAddObservation\n\nAddObservation\n\nAppModule -->\n\nAddObservation->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanComponent\n\nCarePlanComponent\n\nAppModule -->\n\nCarePlanComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nDoctorNoteComponent\n\nDoctorNoteComponent\n\nAppModule -->\n\nDoctorNoteComponent->AppModule\n\n\n\n\n\nFavorites\n\nFavorites\n\nAppModule -->\n\nFavorites->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nNewCondition\n\nNewCondition\n\nAppModule -->\n\nNewCondition->AppModule\n\n\n\n\n\nNoteNavigationComponent\n\nNoteNavigationComponent\n\nAppModule -->\n\nNoteNavigationComponent->AppModule\n\n\n\n\n\nObservationRecursive\n\nObservationRecursive\n\nAppModule -->\n\nObservationRecursive->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    35 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../conditions.component.ts)\n                        \n                        \n                            appRoutingProviders   (src/.../app.module.ts)\n                        \n                        \n                            routing   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/conditions/conditions.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutingProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
