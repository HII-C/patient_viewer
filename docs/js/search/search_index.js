var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AccordionRecursion.html",[0,0.047,1,0.673]],["body/components/AccordionRecursion.html",[0,0.079,1,1.127,2,0.799,3,0.069,4,0.069,5,0.604,6,0.583,7,0.604,8,0.047,9,2.676,10,0.502,11,1.512,12,0.892,13,4.538,14,0.138,15,0.317,16,4.695,17,5.395,18,0.796,19,4.538,20,3.165,21,4.538,22,4.538,23,4.538,24,1.418,25,5.395,26,5.395,27,5.957,28,5.395,29,0.464,30,2.413,31,2.94,32,0.309,33,4.538,34,0.921,35,0.014,36,0.523,37,0.309,38,0.959,39,2.319,40,3.074,41,3.074,42,3.074,43,3.074,44,4.538,45,3.074,46,5.957,47,0.849,48,3.074,49,1.048,50,4.538,51,3.074,52,3.074,53,3.074,54,3.074,55,3.074,56,1.813,57,0.521,58,0.483,59,2.029,60,3.074,61,0.357,62,1.783,63,1.555,64,0.284,65,1.818,66,0.08,67,0.088,68,3.074,69,2.375,70,4.234,71,3.89,72,3.074,73,5.395,74,2.849,75,3.074,76,3.272,77,0.345,78,3.074,79,2.676,80,1.106,81,2.676,82,2.217,83,3.074,84,2.676,85,1.643,86,3.95,87,0.769,88,2.49,89,1.924,90,1.72,91,2.11,92,1.72,93,2.287,94,2.06,95,2.217,96,2.54,97,3.074,98,2.849,99,1.359,100,2.217,101,2.413,102,3.074,103,2.676,104,3.562,105,3.074,106,1.072,107,1.359,108,2.217,109,2.06,110,3.074,111,3.074,112,3.272,113,5.395,114,3.074,115,3.074,116,3.074,117,4.538,118,3.074,119,2.676,120,3.074,121,2.676,122,3.272,123,3.074,124,3.562,125,3.074,126,1.93,127,2.217,128,2.217,129,3.074,130,3.074,131,3.074,132,2.217,133,3.074,134,2.676,135,3.562,136,3.074,137,3.074,138,1.085,139,3.074,140,3.074,141,3.074,142,2.06,143,3.95,144,2.217,145,3.074,146,3.074,147,2.06,148,1.419,149,2.413,150,4.538,151,4.538,152,0.541,153,0.892,154,0.892,155,0.502,156,0.604,157,0.604,158,0.521,159,0.604,160,0.521,161,0.604,162,0.521,163,0.604,164,0.521,165,0.604,166,0.521,167,0.604,168,0.521,169,0.604,170,0.604,171,0.521,172,0.604,173,0.521,174,0.604,175,0.521,176,0.604,177,0.521,178,0.604,179,0.502,180,0.604,181,0.521,182,0.604,183,0.521,184,0.604,185,0.521,186,0.521,187,0.604,188,0.521,189,0.604,190,0.521,191,0.604,192,0.521,193,0.604,194,0.521,195,0.604,196,0.604,197,0.521,198,0.604,199,0.521,200,0.604,201,0.521,202,0.829,203,0.829,204,0.604,205,0.521,206,0.604,207,0.521,208,0.604,209,0.521,210,0.604,211,0.521,212,0.604,213,0.521,214,0.604,215,0.521,216,0.604,217,0.521,218,0.604,219,0.521,220,0.604,221,0.604,222,0.521,223,0.583,224,0.604,225,0.521,226,0.604,227,0.521,228,0.541,229,0.604,230,0.521,231,0.604,232,0.521,233,0.604,234,0.521,235,0.541,236,0.604,237,0.541,238,0.583,239,0.604,240,0.005,241,0.008,242,0.005]],["title/components/AccountComponent.html",[0,0.047,158,0.673]],["body/components/AccountComponent.html",[0,0.065,1,0.533,2,0.812,3,0.07,4,0.07,5,0.618,6,0.596,7,0.618,8,0.048,10,0.513,11,1.515,12,0.907,14,0.141,15,0.322,18,0.616,29,0.474,32,0.298,34,0.669,35,0.014,36,0.475,37,0.285,38,0.696,47,0.73,49,0.962,56,1.837,57,1.087,58,1.006,59,1.183,61,0.363,64,0.291,66,0.082,67,0.09,77,0.613,80,1.796,87,1.087,89,1.956,91,2.355,93,1.333,106,1.609,107,1.39,138,0.982,142,3.092,143,5.241,144,3.327,152,0.553,153,0.907,154,0.907,155,0.513,156,0.618,157,0.618,158,1.021,159,0.618,160,0.533,161,0.618,162,0.533,163,0.618,164,0.533,165,0.618,166,0.533,167,0.618,168,0.533,169,0.618,170,0.618,171,0.533,172,0.618,173,0.533,174,0.618,175,0.533,176,0.618,177,0.533,178,0.618,179,0.513,180,0.618,181,0.533,182,0.618,183,0.533,184,0.618,185,0.533,186,0.533,187,0.618,188,0.533,189,0.618,190,0.533,191,0.618,192,0.533,193,0.618,194,0.533,195,0.618,196,0.618,197,0.533,198,0.618,199,0.533,200,0.618,201,0.533,202,0.843,203,0.843,204,0.618,205,0.533,206,0.618,207,0.533,208,0.618,209,0.533,210,0.618,211,0.533,212,0.618,213,0.533,214,0.618,215,0.533,216,0.618,217,0.533,218,0.618,219,0.533,220,0.618,221,0.618,222,0.533,223,0.596,224,0.618,225,0.533,226,0.618,227,0.533,228,0.962,229,0.618,230,0.533,231,0.618,232,0.533,233,0.618,234,0.533,235,0.553,236,0.618,237,0.553,238,0.596,239,0.618,240,0.005,241,0.008,242,0.005,243,2.736,244,3.621,245,4.614,246,5.466,247,5.466,248,5.466,249,5.466,250,5.466,251,4.614,252,6.022,253,6.022,254,2.468,255,2.963,256,4.614,257,4.614,258,4.757,259,3.144,260,2.452,261,3.144,262,3.144,263,4.614,264,4.614,265,4.614,266,4.614,267,3.144,268,4.614,269,4.614,270,4.614,271,4.614,272,4.614,273,4.614,274,4.614,275,4.614,276,4.614,277,3.144,278,4.614,279,4.614,280,4.614,281,4.016,282,4.614,283,4.614,284,4.614,285,3.144,286,3.144,287,1.759,288,3.144,289,3.144,290,3.144,291,3.144,292,3.144,293,3.144,294,5.466,295,4.614,296,4.614,297,4.614,298,6.022,299,4.614,300,4.614,301,4.614,302,4.614,303,4.016,304,4.016,305,4.614,306,4.614,307,3.621,308,4.016,309,4.614,310,4.614,311,4.614,312,3.092,313,3.621,314,4.614,315,3.327,316,5.261,317,4.614,318,4.016,319,4.614,320,3.621,321,4.614,322,4.614,323,4.016,324,4.614,325,5.577,326,2.228,327,7.105,328,4.614,329,3.621,330,4.614,331,4.016]],["title/components/AddObservation.html",[0,0.047,160,0.673]],["body/components/AddObservation.html",[0,0.073,1,0.671,2,0.956,3,0.089,4,0.089,5,0.778,6,0.75,7,0.778,8,0.061,10,0.646,11,1.536,12,1.068,14,0.178,15,0.379,29,0.936,32,0.255,35,0.014,36,0.595,37,0.223,57,0.921,58,1.048,61,0.311,64,0.366,66,0.103,67,0.114,87,0.671,93,2.304,96,3.738,127,4.474,132,4.816,138,1.09,152,0.697,153,1.068,154,1.068,155,0.646,156,0.778,157,0.778,158,0.671,159,0.778,160,1.226,161,0.778,162,0.671,163,0.778,164,0.671,165,0.778,166,0.671,167,0.778,168,0.671,169,0.778,170,0.778,171,0.671,172,0.778,173,0.671,174,0.778,175,0.671,176,0.778,177,0.671,178,0.778,179,0.646,180,0.778,181,0.671,182,0.778,183,0.671,184,0.778,185,0.671,186,0.671,187,0.778,188,0.671,189,0.778,190,0.671,191,0.778,192,0.671,193,0.778,194,0.671,195,0.778,196,0.778,197,0.671,198,0.778,199,0.671,200,0.778,201,0.671,202,0.993,203,0.993,204,0.778,205,0.671,206,0.778,207,0.671,208,0.778,209,0.671,210,0.778,211,0.671,212,0.778,213,0.671,214,0.778,215,0.671,216,0.778,217,0.671,218,0.778,219,0.671,220,0.778,221,0.778,222,0.671,223,0.75,224,0.778,225,0.671,226,0.778,227,0.671,228,0.697,229,0.778,230,0.671,231,0.778,232,0.671,233,0.778,234,0.671,235,0.697,236,0.778,237,0.697,238,0.75,239,0.778,240,0.007,241,0.009,242,0.007,332,3.445,333,5.434,334,6.205,335,5.434,336,3.918,337,3.251,338,4.73,339,4.265,340,4.73,341,4.265,342,5.434,343,4.73,344,4.73,345,4.73,346,5.434,347,4.73,348,2.341,349,3.959,350,5.434,351,5.434,352,4.265,353,4.265]],["title/classes/AllergyIntolerance.html",[67,0.114,354,2.862]],["body/classes/AllergyIntolerance.html",[3,0.137,4,0.137,8,0.093,14,0.275,15,0.5,32,0.294,35,0.014,37,0.312,66,0.159,67,0.176,77,0.853,240,0.01,241,0.012,242,0.01,337,3.094,354,5.164,355,2.21,356,5.312,357,2.86,358,3.243,359,6.103,360,6.103,361,2.817]],["title/components/AppComponent.html",[0,0.047,162,0.673]],["body/components/AppComponent.html",[0,0.079,1,0.783,2,1.061,3,0.103,4,0.103,5,0.908,6,0.876,7,0.908,8,0.071,10,0.754,11,1.548,12,1.185,29,1.012,32,0.19,35,0.014,36,0.497,61,0.363,64,0.427,66,0.12,67,0.133,87,0.783,138,1.16,152,0.813,153,1.185,154,1.185,155,0.754,156,0.908,157,0.908,158,0.783,159,0.908,160,0.783,161,0.908,162,1.205,163,0.908,164,0.783,165,0.908,166,0.783,167,0.908,168,0.783,169,0.908,170,0.908,171,0.783,172,0.908,173,0.783,174,0.908,175,0.783,176,0.908,177,0.783,178,0.908,179,0.754,180,0.908,181,0.783,182,0.908,183,0.783,184,0.908,185,0.783,186,0.783,187,0.908,188,0.783,189,0.908,190,0.783,191,0.908,192,0.783,193,0.908,194,0.783,195,0.908,196,0.908,197,0.783,198,0.908,199,0.783,200,0.908,201,0.783,202,1.101,203,1.101,204,0.908,205,0.783,206,0.908,207,0.783,208,0.908,209,0.783,210,0.908,211,0.783,212,0.908,213,0.783,214,0.908,215,0.783,216,0.908,217,0.783,218,0.908,219,0.783,220,0.908,221,0.908,222,0.783,223,0.876,224,0.908,225,0.783,226,0.908,227,0.783,228,0.813,229,0.908,230,0.783,231,0.908,232,0.783,233,0.908,234,0.783,235,0.813,236,0.908,237,0.813,238,0.876,239,0.908,240,0.008,241,0.01,242,0.008,244,4.73,329,4.73,362,4.021,363,5.245,364,6.027,365,4.62,366,6.027,367,5.245,368,6.027,369,3.783]],["title/modules/AppModule.html",[370,2.492,371,2.862]],["body/modules/AppModule.html",[0,0.072,1,1.038,2,0.437,3,0.056,4,0.056,8,0.038,31,2.707,35,0.014,61,0.652,64,0.357,66,0.065,67,0.071,88,1.146,90,2.649,92,1.389,152,0.437,158,1.083,160,1.038,162,1.216,164,1.038,166,1.038,171,1.038,173,1.038,175,1.038,177,1.038,179,0.999,181,1.038,183,1.038,185,1.038,188,1.083,190,1.12,192,1.038,194,1.038,197,1.038,199,1.038,207,1.038,209,1.038,211,1.038,213,1.038,215,1.038,217,1.038,225,1.038,227,1.038,230,1.038,232,1.038,234,0.421,240,0.004,241,0.006,242,0.004,244,1.948,255,2.707,369,1.558,370,1.558,371,6.084,372,1.663,373,1.663,374,3.716,375,2.972,376,3.716,377,1.948,378,2.16,379,2.16,380,2.16,381,2.16,382,2.16,383,4.103,384,3.426,385,3.621,386,2.956,387,3.621,388,2.492,389,2.956,390,3.843,391,3.426,392,2.395,393,3.843,394,3.621,395,3.029,396,1.558,397,1.948,398,4.647,399,3.358,400,3.859,401,3.859,402,2.482,403,2.16,404,2.482,405,2.482,406,2.482,407,2.482,408,2.482,409,2.482,410,2.482,411,2.482,412,2.482,413,2.482,414,2.482,415,2.482,416,2.482,417,2.482,418,2.482,419,2.482,420,2.482,421,2.482,422,2.482,423,2.482,424,2.482,425,2.482,426,2.482,427,1.948,428,2.482,429,2.482,430,2.482,431,2.482,432,2.482,433,2.482,434,2.482,435,2.482,436,1.706,437,2.586,438,2.159,439,1.558,440,2.482,441,2.482,442,2.482,443,2.482,444,2.482,445,2.482,446,2.482,447,2.482,448,2.482,449,2.482,450,2.482,451,2.482,452,2.482,453,3.859,454,1.468,455,3.859,456,2.16,457,1.663,458,3.358,459,3.358,460,3.029,461,1.79,462,3.358,463,1.948,464,3.859,465,1.319,466,1.948,467,1.948,468,2.16,469,3.859,470,2.482,471,2.482,472,3.172,473,2.482,474,3.352,475,2.16,476,3.029,477,3.029,478,2.16,479,1.468,480,2.482,481,2.482]],["title/interfaces/Associable.html",[482,2.66,483,2.492]],["body/interfaces/Associable.html",[3,0.144,4,0.144,8,0.098,35,0.013,66,0.167,240,0.011,241,0.012,242,0.011,482,4.306,483,4.632,484,6.426,485,5.592]],["title/injectables/AssociationService.html",[384,2.221,486,1.038]],["body/injectables/AssociationService.html",[3,0.077,4,0.077,8,0.052,14,0.154,15,0.342,18,0.655,29,0.74,31,3.142,32,0.299,34,0.961,35,0.014,36,0.492,37,0.299,38,1.001,47,0.837,49,0.602,57,0.972,58,0.9,61,0.542,64,0.316,66,0.089,67,0.098,77,0.384,80,1.945,88,3.51,89,2.079,92,4.255,103,2.976,148,3.186,240,0.006,241,0.008,242,0.006,260,1.817,337,2.809,384,2.744,386,3.432,465,1.817,474,3.599,486,1.282,487,1.512,488,2.976,489,5.734,490,5.734,491,1.848,492,4.904,493,4.904,494,5.734,495,4.268,496,2.292,497,3.704,498,4.904,499,2.9,500,4.904,501,3.42,502,4.624,503,4.268,504,4.904,505,3.667,506,3.42,507,3.849,508,3.42,509,6.186,510,3.42,511,5.451,512,4.904,513,3.42,514,4.872,515,2.105,516,3.42,517,4.904,518,4.904,519,4.268,520,4.904,521,4.904,522,4.904,523,4.904,524,3.42,525,3.42,526,3.42,527,2.022,528,2.292,529,1.914,530,4.904,531,2.368,532,3.42,533,2.976,534,3.42,535,3.208,536,4.916,537,2.147,538,2.684,539,3.42,540,3.42,541,3.42,542,3.42,543,3.42,544,3.42,545,3.42,546,6.631,547,4.268,548,3.42,549,4.904,550,3.42,551,4.904,552,3.42,553,4.904,554,4.268,555,2.022,556,3.42,557,4.904,558,3.42,559,2.684,560,3.42,561,3.42,562,4.904,563,4.904,564,4.904,565,3.42,566,4.904,567,3.42,568,4.904,569,3.42,570,4.904,571,3.42,572,2.976,573,1.447,574,3.42,575,3.42,576,3.42,577,3.536,578,2.292,579,4.904,580,3.42,581,3.42,582,3.42,583,3.42,584,2.976,585,3.42,586,3.42]],["title/directives/AutoGrowDirective.html",[155,0.648,235,0.699]],["body/directives/AutoGrowDirective.html",[3,0.123,4,0.123,8,0.084,10,0.893,11,1.226,14,0.246,18,0.897,29,0.826,32,0.298,34,0.794,35,0.014,36,0.406,37,0.225,38,0.826,47,0.897,49,1.181,61,0.43,64,0.506,66,0.143,67,0.158,107,2.421,155,1.095,234,0.928,235,1.181,240,0.009,241,0.011,242,0.009,491,1.288,587,6.583,588,4.766,589,6.711,590,7.761,591,7.761,592,4.766,593,5.068,594,6.962,595,5.477,596,5.841,597,5.477,598,5.477,599,5.477,600,4.299,601,5.477,602,5.477,603,6.711,604,5.841,605,4.766,606,5.477,607,5.477]],["title/classes/BaseColumn.html",[67,0.114,608,2.221]],["body/classes/BaseColumn.html",[3,0.102,4,0.102,8,0.07,14,0.205,15,0.417,18,0.798,29,1.005,32,0.32,34,0.661,35,0.014,36,0.338,37,0.274,38,0.688,39,2.466,47,0.945,49,1.245,57,1.244,58,1.046,61,0.47,66,0.119,67,0.192,70,4.688,77,0.67,90,4.215,106,2.083,112,3.286,134,3.967,147,3.054,240,0.008,241,0.01,242,0.008,313,3.577,336,4.804,355,1.65,531,2.201,608,3.342,609,3.967,610,4.804,611,4.465,612,4.804,613,4.307,614,4.739,615,4.739,616,5.099,617,4.558,618,4.558,619,4.558,620,4.307,621,4.558,622,4.307,623,4.558,624,4.558,625,4.558,626,4.558,627,3.577,628,2.201,629,4.558,630,3.054,631,3.286,632,3.967,633,3.577,634,4.558,635,3.054,636,3.967,637,5.973,638,4.558,639,3.577,640,3.532,641,5.199,642,2.884,643,2.884,644,2.695,645,5.973,646,4.558,647,5.973,648,6.663,649,4.558,650,4.558,651,4.558,652,4.558,653,4.558,654,4.558,655,3.577,656,4.558,657,3.286,658,4.558,659,4.558,660,2.861,661,4.558,662,3.054,663,3.967,664,3.967,665,3.967,666,4.558,667,4.558,668,4.558,669,3.967]],["title/classes/Bundle.html",[67,0.114,670,2.221]],["body/classes/Bundle.html",[3,0.135,4,0.135,8,0.092,14,0.272,15,0.497,32,0.292,35,0.014,37,0.292,66,0.185,67,0.205,77,0.799,80,1.904,240,0.01,241,0.012,242,0.01,355,2.188,670,3.984,671,4.743,672,6.588,673,5.238,674,6.043,675,6.043,676,5.259,677,2.917]],["title/classes/CarePlan.html",[67,0.114,479,2.347]],["body/classes/CarePlan.html",[3,0.115,4,0.115,8,0.078,14,0.231,15,0.449,32,0.319,35,0.014,37,0.331,39,1.788,56,1.723,58,0.805,61,0.403,66,0.133,67,0.148,77,0.938,99,2.848,240,0.008,241,0.011,242,0.008,337,2.622,355,1.856,357,2.65,358,3.422,361,2.366,479,3.809,483,4.421,502,4.316,577,3.696,678,4.461,679,4.644,680,7.044,681,3.401,682,5.079,683,4.37,684,5.528,685,5.126,686,5.126,687,5.126,688,5.126,689,5.126,690,5.126,691,4.023,692,3.218,693,3.604,694,3.031,695,5.126,696,5.126,697,5.126,698,5.126,699,5.126,700,4.461,701,5.126,702,5.126,703,3.696]],["title/components/CarePlanComponent.html",[0,0.047,164,0.673]],["body/components/CarePlanComponent.html",[0,0.066,1,0.551,2,0.832,3,0.073,4,0.073,5,0.639,6,0.616,7,0.639,8,0.05,10,0.53,11,1.518,12,0.929,14,0.146,15,0.33,18,0.631,20,3.249,24,1.476,29,0.49,32,0.32,34,0.685,35,0.014,36,0.482,37,0.3,38,0.713,39,1.648,47,0.906,49,1.144,56,1.588,57,1.101,58,0.874,59,1.778,61,0.564,62,1.326,64,0.3,66,0.085,67,0.093,77,0.364,80,1.151,85,1.176,87,0.551,89,1.377,90,2.644,94,4.098,95,4.409,106,1.133,107,1.436,138,0.998,152,0.572,153,0.929,154,0.929,155,0.53,156,0.639,157,0.639,158,0.551,159,0.639,160,0.551,161,0.639,162,0.551,163,0.639,164,1.036,165,0.639,166,0.551,167,0.639,168,0.551,169,0.639,170,0.639,171,0.551,172,0.639,173,0.551,174,0.639,175,0.551,176,0.639,177,0.551,178,0.639,179,0.53,180,0.639,181,0.551,182,0.639,183,0.551,184,0.639,185,0.551,186,0.551,187,0.639,188,0.551,189,0.639,190,0.551,191,0.639,192,0.551,193,0.639,194,0.551,195,0.639,196,0.639,197,0.551,198,0.639,199,0.551,200,0.639,201,0.551,202,0.863,203,0.863,204,0.639,205,0.551,206,0.639,207,0.551,208,0.639,209,0.551,210,0.639,211,0.551,212,0.639,213,0.551,214,0.639,215,0.551,216,0.639,217,0.551,218,0.639,219,0.551,220,0.929,221,0.639,222,0.551,223,0.616,224,0.639,225,0.551,226,0.639,227,0.551,228,0.572,229,0.639,230,0.551,231,0.639,232,0.551,233,0.639,234,0.551,235,0.572,236,0.639,237,0.572,238,0.616,239,0.639,240,0.005,241,0.008,242,0.005,326,2.689,385,4.138,388,2.76,392,2.737,436,1.436,479,3.842,491,1.111,573,0.82,608,4.21,610,3.407,611,3.166,612,3.407,613,3.407,614,3.732,615,3.732,616,4.016,620,2.342,622,2.342,628,1.568,631,2.342,642,2.281,643,2.281,662,3.166,704,2.827,705,3.709,706,4.725,707,5.569,708,4.409,709,4.543,710,6.115,711,2.196,712,2.039,713,4.725,714,3.248,715,3.248,716,5.492,717,2.55,718,2.55,719,2.55,720,2.55,721,3.248,722,3.248,723,3.248,724,3.248,725,2.55,726,2.55,727,2.55,728,2.177,729,2.827,730,1.5,731,2.55,732,1.322,733,1.818,734,2.827,735,2.827,736,2.55,737,2.55,738,2.55,739,3.709,740,3.407,741,2.039,742,1.818,743,3.248,744,2.827,745,3.248,746,2.55,747,3.248,748,2.827,749,3.248]],["title/components/CarePlanDisplay.html",[0,0.047,166,0.673]],["body/components/CarePlanDisplay.html",[0,0.061,1,0.483,2,0.755,3,0.064,4,0.064,5,0.56,6,0.54,7,0.56,8,0.044,10,0.465,11,1.504,12,0.843,14,0.128,15,0.299,18,0.689,24,1.34,29,0.43,32,0.308,34,0.937,35,0.014,36,0.524,37,0.3,38,0.976,47,0.896,49,1.138,56,2.373,57,0.483,58,0.447,59,2.432,61,0.451,62,1.203,63,2.17,64,0.263,66,0.074,67,0.082,74,1.789,77,0.579,80,1.256,87,0.727,88,1.98,89,1.818,106,0.994,107,1.26,109,1.91,122,3.718,138,0.936,152,0.502,153,0.843,154,0.843,155,0.465,156,0.56,157,0.56,158,0.483,159,0.56,160,0.483,161,0.56,162,0.483,163,0.56,164,0.483,165,0.56,166,1.096,167,0.56,168,0.483,169,1.014,170,0.56,171,0.483,172,0.56,173,0.483,174,0.56,175,0.483,176,0.56,177,0.483,178,0.56,179,0.936,180,0.56,181,0.483,182,0.56,183,0.483,184,0.56,185,0.483,186,0.483,187,0.56,188,0.483,189,0.56,190,0.483,191,0.56,192,0.483,193,0.56,194,0.483,195,0.56,196,0.56,197,0.483,198,0.56,199,0.483,200,0.56,201,0.483,202,0.783,203,0.783,204,0.56,205,0.483,206,0.56,207,0.483,208,0.56,209,0.483,210,0.56,211,0.483,212,0.56,213,0.483,214,0.56,215,0.483,216,0.56,217,0.483,218,0.56,219,0.483,220,0.56,221,0.56,222,0.483,223,0.54,224,0.56,225,0.483,226,0.56,227,0.483,228,0.502,229,0.56,230,0.483,231,0.56,232,0.483,233,0.56,234,0.483,235,0.502,236,0.56,237,0.502,238,0.54,239,0.56,240,0.005,241,0.007,242,0.005,260,3.048,312,1.91,326,2.971,361,2.381,392,2.7,479,4.602,515,0.958,531,2.071,537,2.692,555,2.536,573,1.082,600,2.237,640,1.685,642,2.071,643,2.071,660,1.789,681,2.071,692,2.692,694,2.536,708,4.437,730,1.316,731,2.237,733,2.4,741,1.789,744,3.733,750,2.48,751,4.289,752,4.047,753,3.443,754,4.289,755,4.289,756,4.289,757,3.092,758,4.137,759,3.845,760,4.289,761,2.536,762,5.157,763,2.237,764,4.289,765,2.85,766,3.211,767,2.85,768,4.289,769,2.85,770,4.289,771,5.738,772,2.85,773,4.289,774,2.85,775,3.092,776,2.85,777,2.874,778,2.85,779,2.85,780,4.289,781,2.85,782,2.85,783,1.685,784,3.092,785,2.279,786,2.85,787,1.789,788,2.055,789,1.91,790,1.91,791,1.316,792,2.536,793,2.874,794,2.692,795,3.601,796,1.91,797,2.055,798,1.91,799,1.91,800,1.91,801,2.055,802,2.886,803,1.91,804,1.91,805,1.91,806,1.91,807,3.456,808,3.237,809,3.456,810,2.237,811,4.488,812,2.85,813,3.718,814,2.055,815,4.289,816,2.237,817,1.789,818,2.237,819,2.48,820,2.48,821,2.48,822,1.91,823,2.85,824,2.85,825,2.48,826,2.48,827,2.237,828,2.85,829,1.91,830,1.789,831,2.48,832,2.48,833,2.237,834,4.289,835,3.092,836,2.055,837,2.055,838,2.237,839,2.237,840,2.85,841,4.289,842,4.289,843,2.85]],["title/injectables/CarePlanService.html",[385,2.347,486,1.038]],["body/injectables/CarePlanService.html",[3,0.095,4,0.095,8,0.065,14,0.192,15,0.398,18,0.763,29,0.862,32,0.283,34,0.934,35,0.014,36,0.478,37,0.283,38,0.972,47,0.763,57,0.722,58,0.668,61,0.611,64,0.394,66,0.111,67,0.123,77,0.478,80,1.391,94,3.826,95,4.117,240,0.007,241,0.009,242,0.007,385,3.376,388,3.008,465,2.262,474,4.044,479,3.809,486,1.493,487,1.882,491,1.688,497,4.07,499,3.809,514,4.317,515,2.412,573,1.865,628,2.056,630,2.853,670,2.383,677,2.056,682,3.07,692,2.673,694,2.518,708,3.07,711,2.6,712,2.673,731,3.342,732,1.733,802,2.383,844,3.706,845,5.71,846,5.71,847,5.71,848,5.71,849,4.258,850,4.506,851,5.71,852,4.258,853,2.853,854,4.506,855,3.342,856,3.07,857,4.317,858,4.317,859,2.673,860,3.07,861,3.342,862,2.673,863,3.07,864,3.706,865,3.342,866,3.706,867,3.706,868,3.342,869,3.342,870,3.706,871,4.258,872,3.342,873,3.706,874,4.258,875,2.518,876,4.258,877,4.258,878,4.258,879,4.969,880,4.258,881,4.258,882,3.342,883,3.706,884,5.71,885,4.258,886,4.258,887,3.706,888,4.258,889,4.258,890,4.258,891,3.706,892,4.258,893,4.258,894,4.258]],["title/classes/Chart.html",[67,0.114,895,2.66]],["body/classes/Chart.html",[3,0.111,4,0.111,8,0.076,14,0.222,15,0.439,32,0.325,35,0.014,36,0.541,37,0.333,39,2.728,56,2.115,57,0.838,58,1.144,66,0.129,67,0.142,69,2.362,77,0.845,80,1.533,98,3.103,99,2.185,128,3.564,240,0.008,241,0.01,242,0.008,325,4.94,337,2.819,355,1.79,358,3.68,438,3.522,457,4.641,535,2.766,684,5.436,703,3.564,791,2.282,822,4.218,895,5.159,896,4.302,897,6.926,898,6.926,899,6.926,900,6.926,901,6.926,902,4.943,903,4.943,904,4.943,905,4.943,906,4.943,907,4.943,908,4.943,909,4.943,910,3.879,911,4.943,912,4.302,913,4.302,914,4.302,915,4.302,916,4.302,917,3.879,918,4.302,919,4.302,920,4.943,921,4.943,922,4.302,923,4.302,924,3.879]],["title/components/CheckboxInline.html",[0,0.047,168,0.673]],["body/components/CheckboxInline.html",[0,0.076,1,0.714,2,0.997,3,0.094,4,0.094,5,0.828,6,0.798,7,0.828,8,0.064,10,0.687,11,1.541,12,1.114,14,0.189,15,0.395,18,0.757,24,1.77,32,0.294,35,0.014,36,0.475,37,0.263,47,0.757,49,0.741,56,1.904,57,0.961,58,0.889,59,1.584,61,0.331,62,1.59,64,0.389,66,0.11,67,0.121,77,0.636,87,0.714,91,1.647,138,1.167,152,0.741,153,1.114,154,1.114,155,0.687,156,0.828,157,0.828,158,0.714,159,0.828,160,0.714,161,0.828,162,0.714,163,0.828,164,0.714,165,0.828,166,0.714,167,0.828,168,1.161,169,1.406,170,0.828,171,0.714,172,0.828,173,0.714,174,0.828,175,0.714,176,0.828,177,0.714,178,0.828,179,0.687,180,0.828,181,0.714,182,0.828,183,0.714,184,0.828,185,0.714,186,0.714,187,0.828,188,0.714,189,0.828,190,0.714,191,0.828,192,0.714,193,0.828,194,0.714,195,0.828,196,0.828,197,0.714,198,0.828,199,0.714,200,0.828,201,0.714,202,1.035,203,1.035,204,0.828,205,0.714,206,0.828,207,0.714,208,0.828,209,0.714,210,0.828,211,0.714,212,0.828,213,0.714,214,0.828,215,0.714,216,0.828,217,0.714,218,0.828,219,0.714,220,0.828,221,0.828,222,0.714,223,0.798,224,0.828,225,0.714,226,0.828,227,0.714,228,0.741,229,0.828,230,0.714,231,0.828,232,0.714,233,0.828,234,0.714,235,0.741,236,0.828,237,0.741,238,0.798,239,0.828,240,0.007,241,0.009,242,0.007,759,4.592,925,6.41,926,3.665,927,5.667,928,5.667,929,6.406,930,6.406,931,3.584,932,4.293,933,4.211,934,4.211,935,4.211,936,4.211,937,4.211,938,3.665,939,4.211,940,3.798,941,4.932]],["title/classes/Client.html",[67,0.114,942,3.116]],["body/classes/Client.html",[3,0.138,4,0.138,8,0.094,14,0.277,15,0.503,32,0.296,35,0.013,36,0.566,37,0.296,67,0.177,77,0.883,240,0.01,241,0.012,242,0.01,355,2.232,357,2.872,942,5.654,943,5.365,944,6.165,945,6.165]],["title/components/ColumnStateSwitcherComponent.html",[0,0.047,171,0.673]],["body/components/ColumnStateSwitcherComponent.html",[0,0.084,1,0.572,2,0.855,3,0.076,4,0.076,5,0.663,6,0.64,7,0.663,8,0.052,10,0.551,11,1.522,12,0.955,14,0.152,18,0.649,24,1.517,29,0.733,32,0.282,34,0.489,35,0.014,36,0.462,37,0.271,38,0.509,39,2.396,47,0.76,49,0.855,57,1.118,61,0.447,62,1.597,64,0.312,66,0.088,67,0.097,74,3.049,77,0.545,85,1.759,87,0.572,88,2.627,90,4.327,91,1.9,92,3.184,98,3.049,124,3.812,138,1.016,147,3.255,152,0.594,153,0.955,154,0.955,155,0.551,156,0.663,157,0.663,158,0.572,159,0.663,160,0.572,161,0.663,162,0.572,163,0.663,164,0.572,165,0.663,166,0.572,167,0.663,168,0.572,169,0.663,170,0.663,171,1.055,172,0.663,173,0.572,174,0.663,175,0.572,176,0.663,177,0.572,178,0.663,179,0.551,180,0.663,181,0.572,182,0.663,183,0.572,184,0.663,185,0.572,186,0.572,187,0.663,188,0.572,189,0.663,190,0.572,191,0.663,192,0.572,193,0.663,194,0.572,195,0.663,196,0.663,197,0.572,198,0.663,199,0.572,200,0.663,201,0.572,202,0.887,203,0.887,204,0.663,205,0.572,206,0.663,207,0.572,208,0.663,209,0.572,210,0.663,211,0.572,212,0.663,213,0.572,214,0.663,215,0.572,216,0.663,217,0.572,218,0.663,219,0.572,220,0.955,221,0.663,222,0.572,223,0.64,224,0.663,225,0.572,226,0.663,227,0.572,228,0.594,229,0.663,230,0.572,231,0.663,232,0.572,233,0.663,234,0.572,235,0.594,236,0.663,237,0.594,238,0.64,239,0.663,240,0.006,241,0.008,242,0.006,392,2.687,436,2.147,491,0.794,529,1.888,573,1.571,608,3.483,632,5.417,640,2.872,642,3.418,643,3.563,657,3.502,662,3.255,663,4.227,664,5.417,681,1.629,708,4.488,730,1.558,735,2.937,763,2.649,791,2.242,794,3.907,857,3.255,946,2.937,947,4.857,948,4.857,949,4.857,950,6.87,951,6.225,952,6.225,953,5.691,954,4.857,955,3.375,956,6.225,957,4.227,958,3.375,959,4.227,960,4.857,961,3.375,962,4.886,963,3.375,964,4.857,965,4.857,966,4.857,967,3.502,968,3.375,969,3.375,970,5.691,971,3.375,972,3.375,973,2.937,974,2.937]],["title/classes/Condition.html",[67,0.114,148,1.833]],["body/classes/Condition.html",[3,0.118,4,0.118,8,0.081,14,0.237,15,0.457,32,0.332,35,0.014,37,0.334,56,2.507,61,0.414,66,0.137,67,0.152,77,0.934,99,2.329,148,3.025,240,0.009,241,0.011,242,0.009,337,3.037,355,1.908,357,2.683,358,2.799,361,2.432,483,4.476,502,3.53,503,6.207,577,3.799,679,4.725,691,4.135,777,4.779,975,4.585,976,7.132,977,7.132,978,7.132,979,5.142,980,7.132,981,5.268,982,5.268,983,5.268,984,5.268,985,5.268,986,5.268,987,5.268,988,5.268,989,5.268]],["title/injectables/ConditionService.html",[386,1.917,486,1.038]],["body/injectables/ConditionService.html",[3,0.077,4,0.077,8,0.052,14,0.154,15,0.342,18,0.655,29,0.74,32,0.316,34,0.961,35,0.014,36,0.492,37,0.309,38,1.001,47,0.922,49,0.863,57,1.124,58,0.983,61,0.59,64,0.316,66,0.089,67,0.098,69,1.108,77,0.853,80,1.397,85,1.776,88,3.281,90,2.744,104,2.684,138,0.558,148,3.186,240,0.006,241,0.008,242,0.006,320,3.849,326,1.651,348,2.022,354,3.536,386,2.368,388,2.893,392,2.78,436,1.512,465,1.817,472,2.292,474,3.599,486,1.282,487,1.512,491,1.623,496,2.292,497,3.704,499,2.9,514,2.292,515,1.149,527,2.022,529,1.914,531,1.651,547,4.268,573,1.896,611,3.842,628,1.651,630,2.292,640,2.9,642,1.651,643,1.651,670,1.914,677,2.768,711,2.53,730,1.579,732,1.392,734,2.976,740,3.536,850,4.461,853,2.292,856,2.466,857,3.286,858,3.286,859,3.078,860,2.466,861,3.849,862,3.078,863,3.536,864,2.976,865,2.684,866,4.268,867,4.268,990,2.976,991,5.734,992,4.99,993,6.263,994,6.263,995,4.268,996,4.904,997,4.904,998,4.904,999,4.904,1000,3.42,1001,3.42,1002,4.904,1003,3.42,1004,4.904,1005,3.42,1006,4.904,1007,3.42,1008,4.904,1009,3.42,1010,4.904,1011,3.42,1012,3.42,1013,3.42,1014,3.42,1015,2.976,1016,4.268,1017,3.42,1018,2.976,1019,3.42,1020,3.42,1021,3.42,1022,3.42,1023,3.42,1024,3.42,1025,3.42,1026,3.286,1027,2.684,1028,3.42,1029,3.42,1030,3.42,1031,3.42,1032,2.684,1033,3.42,1034,3.42,1035,2.976,1036,3.849,1037,2.684,1038,2.684,1039,3.42,1040,3.42,1041,3.42,1042,3.42,1043,3.42,1044,3.42,1045,2.976,1046,3.42,1047,3.42,1048,3.42,1049,3.42,1050,3.42,1051,3.42,1052,3.42,1053,3.42]],["title/components/ConditionsChartComponent.html",[0,0.047,173,0.673]],["body/components/ConditionsChartComponent.html",[0,0.051,1,0.366,2,0.608,3,0.077,4,0.048,5,0.424,6,0.409,7,0.424,8,0.033,10,0.352,11,1.469,12,0.679,14,0.097,15,0.241,16,3.761,18,0.462,20,2.625,24,1.08,29,0.521,32,0.313,34,0.878,35,0.014,36,0.494,37,0.299,38,0.914,39,2.011,47,0.925,49,1.219,56,1.816,57,0.916,58,0.988,59,2.367,61,0.476,62,0.97,63,1.748,64,0.2,66,0.056,67,0.062,69,0.699,77,0.8,80,1.657,85,1.251,87,0.586,88,2.281,89,2.668,91,0.844,93,2.292,98,1.355,99,0.954,100,1.556,112,1.556,119,1.878,126,1.355,138,1.027,142,2.896,144,2.492,148,3.073,152,0.38,153,0.679,154,0.679,155,0.352,156,0.424,157,0.424,158,0.366,159,0.424,160,0.366,161,0.424,162,0.366,163,0.424,164,0.366,165,0.424,166,0.366,167,0.424,168,0.366,169,0.424,170,0.424,171,0.366,172,0.424,173,0.837,174,0.424,175,0.366,176,0.424,177,0.366,178,0.424,179,0.352,180,0.424,181,0.366,182,0.424,183,0.366,184,0.424,185,0.366,186,0.366,187,0.424,188,0.366,189,0.424,190,0.366,191,0.424,192,0.366,193,0.424,194,0.366,195,0.424,196,0.424,197,0.366,198,0.424,199,0.366,200,0.424,201,0.366,202,0.631,203,0.631,204,0.424,205,0.366,206,0.424,207,0.366,208,0.424,209,0.366,210,0.424,211,0.366,212,0.424,213,0.366,214,0.424,215,0.366,216,0.424,217,0.366,218,0.424,219,0.366,220,0.424,221,0.424,222,0.366,223,0.409,224,0.424,225,0.366,226,0.424,227,0.366,228,0.38,229,0.424,230,0.366,231,0.424,232,0.366,233,0.424,234,0.366,235,0.38,236,0.424,237,0.38,238,0.409,239,0.424,240,0.004,241,0.006,242,0.004,255,2.677,258,1.878,260,1.836,287,1.208,326,2.087,329,2.712,370,1.355,386,2.784,392,2.369,454,2.043,491,1.016,515,1.816,527,1.276,538,1.694,555,4.159,573,0.872,578,2.316,681,1.668,683,2.043,693,2.418,711,1.868,730,0.996,732,0.878,741,2.169,742,1.208,757,2.492,761,2.043,766,2.765,775,2.492,777,2.316,796,1.446,805,1.446,825,1.878,826,1.878,827,1.694,833,1.694,835,2.492,836,3.116,837,1.556,875,1.276,883,1.878,1054,1.878,1055,3.456,1056,3.456,1057,4.322,1058,3.761,1059,4.322,1060,4.322,1061,3.761,1062,4.941,1063,4.941,1064,3.456,1065,3.456,1066,2.712,1067,3.456,1068,3.456,1069,4.941,1070,4.941,1071,3.392,1072,2.158,1073,3.456,1074,2.158,1075,2.158,1076,2.158,1077,2.158,1078,2.158,1079,3.456,1080,4.322,1081,5.405,1082,4.322,1083,2.158,1084,2.158,1085,2.158,1086,3.456,1087,2.158,1088,2.712,1089,2.158,1090,3.456,1091,2.158,1092,3.311,1093,3.456,1094,2.158,1095,3.456,1096,2.158,1097,2.158,1098,2.158,1099,2.158,1100,2.158,1101,2.158,1102,2.158,1103,2.158,1104,2.158,1105,1.446,1106,1.878,1107,4.904,1108,2.158,1109,3.456,1110,2.158,1111,3.456,1112,2.158,1113,1.878,1114,3.456,1115,2.158,1116,2.158,1117,2.158,1118,3.456,1119,1.694,1120,1.878,1121,2.158,1122,2.158,1123,3.007,1124,2.158,1125,2.158,1126,4.704,1127,3.456,1128,2.158,1129,3.007,1130,2.158,1131,1.355,1132,3.456,1133,2.158,1134,1.556,1135,1.694,1136,2.158,1137,1.878,1138,2.158,1139,2.158,1140,2.158,1141,1.694,1142,1.878,1143,2.158,1144,2.158,1145,1.446,1146,3.456,1147,2.158,1148,3.456,1149,2.158,1150,2.158,1151,1.878,1152,1.878,1153,2.158,1154,2.158,1155,2.158,1156,1.878,1157,2.158,1158,2.158,1159,1.878,1160,4.322,1161,2.158,1162,4.322,1163,2.158,1164,3.456,1165,2.158,1166,3.456,1167,3.456,1168,3.456,1169,3.456,1170,2.158,1171,2.158,1172,1.694,1173,3.007,1174,3.456,1175,2.158,1176,2.158,1177,2.158,1178,2.158,1179,2.158,1180,2.158,1181,2.158,1182,2.158,1183,2.158,1184,2.158,1185,3.456,1186,2.158,1187,2.158,1188,1.878,1189,3.456,1190,2.492,1191,3.456,1192,2.158,1193,2.158,1194,3.456,1195,3.456,1196,2.158,1197,2.158,1198,2.158]],["title/components/ConditionsComponent.html",[0,0.047,175,0.673]],["body/components/ConditionsComponent.html",[0,0.057,1,0.431,2,0.692,3,0.057,4,0.057,5,0.5,6,0.482,7,0.5,8,0.039,10,0.415,11,1.491,12,0.773,14,0.114,15,0.274,18,0.642,20,2.875,24,1.229,29,0.594,32,0.321,34,0.57,35,0.014,36,0.434,37,0.304,38,0.594,39,1.372,47,0.89,49,1.172,56,2.078,57,1.159,58,1.046,59,2.036,61,0.549,62,1.104,63,1.99,64,0.235,66,0.066,67,0.073,77,0.285,80,1.318,85,0.921,87,0.815,88,3.282,89,2.039,90,2.201,91,0.995,100,2.836,106,1.372,124,1.997,138,0.954,148,2.977,152,0.448,153,0.773,154,0.773,155,0.415,156,0.5,157,0.5,158,0.431,159,0.5,160,0.431,161,0.5,162,0.431,163,0.5,164,0.431,165,0.5,166,0.431,167,0.5,168,0.431,169,0.5,170,0.5,171,0.431,172,0.5,173,0.431,174,0.5,175,0.917,176,0.5,177,0.431,178,0.5,179,0.415,180,0.5,181,0.431,182,0.5,183,0.431,184,0.5,185,0.431,186,0.431,187,0.5,188,0.431,189,0.5,190,0.431,191,0.5,192,0.431,193,0.5,194,0.431,195,0.5,196,0.5,197,0.431,198,0.5,199,0.431,200,0.5,201,0.431,202,0.719,203,0.719,204,0.5,205,0.431,206,0.5,207,0.431,208,0.5,209,0.431,210,0.5,211,0.431,212,0.5,213,0.431,214,0.5,215,0.431,216,0.5,217,0.431,218,0.5,219,0.431,220,0.773,221,0.5,222,0.431,223,0.482,224,0.5,225,0.431,226,0.5,227,0.431,228,0.448,229,0.5,230,0.431,231,0.5,232,0.431,233,0.5,234,0.431,235,0.448,236,0.5,237,0.448,238,0.482,239,0.5,240,0.004,241,0.007,242,0.004,255,2.851,287,1.424,308,2.215,326,2.986,386,3.113,388,2.517,392,2.606,436,1.125,454,2.326,491,1.272,515,1.966,527,1.505,531,1.229,538,1.997,573,0.993,608,3.978,610,2.836,611,2.636,612,2.836,613,2.836,614,3.223,615,3.223,616,4.65,620,1.835,622,1.835,628,1.229,631,1.835,640,1.505,642,1.229,643,1.229,657,1.835,662,1.705,705,3.088,709,4.145,711,2.089,712,1.597,716,5.061,717,1.997,718,1.997,719,1.997,720,1.997,725,1.997,726,1.997,727,1.997,728,1.705,730,1.175,732,1.036,737,1.997,738,1.997,739,3.088,740,2.836,741,1.597,742,1.424,746,1.997,748,2.215,761,2.326,766,3.028,790,1.705,791,1.175,817,1.597,829,1.705,922,2.215,938,2.215,967,1.835,979,1.835,1027,3.088,1058,4.185,1061,4.185,1071,3.774,1105,1.705,1106,2.215,1107,4.218,1119,1.997,1120,2.215,1126,2.215,1129,2.215,1145,1.705,1199,1.997,1200,3.934,1201,4.809,1202,5.383,1203,4.809,1204,5.411,1205,4.709,1206,3.934,1207,2.545,1208,2.545,1209,2.545,1210,2.545,1211,2.545,1212,2.545,1213,2.545,1214,2.545,1215,2.545,1216,2.545,1217,2.545,1218,2.545,1219,2.545,1220,2.545,1221,2.545,1222,2.215,1223,1.705,1224,1.997,1225,1.997,1226,2.545,1227,2.545,1228,2.545,1229,1.997,1230,2.545,1231,2.545,1232,2.545,1233,2.215,1234,1.705,1235,3.934,1236,2.545,1237,2.545,1238,2.545,1239,3.088,1240,2.215,1241,2.545,1242,2.215,1243,2.215,1244,2.545,1245,3.934,1246,2.545,1247,2.545,1248,2.545,1249,2.215,1250,3.934,1251,3.934,1252,2.215,1253,2.545,1254,2.545,1255,2.545,1256,2.215,1257,2.545,1258,2.545,1259,2.545,1260,2.215,1261,2.545,1262,2.545,1263,2.545,1264,2.545,1265,2.545,1266,2.545,1267,2.545,1268,2.545,1269,3.934]],["title/components/ConditionsDisplay.html",[0,0.047,177,0.673]],["body/components/ConditionsDisplay.html",[0,0.054,1,0.398,2,0.651,3,0.053,4,0.053,5,0.462,6,0.445,7,0.462,8,0.036,10,0.383,11,1.481,12,0.727,14,0.106,15,0.258,18,0.611,24,1.155,29,0.558,32,0.307,34,0.99,35,0.014,36,0.532,37,0.302,38,1.031,47,0.93,49,1.102,56,2.34,57,0.627,58,0.58,59,2.569,61,0.47,62,1.283,63,1.87,64,0.217,66,0.061,67,0.068,74,1.475,77,0.581,80,1.113,81,2.045,87,0.398,88,2.994,89,0.996,99,1.039,106,0.819,109,1.575,138,0.846,147,2.477,148,3.774,149,1.844,152,0.414,153,0.727,154,0.727,155,0.383,156,0.462,157,0.462,158,0.398,159,0.462,160,0.398,161,0.462,162,0.398,163,0.462,164,0.398,165,0.462,166,0.398,167,0.462,168,0.398,169,0.899,170,0.462,171,0.398,172,0.462,173,0.398,174,0.462,175,0.398,176,0.462,177,1.014,178,0.462,179,0.846,180,0.462,181,0.398,182,0.462,183,0.398,184,0.462,185,0.398,186,0.398,187,0.462,188,0.398,189,0.462,190,0.398,191,0.462,192,0.398,193,0.462,194,0.398,195,0.462,196,0.462,197,0.398,198,0.462,199,0.398,200,0.462,201,0.398,202,0.675,203,0.675,204,0.462,205,0.398,206,0.462,207,0.398,208,0.462,209,0.398,210,0.462,211,0.398,212,0.462,213,0.398,214,0.462,215,0.398,216,0.462,217,0.398,218,0.462,219,0.398,220,0.727,221,0.462,222,0.398,223,0.445,224,0.462,225,0.398,226,0.462,227,0.398,228,0.414,229,0.462,230,0.398,231,0.462,232,0.398,233,0.462,234,0.398,235,0.414,236,0.462,237,0.414,238,0.445,239,0.462,240,0.004,241,0.006,242,0.004,260,3.629,312,1.575,361,2.393,384,3.503,386,3.023,392,2.449,472,1.575,491,1.075,515,1.242,527,1.39,531,2.207,535,1.315,536,1.844,537,2.869,555,2.186,573,1.308,578,2.477,642,3.023,643,3.023,660,1.475,681,1.785,683,2.186,730,1.085,733,2.558,752,3.587,753,3.154,757,2.666,758,3.737,759,3.473,761,2.186,763,1.844,766,2.9,775,2.666,777,2.477,783,1.39,784,2.666,785,1.964,787,1.475,788,1.694,789,3.473,790,2.477,791,1.085,792,2.186,793,2.477,794,2.321,795,3.537,796,1.575,797,1.694,798,1.575,799,1.575,800,1.575,801,1.694,802,3.629,803,1.575,804,1.575,805,1.575,806,1.575,807,3.473,808,3.253,809,3.473,810,2.902,813,3.737,814,1.694,816,1.844,817,1.475,818,1.844,835,2.666,836,1.694,837,1.694,838,2.902,839,2.902,1018,2.045,1066,2.902,1071,3.587,1088,2.902,1105,1.575,1107,2.666,1123,3.218,1159,3.218,1270,2.045,1271,3.697,1272,3.697,1273,3.697,1274,3.697,1275,3.697,1276,3.697,1277,3.697,1278,3.697,1279,4.571,1280,3.697,1281,2.35,1282,2.35,1283,2.35,1284,3.697,1285,2.35,1286,3.697,1287,2.35,1288,3.697,1289,2.35,1290,3.697,1291,2.35,1292,3.697,1293,2.35,1294,3.697,1295,2.35,1296,3.697,1297,2.35,1298,2.35,1299,2.35,1300,3.697,1301,2.35,1302,2.35,1303,2.35,1304,1.844,1305,1.844,1306,2.35,1307,3.218,1308,2.477,1309,4.511,1310,3.697,1311,3.218,1312,2.35,1313,2.35,1314,4.571,1315,2.35,1316,4.571,1317,2.35,1318,3.697,1319,3.697,1320,1.844,1321,3.218,1322,2.35,1323,2.35,1324,2.35,1325,2.35,1326,2.045,1327,2.35,1328,2.35,1329,2.35,1330,2.35,1331,2.35,1332,2.35,1333,2.35,1334,2.35,1335,2.35,1336,2.35,1337,2.35,1338,2.35,1339,2.35,1340,2.35,1341,2.35,1342,3.218,1343,2.35]],["title/components/ContextMenuComponent.html",[0,0.047,179,0.648]],["body/components/ContextMenuComponent.html",[0,0.065,1,0.385,2,0.633,3,0.051,4,0.051,5,0.446,6,0.43,7,0.446,8,0.035,10,0.37,11,1.476,12,0.707,14,0.102,15,0.251,18,0.48,29,0.342,32,0.296,34,0.855,35,0.014,36,0.489,37,0.278,38,0.89,39,1.254,47,0.74,49,0.975,56,1.708,57,1.086,58,1.006,59,2.218,61,0.351,64,0.21,66,0.059,67,0.065,69,2.307,77,0.57,80,0.876,85,2.135,87,0.757,89,1.525,99,2.247,106,2.678,107,1.003,122,3.221,138,0.829,152,0.399,153,0.707,154,0.707,155,0.37,156,0.446,157,0.446,158,0.385,159,0.446,160,0.385,161,0.446,162,0.385,163,0.446,164,0.385,165,0.446,166,0.385,167,0.446,168,0.385,169,0.446,170,0.446,171,0.385,172,0.446,173,0.385,174,0.446,175,0.385,176,0.446,177,0.385,178,0.446,179,0.829,180,0.446,181,0.385,182,0.446,183,0.385,184,0.446,185,0.385,186,0.385,187,0.446,188,0.385,189,0.446,190,0.385,191,0.446,192,0.385,193,0.446,194,0.385,195,0.446,196,0.446,197,0.385,198,0.446,199,0.385,200,0.446,201,0.385,202,0.657,203,0.657,204,0.446,205,0.385,206,0.446,207,0.385,208,0.446,209,0.385,210,0.446,211,0.385,212,0.446,213,0.385,214,0.446,215,0.385,216,0.446,217,0.385,218,0.446,219,0.385,220,0.446,221,0.446,222,0.385,223,0.43,224,0.446,225,0.385,226,0.446,227,0.385,228,0.399,229,0.446,230,0.385,231,0.446,232,0.385,233,0.446,234,0.385,235,0.399,236,0.446,237,0.399,238,0.43,239,0.446,240,0.004,241,0.006,242,0.004,312,2.41,353,3.99,361,2.347,369,2.258,396,1.424,454,2.127,491,1.552,531,1.096,535,2.5,537,2.258,593,3.406,627,1.781,628,1.096,644,1.342,655,1.781,681,2.675,709,3.406,736,1.781,753,4.496,791,1.66,792,4.462,795,3.191,799,1.521,802,2.844,803,4.139,806,2.41,807,2.41,808,3.191,809,2.41,814,2.593,830,3.191,850,2.258,887,3.13,957,4.424,1145,2.41,1172,1.781,1229,3.99,1308,4.702,1344,1.975,1345,3.597,1346,3.597,1347,4.468,1348,3.13,1349,5.02,1350,3.597,1351,3.13,1352,3.597,1353,4.468,1354,5.083,1355,4.468,1356,3.996,1357,3.506,1358,3.888,1359,2.983,1360,3.597,1361,3.597,1362,3.597,1363,5.376,1364,3.99,1365,2.269,1366,3.597,1367,2.823,1368,3.597,1369,3.665,1370,2.269,1371,3.597,1372,2.269,1373,2.804,1374,5.895,1375,3.597,1376,5.895,1377,3.597,1378,2.269,1379,3.99,1380,3.13,1381,4.627,1382,3.597,1383,3.13,1384,2.269,1385,5.083,1386,3.597,1387,3.597,1388,3.597,1389,3.13,1390,3.597,1391,3.597,1392,3.597,1393,2.269,1394,2.269,1395,2.823,1396,2.269,1397,3.597,1398,3.597,1399,3.597,1400,5.083,1401,3.13,1402,3.597,1403,2.269,1404,3.13,1405,3.99,1406,2.269,1407,2.269,1408,2.269,1409,2.269,1410,2.269,1411,2.269,1412,2.269,1413,4.251,1414,2.269,1415,4.468,1416,2.269,1417,3.597,1418,1.781,1419,2.269,1420,2.269,1421,3.13,1422,2.269,1423,1.975,1424,3.597,1425,2.269,1426,2.269,1427,2.269,1428,1.975,1429,2.269,1430,2.269,1431,2.269,1432,4.468,1433,3.597,1434,4.468,1435,1.975,1436,2.269,1437,2.269,1438,2.269,1439,2.269,1440,2.269,1441,2.269,1442,2.269,1443,3.597]],["title/classes/ContextMenuOption.html",[67,0.114,1369,2.862]],["body/classes/ContextMenuOption.html",[3,0.119,4,0.119,8,0.081,14,0.238,15,0.459,32,0.294,34,0.768,35,0.014,36,0.393,37,0.294,49,0.932,66,0.138,67,0.152,69,2.49,77,0.839,99,2.906,122,5.154,179,0.864,240,0.009,241,0.011,242,0.009,355,1.918,361,3.548,375,4.126,535,3.678,681,3.174,753,4.301,791,3.035,792,4.545,795,4.487,808,4.825,1026,4.405,1223,3.549,1308,5.322,1348,5.721,1349,4.405,1369,4.74,1380,5.721,1413,3.818,1444,4.609,1445,5.296,1446,5.296,1447,5.296,1448,6.574,1449,6.574,1450,5.296]],["title/components/DoctorNoteComponent.html",[0,0.047,181,0.673]],["body/components/DoctorNoteComponent.html",[0,0.08,1,0.801,2,1.077,3,0.106,4,0.106,5,0.929,6,0.896,7,0.929,8,0.072,10,0.771,11,1.55,12,1.203,35,0.013,36,0.503,61,0.372,64,0.437,66,0.123,67,0.136,87,0.801,138,1.17,152,0.832,153,1.203,154,1.203,155,0.771,156,0.929,157,0.929,158,0.801,159,0.929,160,0.801,161,0.929,162,0.801,163,0.929,164,0.801,165,0.929,166,0.801,167,0.929,168,0.801,169,0.929,170,0.929,171,0.801,172,0.929,173,0.801,174,0.929,175,0.801,176,0.929,177,0.801,178,0.929,179,0.771,180,0.929,181,1.215,182,0.929,183,0.801,184,0.929,185,0.801,186,0.801,187,0.929,188,0.801,189,0.929,190,0.801,191,0.929,192,0.801,193,0.929,194,0.801,195,0.929,196,0.929,197,0.801,198,0.929,199,0.801,200,0.929,201,0.801,202,1.118,203,1.118,204,0.929,205,0.801,206,0.929,207,0.801,208,0.929,209,0.801,210,0.929,211,0.801,212,0.929,213,0.801,214,0.929,215,0.801,216,0.929,217,0.801,218,0.929,219,0.801,220,0.929,221,0.929,222,0.801,223,0.896,224,0.929,225,0.801,226,0.929,227,0.801,228,0.832,229,0.929,230,0.801,231,0.929,232,0.801,233,0.929,234,0.801,235,0.832,236,0.929,237,0.832,238,0.896,239,0.929,240,0.008,241,0.01,242,0.008,336,4.411,339,4.801,1451,4.115,1452,6.117,1453,6.117]],["title/injectables/DoctorService.html",[255,1.755,486,1.038]],["body/injectables/DoctorService.html",[3,0.102,4,0.102,8,0.07,14,0.205,15,0.416,18,0.797,29,0.687,32,0.309,34,0.965,35,0.014,36,0.494,37,0.309,38,1.005,47,0.797,49,0.801,56,2.005,57,1.129,58,1.109,61,0.523,62,1.675,64,0.421,66,0.118,67,0.131,69,1.933,80,1.918,87,1.276,89,2.823,91,1.78,100,4.303,101,4.684,107,2.012,112,3.281,127,4.303,135,5.226,148,2.101,240,0.008,241,0.01,242,0.008,255,2.638,337,1.852,436,2.638,437,5.046,438,2.547,439,2.856,486,1.56,487,2.012,527,2.691,555,2.691,669,3.961,785,2.418,805,3.05,875,2.691,882,3.572,1032,3.572,1045,3.961,1141,3.572,1223,3.05,1234,3.05,1242,3.961,1454,3.961,1455,6.658,1456,5.795,1457,5.967,1458,7.067,1459,3.961,1460,5.967,1461,4.551,1462,4.551,1463,5.967,1464,4.551,1465,4.551,1466,4.551,1467,4.551,1468,4.551,1469,4.551,1470,5.967,1471,4.551,1472,4.551,1473,4.551,1474,4.551,1475,4.551,1476,4.551,1477,4.551,1478,4.551,1479,4.551,1480,4.551,1481,4.551,1482,4.551,1483,5.193,1484,4.551,1485,4.551,1486,4.551,1487,4.551,1488,4.551,1489,4.551,1490,3.961,1491,4.551,1492,4.551,1493,4.551]],["title/classes/Encounter.html",[67,0.114,1494,2.221]],["body/classes/Encounter.html",[3,0.105,4,0.105,8,0.072,14,0.211,15,0.425,18,0.813,32,0.328,35,0.014,37,0.325,47,0.955,66,0.122,67,0.135,77,0.917,85,2.589,108,3.383,240,0.008,241,0.01,242,0.008,337,1.909,355,1.699,357,2.542,358,3.59,361,3.42,502,3.144,515,2.045,535,2.625,573,1.999,577,4.389,682,4.872,683,4.228,692,2.945,693,4.001,694,2.774,733,2.625,875,2.774,1494,4.146,1495,4.083,1496,4.389,1497,5.475,1498,7.15,1499,7.15,1500,7.15,1501,7.15,1502,4.691,1503,4.691,1504,4.691,1505,4.691,1506,4.691,1507,4.691,1508,4.691,1509,4.691,1510,4.691,1511,4.691,1512,4.691,1513,4.691,1514,6.087,1515,3.682,1516,4.691,1517,5.297,1518,4.691,1519,6.087,1520,4.691,1521,4.691,1522,4.691]],["title/injectables/EncounterService.html",[387,2.347,486,1.038]],["body/injectables/EncounterService.html",[3,0.096,4,0.096,8,0.066,14,0.193,15,0.401,18,0.865,29,0.867,32,0.296,34,1.002,35,0.014,36,0.512,37,0.296,38,1.043,47,0.865,57,0.729,58,0.675,61,0.604,62,1.613,64,0.398,66,0.112,67,0.165,77,0.775,80,1.048,138,0.702,240,0.007,241,0.01,242,0.007,348,2.543,387,3.399,388,3.08,465,2.285,472,2.881,474,4.064,486,1.503,487,1.901,491,1.865,496,2.881,497,4.087,499,3.399,515,1.445,573,1.818,628,2.076,630,2.881,670,2.406,677,2.775,711,2.401,732,1.75,850,4.521,853,2.881,856,3.101,859,2.699,860,3.101,861,3.375,862,2.699,863,3.101,865,3.375,1015,3.742,1016,3.742,1026,2.881,1035,3.742,1036,4.511,1037,3.375,1038,3.375,1135,3.375,1152,3.742,1359,3.275,1494,4.401,1523,3.742,1524,5.748,1525,4.511,1526,5.748,1527,5.748,1528,5.748,1529,4.3,1530,5.748,1531,4.3,1532,5.748,1533,4.3,1534,3.101,1535,4.511,1536,3.742,1537,4.3,1538,4.3,1539,4.3,1540,4.3,1541,4.3,1542,3.742,1543,4.3,1544,5.748,1545,4.3,1546,4.3,1547,4.3]],["title/components/Favorites.html",[0,0.047,183,0.673]],["body/components/Favorites.html",[0,0.073,1,0.659,2,0.945,3,0.087,4,0.087,5,0.764,6,0.737,7,0.764,8,0.059,10,0.634,11,1.534,12,1.055,14,0.175,15,0.374,18,0.717,29,0.587,32,0.286,34,0.778,35,0.014,36,0.516,37,0.252,38,0.81,47,0.821,49,0.945,56,1.306,57,0.659,58,0.61,59,1.463,61,0.483,64,0.359,66,0.101,67,0.112,77,0.602,87,1.042,93,2.81,96,3.709,107,1.719,138,1.081,152,0.684,153,1.055,154,1.055,155,0.634,156,0.764,157,0.764,158,0.659,159,0.764,160,0.659,161,0.764,162,0.659,163,0.764,164,0.659,165,0.764,166,0.659,167,0.764,168,0.659,169,0.764,170,0.764,171,0.659,172,0.764,173,0.659,174,0.764,175,0.659,176,0.764,177,0.659,178,0.764,179,0.634,180,0.764,181,0.659,182,0.764,183,1.308,184,0.764,185,0.659,186,0.659,187,0.764,188,0.659,189,0.764,190,0.659,191,0.764,192,0.659,193,0.764,194,0.659,195,0.764,196,0.764,197,0.659,198,0.764,199,0.659,200,0.764,201,0.659,202,0.981,203,0.981,204,0.764,205,0.659,206,0.764,207,0.659,208,0.764,209,0.659,210,0.764,211,0.659,212,0.764,213,0.659,214,0.764,215,0.659,216,0.764,217,0.659,218,0.764,219,0.659,220,0.764,221,0.764,222,0.659,223,0.737,224,0.764,225,0.659,226,0.764,227,0.659,228,0.684,229,0.764,230,0.659,231,0.764,232,0.659,233,0.764,234,0.659,235,0.684,236,0.764,237,0.684,238,0.737,239,0.764,240,0.006,241,0.009,242,0.006,254,3.051,255,3.179,287,2.175,394,4.359,491,1.262,573,0.981,593,4.939,605,3.384,673,5.033,1367,3.051,1548,3.384,1549,5.367,1550,6.147,1551,6.628,1552,4.213,1553,6.628,1554,5.35,1555,3.888,1556,3.888,1557,5.367,1558,3.888,1559,3.888,1560,5.367,1561,3.888,1562,3.384,1563,3.888,1564,3.888,1565,3.888,1566,3.888,1567,3.888,1568,5.367,1569,5.367,1570,5.367,1571,5.367]],["title/injectables/FhirService.html",[388,1.616,486,1.038]],["body/injectables/FhirService.html",[3,0.108,4,0.108,8,0.074,14,0.217,15,0.432,18,0.828,29,1.033,32,0.32,34,0.993,35,0.014,36,0.508,37,0.314,38,1.033,47,0.965,49,1.091,56,2.301,57,0.818,58,0.757,61,0.487,64,0.446,66,0.126,67,0.139,77,0.912,89,2.628,240,0.008,241,0.01,242,0.008,358,2.564,388,2.523,465,2.564,486,1.621,487,2.133,491,1.61,515,1.621,573,1.564,677,2.993,1359,3.465,1572,4.199,1573,6.848,1574,5.375,1575,6.198,1576,7.227,1577,6.198,1578,6.198,1579,4.825,1580,6.198,1581,4.825,1582,6.198,1583,4.825,1584,6.198,1585,4.825,1586,6.198,1587,6.198,1588,4.825,1589,4.825,1590,4.825,1591,5.395,1592,6.198,1593,6.198,1594,6.505,1595,4.825,1596,4.825,1597,4.825,1598,4.825]],["title/classes/Form.html",[67,0.114,186,0.673]],["body/classes/Form.html",[3,0.136,4,0.136,8,0.093,14,0.272,15,0.497,32,0.311,35,0.014,37,0.332,39,2.486,66,0.158,67,0.174,69,2.454,77,0.8,186,1.208,240,0.01,241,0.012,242,0.01,355,2.192,357,2.85,1599,5.269,1600,6.055,1601,6.055,1602,6.055]],["title/components/FormBuilder.html",[0,0.047,185,0.673]],["body/components/FormBuilder.html",[0,0.068,1,0.579,2,1.167,3,0.077,4,0.077,5,0.672,6,0.648,7,0.672,8,0.052,10,0.557,11,1.523,12,0.963,14,0.154,15,0.342,18,0.765,24,1.531,29,0.865,32,0.318,34,0.495,35,0.014,36,0.464,37,0.312,38,0.516,47,0.885,49,1.25,57,0.579,58,0.536,61,0.385,62,1.608,63,2.479,64,0.316,66,0.089,67,0.098,69,1.107,77,0.702,87,1.061,91,1.336,106,1.191,121,2.973,138,1.081,152,0.601,153,0.963,154,0.963,155,0.557,156,0.672,157,0.672,158,0.579,159,0.672,160,0.579,161,0.672,162,0.579,163,0.672,164,0.579,165,0.672,166,0.579,167,0.672,168,0.579,169,0.672,170,0.672,171,0.579,172,0.672,173,0.579,174,0.672,175,0.579,176,0.672,177,0.579,178,0.672,179,0.557,180,0.672,181,0.579,182,0.672,183,0.579,184,0.672,185,1.061,186,1.232,187,0.672,188,0.579,189,0.672,190,0.579,191,0.672,192,0.579,193,0.672,194,0.579,195,0.672,196,0.672,197,0.579,198,0.672,199,0.579,200,0.672,201,0.579,202,0.895,203,0.895,204,0.672,205,0.579,206,0.672,207,0.579,208,0.672,209,0.579,210,0.672,211,0.579,212,0.672,213,0.579,214,0.672,215,0.579,216,0.672,217,0.579,218,0.672,219,0.579,220,0.672,221,0.672,222,0.579,223,0.648,224,0.672,225,0.579,226,0.672,227,0.579,228,0.601,229,0.672,230,0.579,231,0.672,232,0.579,233,0.672,234,0.579,235,0.601,236,0.672,237,0.601,238,0.648,239,0.672,240,0.006,241,0.008,242,0.006,352,4.497,427,6.128,436,1.51,515,1.148,759,4.195,761,2.898,766,3.503,783,2.02,830,2.144,931,3.206,1131,2.144,1141,2.681,1190,4.132,1359,3.8,1603,5.73,1604,6.795,1605,2.973,1606,4.9,1607,5.73,1608,4.987,1609,4.9,1610,5.73,1611,6.628,1612,5.73,1613,6.26,1614,4.9,1615,6.26,1616,5.73,1617,5.73,1618,5.73,1619,4.9,1620,3.416,1621,3.416,1622,3.416,1623,3.416,1624,3.416,1625,3.416,1626,3.416,1627,3.416,1628,3.416,1629,4.9,1630,3.416,1631,3.416,1632,3.416,1633,3.416,1634,3.416,1635,3.416,1636,2.463,1637,3.416,1638,2.144,1639,3.416,1640,4.9,1641,3.416,1642,3.416,1643,2.973,1644,3.416]],["title/modules/FormCreatorModule.html",[370,2.492,383,2.66]],["body/modules/FormCreatorModule.html",[3,0.108,4,0.108,8,0.074,35,0.014,61,0.619,64,0.445,66,0.125,67,0.139,87,0.817,152,0.848,168,1.377,201,1.377,203,1.131,205,1.377,219,1.377,222,1.377,240,0.008,241,0.01,242,0.008,369,3.024,370,3.024,372,3.228,373,3.228,374,5.371,375,3.024,376,3.781,377,5.371,383,5.572,395,4.86,396,3.024,398,4.193,458,5.389,459,5.389,460,3.781,461,3.474,462,5.389,463,3.781,1645,4.193,1646,4.193,1647,4.193,1648,4.818,1649,4.818,1650,4.818,1651,6.192,1652,4.818,1653,4.818,1654,4.818,1655,4.818,1656,4.818,1657,4.818]],["title/directives/HighlightDirective.html",[155,0.648,237,0.699]],["body/directives/HighlightDirective.html",[3,0.128,4,0.128,8,0.087,10,0.93,11,1.257,14,0.256,24,2.149,29,0.861,32,0.283,34,0.827,35,0.014,36,0.423,37,0.283,38,0.861,57,0.967,58,0.895,61,0.448,62,1.6,64,0.527,66,0.148,67,0.164,77,0.772,107,2.521,155,1.122,234,0.967,237,1.211,238,1.304,240,0.009,241,0.011,242,0.009,361,2.633,491,1.341,592,4.963,593,5.139,594,7.02,596,5.986,1658,4.963,1659,6.878,1660,6.878,1661,5.703,1662,5.703,1663,5.703,1664,5.703]],["title/components/HistoricalTrendsComponent.html",[0,0.047,188,0.673]],["body/components/HistoricalTrendsComponent.html",[0,0.056,1,0.427,2,0.687,3,0.056,4,0.056,5,0.495,6,0.478,7,0.495,8,0.039,10,0.411,11,1.49,12,0.767,14,0.113,15,0.272,18,0.521,29,0.589,31,2.841,32,0.303,34,0.844,35,0.014,36,0.492,37,0.273,38,0.879,39,1.877,47,0.823,49,1.084,57,0.987,58,0.914,59,1.469,61,0.522,64,0.233,65,1.49,66,0.066,67,0.072,69,1.548,70,1.977,74,1.581,85,2.568,87,0.912,88,1.802,93,2.282,96,2.184,106,1.361,109,1.688,132,2.815,138,0.878,152,0.443,153,0.767,154,0.767,155,0.411,156,0.495,157,0.495,158,0.427,159,0.495,160,0.427,161,0.495,162,0.427,163,0.495,164,0.427,165,0.495,166,0.427,167,0.495,168,0.427,169,0.495,170,0.495,171,0.427,172,0.495,173,0.427,174,0.495,175,0.427,176,0.495,177,0.427,178,0.495,179,0.878,180,0.495,181,0.427,182,0.495,183,0.427,184,0.495,185,0.427,186,0.662,187,0.495,188,0.912,189,0.495,190,0.427,191,0.495,192,0.427,193,0.495,194,0.427,195,0.495,196,0.495,197,0.427,198,0.495,199,0.427,200,0.495,201,0.427,202,0.713,203,0.713,204,0.495,205,0.427,206,0.495,207,0.427,208,0.495,209,0.427,210,0.495,211,0.427,212,0.495,213,0.427,214,0.495,215,0.427,216,0.495,217,0.427,218,0.495,219,0.427,220,0.495,221,0.495,222,0.427,223,0.478,224,0.495,225,0.427,226,0.495,227,0.427,228,0.443,229,0.495,230,0.427,231,0.495,232,0.427,233,0.495,234,0.427,235,0.443,236,0.495,237,0.443,238,0.478,239,0.495,240,0.008,241,0.006,242,0.004,281,2.193,315,2.815,316,3.064,323,3.397,326,1.216,336,1.817,352,3.064,361,1.163,389,2.599,391,3.595,392,0.985,396,1.581,454,2.308,457,4.449,491,1.752,515,1.312,519,3.397,529,1.41,573,0.636,604,2.193,627,1.977,628,1.216,635,1.688,639,3.064,644,1.49,655,1.977,660,1.581,692,2.45,693,3.898,694,2.308,703,1.817,709,1.688,711,2.151,732,1.025,742,1.41,753,3.259,758,3.881,783,1.49,784,2.815,785,2.074,787,1.581,788,1.817,791,2.844,792,2.308,793,2.616,794,2.45,795,2.45,796,1.688,797,1.817,798,1.688,799,1.688,800,1.688,801,1.817,802,2.674,804,2.616,806,1.688,807,1.688,808,1.581,809,1.688,813,1.817,830,1.581,850,1.581,858,2.616,869,3.064,875,1.49,895,2.616,910,1.977,914,4.159,915,2.193,917,4.571,967,1.817,973,2.193,1092,3.902,1234,1.688,1239,4.835,1243,2.193,1308,1.688,1309,2.193,1326,5.361,1373,1.581,1389,2.193,1418,3.064,1435,2.193,1665,2.193,1666,3.904,1667,3.904,1668,4.779,1669,4.159,1670,4.159,1671,4.159,1672,4.779,1673,3.904,1674,5.382,1675,3.904,1676,3.904,1677,3.904,1678,2.519,1679,3.904,1680,2.616,1681,2.519,1682,3.904,1683,2.519,1684,2.519,1685,2.519,1686,3.904,1687,2.519,1688,3.904,1689,2.519,1690,3.904,1691,2.519,1692,6.965,1693,3.904,1694,3.397,1695,2.519,1696,2.519,1697,2.519,1698,2.519,1699,2.519,1700,2.519,1701,1.581,1702,1.977,1703,4.684,1704,2.519,1705,2.519,1706,2.519,1707,2.519,1708,3.904,1709,2.193,1710,4.159,1711,4.779,1712,2.519,1713,2.193,1714,3.397,1715,3.397,1716,2.519,1717,2.519,1718,2.519,1719,2.519,1720,5.823,1721,2.519,1722,5.823,1723,2.519,1724,2.193,1725,2.193,1726,2.193,1727,2.519,1728,2.519,1729,3.904,1730,2.519,1731,2.519,1732,2.519,1733,3.904,1734,3.397,1735,3.904,1736,2.519,1737,2.519,1738,3.904,1739,2.519,1740,2.519,1741,2.193,1742,2.519,1743,3.904,1744,3.904,1745,3.904,1746,3.904,1747,3.904,1748,3.064,1749,5.382]],["title/injectables/HistoricalTrendsService.html",[389,1.917,486,1.038]],["body/injectables/HistoricalTrendsService.html",[3,0.067,4,0.067,8,0.046,14,0.134,15,0.309,18,0.593,29,0.799,32,0.287,34,0.91,35,0.014,36,0.565,37,0.258,38,0.947,47,0.838,49,0.932,57,0.752,58,1.032,61,0.416,64,0.276,66,0.078,67,0.086,69,2.448,80,1.081,85,1.606,87,0.505,91,2.797,93,1.264,108,2.149,126,2.784,128,3.198,202,0.545,240,0.005,241,0.007,242,0.005,325,4.158,348,1.763,389,2.142,438,2.482,457,4.791,475,3.86,486,1.16,487,1.318,491,1.246,505,1.584,514,3.932,515,2.351,529,2.482,531,1.439,533,2.594,535,2.482,537,2.784,573,1.804,644,1.763,682,2.149,684,2.34,693,3.679,703,2.149,733,1.668,791,2.048,802,3.51,822,2.972,854,4.274,855,2.34,858,4.203,868,4.158,870,2.594,895,5.459,910,4.605,912,3.86,913,3.86,916,2.594,917,2.34,918,2.594,919,2.594,923,2.594,924,2.34,967,3.82,1026,1.998,1145,1.998,1188,4.611,1222,2.594,1239,2.34,1307,2.594,1359,3.782,1401,2.594,1669,4.611,1670,3.86,1713,2.594,1714,6.089,1715,6.089,1725,2.594,1726,2.594,1734,2.594,1741,5.722,1750,2.594,1751,5.298,1752,4.436,1753,4.436,1754,4.436,1755,4.436,1756,4.436,1757,4.436,1758,4.436,1759,2.981,1760,4.436,1761,2.981,1762,4.436,1763,4.436,1764,2.981,1765,4.436,1766,2.981,1767,4.436,1768,2.981,1769,2.981,1770,2.981,1771,2.981,1772,2.594,1773,4.436,1774,2.981,1775,2.594,1776,2.981,1777,5.868,1778,2.981,1779,2.981,1780,2.981,1781,2.981,1782,4.436,1783,2.981,1784,2.981,1785,2.981,1786,2.981,1787,2.981,1788,6.81,1789,2.981,1790,2.981,1791,4.436,1792,4.436,1793,4.436,1794,2.981,1795,2.981,1796,5.868,1797,2.981,1798,2.981,1799,2.981,1800,2.981,1801,2.981,1802,2.981,1803,2.981,1804,2.981,1805,4.436,1806,4.436,1807,2.981,1808,2.981,1809,2.981,1810,5.298,1811,5.298,1812,2.981,1813,2.981,1814,2.981,1815,2.981,1816,2.981,1817,2.981,1818,2.981,1819,2.981,1820,4.436,1821,4.436,1822,4.436,1823,2.981,1824,4.436,1825,2.981,1826,4.436,1827,2.981,1828,2.981,1829,2.981]],["title/components/HomeComponent.html",[0,0.047,190,0.673]],["body/components/HomeComponent.html",[0,0.079,1,0.6,2,1.12,3,0.079,4,0.079,5,0.696,6,0.671,7,0.696,8,0.054,10,0.577,11,1.526,12,0.988,14,0.159,15,0.351,18,0.671,29,0.758,32,0.24,34,0.729,35,0.014,36,0.498,37,0.24,38,0.758,47,0.473,49,0.623,57,0.6,58,0.556,61,0.549,64,0.327,66,0.092,67,0.102,69,1.147,71,3.624,77,0.656,85,1.82,87,0.99,88,2.32,92,2.812,94,3.368,95,3.624,99,2.222,126,2.222,138,1.038,152,0.623,153,0.988,154,0.988,155,0.577,156,0.696,157,0.696,158,0.6,159,0.696,160,0.6,161,0.696,162,0.6,163,0.696,164,0.6,165,0.696,166,0.6,167,0.696,168,0.6,169,0.696,170,0.696,171,0.6,172,0.696,173,0.6,174,0.696,175,0.6,176,0.696,177,0.6,178,0.696,179,0.577,180,0.696,181,0.6,182,0.696,183,0.6,184,0.696,185,0.6,186,0.6,187,0.696,188,0.6,189,0.696,190,1.078,191,0.696,192,0.6,193,0.696,194,0.6,195,0.696,196,0.696,197,0.6,198,0.696,199,0.6,200,0.696,201,0.6,202,0.918,203,0.918,204,0.696,205,0.6,206,0.696,207,0.6,208,0.696,209,0.6,210,0.696,211,0.6,212,0.696,213,0.6,214,0.696,215,0.6,216,0.696,217,0.6,218,0.696,219,0.6,220,0.696,221,0.696,222,0.6,223,1.108,224,0.696,225,0.6,226,0.696,227,0.6,228,1.029,229,0.696,230,0.6,231,0.696,232,0.6,233,0.696,234,0.6,235,0.623,236,0.696,237,0.623,238,0.671,239,0.696,240,0.006,241,0.008,242,0.006,326,3.244,357,2.393,367,4.374,388,2.841,391,4.017,393,4.506,436,1.565,437,4.811,438,1.981,439,2.222,491,1.58,681,2.427,711,2.544,712,2.222,728,2.372,732,1.441,741,2.222,791,2.32,793,3.368,857,3.368,924,3.945,1145,3.368,1359,2.956,1413,2.552,1574,3.945,1702,2.778,1709,3.08,1830,3.08,1831,5.026,1832,4.374,1833,4.374,1834,4.374,1835,5.026,1836,5.026,1837,5.026,1838,7.179,1839,5.026,1840,5.026,1841,3.539,1842,3.539,1843,3.539,1844,3.539,1845,3.08,1846,3.539,1847,3.539,1848,3.539,1849,3.539,1850,3.539,1851,3.539,1852,3.539]],["title/components/HoverBoxComponent.html",[0,0.047,192,0.673]],["body/components/HoverBoxComponent.html",[0,0.073,1,0.494,2,0.768,3,0.065,4,0.065,5,0.573,6,0.553,7,0.573,8,0.045,10,0.476,11,1.507,12,0.858,14,0.131,15,0.304,18,0.583,29,0.789,32,0.309,34,0.841,35,0.014,36,0.501,37,0.292,38,0.876,39,2.274,47,0.775,49,0.768,56,1.757,57,1.178,58,1.091,59,1.641,61,0.229,64,0.27,66,0.076,67,0.084,69,1.413,77,0.651,80,1.514,85,2.25,87,0.494,91,1.706,98,3.281,99,2.883,106,2.357,126,1.83,128,3.146,138,1.064,152,0.513,153,0.858,154,0.858,155,0.476,156,0.573,157,0.573,158,0.494,159,0.573,160,0.494,161,0.573,162,0.494,163,0.573,164,0.494,165,0.573,166,0.494,167,0.573,168,0.494,169,0.573,170,0.573,171,0.494,172,0.573,173,0.494,174,0.573,175,0.494,176,0.573,177,0.494,178,0.573,179,0.476,180,0.573,181,0.494,182,0.573,183,0.494,184,0.573,185,0.494,186,0.494,187,0.573,188,0.494,189,0.573,190,0.494,191,0.573,192,0.984,193,0.573,194,0.494,195,0.573,196,0.573,197,0.494,198,0.573,199,0.494,200,0.573,201,0.494,202,0.797,203,1.458,204,0.573,205,0.494,206,0.573,207,0.494,208,0.573,209,0.494,210,0.573,211,0.494,212,0.573,213,0.494,214,0.573,215,0.494,216,0.573,217,0.494,218,0.573,219,0.494,220,0.573,221,0.573,222,0.494,223,0.553,224,0.573,225,0.494,226,0.573,227,0.494,228,0.513,229,0.573,230,0.494,231,0.573,232,0.494,233,0.573,234,0.494,235,0.513,236,0.573,237,0.513,238,0.553,239,0.573,240,0.005,241,0.007,242,0.005,307,3.424,316,2.288,318,5.051,337,1.187,486,0.762,491,1.365,529,1.631,531,2.106,573,0.736,639,3.424,644,1.724,665,2.537,681,2.106,693,1.631,733,2.441,789,4.37,804,2.923,872,3.424,959,6.298,1092,3.889,1229,4.555,1349,2.923,1356,3.77,1357,4.103,1358,5.408,1359,3.144,1363,4.55,1364,4.555,1381,3.424,1383,2.537,1404,3.797,1405,4.555,1413,3.146,1418,2.288,1423,2.537,1428,2.537,1490,2.537,1552,2.288,1694,3.797,1703,2.537,1772,3.797,1832,3.797,1833,4.55,1853,2.537,1854,6.92,1855,4.363,1856,5.803,1857,3.797,1858,4.363,1859,5.228,1860,5.803,1861,5.228,1862,5.803,1863,4.363,1864,4.363,1865,4.363,1866,2.915,1867,2.915,1868,2.915,1869,2.915,1870,2.915,1871,4.363,1872,2.915,1873,4.363,1874,3.797,1875,4.363,1876,4.363,1877,2.915,1878,2.915,1879,2.915,1880,2.915,1881,4.363,1882,2.915,1883,2.915,1884,2.915,1885,2.915,1886,2.915,1887,4.363,1888,2.915,1889,2.915,1890,2.915,1891,2.915,1892,2.915,1893,2.915,1894,2.915,1895,2.915,1896,2.915,1897,5.051,1898,6.76]],["title/pipes/HumanizeBytesPipe.html",[1899,2.862,1900,3.116]],["body/pipes/HumanizeBytesPipe.html",[3,0.125,4,0.125,8,0.085,10,0.91,18,0.745,32,0.279,34,0.984,35,0.014,36,0.564,37,0.229,38,1.024,47,0.907,58,0.875,61,0.438,64,0.516,66,0.145,67,0.16,77,0.916,93,3.101,240,0.009,241,0.011,242,0.009,573,1.713,679,4.021,1899,4.893,1900,5.326,1901,5.577,1902,4.854,1903,6.786,1904,5.577,1905,6.786,1906,5.577,1907,6.786,1908,5.577,1909,6.786,1910,7.315,1911,5.577,1912,6.786,1913,5.577,1914,5.577,1915,5.577,1916,5.577,1917,5.577,1918,5.577,1919,5.577]],["title/classes/Link.html",[67,0.114,673,2.66]],["body/classes/Link.html",[3,0.135,4,0.135,8,0.092,14,0.272,15,0.497,32,0.292,35,0.014,37,0.292,66,0.185,67,0.205,77,0.877,80,1.734,240,0.01,241,0.012,242,0.01,355,2.188,670,3.381,671,4.743,672,5.259,673,5.072,676,6.588,677,3.655,1920,6.043,1921,6.043]],["title/components/LoadingAnimation.html",[0,0.047,194,0.673]],["body/components/LoadingAnimation.html",[0,0.08,1,0.796,2,1.072,3,0.105,4,0.105,5,0.924,6,0.891,7,0.924,8,0.072,10,0.767,11,1.549,12,1.198,29,1.02,32,0.193,35,0.014,36,0.501,61,0.369,64,0.434,66,0.122,67,0.135,87,0.796,138,1.167,152,0.827,153,1.198,154,1.198,155,0.767,156,0.924,157,0.924,158,0.796,159,0.924,160,0.796,161,0.924,162,0.796,163,0.924,164,0.796,165,0.924,166,0.796,167,0.924,168,0.796,169,0.924,170,0.924,171,0.796,172,0.924,173,0.796,174,0.924,175,0.796,176,0.924,177,0.796,178,0.924,179,0.767,180,0.924,181,0.796,182,0.924,183,0.796,184,0.924,185,0.796,186,0.796,187,0.924,188,0.796,189,0.924,190,0.796,191,0.924,192,0.796,193,0.924,194,1.213,195,1.329,196,0.924,197,0.796,198,0.924,199,0.796,200,0.924,201,0.796,202,1.113,203,1.113,204,0.924,205,0.796,206,0.924,207,0.796,208,0.924,209,0.796,210,0.924,211,0.796,212,0.924,213,0.796,214,0.924,215,0.796,216,0.924,217,0.796,218,0.924,219,0.796,220,0.924,221,0.924,222,0.796,223,0.891,224,0.924,225,0.796,226,0.924,227,0.796,228,0.827,229,0.924,230,0.796,231,0.924,232,0.796,233,0.924,234,0.796,235,0.827,236,0.924,237,0.827,238,0.891,239,0.924,240,0.008,241,0.01,242,0.008,1922,4.089,1923,6.093,1924,6.093,1925,4.699]],["title/injectables/MapService.html",[390,2.492,486,1.038]],["body/injectables/MapService.html",[3,0.091,4,0.091,8,0.062,14,0.182,15,0.385,32,0.166,35,0.013,37,0.166,57,0.687,58,0.636,61,0.319,64,0.375,66,0.105,67,0.117,82,5.778,91,2.849,93,3.088,96,3.775,240,0.007,241,0.009,242,0.007,315,5.911,341,5.954,348,2.397,390,3.467,486,1.444,487,1.792,785,3.338,1359,2.051,1748,5.295,1926,3.528,1927,6.282,1928,6.746,1929,7.586,1930,7.284,1931,6.746,1932,6.746,1933,5.523,1934,5.523,1935,4.807,1936,6.746,1937,5.523,1938,6.746,1939,5.523,1940,7.284,1941,8.326,1942,5.523,1943,5.523,1944,7.586,1945,7.284,1946,6.349,1947,5.523,1948,7.586,1949,6.746,1950,5.523,1951,6.746,1952,5.523,1953,5.523,1954,4.807,1955,4.807,1956,7.284,1957,5.523,1958,5.523,1959,6.746,1960,5.523,1961,5.523,1962,6.746,1963,6.746,1964,5.523,1965,5.523,1966,5.523,1967,5.523,1968,4.807,1969,5.523,1970,5.523,1971,5.523,1972,4.054]],["title/classes/Medication.html",[67,0.114,854,2.492]],["body/classes/Medication.html",[3,0.126,4,0.126,8,0.086,14,0.252,15,0.475,29,0.846,32,0.313,34,0.813,35,0.014,36,0.589,37,0.321,38,0.846,39,1.956,66,0.146,67,0.161,77,0.922,240,0.009,241,0.011,242,0.009,355,2.031,358,2.98,692,3.52,693,3.81,694,3.316,854,4.274,873,6.381,879,6.996,891,4.881,1973,4.881,1974,5.926,1975,5.608,1976,5.608,1977,5.608,1978,5.608,1979,5.608,1980,5.608,1981,5.608]],["title/components/MedicationsComponent.html",[0,0.047,197,0.673]],["body/components/MedicationsComponent.html",[0,0.073,1,0.66,2,0.945,3,0.087,4,0.087,5,0.765,6,0.738,7,0.765,8,0.06,10,0.635,11,1.535,12,1.056,14,0.175,15,0.375,18,0.718,20,3.524,24,1.678,29,0.811,32,0.286,34,0.779,35,0.014,36,0.547,37,0.272,38,0.811,47,0.718,49,0.945,61,0.547,62,1.507,64,0.36,66,0.101,67,0.112,80,1.309,87,0.66,94,2.609,106,2.145,138,1.082,152,0.685,153,1.056,154,1.056,155,0.635,156,0.765,157,0.765,158,0.66,159,0.765,160,0.66,161,0.765,162,0.66,163,0.765,164,0.66,165,0.765,166,0.66,167,0.765,168,0.66,169,0.765,170,0.765,171,0.66,172,0.765,173,0.66,174,0.765,175,0.66,176,0.765,177,0.66,178,0.765,179,0.635,180,0.765,181,0.66,182,0.765,183,0.66,184,0.765,185,0.66,186,0.66,187,0.765,188,0.66,189,0.765,190,0.66,191,0.765,192,0.66,193,0.765,194,0.66,195,0.765,196,0.765,197,1.124,198,0.765,199,0.66,200,0.765,201,0.66,202,0.981,203,0.981,204,0.765,205,0.66,206,0.765,207,0.66,208,0.765,209,0.66,210,0.765,211,0.66,212,0.765,213,0.66,214,0.765,215,0.66,216,0.765,217,0.66,218,0.765,219,0.66,220,0.765,221,0.765,222,0.66,223,0.738,224,0.765,225,0.66,226,0.765,227,0.66,228,0.685,229,0.765,230,0.66,231,0.765,232,0.66,233,0.765,234,0.66,235,0.685,236,0.765,237,0.685,238,0.738,239,0.765,240,0.006,241,0.009,242,0.006,260,2.068,385,4.254,389,3.56,491,1.263,711,2.331,729,3.388,732,1.584,733,3.442,742,2.178,789,2.609,811,3.388,854,4.368,855,3.055,869,5.787,1320,3.055,1701,2.443,1982,3.388,1983,5.372,1984,3.893,1985,5.372,1986,5.372,1987,3.893,1988,3.893,1989,3.893,1990,3.893,1991,3.893,1992,3.388,1993,3.893,1994,3.893,1995,3.893,1996,3.893,1997,5.372]],["title/components/NewCondition.html",[0,0.047,199,0.673]],["body/components/NewCondition.html",[0,0.08,1,0.804,2,1.079,3,0.106,4,0.106,5,0.932,6,0.899,7,0.932,8,0.073,10,0.774,11,1.55,12,1.205,35,0.014,36,0.504,61,0.373,64,0.438,66,0.123,67,0.136,87,0.804,138,1.171,152,0.835,153,1.205,154,1.205,155,0.774,156,0.932,157,0.932,158,0.804,159,0.932,160,0.804,161,0.932,162,0.804,163,0.932,164,0.804,165,0.932,166,0.804,167,0.932,168,0.804,169,0.932,170,0.932,171,0.804,172,0.932,173,0.804,174,0.932,175,0.804,176,0.932,177,0.804,178,0.932,179,0.774,180,0.932,181,0.804,182,0.932,183,0.804,184,0.932,185,0.804,186,0.804,187,0.932,188,0.804,189,0.932,190,0.804,191,0.932,192,0.804,193,0.932,194,0.804,195,0.932,196,0.932,197,0.804,198,0.932,199,1.291,200,0.932,201,0.804,202,1.12,203,1.12,204,0.932,205,0.804,206,0.932,207,0.804,208,0.932,209,0.804,210,0.932,211,0.804,212,0.932,213,0.804,214,0.932,215,0.804,216,0.932,217,0.804,218,0.932,219,0.804,220,0.932,221,0.932,222,0.804,223,0.899,224,0.932,225,0.804,226,0.932,227,0.804,228,0.835,229,0.932,230,0.804,231,0.932,232,0.804,233,0.932,234,0.804,235,0.835,236,0.932,237,0.835,238,0.899,239,0.932,240,0.008,241,0.01,242,0.008,1998,4.127,1999,6.13]],["title/components/NormalBox1.html",[0,0.047,201,0.673]],["body/components/NormalBox1.html",[0,0.077,1,0.735,2,1.017,3,0.097,4,0.097,5,0.853,6,0.822,7,0.853,8,0.066,10,0.708,11,1.543,12,1.136,14,0.195,15,0.403,18,0.772,24,1.806,32,0.267,35,0.014,36,0.482,37,0.237,47,0.579,61,0.341,62,1.622,64,0.401,66,0.113,67,0.125,69,1.405,77,0.648,85,2.093,87,0.735,93,2.451,138,1.131,152,0.763,153,1.136,154,1.136,155,0.708,156,0.853,157,0.853,158,0.735,159,0.853,160,0.735,161,0.853,162,0.735,163,0.853,164,0.735,165,0.853,166,0.735,167,0.853,168,0.735,169,0.853,170,0.853,171,0.735,172,0.853,173,0.735,174,0.853,175,0.735,176,0.853,177,0.735,178,0.853,179,0.708,180,0.853,181,0.735,182,0.853,183,0.735,184,0.853,185,0.735,186,0.735,187,0.853,188,0.735,189,0.853,190,0.735,191,0.853,192,0.735,193,0.853,194,0.735,195,0.853,196,0.853,197,0.735,198,0.853,199,0.735,200,0.853,201,1.175,202,1.357,203,1.439,204,0.853,205,0.735,206,0.853,207,0.735,208,0.853,209,0.735,210,0.853,211,0.735,212,0.853,213,0.735,214,0.853,215,0.735,216,0.853,217,0.735,218,0.853,219,0.735,220,0.853,221,0.853,222,0.735,223,0.822,224,0.853,225,0.735,226,0.853,227,0.735,228,0.763,229,0.853,230,0.735,231,0.853,232,0.735,233,0.853,234,0.735,235,0.763,236,0.853,237,0.763,238,0.822,239,0.853,240,0.007,241,0.01,242,0.007,357,1.632,573,1.459,931,3.88,932,4.357,940,3.873,2000,5.443,2001,3.774,2002,5.78,2003,5.658,2004,4.337,2005,4.337,2006,4.337,2007,5.031,2008,3.127]],["title/components/NormalBox2.html",[0,0.047,205,0.673]],["body/components/NormalBox2.html",[0,0.077,1,0.735,2,1.017,3,0.097,4,0.097,5,0.853,6,0.822,7,0.853,8,0.066,10,0.708,11,1.543,12,1.136,14,0.195,15,0.403,18,0.772,24,1.806,32,0.267,35,0.014,36,0.482,37,0.237,47,0.579,61,0.341,62,1.622,64,0.401,66,0.113,67,0.125,69,1.405,77,0.648,85,2.093,87,0.735,96,3.234,138,1.131,152,0.763,153,1.136,154,1.136,155,0.708,156,0.853,157,0.853,158,0.735,159,0.853,160,0.735,161,0.853,162,0.735,163,0.853,164,0.735,165,0.853,166,0.735,167,0.853,168,0.735,169,0.853,170,0.853,171,0.735,172,0.853,173,0.735,174,0.853,175,0.735,176,0.853,177,0.735,178,0.853,179,0.708,180,0.853,181,0.735,182,0.853,183,0.735,184,0.853,185,0.735,186,0.735,187,0.853,188,0.735,189,0.853,190,0.735,191,0.853,192,0.735,193,0.853,194,0.735,195,0.853,196,0.853,197,0.735,198,0.853,199,0.735,200,0.853,201,0.735,202,1.357,203,1.439,204,0.853,205,1.175,206,0.853,207,0.735,208,0.853,209,0.735,210,0.853,211,0.735,212,0.853,213,0.735,214,0.853,215,0.735,216,0.853,217,0.735,218,0.853,219,0.735,220,0.853,221,0.853,222,0.735,223,0.822,224,0.853,225,0.735,226,0.853,227,0.735,228,0.763,229,0.853,230,0.735,231,0.853,232,0.735,233,0.853,234,0.735,235,0.763,236,0.853,237,0.763,238,0.822,239,0.853,240,0.007,241,0.01,242,0.007,357,1.632,573,1.459,931,3.88,932,4.357,940,3.873,2000,5.443,2003,5.658,2007,5.031,2008,3.127,2009,3.774,2010,5.78,2011,4.337,2012,4.337,2013,4.337]],["title/components/NoteNavigationComponent.html",[0,0.047,207,0.673]],["body/components/NoteNavigationComponent.html",[0,0.071,1,0.624,2,0.909,3,0.082,4,0.082,5,0.724,6,0.698,7,0.724,8,0.056,10,0.6,11,1.53,12,1.016,14,0.166,18,0.69,32,0.29,35,0.014,36,0.443,47,0.944,49,1.244,61,0.289,64,0.34,66,0.096,67,0.106,87,0.624,138,1.056,152,0.648,153,1.016,154,1.016,155,0.6,156,0.724,157,0.724,158,0.624,159,0.724,160,0.624,161,0.724,162,0.624,163,0.724,164,0.624,165,0.724,166,0.624,167,0.724,168,0.624,169,0.724,170,0.724,171,0.624,172,0.724,173,0.624,174,0.724,175,0.624,176,0.724,177,0.624,178,0.724,179,0.6,180,0.724,181,0.624,182,0.724,183,0.624,184,0.724,185,0.624,186,0.624,187,0.724,188,0.624,189,0.724,190,0.624,191,0.724,192,0.624,193,0.724,194,0.624,195,0.724,196,0.724,197,0.624,198,0.724,199,0.624,200,0.724,201,0.624,202,0.944,203,0.944,204,0.724,205,0.624,206,0.724,207,1.097,208,0.724,209,0.624,210,0.724,211,0.624,212,0.724,213,0.624,214,0.724,215,0.624,216,0.724,217,0.624,218,0.724,219,0.624,220,0.724,221,0.724,222,0.624,223,0.698,224,0.724,225,0.624,226,0.724,227,0.624,228,0.648,229,0.724,230,0.624,231,0.724,232,0.624,233,0.724,234,0.624,235,0.648,236,0.724,237,0.648,238,0.698,239,0.724,240,0.006,241,0.009,242,0.006,753,4.639,1405,5.816,1710,4.497,1897,7.215,2014,3.203,2015,5.167,2016,5.167,2017,6.473,2018,6.473,2019,6.473,2020,6.473,2021,6.473,2022,6.473,2023,3.681,2024,3.681,2025,3.681,2026,3.681,2027,3.681,2028,3.681,2029,6.818,2030,6.473,2031,6.818,2032,6.473,2033,5.167,2034,5.97,2035,5.167,2036,5.167]],["title/classes/Observation.html",[67,0.114,505,2.109]],["body/classes/Observation.html",[3,0.1,4,0.1,8,0.068,14,0.2,15,0.41,18,0.785,32,0.333,34,0.954,35,0.014,36,0.488,37,0.332,38,0.993,47,0.935,58,0.698,61,0.349,66,0.116,67,0.128,76,4.746,77,0.888,80,1.706,99,1.965,202,0.812,240,0.007,241,0.01,242,0.007,337,2.679,348,4.424,355,1.609,357,2.476,361,2.712,483,4.131,505,4.311,507,5.166,559,5.166,573,1.767,679,4.236,683,3.892,691,3.488,785,4.164,868,3.488,979,4.746,1223,2.978,1497,3.205,2037,3.868,2038,6.581,2039,6.581,2040,5.728,2041,5.728,2042,7.002,2043,5.875,2044,5.875,2045,5.875,2046,4.445,2047,4.445,2048,4.445,2049,4.445,2050,4.445,2051,4.445,2052,4.445,2053,4.445,2054,4.445,2055,4.445,2056,4.445,2057,5.875,2058,4.445,2059,5.875,2060,4.445,2061,5.875,2062,4.445,2063,4.445,2064,4.445,2065,4.445,2066,4.445,2067,4.445,2068,4.445,2069,4.445,2070,4.445,2071,4.445,2072,4.445]],["title/components/ObservationRecursive.html",[0,0.047,209,0.673]],["body/components/ObservationRecursive.html",[0,0.071,1,0.635,2,0.921,3,0.084,4,0.084,5,0.737,6,0.711,7,0.737,8,0.057,10,0.612,11,1.531,12,1.029,14,0.169,15,0.365,18,0.699,24,1.635,29,0.566,30,2.942,31,3.143,32,0.306,34,0.759,35,0.014,36,0.509,37,0.292,38,0.79,39,2.394,47,0.805,49,0.66,57,0.635,58,0.588,61,0.513,62,1.692,64,0.347,65,2.217,66,0.098,67,0.108,69,1.953,71,4.347,80,1.275,87,0.635,106,2.276,107,1.657,138,1.065,152,0.66,153,1.029,154,1.029,155,0.612,156,0.737,157,0.737,158,0.635,159,0.737,160,0.635,161,0.737,162,0.635,163,0.737,164,0.635,165,0.737,166,0.635,167,0.737,168,0.635,169,1.029,170,0.737,171,0.635,172,0.737,173,0.635,174,0.737,175,0.635,176,0.737,177,0.635,178,0.737,179,0.612,180,0.737,181,0.635,182,0.737,183,0.635,184,0.737,185,0.635,186,0.635,187,0.737,188,0.635,189,0.737,190,0.635,191,0.737,192,0.635,193,0.737,194,0.635,195,0.737,196,0.737,197,0.635,198,0.737,199,0.635,200,0.737,201,0.635,202,0.956,203,0.956,204,0.737,205,0.635,206,0.737,207,0.635,208,0.737,209,1.106,210,0.737,211,0.635,212,0.737,213,0.635,214,0.737,215,0.635,216,0.737,217,0.635,218,0.737,219,0.635,220,0.737,221,0.737,222,0.635,223,0.711,224,0.737,225,0.635,226,0.737,227,0.635,228,0.66,229,0.737,230,0.635,231,0.737,232,0.635,233,0.737,234,0.635,235,0.66,236,0.737,237,0.66,238,0.711,239,0.737,240,0.006,241,0.009,242,0.006,260,2.781,389,3.15,392,2.854,491,1.231,635,2.512,730,1.731,829,2.512,830,2.353,931,3.374,1349,2.512,1379,2.942,1496,4.705,1680,4.04,1701,2.353,2073,3.263,2074,5.233,2075,5.233,2076,6.029,2077,5.247,2078,5.247,2079,5.679,2080,5.233,2081,3.749,2082,3.749,2083,5.233,2084,3.749,2085,3.749,2086,3.749,2087,3.749,2088,3.749,2089,5.233,2090,3.749,2091,3.263,2092,3.263,2093,3.263,2094,3.263,2095,4.555,2096,4.555,2097,4.555,2098,5.233,2099,4.555,2100,4.107]],["title/components/ObservationRecursiveChart.html",[0,0.047,211,0.673]],["body/components/ObservationRecursiveChart.html",[0,0.072,1,0.647,2,0.932,3,0.085,4,0.085,5,0.75,6,0.723,7,0.75,8,0.058,10,0.622,11,1.533,12,1.041,14,0.172,15,0.37,18,0.708,24,1.655,29,0.576,30,2.994,31,3.161,32,0.301,34,0.768,35,0.014,36,0.512,37,0.284,38,0.799,39,2.708,47,0.813,49,0.671,61,0.517,62,1.708,64,0.353,65,2.256,66,0.099,67,0.11,69,1.971,71,4.388,80,1.602,87,0.647,106,2.122,107,1.686,138,1.073,152,0.671,153,1.041,154,1.041,155,0.622,156,0.75,157,0.75,158,0.647,159,0.75,160,0.647,161,0.75,162,0.647,163,0.75,164,0.647,165,0.75,166,0.647,167,0.75,168,0.647,169,0.75,170,0.75,171,0.647,172,0.75,173,0.647,174,0.75,175,0.647,176,0.75,177,0.647,178,0.75,179,0.622,180,0.75,181,0.647,182,0.75,183,0.647,184,0.75,185,0.647,186,0.647,187,0.75,188,0.647,189,0.75,190,0.647,191,0.75,192,0.647,193,0.75,194,0.647,195,0.75,196,0.75,197,0.647,198,0.75,199,0.647,200,0.75,201,0.647,202,0.968,203,0.968,204,0.75,205,0.647,206,0.75,207,0.647,208,0.75,209,0.647,210,0.75,211,1.114,212,0.75,213,0.647,214,0.75,215,0.647,216,0.75,217,0.647,218,0.75,219,0.647,220,0.75,221,0.75,222,0.647,223,0.723,224,0.75,225,0.647,226,0.75,227,0.647,228,0.671,229,0.75,230,0.647,231,0.75,232,0.647,233,0.75,234,0.647,235,0.671,236,0.75,237,0.671,238,0.723,239,0.75,240,0.006,241,0.009,242,0.006,260,3.233,389,3.174,491,0.897,505,2.814,528,2.556,573,1.337,931,3.679,1234,2.556,1320,2.994,1496,4.741,1680,4.078,1701,2.394,2077,5.296,2078,5.722,2079,5.296,2092,3.32,2093,3.32,2094,3.32,2095,4.61,2096,4.61,2097,4.61,2099,4.61,2100,4.158,2101,3.32,2102,5.297,2103,5.297,2104,5.297,2105,3.815,2106,3.815,2107,5.297,2108,3.815,2109,3.815,2110,3.815,2111,3.815,2112,3.815,2113,3.815,2114,5.297]],["title/injectables/ObservationService.html",[31,1.755,486,1.038]],["body/injectables/ObservationService.html",[3,0.053,4,0.053,8,0.036,14,0.107,15,0.261,18,0.499,29,0.564,31,1.653,32,0.316,34,0.913,35,0.014,36,0.467,37,0.299,38,0.95,39,1.608,47,0.974,49,1.23,57,1.02,58,0.945,59,1.735,61,0.495,64,0.22,66,0.062,67,0.069,69,2.264,76,1.718,77,0.784,79,2.074,80,1.865,82,2.695,85,0.863,86,2.074,89,1.01,91,2.956,92,3.911,93,3.204,96,4.368,98,1.496,99,3.185,132,3.766,240,0.004,241,0.006,242,0.004,326,2.227,337,1.521,338,2.074,339,1.87,340,2.074,341,1.87,343,2.074,344,2.074,345,2.074,347,2.074,357,2.822,358,1.266,388,2.45,392,2.462,454,2.21,465,1.266,486,0.977,487,1.054,491,1.085,497,3.088,499,2.727,505,3.014,515,2.023,528,1.597,573,1.432,584,2.074,608,1.333,614,3.5,615,3.5,635,1.597,642,1.151,643,1.151,644,2.21,660,2.895,670,3.368,677,1.151,711,1.211,712,1.496,730,1.1,746,1.87,853,1.597,856,1.718,858,2.505,862,1.496,863,1.718,979,1.718,1026,1.597,1036,2.934,1037,1.87,1038,1.87,1092,3.5,1113,2.074,1119,1.87,1134,1.718,1205,4.545,1233,2.074,1249,2.074,1252,2.074,1256,2.074,1305,2.934,1483,6.474,1496,2.695,1536,2.074,1748,4.94,1935,2.074,1946,2.934,1954,2.074,1955,2.074,1968,2.074,2115,2.074,2116,5.223,2117,4.612,2118,5.674,2119,4.612,2120,4.612,2121,3.738,2122,3.738,2123,4.612,2124,3.738,2125,5.223,2126,3.738,2127,3.738,2128,3.738,2129,5.223,2130,3.738,2131,2.383,2132,2.383,2133,3.738,2134,2.383,2135,2.383,2136,3.738,2137,2.383,2138,3.738,2139,3.738,2140,3.738,2141,2.383,2142,3.738,2143,2.383,2144,3.738,2145,2.383,2146,2.383,2147,3.738,2148,2.383,2149,4.612,2150,2.383,2151,2.383,2152,2.383,2153,2.383,2154,2.383,2155,2.383,2156,2.383,2157,2.383,2158,2.383,2159,2.383,2160,2.383,2161,3.738,2162,2.383,2163,2.383,2164,3.738,2165,2.383,2166,2.383,2167,2.383,2168,2.383,2169,2.383,2170,2.383,2171,2.383,2172,3.738,2173,2.383,2174,2.383,2175,2.383,2176,3.738,2177,2.383,2178,2.383,2179,1.87,2180,2.383,2181,2.383,2182,2.383,2183,2.383,2184,2.383,2185,2.383,2186,2.383,2187,2.383,2188,2.383,2189,2.383,2190,2.383,2191,4.545,2192,2.383,2193,2.383,2194,2.383,2195,2.383,2196,2.383,2197,2.383,2198,2.383,2199,2.383,2200,2.383,2201,2.383,2202,2.383,2203,3.738,2204,2.383,2205,3.738,2206,2.383,2207,2.383,2208,2.383,2209,2.383,2210,2.383,2211,2.383,2212,2.383,2213,2.383,2214,2.383,2215,3.738,2216,2.383,2217,2.383,2218,2.383,2219,2.383,2220,2.383,2221,2.383,2222,2.383,2223,2.383,2224,2.383,2225,3.738,2226,3.738,2227,2.383,2228,2.383,2229,2.383,2230,2.383,2231,2.383,2232,2.383]],["title/components/ObservationsComponent.html",[0,0.047,213,0.673]],["body/components/ObservationsComponent.html",[0,0.063,1,0.508,2,0.784,3,0.067,4,0.067,5,0.59,6,0.568,7,0.59,8,0.046,10,0.489,11,1.51,12,0.876,14,0.135,15,0.311,18,0.595,20,3.127,24,1.392,29,0.672,31,3.016,32,0.316,34,0.646,35,0.014,36,0.466,37,0.304,38,0.672,39,1.554,47,0.84,49,1.107,57,1.117,58,0.924,61,0.581,62,1.651,63,1.517,64,0.277,65,1.773,66,0.078,67,0.086,69,2.037,77,0.5,80,1.295,87,0.508,90,2.493,92,3.922,106,1.046,138,0.96,152,0.528,153,0.876,154,0.876,155,0.489,156,0.59,157,0.59,158,0.508,159,0.59,160,0.508,161,0.59,162,0.508,163,0.59,164,0.508,165,0.59,166,0.508,167,0.59,168,0.508,169,0.59,170,0.59,171,0.508,172,0.59,173,0.508,174,0.59,175,0.508,176,0.59,177,0.508,178,0.59,179,0.489,180,0.59,181,0.508,182,0.59,183,0.508,184,0.59,185,0.508,186,0.508,187,0.59,188,0.508,189,0.59,190,0.508,191,0.59,192,0.508,193,0.59,194,0.508,195,1.045,196,0.59,197,0.508,198,0.59,199,0.508,200,0.59,201,0.508,202,0.814,203,0.814,204,0.59,205,0.508,206,0.59,207,0.508,208,0.59,209,0.508,210,0.59,211,0.508,212,0.59,213,0.997,214,0.59,215,0.508,216,0.59,217,0.508,218,0.59,219,0.508,220,0.876,221,0.59,222,0.508,223,0.568,224,0.59,225,0.508,226,0.59,227,0.508,228,0.528,229,0.59,230,0.508,231,0.59,232,0.508,233,0.59,234,0.508,235,0.528,236,0.59,237,0.528,238,0.568,239,0.59,240,0.005,241,0.007,242,0.005,255,3.016,287,1.678,313,3.497,326,2.567,358,1.593,388,2.682,389,2.841,390,4.282,392,2.669,436,2.602,491,1.549,505,3.625,515,1.008,528,2.009,608,4.138,610,3.212,611,2.985,612,3.212,613,3.212,614,3.562,615,3.562,616,3.833,620,2.162,622,2.162,628,1.448,631,2.162,633,3.497,642,1.448,643,1.448,662,2.985,677,1.448,681,2.151,705,3.497,709,4.697,711,2.32,712,1.882,716,5.355,717,2.353,718,2.353,719,2.353,720,2.353,725,2.353,726,2.353,727,2.353,728,2.009,730,1.384,732,1.22,736,2.353,737,2.353,738,2.353,739,3.497,740,3.212,742,1.678,766,2.493,829,2.985,859,1.882,1131,2.796,1202,2.61,1234,2.985,1379,3.497,1381,3.497,1552,4.172,1680,3.562,1701,1.882,2233,2.61,2234,4.455,2235,5.316,2236,4.455,2237,2.999,2238,2.999,2239,4.455,2240,4.455,2241,2.999,2242,2.999,2243,2.999,2244,2.999,2245,2.999,2246,2.999,2247,2.999,2248,2.999,2249,2.999,2250,2.999,2251,2.999,2252,2.999,2253,2.999]],["title/components/ObservationsDisplay.html",[0,0.047,215,0.673]],["body/components/ObservationsDisplay.html",[0,0.058,1,0.444,2,0.707,3,0.059,4,0.059,5,0.79,6,0.496,7,0.514,8,0.04,10,0.427,11,1.494,12,0.79,14,0.118,15,0.28,18,0.734,20,2.918,24,1.256,29,0.607,32,0.311,34,0.944,35,0.014,36,0.522,37,0.294,38,0.983,47,0.921,49,1.146,56,1.991,57,0.681,58,0.862,59,2.451,61,0.466,62,1.128,63,2.034,64,0.242,66,0.068,67,0.116,74,1.643,77,0.549,80,1.192,87,0.681,88,1.208,89,1.109,92,3.5,106,0.913,109,1.754,138,0.896,148,1.208,149,2.054,152,0.461,153,0.79,154,0.79,155,0.427,156,0.514,157,0.514,158,0.444,159,0.514,160,0.444,161,0.514,162,0.444,163,0.514,164,0.444,165,0.514,166,0.444,167,0.514,168,0.444,169,0.962,170,0.514,171,0.444,172,0.514,173,0.444,174,0.514,175,0.444,176,0.514,177,0.444,178,0.514,179,0.896,180,0.514,181,0.444,182,0.514,183,0.444,184,0.514,185,0.444,186,0.444,187,0.514,188,0.444,189,0.514,190,0.444,191,0.514,192,0.444,193,0.514,194,0.444,195,0.514,196,0.514,197,0.444,198,0.514,199,0.444,200,0.514,201,0.444,202,0.734,203,0.734,204,0.514,205,0.444,206,0.514,207,0.444,208,0.514,209,0.444,210,0.514,211,0.444,212,0.514,213,0.444,214,0.514,215,1.06,216,0.514,217,0.444,218,0.514,219,0.444,220,0.514,221,0.514,222,0.444,223,0.496,224,0.514,225,0.444,226,0.514,227,0.444,228,0.461,229,0.514,230,0.444,231,0.514,232,0.444,233,0.514,234,0.444,235,0.461,236,0.514,237,0.461,238,0.496,239,0.514,240,0.004,241,0.007,242,0.004,260,3.323,312,1.754,326,2.861,361,2.259,384,3.5,392,2.697,491,0.945,505,4.284,515,0.879,528,1.754,531,2.651,535,1.464,536,2.054,537,3.072,555,2.894,559,2.054,573,1.014,578,2.694,600,2.054,640,1.547,642,2.363,643,2.363,660,1.643,730,1.208,733,2.249,741,1.643,752,3.841,753,3.316,757,2.898,758,3.96,759,3.68,761,2.377,766,3.073,775,2.898,777,2.694,783,1.547,784,2.898,785,2.6,787,1.643,788,1.887,789,3.28,790,1.754,791,1.208,792,2.377,793,3.28,794,2.523,795,3.447,796,1.754,797,1.887,798,1.754,799,1.754,800,1.754,801,1.887,802,3.073,803,1.754,804,1.754,805,1.754,806,1.754,807,3.28,808,3.072,809,3.28,810,2.054,813,3.529,814,1.887,816,2.054,817,1.643,818,2.054,819,2.277,820,2.277,822,1.754,827,2.054,829,2.694,830,1.643,831,2.277,832,2.277,833,2.054,835,2.898,836,1.887,837,1.887,838,2.054,839,2.054,1107,1.887,1172,2.054,1304,2.054,1311,2.277,1321,3.498,1342,3.498,2191,2.277,2254,2.277,2255,4.02,2256,4.02,2257,4.02,2258,4.02,2259,4.02,2260,4.02,2261,4.894,2262,2.277,2263,4.02,2264,2.617,2265,2.617,2266,4.02,2267,2.617,2268,4.02,2269,5.492,2270,2.617,2271,2.617,2272,4.02,2273,2.617,2274,4.02,2275,2.617,2276,2.617,2277,2.617,2278,2.617,2279,4.02,2280,2.617,2281,2.617,2282,2.617,2283,2.617,2284,2.617,2285,2.617,2286,2.617,2287,4.894,2288,2.617,2289,2.617,2290,4.02,2291,2.617,2292,2.617,2293,2.617,2294,2.617,2295,2.617,2296,4.02,2297,2.617,2298,4.02,2299,4.02,2300,4.02,2301,4.02,2302,4.02]],["title/classes/Patient.html",[67,0.114,711,1.286]],["body/classes/Patient.html",[3,0.122,4,0.122,8,0.083,14,0.245,15,0.467,32,0.334,35,0.014,36,0.537,37,0.334,56,2.25,66,0.142,67,0.157,77,0.906,80,1.966,142,4.855,240,0.009,241,0.011,242,0.009,355,1.976,357,2.726,711,2.169,2303,4.749,2304,7.245,2305,7.245,2306,7.245,2307,6.305,2308,5.686,2309,7.245,2310,5.457,2311,5.457,2312,5.457,2313,5.457,2314,5.457,2315,5.457,2316,5.457,2317,5.457,2318,5.457]],["title/components/PatientComponent.html",[0,0.047,217,0.673]],["body/components/PatientComponent.html",[0,0.059,1,0.452,2,0.718,3,0.06,4,0.06,5,0.524,6,0.506,7,0.524,8,0.041,10,0.435,11,1.497,12,0.802,14,0.12,15,0.285,18,0.545,20,2.947,29,0.616,32,0.312,34,0.804,35,0.014,36,0.486,37,0.291,38,0.837,47,0.842,49,1.154,56,1.371,57,1.013,58,0.938,59,2.371,61,0.565,62,1.145,63,1.349,64,0.247,66,0.069,67,0.077,77,0.707,80,1.207,84,2.321,85,0.966,87,0.452,89,1.131,91,1.043,93,2.351,99,1.179,106,1.422,127,1.923,138,0.975,148,2.759,152,0.469,153,0.802,154,0.802,155,0.435,156,0.524,157,0.524,158,0.452,159,0.524,160,0.452,161,0.524,162,0.452,163,0.524,164,0.452,165,0.524,166,0.452,167,0.524,168,0.452,169,0.524,170,0.524,171,0.452,172,0.524,173,0.452,174,0.524,175,0.452,176,0.524,177,0.452,178,0.524,179,0.435,180,0.524,181,0.452,182,0.524,183,0.452,184,0.524,185,0.452,186,0.452,187,0.524,188,0.452,189,0.524,190,1.146,191,0.524,192,0.94,193,0.524,194,0.452,195,0.524,196,0.524,197,0.452,198,0.524,199,0.452,200,0.524,201,0.452,202,0.745,203,0.905,204,0.524,205,0.452,206,0.524,207,0.452,208,0.524,209,0.452,210,0.524,211,0.452,212,0.524,213,0.452,214,0.524,215,0.452,216,0.524,217,0.94,218,0.524,219,0.452,220,0.524,221,0.524,222,0.452,223,0.506,224,0.524,225,0.452,226,0.524,227,0.452,228,0.469,229,0.524,230,0.452,231,0.524,232,0.452,233,0.524,234,0.452,235,0.469,236,0.524,237,0.469,238,0.506,239,0.524,240,0.004,241,0.007,242,0.004,255,2.899,287,1.493,320,5.308,386,3.166,387,3.878,436,1.179,437,4.223,438,1.493,439,1.674,486,1.066,491,1.692,527,1.577,529,1.493,573,0.673,711,2.246,732,1.086,742,1.493,783,1.577,785,2.167,787,1.674,791,1.231,802,1.493,872,2.093,875,1.577,962,2.093,992,4.31,995,4.827,1027,2.093,1066,3.201,1088,3.201,1105,1.787,1190,2.941,1364,2.093,1456,4.31,1459,2.321,1494,2.282,1497,4.877,1515,2.093,1517,2.321,1525,4.353,1534,1.923,1535,3.887,1542,2.321,1638,3.956,1854,4.827,2308,3.201,2319,2.321,2320,4.079,2321,4.953,2322,6.932,2323,4.953,2324,4.079,2325,4.079,2326,4.079,2327,4.079,2328,2.667,2329,2.667,2330,2.667,2331,2.667,2332,2.667,2333,4.079,2334,2.667,2335,2.667,2336,2.667,2337,2.667,2338,2.667,2339,4.079,2340,2.667,2341,2.667,2342,2.667,2343,2.667,2344,2.321,2345,2.667,2346,2.667,2347,2.667,2348,2.667,2349,2.667,2350,5.547,2351,2.667,2352,2.667,2353,4.079,2354,4.079,2355,4.079,2356,4.079,2357,2.667,2358,2.667,2359,2.321,2360,2.667,2361,2.667,2362,2.667,2363,2.667,2364,2.667,2365,2.667,2366,4.953,2367,5.547,2368,2.667,2369,2.667,2370,4.31,2371,2.667,2372,2.667,2373,2.667,2374,2.667,2375,2.321,2376,2.667,2377,5.547,2378,2.667,2379,2.667,2380,2.667,2381,2.667,2382,2.667,2383,4.079,2384,3.55,2385,4.079,2386,5.547,2387,2.667,2388,2.667,2389,2.667,2390,2.667,2391,2.667,2392,2.667]],["title/injectables/PatientService.html",[391,2.221,486,1.038]],["body/injectables/PatientService.html",[3,0.104,4,0.104,8,0.071,14,0.208,15,0.421,18,0.806,29,0.91,32,0.303,34,0.875,35,0.014,36,0.447,37,0.276,38,0.91,47,0.806,49,0.814,57,0.784,58,0.726,61,0.595,64,0.428,66,0.12,67,0.133,77,0.753,138,0.755,240,0.008,241,0.01,242,0.008,357,2.676,388,3.136,391,3.376,465,2.458,474,4.213,486,1.577,487,2.046,491,1.735,496,3.101,497,4.206,499,3.567,514,3.101,531,2.234,573,1.522,628,2.234,630,3.101,644,3.969,677,2.234,711,2.559,732,1.883,803,3.101,850,4.213,853,3.101,857,3.101,859,2.904,860,3.336,862,2.904,1134,3.336,1359,3.396,2308,3.632,2375,4.027,2384,4.027,2393,4.027,2394,5.842,2395,7.377,2396,7.113,2397,6.712,2398,6.033,2399,4.627,2400,6.033,2401,4.627,2402,4.627,2403,6.033,2404,4.627,2405,4.627,2406,4.627,2407,4.627,2408,4.627,2409,4.627,2410,4.627,2411,4.627,2412,4.627]],["title/components/ScratchPadUpdate.html",[0,0.047,219,0.673]],["body/components/ScratchPadUpdate.html",[0,0.074,1,0.692,2,0.977,3,0.091,4,0.091,5,0.802,6,0.773,7,0.802,8,0.062,10,0.666,11,1.539,12,1.091,14,0.184,15,0.387,18,0.741,24,1.733,32,0.3,34,0.592,35,0.014,36,0.502,37,0.291,38,0.616,47,0.741,49,0.977,61,0.321,62,1.557,64,0.377,66,0.106,67,0.117,69,1.322,77,0.864,87,0.692,138,1.104,142,3.718,144,4.001,152,0.718,153,1.091,154,1.091,155,0.666,156,0.802,157,0.802,158,0.692,159,0.802,160,0.692,161,0.802,162,0.692,163,0.802,164,0.692,165,0.802,166,0.692,167,0.802,168,0.692,169,0.802,170,0.802,171,0.692,172,0.802,173,0.692,174,0.802,175,0.692,176,0.802,177,0.692,178,0.802,179,0.666,180,0.802,181,0.692,182,0.802,183,0.692,184,0.802,185,0.692,186,0.692,187,0.802,188,0.692,189,0.802,190,0.692,191,0.802,192,0.692,193,0.802,194,0.692,195,0.802,196,0.802,197,0.692,198,0.802,199,0.692,200,0.802,201,0.692,202,1.014,203,1.014,204,0.802,205,0.692,206,0.802,207,0.692,208,0.802,209,0.692,210,0.802,211,0.692,212,0.802,213,0.692,214,0.802,215,0.692,216,0.802,217,0.692,218,0.802,219,1.147,220,1.239,221,0.802,222,0.692,223,0.773,224,0.802,225,0.692,226,0.802,227,0.692,228,0.718,229,0.802,230,0.692,231,0.802,232,0.692,233,0.802,234,0.692,235,0.718,236,0.802,237,0.718,238,0.773,239,0.802,240,0.007,241,0.009,242,0.007,357,1.535,573,1.03,578,4.224,657,4.001,681,3.266,683,4,931,3.785,932,4.224,940,3.718,2008,2.942,2413,6.498,2414,3.551,2415,5.548,2416,5.548,2417,5.548,2418,4.081,2419,4.081,2420,5.548,2421,4.081,2422,5.548,2423,4.081,2424,4.081,2425,4.081,2426,4.081,2427,5.548,2428,4.081,2429,5.548]],["title/components/SelectListSingle.html",[0,0.047,222,0.673]],["body/components/SelectListSingle.html",[0,0.077,1,0.733,2,1.015,3,0.097,4,0.097,5,0.85,6,0.82,7,0.85,8,0.066,10,0.705,11,1.543,12,1.134,14,0.195,15,0.403,18,0.771,24,1.802,32,0.267,35,0.014,36,0.481,37,0.237,47,0.578,61,0.34,62,1.619,64,0.4,66,0.113,67,0.124,69,1.401,77,0.647,85,2.089,87,1.321,138,1.13,152,0.761,153,1.134,154,1.134,155,0.705,156,0.85,157,0.85,158,0.733,159,0.85,160,0.733,161,0.85,162,0.733,163,0.85,164,0.733,165,0.85,166,0.733,167,0.85,168,0.733,169,0.85,170,0.85,171,0.733,172,0.85,173,0.733,174,0.85,175,0.733,176,0.85,177,0.733,178,0.85,179,0.705,180,0.85,181,0.733,182,0.85,183,0.733,184,0.85,185,0.733,186,0.733,187,0.85,188,0.733,189,0.85,190,0.733,191,0.85,192,0.733,193,0.85,194,0.733,195,0.85,196,0.85,197,0.733,198,0.85,199,0.733,200,0.85,201,0.733,202,1.054,203,1.054,204,0.85,205,0.733,206,0.85,207,0.733,208,0.85,209,0.733,210,0.85,211,0.733,212,0.85,213,0.733,214,0.85,215,0.733,216,0.85,217,0.733,218,0.85,219,0.733,220,0.85,221,0.85,222,1.174,223,1.368,224,0.85,225,0.733,226,0.85,227,0.733,228,0.761,229,0.85,230,0.733,231,0.85,232,0.733,233,0.85,234,0.733,235,0.761,236,0.85,237,0.761,238,0.82,239,0.85,240,0.007,241,0.01,242,0.007,357,1.627,573,1.456,931,3.876,932,4.351,940,3.866,941,5.021,2008,3.118,2430,6.028,2431,3.764,2432,5.769,2433,5.769,2434,6.492,2435,4.324,2436,4.324,2437,4.324,2438,5.769]],["title/classes/Server.html",[67,0.114,1638,2.492]],["body/classes/Server.html",[3,0.13,4,0.13,8,0.089,14,0.261,15,0.485,29,0.875,32,0.306,34,0.841,35,0.014,36,0.594,37,0.306,38,0.875,66,0.151,67,0.167,77,0.926,240,0.01,241,0.011,242,0.01,355,2.1,677,3.865,1359,3.989,1638,4.362,1974,5.048,2439,5.048,2440,5.801,2441,6.949,2442,5.801]],["title/injectables/SmartService.html",[393,2.492,486,1.038]],["body/injectables/SmartService.html",[3,0.073,4,0.073,8,0.05,10,0.532,14,0.147,15,0.33,18,0.633,29,0.715,32,0.318,34,0.687,35,0.014,36,0.351,37,0.309,38,0.715,47,0.818,49,0.574,57,0.946,58,0.876,61,0.534,64,0.301,66,0.085,67,0.094,77,0.89,85,1.18,101,2.558,108,2.35,138,1.107,186,0.552,240,0.01,241,0.008,242,0.005,307,2.558,337,2.271,369,2.046,388,2.851,391,3.919,393,2.973,436,1.441,437,4.694,438,1.824,439,2.046,465,1.731,466,2.558,467,2.558,468,2.836,472,3.174,486,1.238,487,1.441,491,1.44,496,2.184,497,3.622,499,2.801,515,1.095,529,1.824,573,1.546,640,3.622,677,1.573,711,1.534,728,2.184,822,2.184,859,2.046,862,2.046,1131,2.046,1260,2.836,1574,2.558,1591,4.122,1594,4.856,1702,2.558,2179,3.717,2394,6.367,2443,2.836,2444,6.125,2445,5.579,2446,5.579,2447,5.579,2448,5.907,2449,5.579,2450,6.125,2451,5.579,2452,6.125,2453,4.736,2454,6.125,2455,6.125,2456,3.259,2457,3.259,2458,4.736,2459,3.259,2460,4.736,2461,3.259,2462,3.259,2463,3.259,2464,3.259,2465,4.736,2466,4.736,2467,4.736,2468,4.736,2469,4.736,2470,3.259,2471,3.259,2472,3.259,2473,4.736,2474,3.259,2475,4.736,2476,4.736,2477,3.259,2478,3.259,2479,3.259,2480,6.125,2481,3.259,2482,4.736,2483,4.736,2484,5.579,2485,4.736,2486,4.736,2487,3.259,2488,3.259,2489,3.259,2490,3.259,2491,3.259,2492,3.259,2493,3.259,2494,3.259,2495,3.259,2496,5.579,2497,5.579,2498,3.259,2499,4.736,2500,3.259,2501,4.736,2502,4.736,2503,4.736,2504,3.259,2505,3.259,2506,3.259,2507,3.259,2508,3.259,2509,3.259,2510,3.259,2511,3.259,2512,3.259,2513,3.259,2514,3.259,2515,3.259,2516,3.259,2517,4.736,2518,3.259,2519,3.259,2520,3.259,2521,3.259,2522,3.259,2523,3.259,2524,3.259,2525,3.259,2526,3.259,2527,3.259,2528,3.259,2529,2.836,2530,3.259,2531,5.579,2532,3.259,2533,3.259,2534,3.259,2535,3.259,2536,3.259,2537,3.259,2538,3.259,2539,3.259,2540,3.259,2541,2.836,2542,3.259,2543,3.259,2544,3.259,2545,3.259,2546,4.736,2547,3.259,2548,3.259,2549,3.259,2550,3.259]],["title/classes/Timeline.html",[67,0.114,228,0.699]],["body/classes/Timeline.html",[3,0.126,4,0.126,8,0.086,14,0.254,15,0.477,32,0.331,35,0.014,37,0.331,66,0.147,67,0.162,76,5.3,77,0.892,228,1.202,240,0.009,241,0.011,242,0.009,337,2.992,348,4.802,355,2.042,357,2.765,507,5.769,683,4.346,2040,6.397,2041,6.397,2551,4.908,2552,5.639,2553,5.639,2554,5.639,2555,5.639,2556,5.639,2557,5.639,2558,5.639]],["title/components/TimelineComponent.html",[0,0.047,225,0.673]],["body/components/TimelineComponent.html",[0,0.073,1,0.674,2,0.959,3,0.089,4,0.089,5,0.781,6,0.753,7,0.781,8,0.061,10,0.648,11,1.536,12,1.071,14,0.179,15,0.38,18,0.728,20,3.555,24,1.702,29,0.6,32,0.288,34,0.576,35,0.014,36,0.496,37,0.255,38,0.6,47,0.728,49,1.178,57,0.674,58,0.624,61,0.526,62,1.529,64,0.367,66,0.103,67,0.114,80,1.327,87,0.674,107,1.757,138,1.091,152,0.699,153,1.071,154,1.071,155,0.648,156,0.781,157,0.781,158,0.674,159,0.781,160,0.674,161,0.781,162,0.674,163,0.781,164,0.674,165,0.781,166,0.674,167,0.781,168,0.674,169,0.781,170,0.781,171,0.674,172,0.781,173,0.674,174,0.781,175,0.674,176,0.781,177,0.674,178,0.781,179,0.648,180,0.781,181,0.674,182,0.781,183,0.674,184,0.781,185,0.674,186,0.674,187,0.781,188,0.674,189,0.781,190,0.674,191,0.781,192,0.674,193,0.781,194,0.674,195,0.781,196,0.781,197,0.674,198,0.781,199,0.674,200,0.781,201,0.674,202,0.995,203,0.995,204,0.781,205,0.674,206,0.781,207,0.674,208,0.781,209,0.674,210,0.781,211,0.674,212,0.781,213,0.674,214,0.781,215,0.674,216,0.781,217,0.674,218,0.781,219,0.674,220,0.781,221,0.781,222,0.674,223,0.753,224,0.781,225,1.134,226,0.781,227,0.674,228,0.699,229,0.781,230,0.674,231,0.781,232,0.674,233,0.781,234,0.674,235,0.699,236,0.781,237,0.699,238,0.753,239,0.781,240,0.007,241,0.009,242,0.007,387,4.281,491,1.462,711,2.345,732,1.618,742,2.224,1494,2.224,1525,5.251,1534,2.866,1535,5.251,1992,3.459,2344,3.459,2359,3.459,2559,3.459,2560,5.449,2561,5.449,2562,3.974,2563,5.449,2564,3.974,2565,3.974,2566,3.974,2567,3.974,2568,3.974,2569,3.974,2570,3.974,2571,3.974,2572,5.449,2573,3.974,2574,3.974,2575,3.974,2576,3.974,2577,3.974,2578,3.974]],["title/components/TimelinePopupComponent.html",[0,0.047,227,0.673]],["body/components/TimelinePopupComponent.html",[0,0.072,1,0.654,2,0.94,3,0.086,4,0.086,5,0.759,6,0.731,7,0.759,8,0.059,10,0.629,11,1.534,12,1.05,14,0.174,15,0.373,18,0.713,32,0.271,34,0.774,35,0.014,36,0.514,37,0.271,38,0.806,47,0.713,49,1.163,57,0.654,58,0.606,59,2.009,61,0.519,64,0.357,66,0.1,67,0.111,80,0.94,87,0.654,106,2.419,138,1.078,152,0.679,153,1.05,154,1.05,155,0.629,156,0.759,157,0.759,158,0.654,159,0.759,160,0.654,161,0.759,162,0.654,163,0.759,164,0.654,165,0.759,166,0.654,167,0.759,168,0.654,169,0.759,170,0.759,171,0.654,172,0.759,173,0.654,174,0.759,175,0.654,176,0.759,177,0.654,178,0.759,179,0.629,180,0.759,181,0.654,182,0.759,183,0.654,184,0.759,185,0.654,186,0.654,187,0.759,188,0.654,189,0.759,190,0.654,191,0.759,192,1.12,193,0.759,194,0.654,195,0.759,196,0.759,197,0.654,198,0.759,199,0.654,200,0.759,201,0.654,202,0.975,203,0.975,204,0.759,205,0.654,206,0.759,207,0.654,208,0.759,209,0.654,210,0.759,211,0.654,212,0.759,213,0.654,214,0.759,215,0.654,216,0.759,217,0.654,218,0.759,219,0.654,220,0.759,221,0.759,222,0.654,223,0.731,224,0.759,225,0.654,226,0.759,227,1.12,228,1.078,229,0.759,230,0.654,231,0.759,232,0.654,233,0.759,234,0.654,235,0.679,236,0.759,237,0.679,238,0.731,239,0.759,240,0.006,241,0.009,242,0.006,337,2.689,353,5.185,515,1.794,693,2.159,783,2.282,785,2.837,787,2.422,817,3.351,1190,2.782,1225,4.19,1494,4.116,1497,2.782,1515,3.028,1534,2.782,1671,6.244,1857,5.328,2100,4.19,2579,3.358,2580,5.339,2581,7.175,2582,5.339,2583,3.858,2584,5.339,2585,3.858,2586,5.339,2587,3.858,2588,5.339,2589,3.858,2590,3.358,2591,3.858,2592,3.858,2593,3.858,2594,3.858,2595,3.858,2596,3.858,2597,3.858,2598,5.339,2599,5.339,2600,5.339,2601,5.339]],["title/injectables/ToolBarService.html",[394,2.347,486,1.038]],["body/injectables/ToolBarService.html",[3,0.134,4,0.134,8,0.092,14,0.27,15,0.494,29,1.138,32,0.31,35,0.014,37,0.291,61,0.471,64,0.554,66,0.156,67,0.173,77,0.875,240,0.01,241,0.012,242,0.01,394,4.191,486,1.853,487,2.65,2602,5.217,2603,7.545,2604,7.545,2605,7.087,2606,5.995]],["title/components/ToolbarComponent.html",[0,0.047,230,0.673]],["body/components/ToolbarComponent.html",[0,0.066,1,0.552,2,0.834,3,0.073,4,0.073,5,0.641,6,0.618,7,0.641,8,0.05,10,0.532,11,1.518,12,0.931,14,0.147,15,0.33,18,0.633,24,1.48,29,0.715,31,3.097,32,0.295,34,0.687,35,0.014,36,0.482,37,0.252,38,0.715,47,0.869,49,1.145,56,1.592,57,0.803,58,0.511,59,1.782,61,0.575,62,1.329,64,0.301,65,1.927,66,0.085,67,0.094,87,0.552,91,1.275,93,1.382,135,2.558,138,0.999,152,0.574,153,0.931,154,0.931,155,0.532,156,0.641,157,0.641,158,0.552,159,0.641,160,0.552,161,0.641,162,0.552,163,0.641,164,0.552,165,0.641,166,0.552,167,0.641,168,0.552,169,0.641,170,0.641,171,0.552,172,0.641,173,0.552,174,0.641,175,0.552,176,0.641,177,0.552,178,0.641,179,0.532,180,0.641,181,0.552,182,0.641,183,0.552,184,0.641,185,0.552,186,0.552,187,0.641,188,0.552,189,0.641,190,0.552,191,0.641,192,0.552,193,0.641,194,0.552,195,0.641,196,0.641,197,0.552,198,0.641,199,0.552,200,0.641,201,0.552,202,0.865,203,0.865,204,0.641,205,0.552,206,0.641,207,0.552,208,0.641,209,0.552,210,0.641,211,0.552,212,0.641,213,0.552,214,0.641,215,0.552,216,0.641,217,0.552,218,0.641,219,0.552,220,0.931,221,0.641,222,0.552,223,0.618,224,0.641,225,0.552,226,0.641,227,0.552,228,0.574,229,0.641,230,1.038,231,0.641,232,0.552,233,0.641,234,0.552,235,0.574,236,0.641,237,0.574,238,0.618,239,0.641,240,0.005,241,0.008,242,0.005,255,3.097,287,1.824,384,3.798,386,3.382,389,2.957,392,2.74,394,4.142,396,2.046,436,1.441,491,1.687,495,5.33,509,4.122,511,2.836,572,2.836,593,4.694,642,1.573,643,1.573,711,2.199,730,1.504,732,1.326,794,2.046,821,2.836,962,2.558,1105,2.184,1131,2.046,1304,2.558,1356,2.35,1357,2.558,1367,2.558,1373,2.046,1395,2.558,1421,4.122,1554,4.856,1562,2.836,1608,4.122,1643,2.836,1680,3.739,1701,2.046,1834,4.122,2262,2.836,2607,2.836,2608,4.736,2609,5.579,2610,6.125,2611,6.125,2612,6.125,2613,4.736,2614,4.736,2615,3.259,2616,3.259,2617,3.259,2618,3.259,2619,3.259,2620,4.736,2621,3.259,2622,3.259,2623,3.259,2624,3.259,2625,4.736,2626,3.259,2627,3.259,2628,3.259,2629,4.736,2630,3.259,2631,3.259,2632,3.259,2633,3.259,2634,3.259,2635,3.259,2636,3.259,2637,3.259,2638,3.259,2639,3.259,2640,3.259,2641,3.259,2642,3.259,2643,3.259,2644,3.259,2645,3.259,2646,3.259]],["title/components/TripleListComponent.html",[0,0.047,232,0.673]],["body/components/TripleListComponent.html",[0,0.074,1,0.686,2,0.971,3,0.091,4,0.091,5,0.796,6,0.767,7,0.796,8,0.062,10,0.66,11,1.538,12,1.085,14,0.182,15,0.385,18,0.737,24,1.724,29,0.611,31,3.294,32,0.29,34,0.8,35,0.014,36,0.523,37,0.277,38,0.833,39,1.924,47,0.541,49,0.712,57,0.686,58,0.635,61,0.53,62,1.548,63,2.792,64,0.374,65,2.394,66,0.105,67,0.116,87,0.686,91,2.158,106,2.189,107,1.79,138,1.1,152,0.712,153,1.085,154,1.085,155,0.66,156,0.796,157,0.796,158,0.686,159,0.796,160,0.686,161,0.796,162,0.686,163,0.796,164,0.686,165,0.796,166,0.686,167,0.796,168,0.686,169,0.796,170,0.796,171,0.686,172,0.796,173,0.686,174,0.796,175,0.686,176,0.796,177,0.686,178,0.796,179,0.66,180,0.796,181,0.686,182,0.796,183,0.686,184,0.796,185,0.686,186,0.686,187,0.796,188,0.686,189,0.796,190,0.686,191,0.796,192,0.686,193,0.796,194,0.686,195,0.796,196,0.796,197,0.686,198,0.796,199,0.686,200,0.796,201,0.686,202,1.008,203,1.008,204,0.796,205,0.686,206,0.796,207,0.686,208,0.796,209,0.686,210,0.796,211,0.686,212,0.796,213,0.686,214,0.796,215,0.686,216,0.796,217,0.686,218,0.796,219,0.686,220,0.796,221,0.796,222,0.686,223,0.767,224,0.796,225,0.686,226,0.796,227,0.686,228,0.712,229,0.796,230,0.686,231,0.796,232,1.143,233,1.234,234,0.686,235,0.712,236,0.796,237,0.712,238,0.767,239,0.796,240,0.007,241,0.009,242,0.007,254,3.177,255,3.219,287,2.265,491,0.952,515,1.36,711,2.358,732,1.648,761,3.263,766,3.773,2647,3.523,2648,5.518,2649,6.278,2650,5.518,2651,6.278,2652,5.518,2653,4.048,2654,4.048,2655,5.518,2656,4.048,2657,4.048,2658,4.048,2659,4.048]],["title/classes/User.html",[67,0.114,1373,2.492]],["body/classes/User.html",[3,0.138,4,0.138,8,0.094,14,0.277,15,0.502,32,0.296,35,0.013,36,0.565,37,0.296,39,2.509,66,0.16,67,0.177,77,0.807,240,0.01,241,0.012,242,0.01,355,2.228,357,2.869,1373,4.516,2660,5.355,2661,6.153,2662,6.153]],["title/coverage.html",[2663,4.739]],["body/coverage.html",[0,0.098,1,0.56,8,0.051,9,2.876,31,1.461,35,0.014,37,0.136,67,0.228,82,2.383,87,0.56,91,3.308,148,1.526,155,0.781,158,0.56,160,0.56,162,0.56,164,0.56,166,0.56,168,0.56,171,0.56,173,0.56,175,0.56,177,0.56,179,0.539,181,0.56,183,0.56,185,0.56,186,0.56,188,0.56,190,0.56,192,0.56,194,0.56,197,0.56,199,0.56,201,0.56,203,0.874,205,0.56,207,0.56,209,0.56,211,0.56,213,0.56,215,0.56,217,0.811,219,0.56,222,0.56,225,0.56,227,0.56,228,0.582,230,0.56,232,0.56,235,0.582,237,0.582,240,0.005,241,0.008,242,0.005,243,2.876,255,1.461,315,2.383,332,2.876,354,2.383,356,2.876,362,2.876,384,1.849,385,1.954,386,1.596,387,1.954,388,1.345,389,1.596,390,2.074,391,1.849,392,1.293,393,2.074,394,1.954,397,3.755,427,2.594,476,2.594,477,2.594,479,1.954,482,2.215,483,2.074,485,2.876,486,2.03,488,2.876,505,1.756,515,1.111,587,2.876,588,2.876,608,1.849,609,2.876,670,1.849,671,3.755,673,2.215,678,2.876,704,2.876,711,1.071,750,2.876,844,2.876,854,2.074,895,2.215,896,2.876,925,2.876,926,2.876,942,2.594,943,2.876,946,2.876,975,2.876,990,2.876,1054,2.876,1173,2.876,1199,3.755,1270,2.876,1344,2.876,1369,2.383,1373,2.074,1395,2.594,1444,2.876,1451,2.876,1454,2.876,1494,1.849,1495,2.876,1523,2.876,1548,2.876,1572,2.876,1599,2.876,1604,2.876,1605,2.876,1638,2.074,1658,2.876,1665,2.876,1750,2.876,1830,2.876,1853,2.876,1899,2.383,1900,2.594,1902,2.876,1922,2.876,1926,2.876,1973,2.876,1982,2.876,1998,2.876,2000,3.755,2001,2.876,2009,2.876,2014,2.876,2037,2.876,2073,2.876,2101,2.876,2115,2.876,2233,2.876,2254,2.876,2303,2.876,2307,2.876,2319,4.164,2393,2.876,2413,2.876,2414,2.876,2430,2.876,2431,2.876,2439,2.876,2443,2.876,2551,2.876,2559,2.876,2579,2.876,2602,2.876,2607,2.876,2647,2.876,2660,2.876,2663,2.876,2664,3.305,2665,2.876,2666,5.624,2667,7.035,2668,4.785,2669,5.624,2670,7.204,2671,5.624,2672,6.821,2673,3.305,2674,4.785,2675,3.305,2676,3.305,2677,4.785,2678,3.305,2679,3.305,2680,3.305,2681,7.035,2682,6.165,2683,5.624,2684,3.305,2685,3.305,2686,3.305,2687,3.305,2688,5.624,2689,3.305,2690,5.624,2691,5.624,2692,6.821,2693,3.305,2694,3.305,2695,3.305,2696,3.305,2697,3.305,2698,3.305]],["title/dependencies.html",[373,3.204,2699,2.874]],["body/dependencies.html",[10,0.879,35,0.014,64,0.498,240,0.009,241,0.011,242,0.009,373,3.611,375,3.383,403,4.69,436,2.383,438,4.032,439,3.383,454,3.93,456,4.69,457,3.611,460,5.216,461,4.792,463,4.23,466,4.23,467,4.23,628,3.208,636,4.69,1137,4.69,1224,4.23,1351,4.69,1638,3.383,2590,4.69,2700,5.39,2701,8.053,2702,5.39,2703,5.39,2704,5.39,2705,5.39,2706,5.39,2707,5.39,2708,5.39,2709,5.39,2710,5.39,2711,5.39,2712,5.39,2713,5.39,2714,4.69,2715,5.39,2716,5.39,2717,5.39,2718,6.645,2719,5.39,2720,5.39,2721,5.39,2722,5.39,2723,5.39,2724,6.645,2725,5.39,2726,5.39,2727,5.39,2728,5.39,2729,5.39,2730,5.39,2731,5.39,2732,5.39,2733,5.39,2734,5.39]],["title/index.html",[14,0.149,2735,3.302,2736,3.302]],["body/index.html",[0,0.068,2,0.762,6,0.821,8,0.066,35,0.011,37,0.178,104,3.399,126,2.718,138,0.942,147,2.902,223,1.095,240,0.01,241,0.01,242,0.007,303,3.769,304,3.769,331,3.769,337,2.644,363,3.769,375,2.718,482,2.902,502,2.902,554,3.769,555,3.415,633,5.099,635,2.902,641,3.769,694,2.561,700,3.769,711,2.245,753,2.423,790,2.902,792,2.561,798,2.902,800,2.902,817,2.718,875,2.561,882,4.532,974,3.769,1032,3.399,1092,2.902,1131,3.625,1134,4.685,1135,3.399,1142,3.769,1151,3.769,1156,3.769,1223,4.644,1224,3.399,1225,3.399,1240,3.769,1305,3.399,1308,2.902,1349,3.87,1356,3.123,1494,2.423,1636,4.164,1724,3.769,1775,6.032,1845,5.026,1874,6.032,1946,3.399,2091,3.769,2179,3.399,2370,3.769,2448,5.026,2529,3.769,2541,3.769,2665,3.769,2699,3.769,2714,6.283,2737,6.497,2738,4.331,2739,7.219,2740,4.331,2741,4.331,2742,4.331,2743,4.331,2744,4.331,2745,6.93,2746,4.331,2747,4.331,2748,4.331,2749,4.331,2750,6.93,2751,4.331,2752,6.93,2753,5.775,2754,4.331,2755,5.775,2756,5.775,2757,4.331,2758,6.497,2759,4.331,2760,6.93,2761,4.331,2762,4.331,2763,4.331,2764,4.331,2765,4.331,2766,5.775,2767,4.331,2768,6.497,2769,4.331,2770,4.331,2771,4.331,2772,5.775,2773,4.331,2774,4.331,2775,4.331,2776,5.775,2777,4.331,2778,5.775,2779,4.331,2780,4.331,2781,4.331,2782,4.331,2783,4.331,2784,5.775,2785,4.331,2786,4.331,2787,4.331,2788,4.331,2789,4.331,2790,4.331,2791,4.331,2792,4.331,2793,4.331,2794,5.775,2795,4.331,2796,4.331,2797,4.331,2798,4.331,2799,4.331,2800,4.331,2801,5.775,2802,4.331,2803,4.331,2804,4.331,2805,4.331,2806,4.331,2807,4.331,2808,4.331,2809,4.331,2810,4.331,2811,4.331,2812,4.331,2813,4.331,2814,4.331,2815,5.775,2816,4.331,2817,4.331,2818,4.331,2819,4.331,2820,5.775,2821,5.775,2822,4.331,2823,3.399,2824,4.331,2825,4.331,2826,4.331,2827,4.331,2828,4.331,2829,4.331,2830,4.331,2831,4.331,2832,4.331,2833,4.331,2834,4.331,2835,4.331,2836,4.331,2837,4.331,2838,4.331,2839,4.331]],["title/modules.html",[372,3.649]],["body/modules.html",[35,0.012,240,0.011,241,0.012,242,0.011,371,4.633,372,4.306,383,4.306,461,5.321,2840,7.379,2841,7.379,2842,7.379]],["title/overview.html",[2823,4.273]],["body/overview.html",[1,1.011,2,0.646,31,2.636,35,0.014,93,2.187,96,2.886,152,0.646,158,1.011,160,1.011,162,1.23,164,1.011,166,1.011,168,1.23,171,1.011,173,1.011,175,1.011,177,1.011,179,0.973,181,1.011,183,1.011,185,1.011,188,1.011,190,1.011,192,1.011,194,1.011,197,1.011,199,1.011,201,1.23,205,1.23,207,1.011,209,1.011,211,1.011,213,1.011,215,1.011,217,1.011,219,1.23,222,1.23,225,1.011,227,1.011,230,1.011,232,1.011,234,0.622,240,0.006,241,0.009,242,0.006,255,2.636,355,1.33,369,2.305,370,2.305,371,6.155,372,2.461,373,2.461,374,2.882,375,2.305,376,2.882,377,2.882,378,3.196,379,3.196,380,3.196,381,3.196,382,3.196,383,5.398,384,3.336,385,3.526,386,2.879,387,3.526,388,2.427,389,2.879,390,3.742,391,3.336,392,2.332,393,3.742,394,3.526,395,4.048,396,2.305,482,2.461,487,1.623,1645,3.196,1646,3.196,1647,3.196,1899,2.648,2823,2.882,2843,3.672,2844,3.672,2845,3.672]],["title/miscellaneous/variables.html",[1636,3.448,2846,2.874]],["body/miscellaneous/variables.html",[14,0.278,35,0.014,37,0.314,57,1.224,58,1.133,240,0.01,241,0.012,242,0.01,397,4.858,399,5.387,476,5.668,477,5.668,478,5.387,1199,4.858,1636,4.463,2846,5.387,2847,6.19,2848,7.221]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":91,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["0.1.10",{"_index":2723,"title":{},"body":{"dependencies.html":{}}}],["0.19.47",{"_index":2727,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1800,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["0.3.5",{"_index":2710,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":1245,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["0.8.9",{"_index":2715,"title":{},"body":{"dependencies.html":{}}}],["0.80",{"_index":2202,"title":{},"body":{"injectables/ObservationService.html":{}}}],["0.9.1",{"_index":2734,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2694,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2668,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2674,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2683,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2690,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2678,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2692,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":2697,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2691,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2681,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2682,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2688,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1405,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["1",{"_index":93,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/ConditionsChartComponent.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"components/NormalBox1.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["1'},{'name",{"_index":204,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["1.2.0",{"_index":2728,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":2730,"title":{},"body":{"dependencies.html":{}}}],["1.component",{"_index":1652,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["1.component.ts",{"_index":2001,"title":{},"body":{"components/NormalBox1.html":{},"coverage.html":{}}}],["1.component.ts:10",{"_index":2006,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:12",{"_index":2005,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:9",{"_index":2004,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.html",{"_index":2002,"title":{},"body":{"components/NormalBox1.html":{}}}],["1/16",{"_index":2689,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":519,"title":{},"body":{"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{}}}],["10.19.0",{"_index":2775,"title":{},"body":{"index.html":{}}}],["10/15",{"_index":2680,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1395,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1560,"title":{},"body":{"components/Favorites.html":{}}}],["102588006",{"_index":1964,"title":{},"body":{"injectables/MapService.html":{}}}],["10839",{"_index":1938,"title":{},"body":{"injectables/MapService.html":{}}}],["10px",{"_index":302,"title":{},"body":{"components/AccountComponent.html":{}}}],["12",{"_index":317,"title":{},"body":{"components/AccountComponent.html":{}}}],["120px",{"_index":607,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["13.0.2",{"_index":2707,"title":{},"body":{"dependencies.html":{}}}],["13969",{"_index":1949,"title":{},"body":{"injectables/MapService.html":{}}}],["14",{"_index":2844,"title":{},"body":{"overview.html":{}}}],["150",{"_index":2644,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["17",{"_index":2845,"title":{},"body":{"overview.html":{}}}],["17861",{"_index":1947,"title":{},"body":{"injectables/MapService.html":{}}}],["18",{"_index":318,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{}}}],["180",{"_index":620,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["181.us",{"_index":521,"title":{},"body":{"injectables/AssociationService.html":{}}}],["185903001",{"_index":1939,"title":{},"body":{"injectables/MapService.html":{}}}],["2",{"_index":96,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"overview.html":{}}}],["2'},{'name",{"_index":206,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["2.0",{"_index":2839,"title":{},"body":{"index.html":{}}}],["2.24.0",{"_index":2719,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2718,"title":{},"body":{"dependencies.html":{}}}],["2.component",{"_index":1653,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["2.component.ts",{"_index":2009,"title":{},"body":{"components/NormalBox2.html":{},"coverage.html":{}}}],["2.component.ts:10",{"_index":2013,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:12",{"_index":2012,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:9",{"_index":2011,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.compute.amazonaws.com/get_items",{"_index":523,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2.html",{"_index":2010,"title":{},"body":{"components/NormalBox2.html":{}}}],["200",{"_index":1694,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["200px",{"_index":605,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/Favorites.html":{}}}],["2075",{"_index":1933,"title":{},"body":{"injectables/MapService.html":{}}}],["2157",{"_index":1957,"title":{},"body":{"injectables/MapService.html":{}}}],["2160",{"_index":1961,"title":{},"body":{"injectables/MapService.html":{}}}],["220px",{"_index":666,"title":{},"body":{"classes/BaseColumn.html":{}}}],["2345",{"_index":1944,"title":{},"body":{"injectables/MapService.html":{}}}],["249288007",{"_index":1934,"title":{},"body":{"injectables/MapService.html":{}}}],["25",{"_index":1746,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["2571",{"_index":2165,"title":{},"body":{"injectables/ObservationService.html":{}}}],["26450",{"_index":1956,"title":{},"body":{"injectables/MapService.html":{}}}],["26464",{"_index":1948,"title":{},"body":{"injectables/MapService.html":{}}}],["26478",{"_index":1945,"title":{},"body":{"injectables/MapService.html":{}}}],["26511",{"_index":1936,"title":{},"body":{"injectables/MapService.html":{}}}],["26515",{"_index":1951,"title":{},"body":{"injectables/MapService.html":{}}}],["266998003",{"_index":1965,"title":{},"body":{"injectables/MapService.html":{}}}],["267432004",{"_index":1960,"title":{},"body":{"injectables/MapService.html":{}}}],["2710",{"_index":343,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["2823",{"_index":1955,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["28542",{"_index":1937,"title":{},"body":{"injectables/MapService.html":{}}}],["29",{"_index":520,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2951",{"_index":1952,"title":{},"body":{"injectables/MapService.html":{}}}],["29857009",{"_index":1967,"title":{},"body":{"injectables/MapService.html":{}}}],["2c304df8",{"_index":2465,"title":{},"body":{"injectables/SmartService.html":{}}}],["3",{"_index":1748,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3.2.1",{"_index":2716,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":2711,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2713,"title":{},"body":{"dependencies.html":{}}}],["3.4.5",{"_index":2732,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":2721,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2685,"title":{},"body":{"coverage.html":{}}}],["30385",{"_index":1942,"title":{},"body":{"injectables/MapService.html":{}}}],["30428",{"_index":1963,"title":{},"body":{"injectables/MapService.html":{}}}],["3094",{"_index":1968,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3141",{"_index":340,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["32398004",{"_index":1953,"title":{},"body":{"injectables/MapService.html":{}}}],["32623",{"_index":1970,"title":{},"body":{"injectables/MapService.html":{}}}],["33",{"_index":2030,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["330c01a5ca8e",{"_index":2469,"title":{},"body":{"injectables/SmartService.html":{}}}],["34",{"_index":2033,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["35",{"_index":2843,"title":{},"body":{"overview.html":{}}}],["38341003",{"_index":1966,"title":{},"body":{"injectables/MapService.html":{}}}],["39156",{"_index":347,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["4",{"_index":82,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["4/4",{"_index":2693,"title":{},"body":{"coverage.html":{}}}],["44054006",{"_index":1931,"title":{},"body":{"injectables/MapService.html":{}}}],["442311008",{"_index":1969,"title":{},"body":{"injectables/MapService.html":{}}}],["4de9",{"_index":2467,"title":{},"body":{"injectables/SmartService.html":{}}}],["5",{"_index":132,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{}}}],["5.3.0",{"_index":2720,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":2676,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":518,"title":{},"body":{"injectables/AssociationService.html":{}}}],["54150009",{"_index":1943,"title":{},"body":{"injectables/MapService.html":{}}}],["55284",{"_index":1930,"title":{},"body":{"injectables/MapService.html":{}}}],["6",{"_index":315,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["6.5.4",{"_index":2724,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":2686,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2679,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1941,"title":{},"body":{"injectables/MapService.html":{}}}],["71",{"_index":2675,"title":{},"body":{"coverage.html":{}}}],["711d",{"_index":2466,"title":{},"body":{"injectables/SmartService.html":{}}}],["718",{"_index":1940,"title":{},"body":{"injectables/MapService.html":{}}}],["72166",{"_index":1935,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["75",{"_index":2684,"title":{},"body":{"coverage.html":{}}}],["777",{"_index":1971,"title":{},"body":{"injectables/MapService.html":{}}}],["785",{"_index":1959,"title":{},"body":{"injectables/MapService.html":{}}}],["786",{"_index":1962,"title":{},"body":{"injectables/MapService.html":{}}}],["789",{"_index":1954,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["8",{"_index":1946,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["8.2.14",{"_index":2701,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["8.3.25",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":1693,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["80394007",{"_index":1950,"title":{},"body":{"injectables/MapService.html":{}}}],["8302",{"_index":338,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["8310",{"_index":345,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["8462",{"_index":1932,"title":{},"body":{"injectables/MapService.html":{}}}],["8480",{"_index":1929,"title":{},"body":{"injectables/MapService.html":{}}}],["89765005",{"_index":1958,"title":{},"body":{"injectables/MapService.html":{}}}],["9",{"_index":341,"title":{},"body":{"components/AddObservation.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["9/14",{"_index":2687,"title":{},"body":{"coverage.html":{}}}],["90708001",{"_index":1928,"title":{},"body":{"injectables/MapService.html":{}}}],["a['code",{"_index":557,"title":{},"body":{"injectables/AssociationService.html":{}}}],["abnormal",{"_index":324,"title":{},"body":{"components/AccountComponent.html":{}}}],["above",{"_index":104,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ConditionService.html":{},"index.html":{}}}],["access",{"_index":793,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["accessing",{"_index":2810,"title":{},"body":{"index.html":{}}}],["according",{"_index":103,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{}}}],["accordion",{"_index":72,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["accordionrecursion",{"_index":1,"title":{"components/AccordionRecursion.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordionrecursion'},{'name",{"_index":157,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["accordionrecursion.html",{"_index":13,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["account",{"_index":244,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["account'},{'name",{"_index":159,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["account.html",{"_index":245,"title":{},"body":{"components/AccountComponent.html":{}}}],["accountcomponent",{"_index":158,"title":{"components/AccountComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["achieved",{"_index":1031,"title":{},"body":{"injectables/ConditionService.html":{}}}],["actions",{"_index":1571,"title":{},"body":{"components/Favorites.html":{}}}],["active",{"_index":142,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"classes/Patient.html":{},"components/ScratchPadUpdate.html":{}}}],["active/inactive",{"_index":136,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["activities",{"_index":321,"title":{},"body":{"components/AccountComponent.html":{}}}],["activity",{"_index":680,"title":{},"body":{"classes/CarePlan.html":{}}}],["actual_component",{"_index":239,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["actually",{"_index":833,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["adams",{"_index":2788,"title":{},"body":{"index.html":{}}}],["add",{"_index":802,"title":{},"body":{"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["addcategoriesconditions",{"_index":19,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesconditions(arrdata",{"_index":44,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesobservations",{"_index":2121,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addcategoriesobservations(observations",{"_index":2131,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addgraphconfig",{"_index":1457,"title":{},"body":{"injectables/DoctorService.html":{}}}],["addgraphconfig(list",{"_index":1461,"title":{},"body":{"injectables/DoctorService.html":{}}}],["adding",{"_index":1182,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["addmedicationchart",{"_index":1752,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addmedicationchart(medication",{"_index":1758,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservation",{"_index":160,"title":{"components/AddObservation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addobservation'},{'name",{"_index":161,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["addobservation.html",{"_index":333,"title":{},"body":{"components/AddObservation.html":{}}}],["addobservationchart",{"_index":1753,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservationchart(chartname",{"_index":1760,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addoption",{"_index":1360,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["addoption(option",{"_index":1368,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["address",{"_index":2304,"title":{},"body":{"classes/Patient.html":{}}}],["addsetting",{"_index":251,"title":{},"body":{"components/AccountComponent.html":{}}}],["addsetting(checked",{"_index":257,"title":{},"body":{"components/AccountComponent.html":{}}}],["advancedsearch",{"_index":2321,"title":{},"body":{"components/PatientComponent.html":{}}}],["advantage",{"_index":2804,"title":{},"body":{"index.html":{}}}],["afbe",{"_index":2468,"title":{},"body":{"injectables/SmartService.html":{}}}],["again",{"_index":1886,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["albumin",{"_index":283,"title":{},"body":{"components/AccountComponent.html":{}}}],["allergies",{"_index":320,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["allergies.map(allergy",{"_index":2363,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergies/precautions",{"_index":145,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["allergy",{"_index":2322,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergy.code.text",{"_index":2364,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergyintolerance",{"_index":354,"title":{"classes/AllergyIntolerance.html":{}},"body":{"classes/AllergyIntolerance.html":{},"injectables/ConditionService.html":{},"coverage.html":{}}}],["allow",{"_index":1172,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["allows",{"_index":1480,"title":{},"body":{"injectables/DoctorService.html":{}}}],["already",{"_index":126,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["alt",{"_index":281,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["amdateformat:'mm/dd/yyyy",{"_index":2387,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdateformat:\\'mm/dd/yyyy",{"_index":2391,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:'years':false)}}yr",{"_index":2388,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:\\'years\\':false)}}yr",{"_index":2392,"title":{},"body":{"components/PatientComponent.html":{}}}],["amtimeago",{"_index":2100,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelinePopupComponent.html":{}}}],["amtimeago:true",{"_index":1342,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ana",{"_index":276,"title":{},"body":{"components/AccountComponent.html":{}}}],["angular",{"_index":2744,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2700,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2702,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2590,"title":{},"body":{"components/TimelinePopupComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["angular/compiler",{"_index":2706,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":1137,"title":{},"body":{"components/ConditionsChartComponent.html":{},"dependencies.html":{}}}],["animate('800ms",{"_index":2627,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["animation",{"_index":1923,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["animation'},{'name",{"_index":196,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["animations",{"_index":2622,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["another",{"_index":2830,"title":{},"body":{"index.html":{}}}],["apache",{"_index":2838,"title":{},"body":{"index.html":{}}}],["api",{"_index":547,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{}}}],["app",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":163,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["app.html",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["app/components/accordionrecursion/accordionrecursion.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/account/account.component",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/addobservation/addobservation.component",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/app/app.component",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplan/careplan.component",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplandisplay/careplandisplay.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/columnstateswitcher/columnstateswitcher.component",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditions/conditions.component",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionschart/conditionschart.component",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionsdisplay/conditionsdisplay.component",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/contextmenu/contextmenu.component",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/doctornote/doctornote.component",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/favorites/favorites.component",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/form",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/historicaltrends/historicaltrends.component",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/home/home.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/hoverbox/hoverbox.component",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loadinganimation/loadinganimation.component",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/medications/medications.component",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/newcondition/newcondition.component",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/notenavigation/notenavigation.component",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursion/observationrecursion.component",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursionchart/observationrecursionchart.component",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observations/observations.component",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationsdisplay/observationsdisplay.component",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/patient/patient.component",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline/timeline.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline_popup/timeline_popup.component",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/toolbar/toolbar.component",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/triplelist/triplelist.component",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/form.module",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/association.service",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/careplan.service",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/condition.service",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/doctor.service",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/encounter.service",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/fhir.service",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/historicaltrends.service",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/map.service",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/observation.service",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/patient.service",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/scratchpad.service",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/smart.service",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/toolbar.service",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1241,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["appears",{"_index":1876,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["application",{"_index":633,"title":{},"body":{"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{},"index.html":{}}}],["application/json",{"_index":1596,"title":{},"body":{"injectables/FhirService.html":{}}}],["application/x",{"_index":2522,"title":{},"body":{"injectables/SmartService.html":{}}}],["appmodule",{"_index":371,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":2809,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingproviders",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approximate",{"_index":667,"title":{},"body":{"classes/BaseColumn.html":{}}}],["apps",{"_index":2785,"title":{},"body":{"index.html":{}}}],["april",{"_index":1330,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["arbitrary",{"_index":1246,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["arg.url",{"_index":2499,"title":{},"body":{"injectables/SmartService.html":{}}}],["arg.valueuri",{"_index":2501,"title":{},"body":{"injectables/SmartService.html":{}}}],["args",{"_index":1910,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["array",{"_index":80,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/Bundle.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["array.from(medicationmap.values",{"_index":894,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["array.from(this.chartsmap.values",{"_index":1811,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["arrayofkeyvalues",{"_index":334,"title":{},"body":{"components/AddObservation.html":{}}}],["arrdata",{"_index":46,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["arriving",{"_index":2483,"title":{},"body":{"injectables/SmartService.html":{}}}],["asc",{"_index":1109,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["assign",{"_index":2407,"title":{},"body":{"injectables/PatientService.html":{}}}],["assignvisible",{"_index":1458,"title":{},"body":{"injectables/DoctorService.html":{}}}],["assignvisible(list",{"_index":1463,"title":{},"body":{"injectables/DoctorService.html":{}}}],["associable",{"_index":483,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{},"coverage.html":{}}}],["associable.model",{"_index":691,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{}}}],["associated",{"_index":535,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Chart.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["associatedconditions",{"_index":549,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapconditions",{"_index":489,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapobservations",{"_index":490,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedobservations",{"_index":551,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association",{"_index":818,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associations",{"_index":536,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associationservice",{"_index":384,"title":{"injectables/AssociationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":1142,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["ast",{"_index":282,"title":{},"body":{"components/AccountComponent.html":{}}}],["aud",{"_index":2444,"title":{},"body":{"injectables/SmartService.html":{}}}],["august",{"_index":1333,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["auth",{"_index":2496,"title":{},"body":{"injectables/SmartService.html":{}}}],["authenticate",{"_index":2452,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorize",{"_index":2500,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorizeurl",{"_index":2445,"title":{},"body":{"injectables/SmartService.html":{}}}],["autogrow",{"_index":589,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["autogrow]'},{'name",{"_index":236,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["autogrowdirective",{"_index":235,"title":{"directives/AutoGrowDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":2780,"title":{},"body":{"index.html":{}}}],["available",{"_index":1847,"title":{},"body":{"components/HomeComponent.html":{}}}],["avoid",{"_index":1775,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"index.html":{}}}],["away",{"_index":1890,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["axis",{"_index":917,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["back",{"_index":1744,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["bar",{"_index":1711,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["base",{"_index":1573,"title":{},"body":{"injectables/FhirService.html":{}}}],["basecolumn",{"_index":608,"title":{"classes/BaseColumn.html":{}},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{}}}],["basecolumn:23",{"_index":717,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:28",{"_index":718,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:29",{"_index":719,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:30",{"_index":720,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:33",{"_index":725,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:36",{"_index":727,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:39",{"_index":726,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["based",{"_index":149,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["basic",{"_index":1132,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["bearer",{"_index":1598,"title":{},"body":{"injectables/FhirService.html":{}}}],["before",{"_index":1875,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["begin",{"_index":2757,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":799,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["being",{"_index":1145,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{}}}],["below",{"_index":2542,"title":{},"body":{"injectables/SmartService.html":{}}}],["best",{"_index":2530,"title":{},"body":{"injectables/SmartService.html":{}}}],["better",{"_index":1259,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["between",{"_index":663,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["bilirubin",{"_index":284,"title":{},"body":{"components/AccountComponent.html":{}}}],["bind(this",{"_index":813,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["birthdate",{"_index":2305,"title":{},"body":{"classes/Patient.html":{}}}],["blood",{"_index":2169,"title":{},"body":{"injectables/ObservationService.html":{}}}],["blur",{"_index":601,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["bmi",{"_index":346,"title":{},"body":{"components/AddObservation.html":{}}}],["body",{"_index":2179,"title":{},"body":{"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"index.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["bootstrap",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextMenuOption.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":298,"title":{},"body":{"components/AccountComponent.html":{}}}],["bound",{"_index":797,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["box",{"_index":203,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["boxdata",{"_index":2003,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["break",{"_index":2355,"title":{},"body":{"components/PatientComponent.html":{}}}],["brew",{"_index":2755,"title":{},"body":{"index.html":{}}}],["brief",{"_index":2821,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2842,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["buffer",{"_index":1796,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["bugs",{"_index":2798,"title":{},"body":{"index.html":{}}}],["build",{"_index":2746,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1606,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder'},{'name",{"_index":187,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["builder.component",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["builder.component.ts",{"_index":1605,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["builder.component.ts:13",{"_index":1631,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:14",{"_index":1630,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:16",{"_index":1632,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:17",{"_index":1628,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:19",{"_index":1620,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:20",{"_index":1621,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:22",{"_index":1619,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:27",{"_index":1624,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:32",{"_index":1623,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:39",{"_index":1627,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:55",{"_index":1626,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:59",{"_index":1622,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.html",{"_index":1609,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder/form",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/FormBuilder.html":{},"coverage.html":{}}}],["bun",{"_index":280,"title":{},"body":{"components/AccountComponent.html":{}}}],["bundle",{"_index":670,"title":{"classes/Bundle.html":{}},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["bundle.entry",{"_index":865,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["bundle.entry.map(e",{"_index":1536,"title":{},"body":{"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["bundle.entry.map(r",{"_index":866,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["bundle.link.find(link",{"_index":1037,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["button",{"_index":1643,"title":{},"body":{"components/FormBuilder.html":{},"components/ToolbarComponent.html":{}}}],["c",{"_index":555,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["c.clinicalstatus",{"_index":1159,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.id",{"_index":826,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c.isparent",{"_index":837,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.isvisible",{"_index":836,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.parent",{"_index":835,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.relativedatetime",{"_index":1123,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.sort((n1",{"_index":1112,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["c/patient_viewer.git",{"_index":2764,"title":{},"body":{"index.html":{}}}],["c2",{"_index":1237,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c2.onsetdatetime.localecompare(c1.onsetdatetime",{"_index":1238,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c['code']['text",{"_index":1341,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c['selected",{"_index":825,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c[\\'code\\'][\\'text",{"_index":1343,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c[element",{"_index":1177,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cache",{"_index":1048,"title":{},"body":{"injectables/ConditionService.html":{}}}],["calcium",{"_index":272,"title":{},"body":{"components/AccountComponent.html":{}}}],["call",{"_index":572,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["called",{"_index":1234,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["calls",{"_index":1049,"title":{},"body":{"injectables/ConditionService.html":{}}}],["cardiovascular",{"_index":2186,"title":{},"body":{"injectables/ObservationService.html":{}}}],["care",{"_index":94,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{}}}],["careplan",{"_index":479,"title":{"classes/CarePlan.html":{}},"body":{"modules/AppModule.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"coverage.html":{}}}],["careplan'},{'name",{"_index":165,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplan.html",{"_index":706,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplancomponent",{"_index":164,"title":{"components/CarePlanComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay",{"_index":166,"title":{"components/CarePlanDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay'},{'name",{"_index":167,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplandisplay.html",{"_index":751,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanloadfinished",{"_index":707,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplans",{"_index":708,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["careplans.length",{"_index":747,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplanselected",{"_index":762,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanservice",{"_index":385,"title":{"injectables/CarePlanService.html":{}},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/MedicationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":2353,"title":{},"body":{"components/PatientComponent.html":{}}}],["cases",{"_index":2833,"title":{},"body":{"index.html":{}}}],["cast",{"_index":1542,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{}}}],["casted",{"_index":1543,"title":{},"body":{"injectables/EncounterService.html":{}}}],["cat.category",{"_index":150,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.count",{"_index":2096,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["cat.data?.length",{"_index":151,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.display",{"_index":2095,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["catch",{"_index":1178,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["categories",{"_index":2149,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorize",{"_index":2162,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorizedobservations",{"_index":2116,"title":{},"body":{"injectables/ObservationService.html":{}}}],["category",{"_index":76,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Timeline.html":{}}}],["cause",{"_index":2818,"title":{},"body":{"index.html":{}}}],["causes",{"_index":1317,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["cd",{"_index":2765,"title":{},"body":{"index.html":{}}}],["certain",{"_index":2138,"title":{},"body":{"injectables/ObservationService.html":{}}}],["chain",{"_index":1021,"title":{},"body":{"injectables/ConditionService.html":{}}}],["change",{"_index":1467,"title":{},"body":{"injectables/DoctorService.html":{}}}],["changed",{"_index":1047,"title":{},"body":{"injectables/ConditionService.html":{}}}],["changedobs",{"_index":2109,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changedobs.isselected",{"_index":2114,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changesthen",{"_index":2782,"title":{},"body":{"index.html":{}}}],["chart",{"_index":895,"title":{"classes/Chart.html":{}},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["chart.data",{"_index":1788,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.length",{"_index":1821,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.push",{"_index":1784,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.sort((p1",{"_index":1789,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].name",{"_index":1826,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].value",{"_index":1822,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.linechartdata",{"_index":1793,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.normalvalues",{"_index":1804,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.title",{"_index":1777,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemax",{"_index":1802,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemin",{"_index":1801,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chartevent",{"_index":1684,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmaxdate",{"_index":1729,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate",{"_index":1728,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate.gettime",{"_index":1731,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartname",{"_index":1762,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["charts",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"dependencies.html":{}}}],["chartsize",{"_index":1668,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartsmap",{"_index":1751,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["check",{"_index":733,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["check(medication",{"_index":1986,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["checkallcareplans",{"_index":754,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallcareplans(checked",{"_index":768,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallconditions",{"_index":1272,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallconditions(checked",{"_index":1284,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallobservations",{"_index":2256,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkallobservations(checked",{"_index":2266,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkbox",{"_index":169,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["checkboxdata",{"_index":929,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxes",{"_index":939,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxinline",{"_index":168,"title":{"components/CheckboxInline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcareplan",{"_index":755,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcareplan(checked",{"_index":770,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked",{"_index":756,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked(careplan",{"_index":773,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcondition",{"_index":1273,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkcondition(checkedcondition",{"_index":1286,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checked",{"_index":260,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["checked(changedobs",{"_index":2107,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["checked(obs",{"_index":2083,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["checkedcareplan",{"_index":771,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkedcondition",{"_index":1288,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkedconditions",{"_index":511,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedconditions.map(this.extractconditioninfo",{"_index":565,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedconditionsinfo",{"_index":564,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservation",{"_index":2269,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkedobservations",{"_index":509,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedobservations.map(this.extractobservationinfo",{"_index":567,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservationsinfo",{"_index":566,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checking",{"_index":790,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["checkobservation",{"_index":2257,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkobservation(checked",{"_index":2268,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["chief",{"_index":140,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["child",{"_index":660,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["chloride",{"_index":270,"title":{},"body":{"components/AccountComponent.html":{}}}],["cholesteralbattery",{"_index":246,"title":{},"body":{"components/AccountComponent.html":{}}}],["choose",{"_index":1724,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["class",{"_index":67,"title":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":355,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{},"overview.html":{}}}],["clean",{"_index":1475,"title":{},"body":{"injectables/DoctorService.html":{}}}],["cleaning",{"_index":1386,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clear",{"_index":542,"title":{},"body":{"injectables/AssociationService.html":{}}}],["click",{"_index":1349,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HoverBoxComponent.html":{},"components/ObservationRecursive.html":{},"index.html":{}}}],["clicked",{"_index":830,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsDisplay.html":{}}}],["clickedset",{"_index":1095,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["clicking",{"_index":806,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["clicks",{"_index":1374,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clicksubscription",{"_index":1353,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["client",{"_index":942,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"coverage.html":{}}}],["client_id",{"_index":2537,"title":{},"body":{"injectables/SmartService.html":{}}}],["clientid",{"_index":2446,"title":{},"body":{"injectables/SmartService.html":{}}}],["clinical",{"_index":2741,"title":{},"body":{"index.html":{}}}],["clinicalstatus",{"_index":976,"title":{},"body":{"classes/Condition.html":{}}}],["clone",{"_index":2762,"title":{},"body":{"index.html":{}}}],["close",{"_index":353,"title":{},"body":{"components/AddObservation.html":{},"components/ContextMenuComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["close(event",{"_index":2582,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["closeable",{"_index":1354,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closeable_delay",{"_index":1355,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closed",{"_index":1425,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closefinalnote",{"_index":2017,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["closeprogressnote",{"_index":2018,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["closes",{"_index":1385,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closesidenote",{"_index":2019,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["cluster_appmodule",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule",{"_index":1645,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_declarations",{"_index":1646,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_exports",{"_index":1647,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["clutter",{"_index":2819,"title":{},"body":{"index.html":{}}}],["cnum",{"_index":1164,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cnum.tostring",{"_index":1168,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["co2",{"_index":271,"title":{},"body":{"components/AccountComponent.html":{}}}],["code",{"_index":337,"title":{},"body":{"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["codes",{"_index":2160,"title":{},"body":{"injectables/ObservationService.html":{}}}],["coding",{"_index":577,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{}}}],["collapse",{"_index":299,"title":{},"body":{"components/AccountComponent.html":{}}}],["collapsequeue",{"_index":1057,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["column",{"_index":90,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["column's",{"_index":960,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnheight",{"_index":610,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnnum",{"_index":25,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["columns",{"_index":134,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{}}}],["columnstate",{"_index":611,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnstateswitcher",{"_index":948,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitcher'},{'name",{"_index":172,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["columnstateswitcher.html",{"_index":949,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitchercomponent",{"_index":171,"title":{"components/ColumnStateSwitcherComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["columntype",{"_index":953,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["combdata",{"_index":1610,"title":{},"body":{"components/FormBuilder.html":{}}}],["combineddata",{"_index":930,"title":{},"body":{"components/CheckboxInline.html":{}}}],["command",{"_index":2776,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2759,"title":{},"body":{"index.html":{}}}],["comment",{"_index":2541,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["comments",{"_index":2827,"title":{},"body":{"index.html":{}}}],["compat",{"_index":2725,"title":{},"body":{"dependencies.html":{}}}],["compiler",{"_index":1838,"title":{},"body":{"components/HomeComponent.html":{}}}],["complaint",{"_index":141,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["completed",{"_index":1570,"title":{},"body":{"components/Favorites.html":{}}}],["completion",{"_index":2806,"title":{},"body":{"index.html":{}}}],["complex",{"_index":2825,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":156,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/form_components/checkbox",{"_index":1649,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/normal",{"_index":1651,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/scrachpad",{"_index":1656,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/select",{"_index":1654,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/home/home.component",{"_index":2345,"title":{},"body":{"components/PatientComponent.html":{}}}],["components/hoverbox/hoverbox.component",{"_index":2591,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["concat",{"_index":1015,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concat(of(conditions",{"_index":1039,"title":{},"body":{"injectables/ConditionService.html":{}}}],["concat(of(encounters",{"_index":1538,"title":{},"body":{"injectables/EncounterService.html":{}}}],["concatmap",{"_index":1016,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concurrently",{"_index":2712,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":148,"title":{"classes/Condition.html":{}},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["condition.code.coding[0].code",{"_index":2601,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.code.coding[0].display",{"_index":2599,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.isvisible",{"_index":1253,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.onsetdatetime",{"_index":2598,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.relativedatetime",{"_index":1255,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.service",{"_index":525,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['code",{"_index":580,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['system",{"_index":581,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['onsetdatetime",{"_index":582,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionally",{"_index":1023,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditiongrouping",{"_index":1058,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["conditiongroupingname",{"_index":1059,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditiongroupingname[conditiongrouping.indexof(c",{"_index":1191,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditions",{"_index":88,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["conditions'},{'name",{"_index":176,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditions.component.ts",{"_index":1470,"title":{},"body":{"injectables/DoctorService.html":{}}}],["conditions.html",{"_index":1200,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["conditions.map(this.extractconditioninfo",{"_index":569,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionscache",{"_index":991,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditionschart",{"_index":1055,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschart'},{'name",{"_index":174,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionschart.html",{"_index":1056,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschartcomponent",{"_index":173,"title":{"components/ConditionsChartComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionscomponent",{"_index":175,"title":{"components/ConditionsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay",{"_index":177,"title":{"components/ConditionsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay'},{'name",{"_index":178,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionsdisplay.html",{"_index":1271,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["conditionselected",{"_index":1071,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{}}}],["conditionservice",{"_index":386,"title":{"injectables/ConditionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsinfo",{"_index":568,"title":{},"body":{"injectables/AssociationService.html":{}}}],["confidential",{"_index":2786,"title":{},"body":{"index.html":{}}}],["config",{"_index":330,"title":{},"body":{"components/AccountComponent.html":{}}}],["configmode",{"_index":1455,"title":{},"body":{"injectables/DoctorService.html":{}}}],["console.log",{"_index":2813,"title":{},"body":{"index.html":{}}}],["console.log(\"add",{"_index":1712,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["console.log(\"changing",{"_index":2428,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["console.log(\"hi",{"_index":1567,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(\"highlighting",{"_index":1662,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["console.log(\"loaded",{"_index":746,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["console.log(\"no",{"_index":2195,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(\"normal",{"_index":1563,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(\"saved",{"_index":293,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"this",{"_index":1187,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(\"total",{"_index":2658,"title":{},"body":{"components/TripleListComponent.html":{}}}],["console.log('blur",{"_index":606,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('focus",{"_index":602,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('loaded",{"_index":1992,"title":{},"body":{"components/MedicationsComponent.html":{},"components/TimelineComponent.html":{}}}],["console.log('log",{"_index":2575,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('stop",{"_index":2511,"title":{},"body":{"injectables/SmartService.html":{}}}],["console.log('that",{"_index":1180,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(condition",{"_index":1314,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["console.log(data",{"_index":1350,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["console.log(forms",{"_index":1641,"title":{},"body":{"components/FormBuilder.html":{}}}],["console.log(fullpath",{"_index":1184,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(obs",{"_index":2290,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["console.log(plan",{"_index":815,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["console.log(this.elref",{"_index":1564,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(this.elref.nativeelement.queryselector('div').style.left",{"_index":1565,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(this.encounters",{"_index":2571,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log(this.getscratchpadobservations",{"_index":2232,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(this.observations",{"_index":2286,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["const",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{},"injectables/EncounterService.html":{},"injectables/SmartService.html":{}}}],["constitutional",{"_index":2177,"title":{},"body":{"injectables/ObservationService.html":{}}}],["construct",{"_index":2365,"title":{},"body":{"components/PatientComponent.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(associationservice",{"_index":2262,"title":{},"body":{"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["constructor(careplanservice",{"_index":1984,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["constructor(conditionservice",{"_index":1072,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["constructor(cookieservice",{"_index":1459,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["constructor(doctorservice",{"_index":254,"title":{},"body":{"components/AccountComponent.html":{},"components/Favorites.html":{},"components/TripleListComponent.html":{}}}],["constructor(el",{"_index":592,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["constructor(encounterservice",{"_index":2562,"title":{},"body":{"components/TimelineComponent.html":{}}}],["constructor(fhirservice",{"_index":712,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["constructor(http",{"_index":496,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["constructor(name",{"_index":1974,"title":{},"body":{"classes/Medication.html":{},"classes/Server.html":{}}}],["constructor(observationservice",{"_index":30,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"directives/HighlightDirective.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelineComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(public",{"_index":2442,"title":{},"body":{"classes/Server.html":{}}}],["constructor(ref",{"_index":1365,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["constructor(scratchpadservice",{"_index":763,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{}}}],["constructor(trendsservice",{"_index":1678,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["contained",{"_index":2140,"title":{},"body":{"injectables/ObservationService.html":{}}}],["containing",{"_index":1855,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["contains",{"_index":1143,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["content",{"_index":2521,"title":{},"body":{"injectables/SmartService.html":{}}}],["context",{"_index":792,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["contextmenu",{"_index":1351,"title":{},"body":{"components/ContextMenuComponent.html":{},"dependencies.html":{}}}],["contextmenu'},{'name",{"_index":180,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["contextmenu.component.ts",{"_index":2835,"title":{},"body":{"index.html":{}}}],["contextmenu.html",{"_index":1352,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["contextmenu/contextmenu.component",{"_index":788,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["contextmenucomponent",{"_index":179,"title":{"components/ContextMenuComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contextmenuoption",{"_index":1369,"title":{"classes/ContextMenuOption.html":{}},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["contexts",{"_index":1399,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["continual",{"_index":2239,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["continually",{"_index":1025,"title":{},"body":{"injectables/ConditionService.html":{}}}],["continue",{"_index":1783,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["cookie",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["correct",{"_index":124,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{}}}],["count",{"_index":1483,"title":{},"body":{"injectables/DoctorService.html":{},"injectables/ObservationService.html":{}}}],["coverage",{"_index":2663,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":878,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.code",{"_index":880,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.value",{"_index":892,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.period.end",{"_index":842,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp.period.start",{"_index":841,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp['title",{"_index":840,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp[\\'title",{"_index":843,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["create",{"_index":882,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["created",{"_index":1808,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creating",{"_index":1776,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creatinine",{"_index":278,"title":{},"body":{"components/AccountComponent.html":{}}}],["cross",{"_index":2512,"title":{},"body":{"injectables/SmartService.html":{}}}],["css",{"_index":2748,"title":{},"body":{"index.html":{}}}],["csub.clinicalstatus",{"_index":1194,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub.relativedatetime",{"_index":1195,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['coding'][0]['code",{"_index":1193,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['text",{"_index":1192,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'coding\\'][0][\\'code",{"_index":1198,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'text",{"_index":1197,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ctgry",{"_index":2226,"title":{},"body":{"injectables/ObservationService.html":{}}}],["current",{"_index":70,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{}}}],["currently",{"_index":531,"title":{},"body":{"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["currstatus",{"_index":2422,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["custom",{"_index":1856,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["d",{"_index":1324,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getdate",{"_index":1339,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getfullyear",{"_index":1340,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["dailyamount",{"_index":696,"title":{},"body":{"classes/CarePlan.html":{}}}],["daniel",{"_index":2789,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1743,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["dashedlines",{"_index":897,"title":{},"body":{"classes/Chart.html":{}}}],["data",{"_index":69,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["data.length",{"_index":1774,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["data['rest'][0].security.extension.filter(e",{"_index":2491,"title":{},"body":{"injectables/SmartService.html":{}}}],["data[0].code['text",{"_index":1778,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["datafilter",{"_index":139,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["datalocation",{"_index":1080,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["datalocation.foreach(element",{"_index":1175,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date",{"_index":693,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/TimelinePopupComponent.html":{}}}],["date().gettime",{"_index":1119,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["date(c.onsetdatetime",{"_index":1325,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["date(c.onsetdatetime).gettime",{"_index":1122,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(condition.onsetdatetime).gettime",{"_index":1254,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["date(cp.period.end",{"_index":890,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(cp.period.start",{"_index":889,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(form.maxdate",{"_index":1723,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(form.mindate",{"_index":1721,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(newdate).todatestring",{"_index":1124,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(ob.effectivedatetime).gettime",{"_index":2207,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(point.relativedatetime",{"_index":1785,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["date(this.conditions[0].onsetdatetime).gettime",{"_index":1120,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["date(this.observations[0].effectivedatetime).gettime",{"_index":2204,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(this.period.end",{"_index":1521,"title":{},"body":{"classes/Encounter.html":{}}}],["date(this.period.start",{"_index":1520,"title":{},"body":{"classes/Encounter.html":{}}}],["datepipe",{"_index":2581,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["datepipe('en",{"_index":2586,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dates",{"_index":1239,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["datetime",{"_index":579,"title":{},"body":{"injectables/AssociationService.html":{}}}],["dd",{"_index":2593,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dealing",{"_index":2800,"title":{},"body":{"index.html":{}}}],["debounce",{"_index":652,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debouncetime",{"_index":629,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debugging",{"_index":2543,"title":{},"body":{"injectables/SmartService.html":{}}}],["december",{"_index":1337,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["declarations",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["declare",{"_index":1220,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["declared",{"_index":2796,"title":{},"body":{"index.html":{}}}],["declaring",{"_index":2795,"title":{},"body":{"index.html":{}}}],["decodeuricomponent(tmp[1",{"_index":2550,"title":{},"body":{"injectables/SmartService.html":{}}}],["decorators",{"_index":783,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":1402,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["delete",{"_index":1150,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["demos",{"_index":1244,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["dependencies",{"_index":373,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependenciesif",{"_index":2769,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1487,"title":{},"body":{"injectables/DoctorService.html":{}}}],["desc",{"_index":1110,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["described",{"_index":129,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["description",{"_index":681,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["deserialize",{"_index":1524,"title":{},"body":{"injectables/EncounterService.html":{}}}],["deserialize(input",{"_index":1528,"title":{},"body":{"injectables/EncounterService.html":{}}}],["detail",{"_index":695,"title":{},"body":{"classes/CarePlan.html":{}}}],["details",{"_index":1515,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["determine",{"_index":1321,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["developing",{"_index":2816,"title":{},"body":{"index.html":{}}}],["development",{"_index":2768,"title":{},"body":{"index.html":{}}}],["diff",{"_index":1118,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["different",{"_index":133,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["directive",{"_index":155,"title":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["directives",{"_index":234,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["directly",{"_index":2801,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1430,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["discussed",{"_index":1034,"title":{},"body":{"injectables/ConditionService.html":{}}}],["display",{"_index":99,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{}}}],["display_delay",{"_index":1859,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["displayed",{"_index":791,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["displaying",{"_index":1772,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{}}}],["div",{"_index":1512,"title":{},"body":{"classes/Encounter.html":{}}}],["do's",{"_index":2793,"title":{},"body":{"index.html":{}}}],["dob",{"_index":2385,"title":{},"body":{"components/PatientComponent.html":{}}}],["doctornote",{"_index":1452,"title":{},"body":{"components/DoctorNoteComponent.html":{}}}],["doctornote'},{'name",{"_index":182,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["doctornotecomponent",{"_index":181,"title":{"components/DoctorNoteComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["doctorservice",{"_index":255,"title":{"injectables/DoctorService.html":{}},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["document",{"_index":1376,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["document.getelementbyid",{"_index":2811,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"cg",{"_index":1167,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["document.getelementbyid(\"finalnote\").style.width",{"_index":2032,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["document.getelementbyid(\"progressnote\").style.width",{"_index":2031,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["document.getelementbyid(\"sidenote\").style.width",{"_index":2029,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["documentation",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":2802,"title":{},"body":{"index.html":{}}}],["doit",{"_index":1904,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["doit(n",{"_index":1905,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["don't",{"_index":2380,"title":{},"body":{"components/PatientComponent.html":{}}}],["done",{"_index":2790,"title":{},"body":{"index.html":{}}}],["dont's",{"_index":2807,"title":{},"body":{"index.html":{}}}],["dosage",{"_index":891,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["dosageunits",{"_index":879,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["doubles/triples",{"_index":1477,"title":{},"body":{"injectables/DoctorService.html":{}}}],["driven",{"_index":2740,"title":{},"body":{"index.html":{}}}],["due",{"_index":322,"title":{},"body":{"components/AccountComponent.html":{}}}],["duration",{"_index":1052,"title":{},"body":{"injectables/ConditionService.html":{}}}],["dynamic",{"_index":636,"title":{},"body":{"classes/BaseColumn.html":{},"dependencies.html":{}}}],["e.resource",{"_index":2190,"title":{},"body":{"injectables/ObservationService.html":{}}}],["e.url",{"_index":2492,"title":{},"body":{"injectables/SmartService.html":{}}}],["each",{"_index":147,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"index.html":{}}}],["earliest",{"_index":1725,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["ears",{"_index":2181,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ease",{"_index":2628,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["edge",{"_index":1891,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["effective",{"_index":583,"title":{},"body":{"injectables/AssociationService.html":{}}}],["effectivedatetime",{"_index":507,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["el",{"_index":596,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["elapsed",{"_index":1427,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["electrolytes",{"_index":247,"title":{},"body":{"components/AccountComponent.html":{}}}],["element",{"_index":154,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["elementref",{"_index":593,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"directives/HighlightDirective.html":{},"components/ToolbarComponent.html":{}}}],["elements",{"_index":922,"title":{},"body":{"classes/Chart.html":{},"components/ConditionsComponent.html":{}}}],["ellipsestoggle",{"_index":1062,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["elref",{"_index":1554,"title":{},"body":{"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["empty",{"_index":868,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{}}}],["emsp",{"_index":1898,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["enableprodmode",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["enc",{"_index":2376,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getlogvalue()/5",{"_index":2574,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.getreason",{"_index":2378,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getstartdate",{"_index":2578,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.position",{"_index":2573,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encodeuri(request",{"_index":2545,"title":{},"body":{"injectables/SmartService.html":{}}}],["encodeuri(this.redirecturi",{"_index":2518,"title":{},"body":{"injectables/SmartService.html":{}}}],["encounter",{"_index":1494,"title":{"classes/Encounter.html":{}},"body":{"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{},"index.html":{}}}],["encounter.getreason",{"_index":2595,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["encounters",{"_index":1535,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["encounters.foreach(enc",{"_index":2572,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encounterservice",{"_index":387,"title":{"injectables/EncounterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["end",{"_index":694,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{},"index.html":{}}}],["endpoint",{"_index":530,"title":{},"body":{"injectables/AssociationService.html":{}}}],["ent",{"_index":2185,"title":{},"body":{"injectables/ObservationService.html":{}}}],["entry",{"_index":672,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["entry.description",{"_index":941,"title":{},"body":{"components/CheckboxInline.html":{},"components/SelectListSingle.html":{}}}],["enumerated",{"_index":1479,"title":{},"body":{"injectables/DoctorService.html":{}}}],["error",{"_index":1179,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["errors",{"_index":1154,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["even",{"_index":1230,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["event",{"_index":106,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{},"components/TripleListComponent.html":{}}}],["event.pagex",{"_index":1423,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["event.pagey",{"_index":1420,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.preventdefault",{"_index":1432,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.shiftkey",{"_index":2092,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["event.target.checked",{"_index":1994,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["event.target.innerheight",{"_index":658,"title":{},"body":{"classes/BaseColumn.html":{}}}],["eventemitter",{"_index":766,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/TripleListComponent.html":{}}}],["events",{"_index":1433,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["example",{"_index":957,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ContextMenuComponent.html":{}}}],["examples",{"_index":2834,"title":{},"body":{"index.html":{}}}],["excessive",{"_index":654,"title":{},"body":{"classes/BaseColumn.html":{}}}],["excludes",{"_index":1484,"title":{},"body":{"injectables/DoctorService.html":{}}}],["exec",{"_index":795,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["execute",{"_index":1347,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["executed",{"_index":1380,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["exist",{"_index":883,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{}}}],["existing",{"_index":881,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["exists",{"_index":1188,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["exp",{"_index":1915,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["expand",{"_index":757,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expand(parent",{"_index":775,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expected",{"_index":912,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["extends",{"_index":705,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["extra",{"_index":1797,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["extract",{"_index":546,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo",{"_index":492,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo(condition",{"_index":500,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractnewobservations",{"_index":2122,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractnewobservations(observations",{"_index":2133,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractobservationinfo",{"_index":493,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractobservationinfo(observation",{"_index":504,"title":{},"body":{"injectables/AssociationService.html":{}}}],["eyes",{"_index":2180,"title":{},"body":{"injectables/ObservationService.html":{}}}],["false",{"_index":59,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["favorites",{"_index":183,"title":{"components/Favorites.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favorites'},{'name",{"_index":184,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["favorites.html",{"_index":1549,"title":{},"body":{"components/Favorites.html":{}}}],["february",{"_index":1328,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["female",{"_index":2354,"title":{},"body":{"components/PatientComponent.html":{}}}],["fhir.service",{"_index":853,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["fhirbaseurl",{"_index":2447,"title":{},"body":{"injectables/SmartService.html":{}}}],["fhirservice",{"_index":388,"title":{"injectables/FhirService.html":{}},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["field",{"_index":1181,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["fields",{"_index":563,"title":{},"body":{"injectables/AssociationService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":135,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"components/ToolbarComponent.html":{}}}],["filtering",{"_index":2634,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterscratchpad",{"_index":2610,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterset",{"_index":2117,"title":{},"body":{"injectables/ObservationService.html":{}}}],["final",{"_index":2036,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["find",{"_index":1894,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["findgetparameter",{"_index":2453,"title":{},"body":{"injectables/SmartService.html":{}}}],["findgetparameter(parametername",{"_index":2458,"title":{},"body":{"injectables/SmartService.html":{}}}],["finding",{"_index":350,"title":{},"body":{"components/AddObservation.html":{}}}],["findings",{"_index":323,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["finished",{"_index":735,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["first",{"_index":108,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/SmartService.html":{}}}],["firstiteration",{"_index":26,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["fit",{"_index":1745,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["fix",{"_index":2527,"title":{},"body":{"injectables/SmartService.html":{}}}],["fixed",{"_index":1544,"title":{},"body":{"injectables/EncounterService.html":{}}}],["fixed[prop",{"_index":1546,"title":{},"body":{"injectables/EncounterService.html":{}}}],["focus",{"_index":600,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["folder",{"_index":2777,"title":{},"body":{"index.html":{}}}],["following",{"_index":1874,"title":{},"body":{"components/HoverBoxComponent.html":{},"index.html":{}}}],["follows",{"_index":75,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["foo",{"_index":1664,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["force",{"_index":2778,"title":{},"body":{"index.html":{}}}],["form",{"_index":186,"title":{"classes/Form.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["format",{"_index":128,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{}}}],["formbuilder",{"_index":185,"title":{"components/FormBuilder.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcreatormodule",{"_index":383,"title":{"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["forminput",{"_index":1616,"title":{},"body":{"components/FormBuilder.html":{}}}],["forms",{"_index":1611,"title":{},"body":{"components/FormBuilder.html":{}}}],["formsmodule",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["found",{"_index":2166,"title":{},"body":{"injectables/ObservationService.html":{}}}],["fromevent",{"_index":627,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(document",{"_index":1435,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(window",{"_index":650,"title":{},"body":{"classes/BaseColumn.html":{}}}],["front",{"_index":2738,"title":{},"body":{"index.html":{}}}],["fullpath",{"_index":1174,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["function",{"_index":122,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["function(condition",{"_index":1309,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["function(data",{"_index":1346,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["function(obs",{"_index":2287,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["functionality",{"_index":635,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["functions",{"_index":796,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["g",{"_index":2767,"title":{},"body":{"index.html":{}}}],["gender",{"_index":2306,"title":{},"body":{"classes/Patient.html":{}}}],["genderstring",{"_index":2324,"title":{},"body":{"components/PatientComponent.html":{}}}],["genderstring(patient",{"_index":2327,"title":{},"body":{"components/PatientComponent.html":{}}}],["generalchange",{"_index":305,"title":{},"body":{"components/AccountComponent.html":{}}}],["generally",{"_index":920,"title":{},"body":{"classes/Chart.html":{}}}],["generate",{"_index":1478,"title":{},"body":{"injectables/DoctorService.html":{}}}],["generic",{"_index":2831,"title":{},"body":{"index.html":{}}}],["getassociations",{"_index":494,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations(checkedconditions",{"_index":508,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcheckedconditions",{"_index":993,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getcheckedobservations",{"_index":2123,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getcode",{"_index":2042,"title":{},"body":{"classes/Observation.html":{}}}],["getcolumnstate",{"_index":994,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getdata",{"_index":931,"title":{},"body":{"components/CheckboxInline.html":{},"components/FormBuilder.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["getdaterange",{"_index":1754,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdaterange(chart",{"_index":1763,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdatestring",{"_index":1274,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getdatestring(c",{"_index":1290,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getenddate",{"_index":1498,"title":{},"body":{"classes/Encounter.html":{}}}],["getforms",{"_index":1613,"title":{},"body":{"components/FormBuilder.html":{}}}],["getgrouping",{"_index":2124,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getgrouping(code",{"_index":2136,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getlevel",{"_index":2078,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["getlogvalue",{"_index":1499,"title":{},"body":{"classes/Encounter.html":{}}}],["getreason",{"_index":1500,"title":{},"body":{"classes/Encounter.html":{}}}],["getrequestoptions",{"_index":1575,"title":{},"body":{"injectables/FhirService.html":{}}}],["getrequestoptions(withauth",{"_index":1580,"title":{},"body":{"injectables/FhirService.html":{}}}],["gets",{"_index":1045,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{}}}],["getscratchpadcareplans",{"_index":710,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["getscratchpadconditions",{"_index":1204,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["getscratchpadcount",{"_index":950,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["getscratchpadobservations",{"_index":2125,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getstartdate",{"_index":1501,"title":{},"body":{"classes/Encounter.html":{}}}],["getters",{"_index":1265,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["gettext",{"_index":2043,"title":{},"body":{"classes/Observation.html":{}}}],["gettext(o",{"_index":2057,"title":{},"body":{"classes/Observation.html":{}}}],["getting",{"_index":2735,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":2454,"title":{},"body":{"injectables/SmartService.html":{}}}],["getunits",{"_index":2044,"title":{},"body":{"classes/Observation.html":{}}}],["getunits(o",{"_index":2059,"title":{},"body":{"classes/Observation.html":{}}}],["geturl",{"_index":1576,"title":{},"body":{"injectables/FhirService.html":{}}}],["getvalue",{"_index":2045,"title":{},"body":{"classes/Observation.html":{}}}],["getvalue(o",{"_index":2061,"title":{},"body":{"classes/Observation.html":{}}}],["getvaluerange",{"_index":1755,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getvaluerange(chart",{"_index":1765,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["gfr",{"_index":279,"title":{},"body":{"components/AccountComponent.html":{}}}],["git",{"_index":2761,"title":{},"body":{"index.html":{}}}],["given",{"_index":858,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["giving",{"_index":2822,"title":{},"body":{"index.html":{}}}],["glitch",{"_index":1398,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["global",{"_index":1635,"title":{},"body":{"components/FormBuilder.html":{}}}],["glu",{"_index":275,"title":{},"body":{"components/AccountComponent.html":{}}}],["glyphicon",{"_index":809,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["graphconfig",{"_index":1456,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["graphdata",{"_index":2076,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["groupconditions",{"_index":1063,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouping",{"_index":2038,"title":{},"body":{"classes/Observation.html":{}}}],["groupingcount",{"_index":1082,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouplist",{"_index":2161,"title":{},"body":{"injectables/ObservationService.html":{}}}],["groupmap",{"_index":2118,"title":{},"body":{"injectables/ObservationService.html":{}}}],["grow.directive.ts",{"_index":588,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["grow.directive.ts:10",{"_index":595,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:15",{"_index":598,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:19",{"_index":597,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grunt",{"_index":2745,"title":{},"body":{"index.html":{}}}],["guaranteed",{"_index":131,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["guidelines",{"_index":2792,"title":{},"body":{"index.html":{}}}],["handle",{"_index":661,"title":{},"body":{"classes/BaseColumn.html":{}}}],["handledocclick",{"_index":1361,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handledocclick(event",{"_index":1371,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleobservationbundle",{"_index":2126,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleobservationbundle(bundle",{"_index":2142,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleoptionclick",{"_index":1362,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleoptionclick(option",{"_index":1377,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleresize",{"_index":613,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handleresize(event",{"_index":622,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handlers",{"_index":2088,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["handles",{"_index":1379,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsComponent.html":{}}}],["hardcode",{"_index":1893,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hardcoded",{"_index":1806,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["hashing",{"_index":2528,"title":{},"body":{"injectables/SmartService.html":{}}}],["hasing\")).tostring",{"_index":2533,"title":{},"body":{"injectables/SmartService.html":{}}}],["hba1c",{"_index":274,"title":{},"body":{"components/AccountComponent.html":{}}}],["hdl",{"_index":265,"title":{},"body":{"components/AccountComponent.html":{}}}],["headers",{"_index":1594,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["headers.append('authorization",{"_index":1597,"title":{},"body":{"injectables/FhirService.html":{}}}],["headings",{"_index":83,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["heart",{"_index":2171,"title":{},"body":{"injectables/ObservationService.html":{}}}],["height",{"_index":336,"title":{},"body":{"components/AddObservation.html":{},"classes/BaseColumn.html":{},"components/DoctorNoteComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["height_offset",{"_index":612,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["here",{"_index":84,"title":{},"body":{"components/AccordionRecursion.html":{},"components/PatientComponent.html":{}}}],["hide",{"_index":1363,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hide(event",{"_index":1383,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hiding",{"_index":1391,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["high",{"_index":924,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{}}}],["highlight",{"_index":238,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["highlightdirective",{"_index":237,"title":{"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["highlighted",{"_index":1018,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{}}}],["highlighttext",{"_index":1659,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["hii",{"_index":2784,"title":{},"body":{"index.html":{}}}],["historical",{"_index":311,"title":{},"body":{"components/AccountComponent.html":{}}}],["historicaltrends",{"_index":1666,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrends'},{'name",{"_index":189,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["historicaltrends.html",{"_index":1667,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrendscomponent",{"_index":188,"title":{"components/HistoricalTrendsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["historicaltrendsservice",{"_index":389,"title":{"injectables/HistoricalTrendsService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["history",{"_index":2174,"title":{},"body":{"injectables/ObservationService.html":{}}}],["home",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":191,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["home.html",{"_index":1836,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":190,"title":{"components/HomeComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["horizontal",{"_index":918,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["host",{"_index":599,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["hover",{"_index":1854,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["hoverbox",{"_index":1857,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["hoverbox'},{'name",{"_index":193,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["hoverbox.component.ts",{"_index":2836,"title":{},"body":{"index.html":{}}}],["hoverbox.html",{"_index":1858,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hoverbox/hoverbox.component",{"_index":2346,"title":{},"body":{"components/PatientComponent.html":{}}}],["hoverboxcomponent",{"_index":192,"title":{"components/HoverBoxComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hoverstyling",{"_index":2323,"title":{},"body":{"components/PatientComponent.html":{}}}],["hspc",{"_index":2783,"title":{},"body":{"index.html":{}}}],["html",{"_index":153,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["http",{"_index":499,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["http://ec2",{"_index":517,"title":{},"body":{"injectables/AssociationService.html":{}}}],["http://fhir",{"_index":2493,"title":{},"body":{"injectables/SmartService.html":{}}}],["http://localhost:9000",{"_index":2473,"title":{},"body":{"injectables/SmartService.html":{}}}],["httpclient",{"_index":497,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["httpclientmodule",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1591,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["httpheaders({'accept",{"_index":1595,"title":{},"body":{"injectables/FhirService.html":{}}}],["https://github.com/hii",{"_index":2763,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/45594609/which",{"_index":1019,"title":{},"body":{"injectables/ConditionService.html":{}}}],["humanizebytes",{"_index":1903,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["humanizebytespipe",{"_index":1900,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["icon",{"_index":808,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["icons",{"_index":1448,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["id",{"_index":357,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"components/HomeComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Patient.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"classes/User.html":{}}}],["id.type",{"_index":2409,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.type.coding[0].code",{"_index":2410,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.value",{"_index":2412,"title":{},"body":{"injectables/PatientService.html":{}}}],["id=\"tableparentele",{"_index":1196,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["identifier",{"_index":2307,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["ie",{"_index":641,"title":{},"body":{"classes/BaseColumn.html":{},"index.html":{}}}],["implement",{"_index":973,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["implemented",{"_index":1231,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["implements",{"_index":679,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Observation.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["imports",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["inactive",{"_index":144,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1316,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["information",{"_index":1833,"title":{},"body":{"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["inherited",{"_index":716,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["initial",{"_index":313,"title":{},"body":{"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{}}}],["initialize",{"_index":938,"title":{},"body":{"components/CheckboxInline.html":{},"components/ConditionsComponent.html":{}}}],["initialized",{"_index":109,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["injectable",{"_index":486,"title":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"coverage.html":{}}}],["injectables",{"_index":487,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"overview.html":{}}}],["inline",{"_index":927,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline'},{'name",{"_index":170,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["inline.component",{"_index":1650,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["inline.component.ts",{"_index":926,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["inline.component.ts:10",{"_index":936,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:11",{"_index":937,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:13",{"_index":935,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:20",{"_index":934,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:9",{"_index":933,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.html",{"_index":928,"title":{},"body":{"components/CheckboxInline.html":{}}}],["input",{"_index":62,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["input('highlighttext",{"_index":1661,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["input[prop",{"_index":1547,"title":{},"body":{"injectables/EncounterService.html":{}}}],["inputdata",{"_index":932,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.name",{"_index":940,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.status",{"_index":2429,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["install",{"_index":2714,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["installed",{"_index":2753,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1151,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["instructions",{"_index":2772,"title":{},"body":{"index.html":{}}}],["interface",{"_index":482,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":484,"title":{},"body":{"interfaces/Associable.html":{}}}],["internal",{"_index":1136,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["interval",{"_index":1426,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["invalid",{"_index":1717,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["isallchecked",{"_index":752,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ischecked",{"_index":1311,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["isconditionassociated",{"_index":1275,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionassociated(condition",{"_index":1292,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked",{"_index":1276,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked(condition",{"_index":1294,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected",{"_index":1277,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected(condition",{"_index":1296,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isdate",{"_index":1863,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isdate(x",{"_index":1867,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth",{"_index":1864,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth(x",{"_index":1869,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isn't",{"_index":2065,"title":{},"body":{"classes/Observation.html":{}}}],["isobservationassociated",{"_index":2258,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationassociated(observation",{"_index":2272,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked",{"_index":2259,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked(observation",{"_index":2274,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isparent",{"_index":977,"title":{},"body":{"classes/Condition.html":{}}}],["isvisible",{"_index":978,"title":{},"body":{"classes/Condition.html":{}}}],["it's",{"_index":1183,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["item",{"_index":1897,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["item.split",{"_index":2548,"title":{},"body":{"injectables/SmartService.html":{}}}],["items",{"_index":959,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HoverBoxComponent.html":{}}}],["iteration",{"_index":1482,"title":{},"body":{"injectables/DoctorService.html":{}}}],["itself",{"_index":1771,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["january",{"_index":1327,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["john",{"_index":303,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["jquery",{"_index":1224,"title":{},"body":{"components/ConditionsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":1135,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{},"index.html":{}}}],["json.parse(json.stringify(this.conditions",{"_index":1128,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["json.parse(this.cookieservice.get('graphconfig",{"_index":2349,"title":{},"body":{"components/PatientComponent.html":{}}}],["json.stringify(this.graphconfig",{"_index":1493,"title":{},"body":{"injectables/DoctorService.html":{}}}],["july",{"_index":1332,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["june",{"_index":1331,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["justcreated",{"_index":1201,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["keep",{"_index":1705,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["keeps",{"_index":638,"title":{},"body":{"classes/BaseColumn.html":{}}}],["key",{"_index":2247,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["kidneyfunction",{"_index":248,"title":{},"body":{"components/AccountComponent.html":{}}}],["know",{"_index":1046,"title":{},"body":{"injectables/ConditionService.html":{}}}],["known",{"_index":1568,"title":{},"body":{"components/Favorites.html":{}}}],["lab",{"_index":327,"title":{},"body":{"components/AccountComponent.html":{}}}],["largest",{"_index":1819,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["last",{"_index":1051,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lastindex",{"_index":2077,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["latest",{"_index":1726,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["launch",{"_index":2448,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["layout",{"_index":2749,"title":{},"body":{"index.html":{}}}],["ldl",{"_index":264,"title":{},"body":{"components/AccountComponent.html":{}}}],["leave",{"_index":1489,"title":{},"body":{"injectables/DoctorService.html":{}}}],["leaving",{"_index":2812,"title":{},"body":{"index.html":{}}}],["left",{"_index":1356,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["leftoffset",{"_index":1860,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["leftposition",{"_index":2603,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["legend",{"_index":152,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["level",{"_index":71,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HomeComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["leveldata",{"_index":27,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["levelnum",{"_index":28,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["libraries",{"_index":2808,"title":{},"body":{"index.html":{}}}],["library",{"_index":1449,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["license",{"_index":2837,"title":{},"body":{"index.html":{}}}],["line",{"_index":822,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["linear",{"_index":309,"title":{},"body":{"components/AccountComponent.html":{}}}],["linechartdata",{"_index":898,"title":{},"body":{"classes/Chart.html":{}}}],["lines",{"_index":919,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["link",{"_index":673,"title":{"classes/Link.html":{}},"body":{"classes/Bundle.html":{},"components/Favorites.html":{},"classes/Link.html":{},"coverage.html":{}}}],["link.relation",{"_index":1038,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["links",{"_index":2240,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["linux",{"_index":2773,"title":{},"body":{"index.html":{}}}],["list",{"_index":87,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["listdata",{"_index":2434,"title":{},"body":{"components/SelectListSingle.html":{}}}],["lists",{"_index":1472,"title":{},"body":{"injectables/DoctorService.html":{}}}],["lite",{"_index":2717,"title":{},"body":{"dependencies.html":{}}}],["literal",{"_index":358,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"injectables/FhirService.html":{},"classes/Medication.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["liverfunction",{"_index":249,"title":{},"body":{"components/AccountComponent.html":{}}}],["load",{"_index":734,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{}}}],["loadallergies",{"_index":995,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["loadallergies(patient",{"_index":1002,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadcareplans",{"_index":845,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadcareplans(patient",{"_index":848,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadconditions",{"_index":996,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditions(patient",{"_index":1004,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage",{"_index":997,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage(url",{"_index":1006,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loaded",{"_index":1202,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["loadencounters",{"_index":1525,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["loadencounters(patient",{"_index":1530,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage",{"_index":1526,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage(url",{"_index":1532,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loader",{"_index":2709,"title":{},"body":{"dependencies.html":{}}}],["loadfinished",{"_index":16,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["loading",{"_index":195,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["loadinganimation",{"_index":194,"title":{"components/LoadingAnimation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadinganimation.html",{"_index":1924,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["loadmedications",{"_index":846,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadmedications(patient",{"_index":851,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadobservationspage",{"_index":2127,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadobservationspage(url",{"_index":2144,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadpatient",{"_index":2396,"title":{},"body":{"injectables/PatientService.html":{}}}],["locally",{"_index":2817,"title":{},"body":{"index.html":{}}}],["location",{"_index":1418,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["location.search.substr(1).split(\"&\").foreach(item",{"_index":2547,"title":{},"body":{"injectables/SmartService.html":{}}}],["logarithmic",{"_index":310,"title":{},"body":{"components/AccountComponent.html":{}}}],["logic",{"_index":1141,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{}}}],["long",{"_index":1155,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["longer",{"_index":1388,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["losing",{"_index":820,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["low",{"_index":923,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["lower",{"_index":2094,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["m.name",{"_index":1997,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["mac",{"_index":2770,"title":{},"body":{"index.html":{}}}],["magnesium",{"_index":273,"title":{},"body":{"components/AccountComponent.html":{}}}],["main_list",{"_index":1607,"title":{},"body":{"components/FormBuilder.html":{}}}],["maintaining",{"_index":819,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["make",{"_index":1240,"title":{},"body":{"components/ConditionsComponent.html":{},"index.html":{}}}],["male",{"_index":2356,"title":{},"body":{"components/PatientComponent.html":{}}}],["manager",{"_index":2751,"title":{},"body":{"index.html":{}}}],["map",{"_index":514,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/PatientService.html":{}}}],["mapping",{"_index":2139,"title":{},"body":{"injectables/ObservationService.html":{}}}],["mappings",{"_index":2235,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["maps",{"_index":533,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mapservice",{"_index":390,"title":{"injectables/MapService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapservice.static_mappings",{"_index":2249,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["march",{"_index":1329,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["mark",{"_index":553,"title":{},"body":{"injectables/AssociationService.html":{}}}],["matching",{"_index":241,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(recency_multiplier",{"_index":1252,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["math.log(this.getstartdate().gettime",{"_index":1522,"title":{},"body":{"classes/Encounter.html":{}}}],["math.max(max",{"_index":1825,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.min(min",{"_index":1823,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.pow(1024",{"_index":1914,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["max",{"_index":1715,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate",{"_index":1669,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate.gettime",{"_index":1828,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["maximum",{"_index":915,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["md5",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["md5.hashstr(\"testing",{"_index":2532,"title":{},"body":{"injectables/SmartService.html":{}}}],["md5/dist/md5",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{}}}],["med",{"_index":884,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["med.periods.push",{"_index":888,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication",{"_index":854,"title":{"classes/Medication.html":{}},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"coverage.html":{}}}],["medication(cp.title",{"_index":886,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication.dosageunits",{"_index":1814,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.name",{"_index":1813,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.periods[i",{"_index":1815,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medicationmap",{"_index":877,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.get(cp.title",{"_index":885,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.set(cp.title",{"_index":893,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medications",{"_index":869,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{}}}],["medications'},{'name",{"_index":198,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["medications.html",{"_index":1983,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["medicationscomponent",{"_index":197,"title":{"components/MedicationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menu",{"_index":753,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["merged",{"_index":874,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["method",{"_index":1131,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["methods",{"_index":18,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["min",{"_index":1714,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mindate",{"_index":1670,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["minimum",{"_index":914,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["miscellaneous",{"_index":2846,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":331,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["model",{"_index":127,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["model.code",{"_index":351,"title":{},"body":{"components/AddObservation.html":{}}}],["models",{"_index":2799,"title":{},"body":{"index.html":{}}}],["models/allergyintolerance.model",{"_index":1017,"title":{},"body":{"injectables/ConditionService.html":{}}}],["models/bundle.model",{"_index":856,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["models/careplan.model",{"_index":731,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{}}}],["models/chart.model",{"_index":1770,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["models/condition.model",{"_index":527,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["models/contextmenuoption.model",{"_index":1410,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["models/encounter.model",{"_index":1534,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["models/form.model",{"_index":1634,"title":{},"body":{"components/FormBuilder.html":{}}}],["models/medication.model",{"_index":855,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{}}}],["models/observation.model",{"_index":528,"title":{},"body":{"injectables/AssociationService.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["models/patient.model",{"_index":732,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["models/server.model",{"_index":2347,"title":{},"body":{"components/PatientComponent.html":{}}}],["modified",{"_index":1144,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["modifiers",{"_index":1469,"title":{},"body":{"injectables/DoctorService.html":{}}}],["module",{"_index":370,"title":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["modules",{"_index":372,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"dependencies.html":{}}}],["moment().subtract(months",{"_index":1739,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().subtract(years",{"_index":1736,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().todate",{"_index":1738,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.maxdate).isvalid",{"_index":1719,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.mindate).isvalid",{"_index":1718,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(newdate).toisostring",{"_index":1125,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["moment(relativedatetime).toisostring",{"_index":1256,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["momentmodule",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":316,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["months",{"_index":1326,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["months').todate",{"_index":1740,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["months[d.getmonth",{"_index":1338,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["more",{"_index":1242,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["mouse",{"_index":1703,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["mouseevent",{"_index":1671,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["mousemove",{"_index":1707,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mousesubscription",{"_index":1672,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mouth",{"_index":2183,"title":{},"body":{"injectables/ObservationService.html":{}}}],["movements",{"_index":1704,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moving",{"_index":1889,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["mr",{"_index":2411,"title":{},"body":{"injectables/PatientService.html":{}}}],["mrn",{"_index":2308,"title":{},"body":{"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["ms",{"_index":1873,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["multiple",{"_index":872,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["n",{"_index":1907,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["n1.code['coding'][0]['code",{"_index":1114,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n1.effectivedatetime",{"_index":2200,"title":{},"body":{"injectables/ObservationService.html":{}}}],["n1.onsetdatetime",{"_index":1116,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2",{"_index":1113,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{}}}],["n2.code['coding'][0]['code",{"_index":1115,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2.onsetdatetime",{"_index":1117,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["nav2",{"_index":2609,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["navigation",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1221,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["need",{"_index":1490,"title":{},"body":{"injectables/DoctorService.html":{},"components/HoverBoxComponent.html":{}}}],["needed",{"_index":1389,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["needs",{"_index":1474,"title":{},"body":{"injectables/DoctorService.html":{}}}],["new",{"_index":515,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{},"components/TimelinePopupComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["newcolumnstate",{"_index":1010,"title":{},"body":{"injectables/ConditionService.html":{}}}],["newcondition",{"_index":199,"title":{"components/NewCondition.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newcondition'},{'name",{"_index":200,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["newcondition.html",{"_index":1999,"title":{},"body":{"components/NewCondition.html":{}}}],["newdate",{"_index":1121,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newly",{"_index":1807,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["newtable",{"_index":1064,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtable(tablename",{"_index":1079,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtest",{"_index":1550,"title":{},"body":{"components/Favorites.html":{}}}],["newtoken",{"_index":1586,"title":{},"body":{"injectables/FhirService.html":{}}}],["next",{"_index":1026,"title":{},"body":{"injectables/ConditionService.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["nextlink",{"_index":1036,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["nextobservations",{"_index":2189,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ngafterviewinit",{"_index":758,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ngmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["ngonchanges",{"_index":20,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["ngoninit",{"_index":759,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{}}}],["ngx",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"injectables/DoctorService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":2752,"title":{},"body":{"index.html":{}}}],["none",{"_index":1190,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["normal",{"_index":202,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["normalbox1",{"_index":201,"title":{"components/NormalBox1.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalbox2",{"_index":205,"title":{"components/NormalBox2.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalvalues",{"_index":899,"title":{},"body":{"classes/Chart.html":{}}}],["nose",{"_index":2182,"title":{},"body":{"injectables/ObservationService.html":{}}}],["note",{"_index":74,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["notenavigation",{"_index":2015,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["notenavigation'},{'name",{"_index":208,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["notenavigation.html",{"_index":2016,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["notenavigationcomponent",{"_index":207,"title":{"components/NoteNavigationComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notes.html",{"_index":1453,"title":{},"body":{"components/DoctorNoteComponent.html":{}}}],["nothing",{"_index":1716,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["november",{"_index":1336,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["now",{"_index":112,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{}}}],["npm",{"_index":2750,"title":{},"body":{"index.html":{}}}],["null",{"_index":85,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["number",{"_index":39,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["numeric",{"_index":1780,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["o",{"_index":559,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["o.date",{"_index":2099,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["o.id",{"_index":2294,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.name",{"_index":2097,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["o.relativedatetime",{"_index":2302,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.value",{"_index":2098,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["o['code']['coding'][0]['display",{"_index":2071,"title":{},"body":{"classes/Observation.html":{}}}],["o['code']['text",{"_index":2070,"title":{},"body":{"classes/Observation.html":{}}}],["o['selected",{"_index":2293,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o['valuequantity']['unit",{"_index":2069,"title":{},"body":{"classes/Observation.html":{}}}],["o['valuequantity']['value",{"_index":2067,"title":{},"body":{"classes/Observation.html":{}}}],["ob",{"_index":2206,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ob.relativedatetime",{"_index":2208,"title":{},"body":{"injectables/ObservationService.html":{}}}],["object",{"_index":348,"title":{},"body":{"components/AddObservation.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["object.keys(observationsbycategory",{"_index":2227,"title":{},"body":{"injectables/ObservationService.html":{}}}],["obs",{"_index":2079,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["obs.isselected",{"_index":2089,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["obscount",{"_index":2649,"title":{},"body":{"components/TripleListComponent.html":{}}}],["observable",{"_index":850,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/PatientService.html":{}}}],["observable.concat",{"_index":1033,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observables",{"_index":1022,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observation",{"_index":505,"title":{"classes/Observation.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["observation.category[0].text",{"_index":2221,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.gettext(o",{"_index":2299,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getunits(o",{"_index":2301,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getvalue(o",{"_index":2300,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.grouping",{"_index":2210,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('category",{"_index":2219,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('valuequantity",{"_index":2218,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.service",{"_index":526,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation?patient",{"_index":2251,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observation['code']['coding'][0]['code",{"_index":584,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ObservationService.html":{}}}],["observation['code']['coding'][0]['system",{"_index":585,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation['effectivedatetime",{"_index":586,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationcategory",{"_index":2220,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationrecursion",{"_index":2074,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observationrecursion'},{'name",{"_index":210,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursion.html",{"_index":2075,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observationrecursionchart",{"_index":2102,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationrecursionchart'},{'name",{"_index":212,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursive",{"_index":209,"title":{"components/ObservationRecursive.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationrecursivechart",{"_index":211,"title":{"components/ObservationRecursiveChart.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationreturned",{"_index":2246,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations",{"_index":92,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["observations'},{'name",{"_index":214,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observations.html",{"_index":2234,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations.map(this.extractobservationinfo",{"_index":571,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationsbycategory",{"_index":2217,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory.hasownproperty(observationcategory",{"_index":2222,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[ctgry",{"_index":2229,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory",{"_index":2223,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory].push(observation",{"_index":2224,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationschart.html",{"_index":2103,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationscomponent",{"_index":213,"title":{"components/ObservationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay",{"_index":215,"title":{"components/ObservationsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay'},{'name",{"_index":216,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationsdisplay.html",{"_index":2255,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationselected",{"_index":2261,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationservice",{"_index":31,"title":{"injectables/ObservationService.html":{}},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsinfo",{"_index":570,"title":{},"body":{"injectables/AssociationService.html":{}}}],["occurrence",{"_index":1787,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["occurs",{"_index":2482,"title":{},"body":{"injectables/SmartService.html":{}}}],["october",{"_index":1335,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["of(conditions",{"_index":1041,"title":{},"body":{"injectables/ConditionService.html":{}}}],["of(encounters",{"_index":1540,"title":{},"body":{"injectables/EncounterService.html":{}}}],["onblur",{"_index":590,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["once",{"_index":974,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"index.html":{}}}],["onchanges",{"_index":1138,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ondatapointselect",{"_index":1673,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["ondatapointselect(chartevent",{"_index":1682,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["one",{"_index":875,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["onfocus",{"_index":591,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["onloadcomplete",{"_index":1205,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["onradiochanged",{"_index":2417,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onradiochanged(currstatus",{"_index":2420,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onrightclick",{"_index":1551,"title":{},"body":{"components/Favorites.html":{}}}],["onset",{"_index":578,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{}}}],["onsetdatetime",{"_index":503,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Condition.html":{}}}],["onsubmitclick",{"_index":1618,"title":{},"body":{"components/FormBuilder.html":{}}}],["onto",{"_index":2372,"title":{},"body":{"components/PatientComponent.html":{}}}],["opacity",{"_index":2625,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["open",{"_index":817,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["open(encounter",{"_index":2584,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["opened",{"_index":1400,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["openid",{"_index":2475,"title":{},"body":{"injectables/SmartService.html":{}}}],["operator",{"_index":1020,"title":{},"body":{"injectables/ConditionService.html":{}}}],["option",{"_index":1308,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["option.exec",{"_index":1437,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.exec(this.data",{"_index":1439,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.text",{"_index":1443,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["options",{"_index":803,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["options).pipe(map(res",{"_index":2406,"title":{},"body":{"injectables/PatientService.html":{}}}],["order",{"_index":1222,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["other_grouping",{"_index":2215,"title":{},"body":{"injectables/ObservationService.html":{}}}],["otherwise",{"_index":1516,"title":{},"body":{"classes/Encounter.html":{}}}],["out",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"injectables/SmartService.html":{},"overview.html":{}}}],["output",{"_index":63,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TripleListComponent.html":{}}}],["outputs",{"_index":761,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{},"components/TripleListComponent.html":{}}}],["outside",{"_index":1375,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["over",{"_index":871,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["overridden",{"_index":2231,"title":{},"body":{"injectables/ObservationService.html":{}}}],["overriden",{"_index":659,"title":{},"body":{"classes/BaseColumn.html":{}}}],["overview",{"_index":2823,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oxygen_saturation",{"_index":342,"title":{},"body":{"components/AddObservation.html":{}}}],["p1.name",{"_index":1791,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2",{"_index":1790,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2.name",{"_index":1792,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["package",{"_index":2699,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":643,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["paddedtable",{"_index":297,"title":{},"body":{"components/AccountComponent.html":{}}}],["paddedtd",{"_index":295,"title":{},"body":{"components/AccountComponent.html":{}}}],["padding:10px",{"_index":296,"title":{},"body":{"components/AccountComponent.html":{}}}],["page",{"_index":1027,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/PatientComponent.html":{}}}],["pages",{"_index":1029,"title":{},"body":{"injectables/ConditionService.html":{}}}],["paginated",{"_index":1024,"title":{},"body":{"injectables/ConditionService.html":{}}}],["param",{"_index":1413,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["parameter",{"_index":1382,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["parametername",{"_index":2460,"title":{},"body":{"injectables/SmartService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["parent",{"_index":777,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["parsed",{"_index":102,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseddata",{"_index":17,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseint(left.replace(/px",{"_index":2643,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["parseint(top.replace(/px",{"_index":2646,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["particularly",{"_index":2824,"title":{},"body":{"index.html":{}}}],["pass",{"_index":1481,"title":{},"body":{"injectables/DoctorService.html":{}}}],["passed",{"_index":1381,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["passthrough",{"_index":2651,"title":{},"body":{"components/TripleListComponent.html":{}}}],["password",{"_index":306,"title":{},"body":{"components/AccountComponent.html":{}}}],["path",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["patient",{"_index":711,"title":{"classes/Patient.html":{}},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["patient'},{'name",{"_index":218,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["patient.birthdate",{"_index":2386,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender",{"_index":2352,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender.charat(0).touppercase",{"_index":2383,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.html",{"_index":2320,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.id",{"_index":861,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["patient.mrn",{"_index":2384,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["patient.name[0].family[0",{"_index":2390,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0",{"_index":2389,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0",{"_index":2382,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient_viewer",{"_index":2766,"title":{},"body":{"index.html":{}}}],["patientcomponent",{"_index":217,"title":{"components/PatientComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["patientid",{"_index":2395,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientservice",{"_index":391,"title":{"injectables/PatientService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["pencil",{"_index":810,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["period",{"_index":682,"title":{},"body":{"classes/CarePlan.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{}}}],["periods",{"_index":873,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["persona",{"_index":2787,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1899,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(concatmap(bundle",{"_index":1035,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["pipe(debouncetime(100",{"_index":651,"title":{},"body":{"classes/BaseColumn.html":{}}}],["pipe(map(bundle",{"_index":864,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["pipes",{"_index":1901,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pipetransform",{"_index":1912,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pixel",{"_index":1895,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["pixels",{"_index":665,"title":{},"body":{"classes/BaseColumn.html":{},"components/HoverBoxComponent.html":{}}}],["place",{"_index":2826,"title":{},"body":{"index.html":{}}}],["plan",{"_index":811,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/MedicationsComponent.html":{}}}],["plans",{"_index":95,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/HomeComponent.html":{}}}],["please",{"_index":2514,"title":{},"body":{"injectables/SmartService.html":{}}}],["point",{"_index":1741,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["point.name",{"_index":1829,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.name.gettime",{"_index":1827,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.value",{"_index":1824,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity",{"_index":1781,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity['value",{"_index":1782,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["points",{"_index":910,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["popover",{"_index":1269,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["populatecategories",{"_index":2128,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populatecategories(categories",{"_index":2147,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populated",{"_index":2063,"title":{},"body":{"classes/Observation.html":{}}}],["popup",{"_index":1225,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["popup'},{'name",{"_index":229,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["pos",{"_index":2577,"title":{},"body":{"components/TimelineComponent.html":{}}}],["position",{"_index":1496,"title":{},"body":{"classes/Encounter.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{}}}],["position:string",{"_index":1513,"title":{},"body":{"classes/Encounter.html":{}}}],["possible",{"_index":947,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["potassium",{"_index":269,"title":{},"body":{"components/AccountComponent.html":{}}}],["practice",{"_index":125,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prefer",{"_index":2794,"title":{},"body":{"index.html":{}}}],["preparing",{"_index":2743,"title":{},"body":{"index.html":{}}}],["presses",{"_index":2633,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["pressure",{"_index":2170,"title":{},"body":{"injectables/ObservationService.html":{}}}],["prevent",{"_index":653,"title":{},"body":{"classes/BaseColumn.html":{}}}],["preventions/exposures",{"_index":146,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prevents",{"_index":1397,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["previously",{"_index":2404,"title":{},"body":{"injectables/PatientService.html":{}}}],["print",{"_index":2379,"title":{},"body":{"components/PatientComponent.html":{}}}],["printmsg",{"_index":1278,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["printmsg(condition",{"_index":1300,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["prior",{"_index":543,"title":{},"body":{"injectables/AssociationService.html":{}}}],["private",{"_index":491,"title":{},"body":{"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["probably",{"_index":1258,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["problem",{"_index":319,"title":{},"body":{"components/AccountComponent.html":{}}}],["problems",{"_index":143,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{}}}],["produces",{"_index":1247,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["product",{"_index":697,"title":{},"body":{"classes/CarePlan.html":{}}}],["productcodableconcept",{"_index":698,"title":{},"body":{"classes/CarePlan.html":{}}}],["productreference",{"_index":702,"title":{},"body":{"classes/CarePlan.html":{}}}],["profile",{"_index":2476,"title":{},"body":{"injectables/SmartService.html":{}}}],["progress",{"_index":2035,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["project",{"_index":2739,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1545,"title":{},"body":{"injectables/EncounterService.html":{}}}],["proper",{"_index":2374,"title":{},"body":{"components/PatientComponent.html":{}}}],["properties",{"_index":15,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["provided",{"_index":1820,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["providers",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["provides",{"_index":634,"title":{},"body":{"classes/BaseColumn.html":{}}}],["providing",{"_index":1794,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["proxy.herokuapp.com/token",{"_index":2526,"title":{},"body":{"injectables/SmartService.html":{}}}],["public",{"_index":1359,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/PatientService.html":{},"classes/Server.html":{}}}],["pug",{"_index":2285,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["purposes",{"_index":101,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"injectables/SmartService.html":{}}}],["push",{"_index":1476,"title":{},"body":{"injectables/DoctorService.html":{}}}],["pushing",{"_index":2814,"title":{},"body":{"index.html":{}}}],["px",{"_index":1421,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{}}}],["quality",{"_index":1081,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["queued",{"_index":1885,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["r",{"_index":1518,"title":{},"body":{"classes/Encounter.html":{}}}],["r.resource",{"_index":867,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["r.text",{"_index":1519,"title":{},"body":{"classes/Encounter.html":{}}}],["random",{"_index":816,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["range",{"_index":1803,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["ranges",{"_index":2064,"title":{},"body":{"classes/Observation.html":{}}}],["rate",{"_index":2172,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reactivity",{"_index":1140,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["readable",{"_index":1918,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["readonly",{"_index":2394,"title":{},"body":{"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["realistic",{"_index":1248,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["reason",{"_index":1497,"title":{},"body":{"classes/Encounter.html":{},"classes/Observation.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["reasons",{"_index":1514,"title":{},"body":{"classes/Encounter.html":{}}}],["reasontext",{"_index":2377,"title":{},"body":{"components/PatientComponent.html":{}}}],["rebuild",{"_index":123,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["recency_multiplier",{"_index":1249,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["recent",{"_index":1243,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["recently",{"_index":1569,"title":{},"body":{"components/Favorites.html":{}}}],["recompile",{"_index":2781,"title":{},"body":{"index.html":{}}}],["reconstruct",{"_index":111,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions",{"_index":21,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions(arrdata",{"_index":50,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings",{"_index":22,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings(arrdata",{"_index":52,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations",{"_index":23,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations(arrdata",{"_index":54,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructedobject",{"_index":2225,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reconstructedobject.push",{"_index":2228,"title":{},"body":{"injectables/ObservationService.html":{}}}],["recursion",{"_index":97,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["redirect",{"_index":2507,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirect_uri",{"_index":2517,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirecturi",{"_index":2449,"title":{},"body":{"injectables/SmartService.html":{}}}],["ref",{"_index":1367,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["reference",{"_index":703,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["referencerange",{"_index":2039,"title":{},"body":{"classes/Observation.html":{}}}],["reflect",{"_index":2722,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":832,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["registry.smarthealthit.org/structuredefinition/oauth",{"_index":2494,"title":{},"body":{"injectables/SmartService.html":{}}}],["relation",{"_index":676,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["relativedatetime",{"_index":979,"title":{},"body":{"classes/Condition.html":{},"components/ConditionsComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{}}}],["relevant",{"_index":562,"title":{},"body":{"injectables/AssociationService.html":{}}}],["remain",{"_index":1030,"title":{},"body":{"injectables/ConditionService.html":{}}}],["remove",{"_index":1307,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/HistoricalTrendsService.html":{}}}],["removechart",{"_index":1756,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["removechart(chartname",{"_index":1767,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["renderer",{"_index":594,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["rendering",{"_index":1257,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["repository",{"_index":2815,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1445,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["request",{"_index":2535,"title":{},"body":{"injectables/SmartService.html":{}}}],["requestauth",{"_index":2455,"title":{},"body":{"injectables/SmartService.html":{}}}],["res",{"_index":2375,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["res['identifier",{"_index":2408,"title":{},"body":{"injectables/PatientService.html":{}}}],["res['selectedconditions",{"_index":550,"title":{},"body":{"injectables/AssociationService.html":{}}}],["res['selectedobservations",{"_index":552,"title":{},"body":{"injectables/AssociationService.html":{}}}],["reset",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetdaterange",{"_index":1674,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["resettodefaultview",{"_index":2611,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resize",{"_index":648,"title":{},"body":{"classes/BaseColumn.html":{}}}],["resizing",{"_index":637,"title":{},"body":{"classes/BaseColumn.html":{}}}],["respiration",{"_index":2173,"title":{},"body":{"injectables/ObservationService.html":{}}}],["response",{"_index":548,"title":{},"body":{"injectables/AssociationService.html":{}}}],["response_type=code",{"_index":2536,"title":{},"body":{"injectables/SmartService.html":{}}}],["result",{"_index":240,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.tofixed(0",{"_index":1917,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["result.tofixed(2",{"_index":1916,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["results",{"_index":242,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":2250,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["retrieve",{"_index":857,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{}}}],["retrieved",{"_index":2371,"title":{},"body":{"components/PatientComponent.html":{}}}],["retrieves",{"_index":1267,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["return",{"_index":573,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["reusable",{"_index":1345,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["review",{"_index":2175,"title":{},"body":{"injectables/ObservationService.html":{}}}],["right",{"_index":805,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{}}}],["root",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":2708,"title":{},"body":{"dependencies.html":{}}}],["routermodule",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["routing",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1156,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["runassociationstool",{"_index":495,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["runassociationstool(checkedconditions",{"_index":512,"title":{},"body":{"injectables/AssociationService.html":{}}}],["running",{"_index":2758,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":628,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":630,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["s",{"_index":2350,"title":{},"body":{"components/PatientComponent.html":{}}}],["same",{"_index":81,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{}}}],["sandbox",{"_index":1845,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["sass",{"_index":2747,"title":{},"body":{"index.html":{}}}],["save",{"_index":328,"title":{},"body":{"components/AccountComponent.html":{}}}],["savesettings",{"_index":252,"title":{},"body":{"components/AccountComponent.html":{}}}],["scale",{"_index":308,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsComponent.html":{}}}],["scaledates",{"_index":2129,"title":{},"body":{"injectables/ObservationService.html":{}}}],["scaledtimesinceconditiononset",{"_index":1251,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scaledtimesinceobservation",{"_index":2205,"title":{},"body":{"injectables/ObservationService.html":{}}}],["schema",{"_index":105,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["scope",{"_index":2450,"title":{},"body":{"injectables/SmartService.html":{}}}],["scoping",{"_index":800,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["scrachpad",{"_index":2415,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["scratch",{"_index":642,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["scratchpad",{"_index":220,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["scratchpadcheckboxes",{"_index":1065,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadcheckboxes(checked",{"_index":1086,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadconditions",{"_index":1203,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scratchpadmode",{"_index":1279,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["scratchpadservice",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scratchpadservice.statechange$.subscribe",{"_index":738,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["scratchpadupdate",{"_index":219,"title":{"components/ScratchPadUpdate.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screen",{"_index":1892,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["scripting",{"_index":2513,"title":{},"body":{"injectables/SmartService.html":{}}}],["seems",{"_index":668,"title":{},"body":{"classes/BaseColumn.html":{}}}],["select",{"_index":223,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["selectcareplan",{"_index":760,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcareplan(careplan",{"_index":780,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcondition",{"_index":1066,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selectcondition(condition",{"_index":1088,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selected",{"_index":326,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["selectedcondition",{"_index":992,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["selectedconditions",{"_index":575,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectedobservations",{"_index":576,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectlistsingle",{"_index":222,"title":{"components/SelectListSingle.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectobservation",{"_index":2260,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selectobservation(observation",{"_index":2279,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["selectpatientbyid",{"_index":1837,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectpatientbyid(id",{"_index":1840,"title":{},"body":{"components/HomeComponent.html":{}}}],["selects",{"_index":1315,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["separate",{"_index":300,"title":{},"body":{"components/AccountComponent.html":{}}}],["september",{"_index":1334,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["series",{"_index":913,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["serve",{"_index":2779,"title":{},"body":{"index.html":{}}}],["server",{"_index":1638,"title":{"classes/Server.html":{}},"body":{"components/FormBuilder.html":{},"components/PatientComponent.html":{},"classes/Server.html":{},"coverage.html":{},"dependencies.html":{}}}],["service",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["services",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["services/association.service",{"_index":1304,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/careplan.service",{"_index":729,"title":{},"body":{"components/CarePlanComponent.html":{},"components/MedicationsComponent.html":{}}}],["services/condition.service",{"_index":1105,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/doctor.service",{"_index":287,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/Favorites.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["services/encounter.service",{"_index":2344,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["services/fhir.service",{"_index":728,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{}}}],["services/historicaltrends.service",{"_index":1701,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/map.service",{"_index":2245,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["services/observation.service",{"_index":65,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["services/patient.service",{"_index":1702,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["services/scratchpad.service",{"_index":730,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/smart.service",{"_index":1842,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/toolbar.service",{"_index":1562,"title":{},"body":{"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["session",{"_index":1053,"title":{},"body":{"injectables/ConditionService.html":{}}}],["set",{"_index":644,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["setcolumnstate",{"_index":998,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setcolumnstate(newcolumnstate",{"_index":1008,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setdaterange",{"_index":1675,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterange(form",{"_index":1686,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths",{"_index":1676,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths(months",{"_index":1688,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears",{"_index":1677,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears(years",{"_index":1690,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setpatientid",{"_index":2397,"title":{},"body":{"injectables/PatientService.html":{}}}],["setpatientid(patientid",{"_index":2400,"title":{},"body":{"injectables/PatientService.html":{}}}],["sets",{"_index":1735,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setters",{"_index":1266,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["settimeout",{"_index":1428,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["setting",{"_index":258,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["settings",{"_index":250,"title":{},"body":{"components/AccountComponent.html":{}}}],["settoken",{"_index":1577,"title":{},"body":{"injectables/FhirService.html":{}}}],["settoken(newtoken",{"_index":1584,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl",{"_index":1578,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl(url",{"_index":1587,"title":{},"body":{"injectables/FhirService.html":{}}}],["shift",{"_index":2090,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["shouldn't",{"_index":1805,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["show",{"_index":1364,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["show(data",{"_index":1392,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["show(items",{"_index":1871,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["showallergyhover",{"_index":2325,"title":{},"body":{"components/PatientComponent.html":{}}}],["showallergyhover(event",{"_index":2333,"title":{},"body":{"components/PatientComponent.html":{}}}],["showdefault",{"_index":614,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["showing",{"_index":1832,"title":{},"body":{"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["shown",{"_index":804,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{}}}],["showscratchpad",{"_index":615,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["si[exp",{"_index":1919,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["side",{"_index":1710,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["sieve",{"_index":137,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["sign",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":2756,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1152,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{}}}],["single",{"_index":2432,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single'},{'name",{"_index":224,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["single.component",{"_index":1655,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["single.component.ts",{"_index":2431,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["single.component.ts:10",{"_index":2437,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:12",{"_index":2436,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:9",{"_index":2435,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.html",{"_index":2433,"title":{},"body":{"components/SelectListSingle.html":{}}}],["site",{"_index":2484,"title":{},"body":{"injectables/SmartService.html":{}}}],["skip",{"_index":1779,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["small",{"_index":1795,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smallest",{"_index":1818,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smartextension",{"_index":2490,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartextension[0].extension.foreach(arg",{"_index":2498,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartservice",{"_index":393,"title":{"injectables/SmartService.html":{}},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["smith",{"_index":304,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["sodium",{"_index":268,"title":{},"body":{"components/AccountComponent.html":{}}}],["sort",{"_index":1786,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["sortcondition",{"_index":1067,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["sortcondition(x",{"_index":1090,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["space",{"_index":1798,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["spacing",{"_index":301,"title":{},"body":{"components/AccountComponent.html":{}}}],["spad",{"_index":739,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["specific",{"_index":1713,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["specifically",{"_index":2774,"title":{},"body":{"index.html":{}}}],["specify",{"_index":1749,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/.../app.module.ts",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../conditions.component.ts",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts",{"_index":9,"title":{},"body":{"components/AccordionRecursion.html":{},"coverage.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:120",{"_index":55,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:128",{"_index":53,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:26",{"_index":42,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:29",{"_index":40,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:32",{"_index":43,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:35",{"_index":41,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:38",{"_index":60,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:39",{"_index":33,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:48",{"_index":48,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:71",{"_index":51,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:75",{"_index":45,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/account/account.component.ts",{"_index":243,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/components/account/account.component.ts:10",{"_index":286,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:11",{"_index":277,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:12",{"_index":267,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:13",{"_index":285,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:14",{"_index":256,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:18",{"_index":259,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:27",{"_index":261,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:33",{"_index":262,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/addobservation/addobservation.component.ts",{"_index":332,"title":{},"body":{"components/AddObservation.html":{},"coverage.html":{}}}],["src/app/components/addobservation/addobservation.component.ts:8",{"_index":349,"title":{},"body":{"components/AddObservation.html":{}}}],["src/app/components/addobservation/addobservation.component.ts:9",{"_index":335,"title":{},"body":{"components/AddObservation.html":{}}}],["src/app/components/app/app.component.ts",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/app/app.component.ts:7",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/basecolumn.ts",{"_index":609,"title":{},"body":{"classes/BaseColumn.html":{},"coverage.html":{}}}],["src/app/components/basecolumn.ts:23",{"_index":623,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:28",{"_index":624,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:29",{"_index":625,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:30",{"_index":626,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:33",{"_index":618,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:36",{"_index":621,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:39",{"_index":619,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:9",{"_index":617,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/careplan/careplan.component.ts",{"_index":704,"title":{},"body":{"components/CarePlanComponent.html":{},"coverage.html":{}}}],["src/app/components/careplan/careplan.component.ts:18",{"_index":723,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:19",{"_index":722,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:22",{"_index":721,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:25",{"_index":724,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:27",{"_index":713,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:43",{"_index":715,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:56",{"_index":714,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts",{"_index":750,"title":{},"body":{"components/CarePlanDisplay.html":{},"coverage.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:111",{"_index":769,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:21",{"_index":786,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:24",{"_index":782,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:27",{"_index":765,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:28",{"_index":767,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:30",{"_index":764,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:39",{"_index":779,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:44",{"_index":778,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:77",{"_index":781,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:85",{"_index":774,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:94",{"_index":772,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:98",{"_index":776,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts",{"_index":946,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"coverage.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:16",{"_index":955,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:22",{"_index":954,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:29",{"_index":961,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:40",{"_index":963,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:53",{"_index":958,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts",{"_index":1199,"title":{},"body":{"components/ConditionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/conditions/conditions.component.ts:122",{"_index":1211,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:131",{"_index":1208,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:30",{"_index":1217,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:33",{"_index":1213,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:34",{"_index":1216,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:37",{"_index":1215,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:39",{"_index":1219,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:40",{"_index":1212,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:41",{"_index":1214,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:44",{"_index":1218,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:46",{"_index":1207,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:47",{"_index":1206,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:73",{"_index":1209,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:87",{"_index":1210,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts",{"_index":1054,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:111",{"_index":1075,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:121",{"_index":1096,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:129",{"_index":1087,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:145",{"_index":1097,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:149",{"_index":1076,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:159",{"_index":1077,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:16",{"_index":1102,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:17",{"_index":1101,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:18",{"_index":1104,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:181",{"_index":1094,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:19",{"_index":1098,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:195",{"_index":1083,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:20",{"_index":1099,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:21",{"_index":1100,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:22",{"_index":1103,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:24",{"_index":1074,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:26",{"_index":1073,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:34",{"_index":1085,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:45",{"_index":1089,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:53",{"_index":1091,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:82",{"_index":1078,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts",{"_index":1270,"title":{},"body":{"components/ConditionsDisplay.html":{},"coverage.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:104",{"_index":1302,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:109",{"_index":1287,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:116",{"_index":1297,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:121",{"_index":1295,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:126",{"_index":1293,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:131",{"_index":1285,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:138",{"_index":1289,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:147",{"_index":1301,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:151",{"_index":1291,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:23",{"_index":1303,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:26",{"_index":1281,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:27",{"_index":1283,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:30",{"_index":1282,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:32",{"_index":1280,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:45",{"_index":1299,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:50",{"_index":1298,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts",{"_index":1344,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:113",{"_index":1378,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:133",{"_index":1384,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:28",{"_index":1407,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:33",{"_index":1403,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:35",{"_index":1409,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:36",{"_index":1408,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:37",{"_index":1406,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:43",{"_index":1394,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:50",{"_index":1396,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:51",{"_index":1366,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:58",{"_index":1370,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:67",{"_index":1372,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:82",{"_index":1393,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/doctornote/doctornote.component.ts",{"_index":1451,"title":{},"body":{"components/DoctorNoteComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts",{"_index":1548,"title":{},"body":{"components/Favorites.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:10",{"_index":1555,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:13",{"_index":1561,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:15",{"_index":1556,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:19",{"_index":1558,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:26",{"_index":1559,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/form",{"_index":1604,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["src/app/components/form_components/checkbox",{"_index":925,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["src/app/components/form_components/normal",{"_index":2000,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"coverage.html":{}}}],["src/app/components/form_components/scrachpad",{"_index":2413,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["src/app/components/form_components/select",{"_index":2430,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts",{"_index":1665,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:101",{"_index":1691,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:108",{"_index":1689,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:114",{"_index":1683,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:20",{"_index":1695,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:23",{"_index":1698,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:24",{"_index":1696,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:27",{"_index":1700,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:29",{"_index":1697,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:32",{"_index":1699,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:35",{"_index":1679,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:54",{"_index":1681,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:70",{"_index":1687,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:81",{"_index":1685,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1830,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:21",{"_index":1839,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:50",{"_index":1841,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts",{"_index":1853,"title":{},"body":{"components/HoverBoxComponent.html":{},"coverage.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:13",{"_index":1877,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:16",{"_index":1884,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:18",{"_index":1882,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:19",{"_index":1878,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:20",{"_index":1883,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:21",{"_index":1879,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:24",{"_index":1880,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:27",{"_index":1865,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:37",{"_index":1872,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:69",{"_index":1866,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:89",{"_index":1868,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:97",{"_index":1870,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts",{"_index":1922,"title":{},"body":{"components/LoadingAnimation.html":{},"coverage.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts:7",{"_index":1925,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["src/app/components/medications/medications.component.ts",{"_index":1982,"title":{},"body":{"components/MedicationsComponent.html":{},"coverage.html":{}}}],["src/app/components/medications/medications.component.ts:14",{"_index":1989,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:15",{"_index":1985,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:22",{"_index":1988,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:31",{"_index":1987,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/newcondition/newcondition.component.ts",{"_index":1998,"title":{},"body":{"components/NewCondition.html":{},"coverage.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts",{"_index":2014,"title":{},"body":{"components/NoteNavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:10",{"_index":2028,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:14",{"_index":2025,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:24",{"_index":2027,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:29",{"_index":2024,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:37",{"_index":2026,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:43",{"_index":2023,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts",{"_index":2073,"title":{},"body":{"components/ObservationRecursive.html":{},"coverage.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:12",{"_index":2082,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:13",{"_index":2081,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:14",{"_index":2087,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:15",{"_index":2080,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:24",{"_index":2084,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:61",{"_index":2085,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:65",{"_index":2086,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts",{"_index":2101,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"coverage.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:13",{"_index":2106,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:14",{"_index":2105,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:15",{"_index":2104,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:20",{"_index":2110,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:24",{"_index":2111,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:29",{"_index":2108,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observations/observations.component.ts",{"_index":2233,"title":{},"body":{"components/ObservationsComponent.html":{},"coverage.html":{}}}],["src/app/components/observations/observations.component.ts:20",{"_index":2243,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:21",{"_index":2244,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:22",{"_index":2242,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:24",{"_index":2237,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:27",{"_index":2241,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:30",{"_index":2236,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:60",{"_index":2238,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts",{"_index":2254,"title":{},"body":{"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:102",{"_index":2275,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:107",{"_index":2270,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:112",{"_index":2267,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:120",{"_index":2273,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:124",{"_index":2271,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:22",{"_index":2282,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:25",{"_index":2283,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:28",{"_index":2281,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:31",{"_index":2264,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:32",{"_index":2265,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:34",{"_index":2263,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:45",{"_index":2277,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:49",{"_index":2278,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:54",{"_index":2276,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:92",{"_index":2280,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/patient/patient.component.ts",{"_index":2319,"title":{},"body":{"components/PatientComponent.html":{},"coverage.html":{}}}],["src/app/components/patient/patient.component.ts:109",{"_index":2334,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:23",{"_index":2343,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:24",{"_index":2342,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:25",{"_index":2335,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:26",{"_index":2338,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:29",{"_index":2336,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:30",{"_index":2337,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:31",{"_index":2340,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:32",{"_index":2341,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:34",{"_index":2326,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:46",{"_index":2328,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:59",{"_index":2332,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:63",{"_index":2331,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:70",{"_index":2329,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:92",{"_index":2330,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts",{"_index":2559,"title":{},"body":{"components/TimelineComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline/timeline.component.ts:13",{"_index":2566,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:14",{"_index":2563,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:18",{"_index":2565,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:22",{"_index":2564,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts",{"_index":2579,"title":{},"body":{"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:14",{"_index":2589,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:15",{"_index":2587,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:16",{"_index":2585,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:25",{"_index":2583,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts",{"_index":2607,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:27",{"_index":2615,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:28",{"_index":2614,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:41",{"_index":2619,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:45",{"_index":2618,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:52",{"_index":2616,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:63",{"_index":2617,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:67",{"_index":2621,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts",{"_index":2647,"title":{},"body":{"components/TripleListComponent.html":{},"coverage.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:14",{"_index":2653,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:15",{"_index":2654,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:16",{"_index":2652,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:22",{"_index":2656,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/directives/auto",{"_index":587,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts",{"_index":1658,"title":{},"body":{"directives/HighlightDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts:8",{"_index":1660,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["src/app/models/allergyintolerance.model.ts",{"_index":356,"title":{},"body":{"classes/AllergyIntolerance.html":{},"coverage.html":{}}}],["src/app/models/allergyintolerance.model.ts:2",{"_index":360,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/allergyintolerance.model.ts:3",{"_index":359,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/associable.model.ts",{"_index":485,"title":{},"body":{"interfaces/Associable.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts",{"_index":671,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts:3",{"_index":674,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:4",{"_index":675,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:8",{"_index":1920,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/bundle.model.ts:9",{"_index":1921,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/careplan.model.ts",{"_index":678,"title":{},"body":{"classes/CarePlan.html":{},"coverage.html":{}}}],["src/app/models/careplan.model.ts:10",{"_index":688,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:15",{"_index":685,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:4",{"_index":687,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:5",{"_index":690,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:6",{"_index":689,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:7",{"_index":686,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/chart.model.ts",{"_index":896,"title":{},"body":{"classes/Chart.html":{},"coverage.html":{}}}],["src/app/models/chart.model.ts:14",{"_index":905,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:23",{"_index":909,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:24",{"_index":908,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:28",{"_index":906,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:3",{"_index":907,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:4",{"_index":902,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:5",{"_index":903,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:8",{"_index":904,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/client.model.ts",{"_index":943,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/app/models/client.model.ts:2",{"_index":944,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/client.model.ts:3",{"_index":945,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/condition.model.ts",{"_index":975,"title":{},"body":{"classes/Condition.html":{},"coverage.html":{}}}],["src/app/models/condition.model.ts:10",{"_index":984,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:11",{"_index":987,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:12",{"_index":982,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:4",{"_index":983,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:5",{"_index":986,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:6",{"_index":988,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:7",{"_index":989,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:8",{"_index":981,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:9",{"_index":985,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/contextmenuoption.model.ts",{"_index":1444,"title":{},"body":{"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["src/app/models/contextmenuoption.model.ts:10",{"_index":1447,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:15",{"_index":1450,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:23",{"_index":1446,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/encounter.model.ts",{"_index":1495,"title":{},"body":{"classes/Encounter.html":{},"coverage.html":{}}}],["src/app/models/encounter.model.ts:11",{"_index":1507,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:16",{"_index":1504,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:18",{"_index":1505,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:29",{"_index":1510,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:3",{"_index":1502,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:4",{"_index":1506,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:44",{"_index":1511,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:45",{"_index":1508,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:47",{"_index":1509,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:6",{"_index":1503,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/form.model.ts",{"_index":1599,"title":{},"body":{"classes/Form.html":{},"coverage.html":{}}}],["src/app/models/form.model.ts:2",{"_index":1601,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:3",{"_index":1602,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:4",{"_index":1600,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/medication.model.ts",{"_index":1973,"title":{},"body":{"classes/Medication.html":{},"coverage.html":{}}}],["src/app/models/medication.model.ts:10",{"_index":1975,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:3",{"_index":1977,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:4",{"_index":1976,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:6",{"_index":1978,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/observation.model.ts",{"_index":2037,"title":{},"body":{"classes/Observation.html":{},"coverage.html":{}}}],["src/app/models/observation.model.ts:10",{"_index":2055,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:11",{"_index":2054,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:14",{"_index":2051,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:15",{"_index":2049,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:18",{"_index":2062,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:23",{"_index":2060,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:28",{"_index":2058,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:33",{"_index":2056,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:4",{"_index":2050,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:5",{"_index":2053,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:6",{"_index":2048,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:7",{"_index":2052,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:8",{"_index":2046,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:9",{"_index":2047,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/patient.model.ts",{"_index":2303,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["src/app/models/patient.model.ts:10",{"_index":2318,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:11",{"_index":2316,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:3",{"_index":2310,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:4",{"_index":2314,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:5",{"_index":2312,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:6",{"_index":2313,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:7",{"_index":2311,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:8",{"_index":2315,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:9",{"_index":2317,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/server.model.ts",{"_index":2439,"title":{},"body":{"classes/Server.html":{},"coverage.html":{}}}],["src/app/models/server.model.ts:1",{"_index":2440,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/server.model.ts:4",{"_index":2441,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/timeline.model.ts",{"_index":2551,"title":{},"body":{"classes/Timeline.html":{},"coverage.html":{}}}],["src/app/models/timeline.model.ts:2",{"_index":2555,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:3",{"_index":2556,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:4",{"_index":2554,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:5",{"_index":2552,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:6",{"_index":2553,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:7",{"_index":2558,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:8",{"_index":2557,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/user.model.ts",{"_index":2660,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:3",{"_index":2661,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":2662,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/form.module.ts",{"_index":1648,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts",{"_index":1902,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:12",{"_index":1906,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:8",{"_index":1911,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/services/association.service.ts",{"_index":488,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{}}}],["src/app/services/association.service.ts:13",{"_index":524,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:17",{"_index":516,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:18",{"_index":498,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:26",{"_index":513,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:64",{"_index":510,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:88",{"_index":501,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:97",{"_index":506,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/careplan.service.ts",{"_index":844,"title":{},"body":{"injectables/CarePlanService.html":{},"coverage.html":{}}}],["src/app/services/careplan.service.ts:16",{"_index":847,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:24",{"_index":849,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:40",{"_index":852,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/condition.service.ts",{"_index":990,"title":{},"body":{"injectables/ConditionService.html":{},"coverage.html":{}}}],["src/app/services/condition.service.ts:17",{"_index":1013,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:19",{"_index":1011,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:21",{"_index":1014,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:23",{"_index":1012,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:24",{"_index":999,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:36",{"_index":1007,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:51",{"_index":1005,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:56",{"_index":1000,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:63",{"_index":1003,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:77",{"_index":1001,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:82",{"_index":1009,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/doctor.service.ts",{"_index":1454,"title":{},"body":{"injectables/DoctorService.html":{},"coverage.html":{}}}],["src/app/services/doctor.service.ts:10",{"_index":1460,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:15",{"_index":1464,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:46",{"_index":1462,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:8",{"_index":1466,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:9",{"_index":1465,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/encounter.service.ts",{"_index":1523,"title":{},"body":{"injectables/EncounterService.html":{},"coverage.html":{}}}],["src/app/services/encounter.service.ts:15",{"_index":1527,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:22",{"_index":1533,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:39",{"_index":1531,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:46",{"_index":1529,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/fhir.service.ts",{"_index":1572,"title":{},"body":{"injectables/FhirService.html":{},"coverage.html":{}}}],["src/app/services/fhir.service.ts:10",{"_index":1590,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:12",{"_index":1583,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:16",{"_index":1588,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:20",{"_index":1585,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:24",{"_index":1581,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:5",{"_index":1579,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:9",{"_index":1589,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/historicaltrends.service.ts",{"_index":1750,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["src/app/services/historicaltrends.service.ts:12",{"_index":1757,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:138",{"_index":1768,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:147",{"_index":1766,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:165",{"_index":1764,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:17",{"_index":1761,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:80",{"_index":1759,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:9",{"_index":1769,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/map.service.ts",{"_index":1926,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/services/map.service.ts:5",{"_index":1972,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/services/observation.service.ts",{"_index":2115,"title":{},"body":{"injectables/ObservationService.html":{},"coverage.html":{}}}],["src/app/services/observation.service.ts:132",{"_index":2145,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:139",{"_index":2143,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:14",{"_index":2158,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:15",{"_index":2153,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:157",{"_index":2146,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:16",{"_index":2155,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:17",{"_index":2154,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:175",{"_index":2135,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:179",{"_index":2150,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:18",{"_index":2156,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:19",{"_index":2157,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:190",{"_index":2134,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:20",{"_index":2159,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:206",{"_index":2137,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:217",{"_index":2148,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:22",{"_index":2130,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:255",{"_index":2132,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:284",{"_index":2141,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:289",{"_index":2151,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:293",{"_index":2152,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/patient.service.ts",{"_index":2393,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/app/services/patient.service.ts:12",{"_index":2402,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:15",{"_index":2398,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:23",{"_index":2401,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:28",{"_index":2399,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/scratchpad.service.ts",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["src/app/services/smart.service.ts",{"_index":2443,"title":{},"body":{"injectables/SmartService.html":{},"coverage.html":{}}}],["src/app/services/smart.service.ts:106",{"_index":2459,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:17",{"_index":2470,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:18",{"_index":2477,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:19",{"_index":2474,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:21",{"_index":2471,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:22",{"_index":2464,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:23",{"_index":2479,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:24",{"_index":2472,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:25",{"_index":2478,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:26",{"_index":2463,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:28",{"_index":2457,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:73",{"_index":2461,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:88",{"_index":2462,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:9",{"_index":2456,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/toolbar.service.ts",{"_index":2602,"title":{},"body":{"injectables/ToolBarService.html":{},"coverage.html":{}}}],["src/app/services/toolbar.service.ts:5",{"_index":2606,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["src/app/services/toolbar.service.ts:6",{"_index":2605,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["standard",{"_index":1431,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["start",{"_index":692,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{}}}],["started",{"_index":2736,"title":{"index.html":{}},"body":{}}],["state",{"_index":640,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["state('in",{"_index":2624,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["statements",{"_index":2665,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["states",{"_index":664,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["static",{"_index":785,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["static_mappings",{"_index":1927,"title":{},"body":{"injectables/MapService.html":{}}}],["stats",{"_index":814,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["status",{"_index":683,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"classes/Observation.html":{},"components/ScratchPadUpdate.html":{},"classes/Timeline.html":{}}}],["store",{"_index":967,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["stored",{"_index":2163,"title":{},"body":{"injectables/ObservationService.html":{}}}],["storedata",{"_index":1614,"title":{},"body":{"components/FormBuilder.html":{}}}],["storedata(data",{"_index":1625,"title":{},"body":{"components/FormBuilder.html":{}}}],["stores",{"_index":911,"title":{},"body":{"classes/Chart.html":{}}}],["strange",{"_index":798,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"classes/Medication.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"injectables/ToolBarService.html":{},"classes/User.html":{}}}],["strings",{"_index":2361,"title":{},"body":{"components/PatientComponent.html":{}}}],["structure",{"_index":73,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["structures",{"_index":1050,"title":{},"body":{"injectables/ConditionService.html":{}}}],["stuff",{"_index":748,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{}}}],["style",{"_index":1608,"title":{},"body":{"components/FormBuilder.html":{},"components/ToolbarComponent.html":{}}}],["styles",{"_index":1603,"title":{},"body":{"components/FormBuilder.html":{}}}],["subheading",{"_index":78,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["subheadings",{"_index":86,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["submit",{"_index":352,"title":{},"body":{"components/AddObservation.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{}}}],["submitclick",{"_index":1615,"title":{},"body":{"components/FormBuilder.html":{}}}],["subs",{"_index":79,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["subscribe",{"_index":736,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsComponent.html":{}}}],["subscribe((bundle",{"_index":2187,"title":{},"body":{"injectables/ObservationService.html":{}}}],["subscribe((event",{"_index":655,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["subscribe(res",{"_index":541,"title":{},"body":{"injectables/AssociationService.html":{}}}],["subscribe){data",{"_index":1473,"title":{},"body":{"injectables/DoctorService.html":{}}}],["subscription",{"_index":709,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["subtracts",{"_index":1733,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["such",{"_index":554,"title":{},"body":{"injectables/AssociationService.html":{},"index.html":{}}}],["super",{"_index":631,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["support",{"_index":2840,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":2832,"title":{},"body":{"index.html":{}}}],["sure",{"_index":2529,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["svg",{"_index":2841,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":962,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["switcher",{"_index":956,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switching",{"_index":662,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["switchnav",{"_index":2612,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["switchtodefault",{"_index":951,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switchtoscratchpad",{"_index":952,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["symptoms",{"_index":2178,"title":{},"body":{"injectables/ObservationService.html":{}}}],["system",{"_index":502,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"index.html":{}}}],["system:{{condition.code.coding[0].system",{"_index":2600,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["systemjs",{"_index":2726,"title":{},"body":{"dependencies.html":{}}}],["systems",{"_index":2176,"title":{},"body":{"injectables/ObservationService.html":{}}}],["table",{"_index":1173,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["tablename",{"_index":1084,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation",{"_index":1068,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation(clickedset",{"_index":1093,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2698,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2803,"title":{},"body":{"index.html":{}}}],["taken",{"_index":870,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["takes",{"_index":68,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["telecom",{"_index":2309,"title":{},"body":{"classes/Patient.html":{}}}],["temp",{"_index":1148,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temperature",{"_index":344,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["templateurl",{"_index":12,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["temptablevar",{"_index":1166,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temptablevar.hidden",{"_index":1169,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["terminal",{"_index":2760,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":2791,"title":{},"body":{"index.html":{}}}],["test",{"_index":1552,"title":{},"body":{"components/Favorites.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["test(ref",{"_index":1557,"title":{},"body":{"components/Favorites.html":{}}}],["test2",{"_index":1553,"title":{},"body":{"components/Favorites.html":{}}}],["tested",{"_index":2091,"title":{},"body":{"components/ObservationRecursive.html":{},"index.html":{}}}],["testing",{"_index":100,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["text",{"_index":361,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["textinputforedit",{"_index":1060,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["thanks",{"_index":2515,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.addcategoriesconditions(arrdata",{"_index":130,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.allergies",{"_index":2362,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies.length",{"_index":2366,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies[0",{"_index":2368,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergy",{"_index":2367,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.associatedmapconditions.clear",{"_index":544,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapconditions.set(c",{"_index":558,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.clear",{"_index":545,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.set(o",{"_index":561,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.associatedmapconditions.get(condition",{"_index":1323,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.associationservice.associatedmapobservations.get(observation",{"_index":2297,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.associationservice.runassociationstool(checkedconditions",{"_index":2632,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.aud",{"_index":2485,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.authorizeurl",{"_index":2503,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.base",{"_index":1592,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.boxdata",{"_index":2007,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["this.careplanloadfinished",{"_index":745,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.careplans",{"_index":744,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{}}}],["this.careplanselected.emit(this.selected",{"_index":823,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.careplanservice.loadcareplans(this.patient).subscribe(careplans",{"_index":743,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.careplanservice.loadmedications(this.patient).subscribe(medications",{"_index":1990,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.categorizedobservations",{"_index":2167,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.charts",{"_index":1810,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.delete(chartname",{"_index":1817,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(chartname",{"_index":1773,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(medication.name",{"_index":1812,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(chartname",{"_index":1809,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(medication.name",{"_index":1816,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.clicksubscription",{"_index":1434,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clicksubscription.unsubscribe",{"_index":1442,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clientid",{"_index":2538,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.closeable",{"_index":1415,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.closeable_delay",{"_index":1429,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.column",{"_index":964,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.columnstate",{"_index":965,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showdefault",{"_index":968,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showscratchpad",{"_index":969,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.updateservice",{"_index":966,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.columnheight",{"_index":645,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.columnnum",{"_index":113,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.columnstate",{"_index":740,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.columntype",{"_index":970,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.compiler.clearcache",{"_index":1843,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.conditiongrouping",{"_index":1111,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping.indexof(c",{"_index":1165,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0",{"_index":1160,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0].push(c",{"_index":1161,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1",{"_index":1162,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1].push(c",{"_index":1163,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount",{"_index":1185,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount].push(c",{"_index":1186,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.indexof(tablename",{"_index":1170,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.push(tablename",{"_index":1171,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditions",{"_index":1107,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.conditions.concat(conditions",{"_index":1232,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.filter(c",{"_index":1043,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.conditions.length",{"_index":1235,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.sort((c1",{"_index":1236,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions[value].isselected",{"_index":1146,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionselected.emit(this.selected",{"_index":1108,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionservice.conditions",{"_index":538,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.getcheckedconditions",{"_index":2630,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.conditionservice.getcolumnstate",{"_index":1306,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.loadallergies(this.patient).subscribe(allergies",{"_index":2360,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.conditionservice.loadconditions(this.patient).subscribe(conditions",{"_index":1106,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.selectedcondition",{"_index":1318,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.setcolumnstate(this.columnstate",{"_index":1264,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.cookieservice.get('state",{"_index":2508,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.get('tokenurl",{"_index":2520,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('fhirbaseurl",{"_index":2505,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('graphconfig",{"_index":1492,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.cookieservice.set('state",{"_index":2534,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('tokenurl",{"_index":2504,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.data",{"_index":1417,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.datepipe.transform(encounter.getstartdate(),'mm",{"_index":2592,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.description",{"_index":2426,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.deserialize(e['resource",{"_index":1537,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.doctorservice.addgraphconfig(this.settings",{"_index":292,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.assignvisible(this.conditions",{"_index":1129,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.doctorservice.configmode",{"_index":294,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.filter",{"_index":290,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doit(parseint(value",{"_index":1913,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["this.dosageunits",{"_index":1981,"title":{},"body":{"classes/Medication.html":{}}}],["this.el.nativeelement.textcontent",{"_index":1663,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["this.elref.nativeelement.queryselector('div').style.left",{"_index":2640,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elref.nativeelement.queryselector('div').style.top",{"_index":2641,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.encounters",{"_index":2568,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.concat(encounters",{"_index":2569,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.length",{"_index":2570,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(encounters",{"_index":2567,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(res",{"_index":2373,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.extractconditioninfo(c)['code",{"_index":556,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.extractnewobservations(nextobservations",{"_index":2193,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.extractobservationinfo(o)['code",{"_index":560,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.fhirbaseurl",{"_index":2480,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions",{"_index":863,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["this.fhirservice.getrequestoptions(false)).subscribe(data",{"_index":2489,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions(true",{"_index":2405,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.fhirservice.geturl",{"_index":859,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.fhirservice.settoken(data['access_token",{"_index":1850,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.cookieservice.get('fhirbaseurl",{"_index":1844,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.fhirbaseurl",{"_index":2488,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.token",{"_index":1846,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterset.add(code",{"_index":2213,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.filterset.has(code",{"_index":2209,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.findgetparameter(\"code",{"_index":2516,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"iss",{"_index":2481,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"launch",{"_index":2487,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter('state",{"_index":2509,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.firstiteration",{"_index":110,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.formbuilderservice.gettemplate().then(forms",{"_index":1639,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forminput",{"_index":1642,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forms",{"_index":1640,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getassociations",{"_index":540,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.getforms",{"_index":1637,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getgrouping(code",{"_index":2211,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.getscratchpadconditions",{"_index":1228,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.gettoken",{"_index":2510,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.getvaluerange(chart",{"_index":1799,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.graphconfig",{"_index":2348,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.graphconfig.push(list",{"_index":1491,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.groupconditions",{"_index":1130,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.groupmap",{"_index":2164,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.groupmap[x].indexof(code",{"_index":2214,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handledocclick(event",{"_index":1436,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.handleobservationbundle(bundle",{"_index":2188,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handleresize(event",{"_index":656,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.height_offset",{"_index":647,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.hide(event",{"_index":1440,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.hide(null",{"_index":1416,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.historicaltrendsservice.addmedicationchart(medication",{"_index":1995,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.historicaltrendsservice.removechart(medication.name",{"_index":1996,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.hover.show(this.allergies",{"_index":2381,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.hoverbox.hide(event",{"_index":2597,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverbox.show(details",{"_index":2596,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverstyling",{"_index":2369,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.http.get(url",{"_index":862,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.http.post(\"https://mongo",{"_index":2525,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.http.post(this.path",{"_index":574,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.inputdata.id",{"_index":2008,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["this.isallchecked",{"_index":839,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.items",{"_index":1888,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.justcreated",{"_index":1226,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.launch",{"_index":2486,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.left",{"_index":1422,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.level",{"_index":2113,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.leveldata",{"_index":118,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.listdata",{"_index":2438,"title":{},"body":{"components/SelectListSingle.html":{}}}],["this.loadallergies",{"_index":2358,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.loadcareplans(patient).pipe(map(careplans",{"_index":876,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["this.loadconditionspage(nextlink.url",{"_index":1040,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loadconditionspage(url",{"_index":1042,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loaded",{"_index":1261,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.loadencounters",{"_index":2359,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.loadencounterspage(nextlink.url",{"_index":1539,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadencounterspage(url",{"_index":1541,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadfinished",{"_index":119,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["this.loadobservationspage(nextlink.url",{"_index":2194,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.mappings",{"_index":2248,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.maxdate",{"_index":1722,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.maxdate.gettime",{"_index":1732,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.medications",{"_index":1991,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.medications.length",{"_index":1993,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.menu.addoption",{"_index":807,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.menu.show(null",{"_index":1742,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mindate",{"_index":1720,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mouseevent",{"_index":1708,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mousesubscription",{"_index":1706,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.name",{"_index":1980,"title":{},"body":{"classes/Medication.html":{}}}],["this.nav2",{"_index":2629,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.newtest",{"_index":1566,"title":{},"body":{"components/Favorites.html":{}}}],["this.obs",{"_index":2112,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.obscount",{"_index":2659,"title":{},"body":{"components/TripleListComponent.html":{}}}],["this.observations",{"_index":2191,"title":{},"body":{"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["this.observations.concat(nextobservations",{"_index":2192,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.reverse",{"_index":2196,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.sort((n1",{"_index":2199,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observationselected.emit(this.selected",{"_index":2291,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.observationservice.getcheckedobservations",{"_index":2631,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.observationservice.loadobservationspage(url",{"_index":2253,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.observationservice.observations",{"_index":539,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.onloadcomplete",{"_index":1233,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["this.options",{"_index":1411,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.options.concat(option",{"_index":1412,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.parseddata",{"_index":117,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.passthrough.emit(this.patient",{"_index":2657,"title":{},"body":{"components/TripleListComponent.html":{}}}],["this.path",{"_index":860,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["this.patient",{"_index":742,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.patient.id",{"_index":2252,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.patientid",{"_index":2403,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.loadpatient().subscribe(patient",{"_index":1709,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{}}}],["this.patientservice.setpatientid(id",{"_index":1852,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.periods",{"_index":1979,"title":{},"body":{"classes/Medication.html":{}}}],["this.reason",{"_index":1517,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{}}}],["this.reconstructdataconditions(this.leveldata",{"_index":114,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdatafindings(this.leveldata",{"_index":116,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdataobservations(this.leveldata",{"_index":115,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.redirecturi",{"_index":2539,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.ref.nativeelement.contains(event.target",{"_index":1414,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.renderer.setelementstyle(this.el.nativeelement",{"_index":603,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["this.requestauth",{"_index":2506,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scope",{"_index":2540,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scratchpadconditions",{"_index":1227,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.addcareplan(plan",{"_index":812,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.addcondition(condition",{"_index":1313,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.addconditionstoscratchpad",{"_index":2635,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.addobservation(observation",{"_index":2289,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.addobservationtoscratchpad",{"_index":2636,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.buttonclicked(true",{"_index":1158,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.checkcareplan(checked",{"_index":834,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkcondition(checked",{"_index":1319,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapcareplans.get(careplan",{"_index":828,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.foreach((ischecked",{"_index":1310,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(c",{"_index":1044,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(condition",{"_index":1322,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.foreach((ischecked",{"_index":2288,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(o",{"_index":2201,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(observation",{"_index":2295,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkobservation(checked",{"_index":2296,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.conditions.length",{"_index":971,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.getcareplans",{"_index":749,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.scratchpadservice.getconditions",{"_index":1268,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.getobservations",{"_index":2230,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.initconditions(this.conditions",{"_index":1263,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.observations.length",{"_index":972,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.removecondition(condition",{"_index":1312,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.switchtoscratchpad(false",{"_index":2639,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.switchtoscratchpad(true",{"_index":2638,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.indexof(this.conditions[value",{"_index":1149,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.push(this.conditions[value",{"_index":1147,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.splice(temp",{"_index":1157,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.totalcareplans",{"_index":824,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.totalobservations",{"_index":2292,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.selected",{"_index":741,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selected.id",{"_index":827,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selectedcondition",{"_index":2357,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectpatientbyid(data['patient",{"_index":1851,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectpatientbyid(this.patientservice.patientid",{"_index":1848,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.settings",{"_index":291,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.push(setting",{"_index":288,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.splice(this.settings.indexof(setting",{"_index":289,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.smartservice.authenticate().subscribe(data",{"_index":1849,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.state",{"_index":2531,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.status",{"_index":2427,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.subscription",{"_index":737,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.timeouthandle",{"_index":1887,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.token",{"_index":1593,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.tokenurl",{"_index":2502,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.toolbarservice.leftposition",{"_index":2642,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.toolbarservice.topposition",{"_index":2645,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.top",{"_index":1419,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.totaldata",{"_index":1644,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.trendsservice.charts",{"_index":1727,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.trendsservice.getdaterange(chart",{"_index":1730,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.uniqueobservations.length",{"_index":2197,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservations.push(observation",{"_index":2212,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservationsloadfinished",{"_index":2198,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.viewconditionlist",{"_index":1127,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.viewtoggle",{"_index":1126,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.visible",{"_index":1424,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this['code']['coding'][0]['code",{"_index":2072,"title":{},"body":{"classes/Observation.html":{}}}],["thismodel",{"_index":1485,"title":{},"body":{"injectables/DoctorService.html":{}}}],["three",{"_index":632,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["throat",{"_index":2184,"title":{},"body":{"injectables/ObservationService.html":{}}}],["through",{"_index":1032,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["throw",{"_index":1153,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tied",{"_index":1438,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["time",{"_index":307,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/SmartService.html":{}}}],["timeframe",{"_index":314,"title":{},"body":{"components/AccountComponent.html":{}}}],["timeline",{"_index":228,"title":{"classes/Timeline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["timeline.html",{"_index":2561,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timeline_popup.html",{"_index":2580,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["timelinecomponent",{"_index":225,"title":{"components/TimelineComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinepopupcomponent",{"_index":227,"title":{"components/TimelinePopupComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelines",{"_index":2560,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timelines'},{'name",{"_index":226,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["timeouthandle",{"_index":1861,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["times",{"_index":2034,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["timesinceconditiononset",{"_index":1250,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["timesinceobservation",{"_index":2203,"title":{},"body":{"injectables/ObservationService.html":{}}}],["title",{"_index":684,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["tmp",{"_index":2546,"title":{},"body":{"injectables/SmartService.html":{}}}],["tmp[0",{"_index":2549,"title":{},"body":{"injectables/SmartService.html":{}}}],["today's",{"_index":1734,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["todo",{"_index":529,"title":{},"body":{"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["toggle",{"_index":329,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["toggleconfigmode",{"_index":253,"title":{},"body":{"components/AccountComponent.html":{}}}],["toggleexpansion",{"_index":1069,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["togglefinalnote",{"_index":2020,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["toggleprogressnote",{"_index":2021,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["togglesidenote",{"_index":2022,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["toggling",{"_index":1133,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tok",{"_index":2497,"title":{},"body":{"injectables/SmartService.html":{}}}],["token",{"_index":1574,"title":{},"body":{"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["token_url",{"_index":2519,"title":{},"body":{"injectables/SmartService.html":{}}}],["tokenurl",{"_index":2451,"title":{},"body":{"injectables/SmartService.html":{}}}],["tool",{"_index":537,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["toolbar",{"_index":1834,"title":{},"body":{"components/HomeComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":231,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["toolbar.html",{"_index":2608,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":230,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolbarservice",{"_index":394,"title":{"injectables/ToolBarService.html":{}},"body":{"modules/AppModule.html":{},"components/Favorites.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":1189,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["top",{"_index":1357,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{}}}],["topoffset",{"_index":1862,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["topposition",{"_index":2604,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["total",{"_index":263,"title":{},"body":{"components/AccountComponent.html":{}}}],["totalconditions",{"_index":1262,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["totalcount",{"_index":2216,"title":{},"body":{"injectables/ObservationService.html":{}}}],["totaldata",{"_index":1612,"title":{},"body":{"components/FormBuilder.html":{}}}],["track",{"_index":639,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["tracking",{"_index":534,"title":{},"body":{"injectables/AssociationService.html":{}}}],["transactions",{"_index":2742,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1908,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transform(value",{"_index":1909,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transition('void",{"_index":2626,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["trend",{"_index":312,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["trends",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"injectables/HistoricalTrendsService.html":{}}}],["trendsservice",{"_index":1680,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["trick",{"_index":2284,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["trigger('fadein",{"_index":2623,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["triggered",{"_index":1229,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["triggering",{"_index":1390,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["triglycerides",{"_index":266,"title":{},"body":{"components/AccountComponent.html":{}}}],["triple",{"_index":1835,"title":{},"body":{"components/HomeComponent.html":{}}}],["triplelist",{"_index":233,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist.html",{"_index":2648,"title":{},"body":{"components/TripleListComponent.html":{}}}],["triplelistcomponent",{"_index":232,"title":{"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":89,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["try",{"_index":1176,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ts",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["tslib",{"_index":2729,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":921,"title":{},"body":{"classes/Chart.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":2731,"title":{},"body":{"dependencies.html":{}}}],["typescript's",{"_index":2805,"title":{},"body":{"index.html":{}}}],["typescript/javascript",{"_index":801,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ui",{"_index":1139,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["unavailable",{"_index":532,"title":{},"body":{"injectables/AssociationService.html":{}}}],["uncheck",{"_index":838,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["unchecked",{"_index":1320,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{}}}],["unclicked",{"_index":831,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["undefined",{"_index":1486,"title":{},"body":{"injectables/DoctorService.html":{}}}],["unintuitive",{"_index":2797,"title":{},"body":{"index.html":{}}}],["uniqueobservations",{"_index":2119,"title":{},"body":{"injectables/ObservationService.html":{}}}],["uniqueobservationsloadfinished",{"_index":2120,"title":{},"body":{"injectables/ObservationService.html":{}}}],["unit",{"_index":2298,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["units",{"_index":2068,"title":{},"body":{"classes/Observation.html":{}}}],["unknown",{"_index":2351,"title":{},"body":{"components/PatientComponent.html":{}}}],["unsubscribe",{"_index":1441,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["until",{"_index":1028,"title":{},"body":{"injectables/ConditionService.html":{}}}],["up",{"_index":1387,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["update",{"_index":657,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["update'},{'name",{"_index":221,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["update.component",{"_index":1657,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["update.component.ts",{"_index":2414,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["update.component.ts:11",{"_index":2423,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:12",{"_index":2425,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:13",{"_index":2424,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:15",{"_index":2419,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:19",{"_index":2421,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:9",{"_index":2418,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.html",{"_index":2416,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["updateposition",{"_index":2613,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updateposition(ref",{"_index":2620,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updatescratchpad",{"_index":1070,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["updateservice",{"_index":616,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["updatetotal",{"_index":2650,"title":{},"body":{"components/TripleListComponent.html":{}}}],["updatetotal(event",{"_index":2655,"title":{},"body":{"components/TripleListComponent.html":{}}}],["upon",{"_index":1348,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["upper",{"_index":2093,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["uri",{"_index":699,"title":{},"body":{"classes/CarePlan.html":{}}}],["uris",{"_index":2495,"title":{},"body":{"injectables/SmartService.html":{}}}],["url",{"_index":677,"title":{},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{}}}],["urlencoded",{"_index":2524,"title":{},"body":{"injectables/SmartService.html":{}}}],["usage",{"_index":887,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ContextMenuComponent.html":{}}}],["use",{"_index":1223,"title":{},"body":{"components/ConditionsComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Observation.html":{},"index.html":{}}}],["used",{"_index":98,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{}}}],["user",{"_index":1373,"title":{"classes/User.html":{}},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["userid",{"_index":1617,"title":{},"body":{"components/FormBuilder.html":{}}}],["userselected",{"_index":701,"title":{},"body":{"classes/CarePlan.html":{}}}],["uses",{"_index":121,"title":{},"body":{"components/AccordionRecursion.html":{},"components/FormBuilder.html":{}}}],["using",{"_index":1134,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"index.html":{}}}],["utility",{"_index":120,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["val",{"_index":2576,"title":{},"body":{"components/TimelineComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/variables.html":{}}}],["valuecodeableconcept",{"_index":2040,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["valuequantity",{"_index":2041,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["values",{"_index":325,"title":{},"body":{"components/AccountComponent.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["var",{"_index":138,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["variable",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1636,"title":{"miscellaneous/variables.html":{}},"body":{"components/FormBuilder.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verificationstatus",{"_index":980,"title":{},"body":{"classes/Condition.html":{}}}],["version",{"_index":700,"title":{},"body":{"classes/CarePlan.html":{},"index.html":{}}}],["very",{"_index":2829,"title":{},"body":{"index.html":{}}}],["via",{"_index":2754,"title":{},"body":{"index.html":{}}}],["view",{"_index":794,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["viewchild",{"_index":787,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["viewchild('hover",{"_index":2339,"title":{},"body":{"components/PatientComponent.html":{}}}],["viewchild('hoverbox",{"_index":2588,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["viewchild('menu",{"_index":784,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["viewchildren",{"_index":1633,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewchildren('form",{"_index":1629,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewer",{"_index":2737,"title":{},"body":{"index.html":{}}}],["views",{"_index":2637,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewtoggle",{"_index":1061,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["visible",{"_index":1358,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["visiblities",{"_index":1468,"title":{},"body":{"injectables/DoctorService.html":{}}}],["visit",{"_index":2370,"title":{},"body":{"components/PatientComponent.html":{},"index.html":{}}}],["vitals",{"_index":2168,"title":{},"body":{"injectables/ObservationService.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["waiting",{"_index":1881,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["want",{"_index":1488,"title":{},"body":{"injectables/DoctorService.html":{}}}],["way",{"_index":1260,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/SmartService.html":{}}}],["weight",{"_index":339,"title":{},"body":{"components/AddObservation.html":{},"components/DoctorNoteComponent.html":{},"injectables/ObservationService.html":{}}}],["west",{"_index":522,"title":{},"body":{"injectables/AssociationService.html":{}}}],["whatever",{"_index":2066,"title":{},"body":{"classes/Observation.html":{}}}],["whenever",{"_index":829,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["whenver",{"_index":821,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ToolbarComponent.html":{}}}],["wherever",{"_index":1404,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["whether",{"_index":789,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["width",{"_index":604,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/HistoricalTrendsComponent.html":{}}}],["window",{"_index":649,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerheight",{"_index":646,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerwidth",{"_index":1896,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["window.location.href",{"_index":2544,"title":{},"body":{"injectables/SmartService.html":{}}}],["windows",{"_index":2771,"title":{},"body":{"index.html":{}}}],["wipes",{"_index":1471,"title":{},"body":{"injectables/DoctorService.html":{}}}],["withauth",{"_index":1582,"title":{},"body":{"injectables/FhirService.html":{}}}],["within",{"_index":1305,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["without",{"_index":1401,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["work",{"_index":669,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/DoctorService.html":{}}}],["wraps",{"_index":1831,"title":{},"body":{"components/HomeComponent.html":{}}}],["write",{"_index":2820,"title":{},"body":{"index.html":{}}}],["writing",{"_index":2828,"title":{},"body":{"index.html":{}}}],["www",{"_index":2523,"title":{},"body":{"injectables/SmartService.html":{}}}],["x",{"_index":1092,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["y",{"_index":916,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["year",{"_index":1747,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years",{"_index":1692,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years').todate",{"_index":1737,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["yscalemax",{"_index":900,"title":{},"body":{"classes/Chart.html":{}}}],["yscalemin",{"_index":901,"title":{},"body":{"classes/Chart.html":{}}}],["yyyy').tostring",{"_index":2594,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["zone.js",{"_index":2733,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccordionRecursion.html":{"url":"components/AccordionRecursion.html","title":"component - AccordionRecursion","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionRecursion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/accordionRecursion/accordionRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                accordionRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./accordionRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFinished\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                reconstructDataConditions\n                            \n                            \n                                reconstructDataFindings\n                            \n                            \n                                reconstructDataObservations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnNum\n                            \n                            \n                                firstIteration\n                            \n                            \n                                levelData\n                            \n                            \n                                levelNum\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstIteration\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesConditions\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataConditions\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataFindings\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataFindings(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataObservations\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataObservations(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output } from '@angular/core';\nimport { ObservationService } from '../../services/observation.service';\n\n@Component({\n    selector: 'accordionRecursion',\n    templateUrl: './accordionRecursion.html'\n})\nexport class AccordionRecursion {\n\n    /* This component takes in the data at the current level of the accordion structure:\n    Note that the structure of the data should be as follows:\n        {[\n            category: string,\n            subheading: boolean,\n            subs: [array of the same 4 headings here] // null if subheadings is false\n            data: [array of the list of conditions for that level] // null if subheadings is true\n        ]}\n    */\n    @Input() levelData: any;\n\n    // This is the type of the column (conditions: 0, observations: 1, or care plans: 2)\n    @Input() columnNum: number;\n\n    // This is the current level of recursion (used for the display)\n    @Input() levelNum: number;\n\n    // for testing purposes\n    @Input() firstIteration: number;\n\n    // Parsed data according to the above data schema \n    parsedData: any;\n    loadFinished: boolean = false;\n\n    // ===============================================================================================================================================\n    // ================================================================== EVENT METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    constructor(private observationService: ObservationService) { }\n\n    // When the component is first initialized\n    ngOnChanges() {\n        if (this.firstIteration == 1) {\n            // reconstruct the data for now\n            if (this.columnNum == 0)\n                this.reconstructDataConditions(this.levelData);\n            else if (this.columnNum == 1) {\n                this.reconstructDataObservations(this.levelData);\n            }\n            else if (this.columnNum == 2)\n                this.reconstructDataFindings(this.levelData);\n        } else {\n            this.parsedData = this.levelData;\n        }\n\n        this.loadFinished = true;\n    }\n\n    // ===============================================================================================================================================\n    // ================================================================== UTILITY METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    // NOTE: The current component uses this function to rebuild the data into correct structure, but in practice, this function should not be used\n    // since the data should already in the correct model format (described above levelData)\n    reconstructDataConditions(arrData: any) {\n        this.parsedData = this.addCategoriesConditions(arrData);\n    }\n\n    addCategoriesConditions(arrData: any) {\n        // For conditions, there are guaranteed to be 5 different columns; for now, just filter by active/inactive\n\n        // data sieve\n        var dataFilter =\n        {\n            'Chief Complaint': [],\n            'Active Problems': [],\n            'Inactive Problems': [],\n            'Allergies/Precautions': [],\n            'Preventions/Exposures': []\n        };\n\n        // Filter each condition into a category based on the data\n        for (var i = 0; i \n    \n\n    \n        \n\n  \n    \n        {{cat.category}} ({{cat.data?.length}})\n    \n    \n      \n        \n          \n        \n        \n          \n        \n            \n          \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{cat.category}} ({{cat.data?.length}})                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionRecursion'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/account.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                account\n            \n\n\n\n\n            \n                templateUrl\n                ./account.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cholesteralBattery\n                            \n                            \n                                electrolytes\n                            \n                            \n                                kidneyFunction\n                            \n                            \n                                liverFunction\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSetting\n                            \n                            \n                                saveSettings\n                            \n                            \n                                toggleConfigMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSetting\n                        \n                        \n                    \n                \n            \n            \n                \naddSetting(checked: boolean, setting: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveSettings\n                        \n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleConfigMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleConfigMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cholesteralBattery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            electrolytes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kidneyFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Creatinine\", \"GFR\", \"BUN\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            liverFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\n\n@Component({\n  selector: 'account',\n  templateUrl: './account.html',\n})\nexport class AccountComponent {\n  settings: Array = [];\n  electrolytes: Array = [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"];\n  cholesteralBattery: Array = [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"];\n  liverFunction: Array = [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"];\n  kidneyFunction: Array = [\"Creatinine\", \"GFR\", \"BUN\"];\n\n  constructor(private doctorService: DoctorService) { }\n\n  addSetting(checked: boolean, setting: string) {\n    if (checked) {\n      this.settings.push(setting);\n    }\n    else {\n      this.settings.splice(this.settings.indexOf(setting), 1);\n    }\n  }\n\n  saveSettings() {\n    this.doctorService.filter = this.settings;\n    this.doctorService.addGraphConfig(this.settings);\n    console.log(\"saved\");\n  }\n\n  toggleConfigMode() {\n    if (this.doctorService.configMode == true) {\n      this.doctorService.configMode = false;\n    }\n    else {\n      this.doctorService.configMode = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  .paddedtd {\n    padding:10px 0;\n  }\n  .paddedtable {\n    border-collapse: separate;\n    border-spacing: 10px 0;\n  }\n\n\n  \n    \n      \n         John Smith\n        \n          GeneralChange password\n          Event Timeline\n          Time Scale:\n            Linear\n            Logarithmic\n          \n          Historical Trend\n          Initial Timeframe:\n          \n            6 month\n            12 month\n            18 month\n          \n          Problem List\n          \n            \n              \n                \n              \n              Active Problems\n              \n                \n              \n              Allergies\n            \n            \n              \n                \n              \n              Inactive Problems\n              \n                \n              \n              Activities Due\n            \n          \n          Findings List\n          \n            \n              \n                \n              \n              Abnormal Values\n              \n                \n              \n              All Values\n            \n            \n              \n                \n              \n              No Values\n              \n                \n              \n              Selected Values\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n                \n              \n            \n          \n          Save\n          Toggle Config Mode\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .paddedtd {    padding:10px 0;  }  .paddedtable {    border-collapse: separate;    border-spacing: 10px 0;  }                     John Smith                  GeneralChange password          Event Timeline          Time Scale:            Linear            Logarithmic                    Historical Trend          Initial Timeframe:                      6 month            12 month            18 month                    Problem List                                                                                Active Problems                                                          Allergies                                                                                  Inactive Problems                                                          Activities Due                                Findings List                                                                                Abnormal Values                                                          All Values                                                                                  No Values                                                          Selected Values                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                              Save          Toggle Config Mode                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddObservation.html":{"url":"components/AddObservation.html","title":"component - AddObservation","body":"\n                   \n\n\n\n\n\n  Components\n  AddObservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/addObservation/addObservation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                addObservation\n            \n\n\n\n\n            \n                templateUrl\n                ./addObservation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrayOfKeyValues\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/addObservation/addObservation.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayOfKeyValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{ name: 'height', code: '8302-2' }, { name: 'weight', code: '3141-9' }, { name: 'oxygen_saturation', code: '2710-2' }, { name: 'temperature', code: '8310-5' }, { name: 'bmi', code: '39156-5' }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/addObservation/addObservation.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: '', code: \"1\" }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/addObservation/addObservation.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'addObservation',\n  templateUrl: './addObservation.html'\n})\nexport class AddObservation {\n  model = { name: '', code: \"1\" };\n  arrayOfKeyValues: any[] = [{ name: 'height', code: '8302-2' }, { name: 'weight', code: '3141-9' }, { name: 'oxygen_saturation', code: '2710-2' }, { name: 'temperature', code: '8310-5' }, { name: 'bmi', code: '39156-5' }];\n\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n      \n      \n        Finding:\n          \n        \n        code: {{model.code}}\n        Value:\n          \n        \n        submit\n      \n      \n        Close\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×                    Finding:                          code: {{model.code}}        Value:                          submit                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddObservation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllergyIntolerance.html":{"url":"classes/AllergyIntolerance.html","title":"class - AllergyIntolerance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllergyIntolerance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/allergyIntolerance.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AllergyIntolerance {\n    id: string;\n    code: {\n        text: string;\n    };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app/app.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.html'\n})\nexport class AppComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      Toggle navigation   \n    \n    \n      \n         Home\n         Account\n         Sign Out\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Toggle navigation                          Home         Account         Sign Out            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAddObservation\n\nAddObservation\n\nAppModule -->\n\nAddObservation->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanComponent\n\nCarePlanComponent\n\nAppModule -->\n\nCarePlanComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nDoctorNoteComponent\n\nDoctorNoteComponent\n\nAppModule -->\n\nDoctorNoteComponent->AppModule\n\n\n\n\n\nFavorites\n\nFavorites\n\nAppModule -->\n\nFavorites->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nNewCondition\n\nNewCondition\n\nAppModule -->\n\nNewCondition->AppModule\n\n\n\n\n\nNoteNavigationComponent\n\nNoteNavigationComponent\n\nAppModule -->\n\nNoteNavigationComponent->AppModule\n\n\n\n\n\nObservationRecursive\n\nObservationRecursive\n\nAppModule -->\n\nObservationRecursive->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionRecursion\n                        \n                        \n                            AccountComponent\n                        \n                        \n                            AddObservation\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CarePlanComponent\n                        \n                        \n                            CarePlanDisplay\n                        \n                        \n                            ColumnStateSwitcherComponent\n                        \n                        \n                            ConditionsChartComponent\n                        \n                        \n                            ConditionsComponent\n                        \n                        \n                            ConditionsDisplay\n                        \n                        \n                            ContextMenuComponent\n                        \n                        \n                            DoctorNoteComponent\n                        \n                        \n                            Favorites\n                        \n                        \n                            FormBuilder\n                        \n                        \n                            HistoricalTrendsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HoverBoxComponent\n                        \n                        \n                            LoadingAnimation\n                        \n                        \n                            MedicationsComponent\n                        \n                        \n                            NewCondition\n                        \n                        \n                            NoteNavigationComponent\n                        \n                        \n                            ObservationRecursive\n                        \n                        \n                            ObservationRecursiveChart\n                        \n                        \n                            ObservationsComponent\n                        \n                        \n                            ObservationsDisplay\n                        \n                        \n                            PatientComponent\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelinePopupComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TripleListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AssociationService\n                        \n                        \n                            CarePlanService\n                        \n                        \n                            ConditionService\n                        \n                        \n                            DoctorService\n                        \n                        \n                            EncounterService\n                        \n                        \n                            FhirService\n                        \n                        \n                            HistoricalTrendsService\n                        \n                        \n                            MapService\n                        \n                        \n                            ObservationService\n                        \n                        \n                            PatientService\n                        \n                        \n                            ScratchPadService\n                        \n                        \n                            SmartService\n                        \n                        \n                            ToolBarService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormCreatorModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, enableProdMode } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// COMPONENT IMPORTS\nimport { AppComponent } from './app/components/app/app.component';\nimport { HomeComponent } from './app/components/home/home.component';\nimport { PatientComponent } from './app/components/patient/patient.component';\nimport { ConditionsComponent } from './app/components/conditions/conditions.component';\nimport { TimelineComponent } from './app/components/timeline/timeline.component';\nimport { TimelinePopupComponent } from './app/components/timeline_popup/timeline_popup.component';\nimport { ObservationsComponent } from './app/components/observations/observations.component';\nimport { CarePlanComponent } from './app/components/carePlan/carePlan.component';\nimport { HoverBoxComponent } from \"./app/components/hoverBox/hoverBox.component\";\nimport { LoadingAnimation } from './app/components/loadingAnimation/loadingAnimation.component';\nimport { DoctorNoteComponent } from './app/components/doctorNote/doctorNote.component';\nimport { AccountComponent } from './app/components/account/account.component';\nimport { ToolbarComponent } from './app/components/toolbar/toolbar.component';\nimport { TripleListComponent } from './app/components/tripleList/tripleList.component';\nimport { ObservationRecursive } from './app/components/observationRecursion/observationRecursion.component';\nimport { AddObservation } from './app/components/addObservation/addObservation.component';\nimport { Favorites } from './app/components/favorites/favorites.component';\nimport { ObservationRecursiveChart } from './app/components/observationRecursionChart/observationRecursionChart.component';\nimport { MedicationsComponent } from './app/components/medications/medications.component';\nimport { ConditionsChartComponent } from './app/components/conditionsChart/conditionsChart.component';\nimport { ColumnStateSwitcherComponent } from './app/components/columnStateSwitcher/columnStateSwitcher.component';\nimport { NewCondition } from './app/components/newCondition/newCondition.component';\nimport { FormBuilder } from './app/components/form-builder/form-builder.component'\nimport { ContextMenuComponent } from './app/components/contextMenu/contextMenu.component';\nimport { CarePlanDisplay } from './app/components/carePlanDisplay/carePlanDisplay.component';\nimport { NoteNavigationComponent } from './app/components/noteNavigation/noteNavigation.component';\nimport { AccordionRecursion } from './app/components/accordionRecursion/accordionRecursion.component';\nimport { ConditionsDisplay } from './app/components/conditionsDisplay/conditionsDisplay.component';\nimport { HistoricalTrendsComponent } from './app/components/historicalTrends/historicalTrends.component';\nimport { ObservationsDisplay } from './app/components/observationsDisplay/observationsDisplay.component';\n\n// SERVICE IMPORTS\nimport { CookieService } from 'ngx-cookie-service';\nimport { EncounterService } from './app/services/encounter.service';\nimport { FhirService } from './app/services/fhir.service';\nimport { PatientService } from './app/services/patient.service';\nimport { ConditionService } from './app/services/condition.service';\nimport { CarePlanService } from './app/services/carePlan.service';\nimport { ObservationService } from './app/services/observation.service';\nimport { MapService } from './app/services/map.service';\nimport { DoctorService } from './app/services/doctor.service';\nimport { SmartService } from './app/services/smart.service';\nimport { HistoricalTrendsService } from './app/services/historicalTrends.service';\nimport { ScratchPadService } from './app/services/scratchPad.service';\nimport { ToolBarService } from './app/services/toolbar.service';\nimport { AssociationService } from './app/services/association.service';\n\nimport { MomentModule } from 'ngx-moment';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n\nenableProdMode();\n\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormCreatorModule } from './app/modules/form.module';\n\nconst appRoutes: Routes = [\n  { path: 'account', component: AccountComponent },\n  { path: 'trends', component: HistoricalTrendsComponent },\n  { path: '', component: HomeComponent },\n  { path: '**', component: HomeComponent }\n]\nconst appRoutingProviders: any[] = [];\nconst routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n@NgModule({\n  imports: [\n    FormCreatorModule,\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    MomentModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  declarations: [ // Components and Directives\n    AppComponent,\n    HomeComponent,\n    PatientComponent,\n    AccordionRecursion,\n\n    // OBSERVATIONS COLUMN\n    ObservationsComponent,\n    ObservationsDisplay,\n\n    // CONDITIONS COLUMN\n    ConditionsComponent,\n    ConditionsDisplay,\n\n    // CAREPLAN COLUMN\n    CarePlanComponent,\n    CarePlanDisplay,\n    MedicationsComponent,\n\n    TimelineComponent,\n    TimelinePopupComponent,\n    LoadingAnimation,\n    FormBuilder,\n    AccountComponent,\n    DoctorNoteComponent,\n    ToolbarComponent,\n    TripleListComponent,\n    ObservationRecursive,\n    AddObservation,\n    Favorites,\n    ObservationRecursiveChart,\n    ConditionsChartComponent,\n    ColumnStateSwitcherComponent,\n    NewCondition,\n    ContextMenuComponent,\n    NoteNavigationComponent,\n    HoverBoxComponent,\n    HistoricalTrendsComponent,\n  ],\n  providers: [ // Services\n    appRoutingProviders,\n    CookieService,\n    EncounterService,\n    FhirService,\n    PatientService,\n    ObservationService,\n    ConditionService,\n    MapService,\n    DoctorService,\n    SmartService,\n    CarePlanService,\n    HistoricalTrendsService,\n    ScratchPadService,\n    ToolBarService,\n    AssociationService,\n  ],\n  bootstrap: [AppComponent] // Root Component\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Associable.html":{"url":"interfaces/Associable.html","title":"interface - Associable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Associable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/associable.model.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface Associable {\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associatedMapConditions\n                            \n                            \n                                associatedMapObservations\n                            \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractConditionInfo\n                            \n                            \n                                    Private\n                                extractObservationInfo\n                            \n                            \n                                    Private\n                                getAssociations\n                            \n                            \n                                runAssociationsTool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, conditionService: ConditionService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractConditionInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractConditionInfo(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; onsetDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractObservationInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractObservationInfo(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; effectiveDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAssociations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssociations(checkedConditions: Array, checkedObservations: Array, conditions: Array, observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool(checkedConditions: Array, checkedObservations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConditionService } from './condition.service';\nimport { ObservationService } from './observation.service';\n\nimport { Condition } from '../models/condition.model';\nimport { Observation } from '../models/observation.model';\n\n@Injectable()\nexport class AssociationService {\n    // TODO: This endpoint is currently unavailable\n    private path = 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items';\n\n    // Maps for tracking which conditions and observations\n    // are currently associated (according to the associations tool)\n    associatedMapConditions: Map = new Map();\n    associatedMapObservations: Map = new Map();\n\n    constructor(\n        private http: HttpClient,\n        private conditionService: ConditionService,\n        private observationService: ObservationService\n    ) { }\n\n    runAssociationsTool(checkedConditions: Array, checkedObservations: Array) {\n        let conditions = this.conditionService.conditions;\n        let observations = this.observationService.observations;\n\n        this.getAssociations(\n            checkedConditions,\n            checkedObservations,\n            conditions,\n            observations\n        ).subscribe(res => {\n            // Clear prior associations\n            this.associatedMapConditions.clear();\n            this.associatedMapObservations.clear();\n\n            // Extract associations API response\n            let associatedConditions = res['selectedConditions'];\n            let associatedObservations = res['selectedObservations'];\n\n            // Mark associated conditions as such\n            for (let a of associatedConditions) {\n                for (let c of conditions) {\n                    if (this.extractConditionInfo(c)['code'] == a['code']) {\n                        this.associatedMapConditions.set(c, true);\n                    }\n                }\n            }\n\n            // Mark associated observations as such\n            for (let a of associatedObservations) {\n                for (let o of observations) {\n                    if (this.extractObservationInfo(o)['code'] == a['code']) {\n                        this.associatedMapObservations.set(o, true);\n                    }\n                }\n            }\n        });\n    }\n\n    private getAssociations(\n        checkedConditions: Array,\n        checkedObservations: Array,\n        conditions: Array,\n        observations: Array,\n    ) {\n        // Extract relevant fields from checked conditions and observations\n        let checkedConditionsInfo = checkedConditions.map(this.extractConditionInfo);\n        let checkedObservationsInfo = checkedObservations.map(this.extractObservationInfo);\n\n        // Extract relevant fields from all conditions and observations\n        let conditionsInfo = conditions.map(this.extractConditionInfo);\n        let observationsInfo = observations.map(this.extractObservationInfo);\n\n        // Call associations API endpoint\n        return this.http.post(this.path, {\n            selectedConditions: checkedConditionsInfo,\n            selectedObservations: checkedObservationsInfo,\n            conditions: conditionsInfo,\n            observations: observationsInfo,\n        });\n    }\n\n    // Extract the code, coding system, and onset datetime from a condition\n    private extractConditionInfo(condition: Condition) {\n        return {\n            code: condition['code']['coding'][0]['code'],\n            system: condition['code']['coding'][0]['system'],\n            onsetDateTime: condition['onsetDateTime'],\n        }\n    }\n\n    // Extract the code, coding system, and effective datetime from an observation\n    private extractObservationInfo(observation: Observation) {\n        return {\n            code: observation['code']['coding'][0]['code'],\n            system: observation['code']['coding'][0]['system'],\n            effectiveDateTime: observation['effectiveDateTime'],\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutoGrowDirective.html":{"url":"directives/AutoGrowDirective.html","title":"directive - AutoGrowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AutoGrowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/auto-grow.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [autoGrow]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/auto-grow.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFocus\n                        \n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer} from '@angular/core';\n\n@Directive({\n\tselector: '[autoGrow]',\n\thost: {\n\t\t'(focus)': 'onFocus()',\n\t\t'(blur)': 'onBlur()'\n\t}\n})\nexport class AutoGrowDirective {\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t}\n\n\tonFocus() {\n\t\t// console.log('focus!');\n\t\tthis.renderer.setElementStyle(this.el.nativeElement, 'width', '200px');\n\t}\n\t onBlur() {\n\t\t//  console.log('blur');\n\t\t this.renderer.setElementStyle(this.el.nativeElement, 'width', '120px');\n\t }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseColumn.html":{"url":"classes/BaseColumn.html","title":"class - BaseColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/baseColumn.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/baseColumn.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/*\nSuper class of all three columns in the application. Provides\nfunctionality for dynamic resizing, and keeps track of which\nstate the column is currently in (ie, scratch pad or default).\n*/\nexport class BaseColumn {\n  constructor() {\n    // Set the initial height of the column.\n    this.columnHeight = window.innerHeight - this.HEIGHT_OFFSET;\n\n    // Resize the column on each window resize event.\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(100)) // Debounce to prevent excessive resizing.\n      .subscribe((event) => {\n        this.handleResize(event);\n    });\n  }\n\n  // Update the height of the column.\n  handleResize(event) {\n    this.columnHeight = event.target.innerHeight - this.HEIGHT_OFFSET;\n  }\n\n  // Can be overriden in the child class to handle switching between states.\n  showDefault() { }\n  showScratchPad() { }\n  updateService() { }\n\n  // The current height (in pixels) of the column.\n  columnHeight: number;\n\n  // 220px is an approximate value that seems to work for now.\n  HEIGHT_OFFSET: number = 180;\n\n  // The current state (ie, scratch pad) of the column.\n  columnState: string = \"default\";\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bundle.html":{"url":"classes/Bundle.html","title":"class - Bundle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bundle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                link\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CarePlan.html":{"url":"classes/CarePlan.html","title":"class - CarePlan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CarePlan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/carePlan.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class CarePlan implements Associable {\n    id: string;\n    title: string;\n    status: string;\n    description: string;\n\n\n    period: {\n        start: Date;\n        end: Date;\n    }\n\n    activity: {\n        detail: {\n            status: string;\n            dailyAmount: {\n                value: number;\n                system: string;\n                code: string;\n            }\n            product: {\n                productCodableConcept: {\n                    coding: {\n                        // URI\n                        system: string;\n                        version: string;\n                        code: string;\n                        display: string;\n                        userSelected: boolean;\n                    }[],\n                    text: string;\n                }\n                productReference: {\n                    reference: string;\n                    type: string;\n                    display: string;\n                }\n            }\n        }\n    }[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanComponent.html":{"url":"components/CarePlanComponent.html","title":"component - CarePlanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlan/carePlan.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                carePlan\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlan.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carePlanLoadFinished\n                            \n                            \n                                carePlans\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCarePlans\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, carePlanService: CarePlanService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlan/carePlan.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCarePlans()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlan/carePlan.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlan/carePlan.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlanLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlans\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { CarePlan } from '../../models/carePlan.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'carePlan',\n  templateUrl: './carePlan.html'\n})\nexport class CarePlanComponent extends BaseColumn {\n\n  selected: CarePlan;\n  carePlans: Array;\n  \n  // check for load finished\n  carePlanLoadFinished: boolean = false;\n\n  // for column switching\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n\n  constructor(private fhirService: FhirService, private carePlanService: CarePlanService, private scratchPadService: ScratchPadService) {\n    super();\n\n    // subscribe to scratch pad service for column switching\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.carePlanService.loadCarePlans(this.patient).subscribe(carePlans => {\n        this.carePlans = carePlans;\n        this.carePlanLoadFinished = true;\n        console.log(\"Loaded \" + carePlans.length + \" care plans.\");\n      });\n    }\n  }\n\n  // get the scratch pad stuff for care plans\n  getScratchPadCarePlans() {\n    return this.scratchPadService.getCarePlans();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Care Plans\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Care Plans                                                                                            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanDisplay.html":{"url":"components/CarePlanDisplay.html","title":"component - CarePlanDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                careplanDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlanDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllCarePlans\n                            \n                            \n                                checkCarePlan\n                            \n                            \n                                checkClicked\n                            \n                            \n                                expand\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectCarePlan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                carePlans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                careplanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        carePlans\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        careplanSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllCarePlans(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCarePlan(checked: boolean, checkedCarePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedCarePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncheckClicked(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \nselectCarePlan(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { CarePlan } from '../../models/carePlan.model';\n\n@Component({\n  selector: 'careplanDisplay',\n  templateUrl: './carePlanDisplay.html'\n})\nexport class CarePlanDisplay {\n  // The currently selected careplan in the list.\n  selected: CarePlan;\n\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of careplans to be displayed\n  @Input() carePlans: Array;\n  @Output() careplanSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu !: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(private scratchPadService: ScratchPadService) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking careplans.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function (plan) {\n        this.scratchPadService.addCarePlan(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  //whenver a line is selected\n  selectCarePlan(carePlan: CarePlan) {\n    this.selected = carePlan;\n    this.careplanSelected.emit(this.selected);\n    for (let c of this.scratchPadService.totalCareplans) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  checkClicked(carePlan: CarePlan) {\n    if (this.scratchPadService.checkedMapCareplans.get(carePlan)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkCarePlan(checked: boolean, checkedCarePlan: CarePlan) {\n    this.scratchPadService.checkCarePlan(checked, checkedCarePlan);\n  }\n\n  expand(parent: string) {\n    /*\n    for (let c of this.carePlans) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n\n  // Check or uncheck all conditions.\n  checkAllCarePlans(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let carePlan of this.carePlans) {\n      this.scratchPadService.checkCarePlan(checked, carePlan);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      Description\n      Start\n      End\n    \n  \n  \n     \n      \n        \n      \n      {{cP['title']}}\n      {{cP.period.start}}\n      {{cP.period.end}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Description      Start      End                                       {{cP[\\'title\\']}}      {{cP.period.start}}      {{cP.period.end}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarePlanService.html":{"url":"injectables/CarePlanService.html","title":"injectable - CarePlanService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CarePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/carePlan.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCarePlans\n                            \n                            \n                                loadMedications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \nloadCarePlans(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMedications\n                        \n                        \n                    \n                \n            \n            \n                \nloadMedications(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/CarePlan'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Patient } from '../models/patient.model';\nimport { CarePlan } from '../models/carePlan.model';\nimport { Medication } from '../models/medication.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class CarePlanService {\n  private path = '/CarePlan';\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient\n  ) { }\n\n  // Retrieve care plans for a given patient\n  loadCarePlans(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no care plans, so return an empty array\n          return new Array();\n        }\n      }));\n  }\n\n  // Retrieve medications for a given patient.\n  // If a given medication is taken over multiple periods, it is merged into one.\n  loadMedications(patient: Patient): Observable> {\n    return this.loadCarePlans(patient).pipe(map(carePlans => {\n      let medicationMap: Map = new Map();\n\n      for (let cp of carePlans) {\n        let dosageUnits = cp.activity[0].detail.dailyAmount.code;\n\n        // Retrieve the existing medication, or create it if it does not yet exist.\n        let med: Medication = medicationMap.get(cp.title) || new Medication(cp.title, dosageUnits);\n\n        // Add a period of usage to the medication.\n        med.periods.push({\n          start: new Date(cp.period.start),\n          end: new Date(cp.period.end),\n          dosage: cp.activity[0].detail.dailyAmount.value\n        });\n\n        medicationMap.set(cp.title, med);\n      }\n\n      return Array.from(medicationMap.values());\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chart.html":{"url":"classes/Chart.html","title":"class - Chart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chart.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                dashedLines\n                            \n                            \n                                data\n                            \n                            \n                                lineChartData\n                            \n                            \n                                normalValues\n                            \n                            \n                                title\n                            \n                            \n                                yScaleMax\n                            \n                            \n                                yScaleMin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashedLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Chart {\n  title: string;\n  code: string;\n  dashedLines: boolean;\n\n  // An array of data points associated with the chart.\n  data: {\n    value: number;\n    name: any;\n  }[] = [];\n\n  // Stores the chart in the format expected for line charts by NGX-Charts.\n  lineChartData: {\n    name: any;\n    series: {\n      value: number;\n      name: any;\n    }[];\n  }[];\n\n  // The minimum and maximum Y-axis values to be displayed on the chart.\n  yScaleMin: number;\n  yScaleMax: number;\n\n  // Used to display horizontal \"reference\" lines in the NGX-Charts line chart.\n  // Generally an array of two elements (the low and high values).\n  normalValues: {\n    name: string;\n    value: number;\n  }[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxInline.html":{"url":"components/CheckboxInline.html","title":"component - CheckboxInline","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxInline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/checkbox-inline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                checkbox-inline\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-inline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxData\n                            \n                            \n                                combinedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkboxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"checkbox-inline\",\n\ttemplateUrl: \"./checkbox-inline.html\"\n})\n\nexport class CheckboxInline{\n\t@Input() inputData: any;\n\tcheckboxData : boolean[] = [];\n\tcombinedData: String[] = [];\n\t\n\tngOnInit(){\n\t\t// initialize the checkboxes all to false\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n      \n       {{entry.description}} \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}                    {{entry.description}}           '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxInline'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/client.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class Client {\n\tid: string;\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColumnStateSwitcherComponent.html":{"url":"components/ColumnStateSwitcherComponent.html","title":"component - ColumnStateSwitcherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColumnStateSwitcherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component for switching between the three states of each column.\nThe three possible states are: Default, Note Pad, and Scratch Pad.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                columnStateSwitcher\n            \n\n\n\n\n            \n                templateUrl\n                ./columnStateSwitcher.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCount\n                            \n                            \n                                switchToDefault\n                            \n                            \n                                switchToScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                columnType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         BaseColumn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n                \n                    \n                        The type of the column in which the switcher is used.\nFor example, 'conditions', 'observations', or 'careplans'.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:53\n                \n            \n\n\n            \n                \n                    Retrieve the number of items in the column's scratch pad. This \nnumber is displayed in the switcher component.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToDefault\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:29\n                \n            \n\n\n            \n                \n                    Switch to the default view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:40\n                \n            \n\n\n            \n                \n                    Switch to the scratch pad view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { BaseColumn } from '../baseColumn';\n\n\n /**\n  * Component for switching between the three states of each column.\n  * The three possible states are: Default, Note Pad, and Scratch Pad.\n  */\n@Component({\n  selector: 'columnStateSwitcher',\n  templateUrl: './columnStateSwitcher.html'\n})\nexport class ColumnStateSwitcherComponent {\n  @Input() column: BaseColumn;\n\n  /**\n   * The type of the column in which the switcher is used.\n   * For example, 'conditions', 'observations', or 'careplans'.\n   */\n  @Input() columnType: string;\n\n  constructor (private scratchPadService: ScratchPadService) { }\n\n  /**\n   * Switch to the default view of the column.\n   */\n  switchToDefault() {\n    if (this.column != null) {\n      this.column.columnState = 'default';\n      this.column.updateService(); // Update the service to store correct column state\n      this.column.showDefault();\n    }\n  }\n\n  /**\n   * Switch to the scratch pad view of the column.\n   */\n  switchToScratchPad() {\n    if (this.column != null) {\n      this.column.columnState = 'scratchpad';\n      // Update the service to store correct column state\n      this.column.updateService(); \n      this.column.showScratchPad();\n    }\n  }\n\n  /**\n   * Retrieve the number of items in the column's scratch pad. This \n   * number is displayed in the switcher component.\n   */\n  getScratchPadCount(): number {\n    if (this.columnType == 'conditions') {\n      return this.scratchPadService.conditions.length;\n    } else if (this.columnType == 'observations') {\n      return this.scratchPadService.observations.length;\n    } else if (this.columnType == 'careplans') {\n      // TODO: Implement once scratch pad is finished for careplans.\n      return 0;\n    }\n    return 0;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      {{ getScratchPadCount() }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ getScratchPadCount() }}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColumnStateSwitcherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condition.html":{"url":"classes/Condition.html","title":"class - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/condition.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clinicalStatus\n                            \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                isParent\n                            \n                            \n                                isVisible\n                            \n                            \n                                onsetDateTime\n                            \n                            \n                                parent\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                verificationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clinicalStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onsetDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verificationStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Condition implements Associable {\n    id: string;\n    onsetDateTime: string;\n    relativeDateTime: string;\n    verificationStatus: string;\n    clinicalStatus: string;\n    isVisible: boolean;\n    isParent: boolean;\n    parent: string;\n\tcode: {\n        coding: [{code: string, display: string, system: string}],\n        text: string\n    };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConditionService.html":{"url":"injectables/ConditionService.html","title":"injectable - ConditionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConditionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/condition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnState\n                            \n                            \n                                conditions\n                            \n                            \n                                conditionsCache\n                            \n                            \n                                    Private\n                                path\n                            \n                            \n                                selectedCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCheckedConditions\n                            \n                            \n                                getColumnState\n                            \n                            \n                                loadAllergies\n                            \n                            \n                                loadConditions\n                            \n                            \n                                loadConditionsPage\n                            \n                            \n                                setColumnState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnState\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         String\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \nloadAllergies(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditions\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditions(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditionsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditionsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setColumnState\n                        \n                        \n                    \n                \n            \n            \n                \nsetColumnState(newColumnState: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newColumnState\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionsCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Condition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of, concat } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Condition } from '../models/condition.model';\nimport { AllergyIntolerance } from '../models/allergyIntolerance.model';\n\n@Injectable()\nexport class ConditionService {\n  private path = '/Condition';\n\n  conditions: Array = [];\n  // The currently selected (highlighted) condition \n  selectedCondition: Condition = null;\n\n  conditionsCache = {};\n  columnState: String;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  // https://stackoverflow.com/questions/45594609/which-operator-to-chain-observables-conditionally\n  // Because the conditions are paginated in the API, we must continually\n  // load the next page until no pages remain. This is achieved through\n  // concatMap and Observable.concat, as discussed above.\n  loadConditionsPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        const conditions = >bundle.entry.map(r => r.resource);\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(conditions), this.loadConditionsPage(nextLink.url));\n        } else {\n          return of(conditions);\n        }\n      }));\n  }\n\n  // Retrieve conditions for a given patient\n  loadConditions(patient: Patient): Observable> {\n    var url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadConditionsPage(url);\n  }\n\n  getCheckedConditions() {\n    return this.conditions.filter(c => {\n      return this.scratchPadService.checkedMapConditions.get(c);\n    });\n  }\n\n  // Retrieve allergies for a given patient\n  loadAllergies(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + \"/AllergyIntolerance\" + \"?patient=\" + patient.id;\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no allergies\n          return new Array();\n        }\n      }));\n  }\n\n  // Gets the state of the conditions column (default or scratch pad)\n  getColumnState(): String {\n    return this.columnState;\n  }\n\n  // Let the service know that the column state has changed\n  setColumnState(newColumnState: String): void {\n    this.columnState = newColumnState;\n  }\n\n  // TODO: Cache API calls into data structures that last for the duration of a session \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsChartComponent.html":{"url":"components/ConditionsChartComponent.html","title":"component - ConditionsChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsChart/conditionsChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsChart\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collapseQueue\n                            \n                            \n                                conditionGrouping\n                            \n                            \n                                conditionGroupingName\n                            \n                            \n                                conditions\n                            \n                            \n                                selected\n                            \n                            \n                                textInputForEdit\n                            \n                            \n                                viewToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ellipsesToggle\n                            \n                            \n                                expand\n                            \n                            \n                                groupConditions\n                            \n                            \n                                loadFinished\n                            \n                            \n                                newTable\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                scratchPadCheckBoxes\n                            \n                            \n                                selectCondition\n                            \n                            \n                                sortCondition\n                            \n                            \n                                tableNavigation\n                            \n                            \n                                toggleExpansion\n                            \n                            \n                                updateScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ellipsesToggle\n                        \n                        \n                    \n                \n            \n            \n                \nellipsesToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            groupConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngroupConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadFinished\n                        \n                        \n                    \n                \n            \n            \n                \nloadFinished()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newTable\n                        \n                        \n                    \n                \n            \n            \n                \nnewTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLocation\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scratchPadCheckBoxes\n                        \n                        \n                    \n                \n            \n            \n                \nscratchPadCheckBoxes(checked: boolean, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsortCondition(x: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tableNavigation\n                        \n                        \n                    \n                \n            \n            \n                \ntableNavigation(clickedSet: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clickedSet\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleExpansion\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapseQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGroupingName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Active\", \"Inactive\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInputForEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'conditionsChart',\n  templateUrl: './conditionsChart.html'\n})\nexport class ConditionsChartComponent {\n  selected: Condition;\n  conditions: Array = [];\n  viewToggle: boolean = false;\n  collapseQueue: Array = [];\n  conditionGrouping: Array = [];\n  conditionGroupingName: Array = [\"Active\", \"Inactive\"];\n  textInputForEdit: String;\n\n  @Input() patient: Patient;\n\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  constructor(\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = conditions;\n        this.loadFinished();\n      });\n    }\n  }\n\n  selectCondition(condition: Condition) {\n    this.selected = condition;\n    this.conditionSelected.emit(this.selected);\n    for (let c of this.conditions) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  sortCondition(x: string) {\n    if (x == \"date-asc\" || x == \"date-desc\") {\n      var a = 1;\n      if (x == \"date-asc\") {\n        a = -a;\n      }\n\n      for (let c of this.conditionGrouping) {\n        c.sort((n1, n2) => {\n          if (n1.code['coding'][0]['code'] > n2.code['coding'][0]['code']) {\n            return a;\n          }\n          if (n1.code['coding'][0]['code']  {\n      if (n1.onsetDateTime  n2.onsetDateTime) {\n        return -1;\n      }\n    })\n    var diff = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n\n    for (let c of this.conditions) {\n      c.isVisible = true;\n      var newDate = new Date(c.onsetDateTime).getTime() + diff;\n      c.relativeDateTime = new Date(newDate).toDateString();\n      c.relativeDateTime = moment(newDate).toISOString();\n    }\n    if (this.viewToggle == false) {\n      //this.viewConditionList = JSON.parse(JSON.stringify(this.conditions));\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n    this.conditionService.conditions = this.conditions;\n    this.groupConditions();\n  }\n\n  // Method for basic toggling, using JSON functions to toggle internal Angular2 module OnChanges for UI reactivity\n  ellipsesToggle() {\n    // Basic logic for toggle, assuming this.conditions contains all info, and this.viewConditionList is the modified list being used to display data\n    if (this.viewToggle == false) {\n      for (let c of this.conditions) {\n        c.isVisible = true;\n      }\n      this.viewToggle = true;\n    }\n  }\n\n  toggleExpansion() {\n\n    if (this.viewToggle == true) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n      this.viewToggle = false;\n    }\n  }\n\n  scratchPadCheckBoxes(checked: boolean, value) {\n\n    if (checked) {\n      // this.conditions[value].isSelected = true;\n      this.scratchPadService.toAddToCondSpArray.push(this.conditions[value]);\n    }\n    else {\n      // this.conditions[value].isSelected = false;\n      let temp = this.scratchPadService.toAddToCondSpArray.indexOf(this.conditions[value]);\n      if (temp > -1) {\n        // This will actually delete instead of simply setting to null, which will throw errors in the long run\n        this.scratchPadService.toAddToCondSpArray.splice(temp, 1);\n      }\n    }\n  }\n\n  updateScratchPad() {\n    //this.scratchPadService.buttonClicked(true);\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n\n  groupConditions() {\n    for (let c of this.conditions) {\n      if (c.clinicalStatus == \"active\") {\n        if (!this.conditionGrouping[0]) {\n          this.conditionGrouping[0] = [c];\n        }\n        else {\n          this.conditionGrouping[0].push(c);\n        }\n      }\n      else {\n        if (!this.conditionGrouping[1]) {\n          this.conditionGrouping[1] = [c];\n        }\n        else {\n          this.conditionGrouping[1].push(c);\n        }\n      }\n    }\n    // this.conditionGrouping[1] = this.conditionGrouping[0];\n  }\n\n  tableNavigation(clickedSet: number) {\n    for (let c of this.conditionGrouping) {\n      let cNum = this.conditionGrouping.indexOf(c);\n      if (cNum != clickedSet) {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = true;\n      }\n      else {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = false;\n      }\n    }\n  }\n\n  newTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number) {\n    if (this.conditionGroupingName.indexOf(tableName) == -1) {\n      this.conditionGroupingName.push(tableName);\n      for (let c of this.conditions) {\n        // Right now this will only allow for a table with one quality!\n        var fullPath = c;\n        dataLocation.forEach(element => {\n          try {\n            fullPath = c[element];\n          }\n          catch (error) {\n            console.log('That field does not exist on this Condition' + c);\n          }\n        });\n        // Testing condition and adding if it's true\n        if (quality) {\n          console.log(fullPath);\n          if (!this.conditionGrouping[groupingCount]) {\n            this.conditionGrouping[groupingCount] = [c];\n          }\n          else {\n            this.conditionGrouping[groupingCount].push(c);\n\n          }\n        }\n      }\n    }\n    else {\n      console.log(\"This table already exists\");\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Tools\n    \n      \n      \n    \n  \n  (none)\n  \n    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}\n    \n    \n      \n        \n          \n          Description\n          Status\n          Onset\n           \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              ... {{cSub['code']['text']}} {{cSub['code']['coding'][0]['code']}}\n            \n            {{cSub.clinicalStatus}}\n            {{cSub.relativeDateTime}}\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tools                        (none)   0\" id=\"tableParentEle\">    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}                                          Description          Status          Onset                                                                                                                 ... {{cSub[\\'code\\'][\\'text\\']}} {{cSub[\\'code\\'][\\'coding\\'][0][\\'code\\']}}                        {{cSub.clinicalStatus}}            {{cSub.relativeDateTime}}                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsComponent.html":{"url":"components/ConditionsComponent.html","title":"component - ConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditions/conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditions\n            \n\n\n\n\n            \n                templateUrl\n                ./conditions.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conditionGrouping\n                            \n                            \n                                conditions\n                            \n                            \n                                justCreated\n                            \n                            \n                                loaded\n                            \n                            \n                                scratchPadConditions\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                viewToggle\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                updateService\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            justCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scratchPadConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\ndeclare var $: any; //Necessary in order to use jQuery to open popup.\n\n@Component({\n  selector: 'conditions',\n  templateUrl: './conditions.html'\n})\nexport class ConditionsComponent extends BaseColumn {\n  // The currently selected condition in the list.\n  selected: Condition;\n\n  // The list of conditions being displayed.\n  conditions: Array = [];\n  scratchPadConditions: any = [];\n\n  // for checking whenever the page is loaded\n  loaded: boolean = false;\n\n  viewToggle: boolean = false;\n  conditionGrouping: Array = [];\n  justCreated: boolean;\n\n  // for column switching\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private fhirService: FhirService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService\n  ) {\n    super();\n    this.justCreated = true;\n    this.scratchPadConditions = this.getScratchPadConditions();\n\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    // Triggered if a new patient is selected (not even implemented yet).\n    this.selected = null;\n    this.conditions = [];\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = this.conditions.concat(conditions);\n        this.onLoadComplete();\n      });\n    }\n  }\n\n  // Called when all conditions have been loaded.\n  onLoadComplete() {\n    console.log(\"Loaded \" + this.conditions.length + \" conditions.\");\n\n    this.conditions.sort((c1, c2) => {\n      return c2.onsetDateTime.localeCompare(c1.onsetDateTime);\n    });\n\n    // Scale dates to make them appear more recent for demos.\n    // 0.8 is an arbitrary value that produces realistic dates.\n    if (this.conditions.length > 0) {\n      let RECENCY_MULTIPLIER = 0.8;\n      let timeSinceConditionOnset = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n      let scaledTimeSinceConditionOnset = Math.floor(RECENCY_MULTIPLIER * timeSinceConditionOnset);\n\n      for (let condition of this.conditions) {\n        condition.isVisible = true;\n        let relativeDateTime = new Date(condition.onsetDateTime).getTime() + scaledTimeSinceConditionOnset;\n        condition.relativeDateTime = moment(relativeDateTime).toISOString();\n      }\n    }\n\n    if (!this.viewToggle) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n\n    this.conditionService.conditions = this.conditions;\n\n    // for rendering elements only after page is loaded (there probably is a better way)\n    this.loaded = true;\n\n    // initialize the scratchPadService totalConditions with all the stuff\n    this.scratchPadService.initConditions(this.conditions);\n  }\n\n  // Update the service to store correct column state\n  updateService(): void {\n    this.conditionService.setColumnState(this.columnState);\n  }\n\n  // ===============================================================================================================================================\n  // ======================================================== GETTERS AND SETTERS===================================================================\n  // ===============================================================================================================================================\n\n  // retrieves the selected conditions from the scratch pad\n  getScratchPadConditions() {\n    return this.scratchPadService.getConditions();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Conditions\n      \n        \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Testing condition popover\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Conditions                                                                          Testing condition popover  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsDisplay.html":{"url":"components/ConditionsDisplay.html","title":"component - ConditionsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllConditions\n                            \n                            \n                                checkCondition\n                            \n                            \n                                expand\n                            \n                            \n                                getDateString\n                            \n                            \n                                isConditionAssociated\n                            \n                            \n                                isConditionChecked\n                            \n                            \n                                isConditionSelected\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printmsg\n                            \n                            \n                                selectCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditions\n                            \n                            \n                                scratchPadMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService, conditionService: ConditionService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditions\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scratchPadMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllConditions\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllConditions(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCondition\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCondition(checkedCondition: Condition, checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedCondition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateString\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateString(c: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionAssociated(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionChecked(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionSelected(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printmsg\n                        \n                        \n                    \n                \n            \n            \n                \nprintmsg(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Condition } from '../../models/condition.model';\n\n@Component({\n  selector: 'conditionsDisplay',\n  templateUrl: './conditionsDisplay.html'\n})\nexport class ConditionsDisplay {\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() conditions: Array;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // Whether this display of conditions is within the scratch pad.\n  @Input() scratchPadMode: boolean = false;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private scratchPadService: ScratchPadService,\n    private conditionService: ConditionService,\n    private associationService: AssociationService\n  ) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking conditions.\n    if (this.conditionService.getColumnState() === \"scratchpad\") {\n      // Add 'Remove from Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Remove from Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.removeCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    } else {\n      // Add 'Add to Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Add to Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.addCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    }\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n  }\n\n  // Selects an individual condition (which causes it to be highlighted).\n  // This is NOT the same as checking a condition.\n  selectCondition(condition: Condition) {\n    this.conditionService.selectedCondition = condition;\n  }\n\n  // Check or uncheck an individual condition\n  checkCondition(checkedCondition: Condition, checked: boolean) {\n    this.scratchPadService.checkCondition(checked, checkedCondition);\n  \n    // When an individual condition is checked, the \"check all\" checkbox should be unchecked.\n    this.isAllChecked = false;\n  }\n\n  isConditionSelected(condition: Condition) {\n    return condition == this.conditionService.selectedCondition;\n  }\n\n  // Determine whether a condition is currently checked.\n  isConditionChecked(condition: Condition) {\n    return this.scratchPadService.checkedMapConditions.get(condition) || false;\n  }\n\n  // Determine whether a condition is currently associated (based on associations tool)\n  isConditionAssociated(condition: Condition) {\n    return this.associationService.associatedMapConditions.get(condition) || false;\n  }\n\n  // Check or uncheck all conditions.\n  checkAllConditions(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let condition of this.conditions) {\n        this.scratchPadService.checkCondition(checked, condition);\n    }\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n  printmsg(condition: Condition) {\n      console.log(condition);\n  }\n\n  getDateString(c: Condition) {\n    let d = new Date(c.onsetDateTime);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Description\n        Status\n        Onset\n      \n    \n    \n       \n        \n          \n        \n        \n          ... {{c['code']['text']}} \n        \n        {{c.clinicalStatus}}\n        {{c.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Description        Status        Onset                                                                 ... {{c[\\'code\\'][\\'text\\']}}                 {{c.clinicalStatus}}        {{c.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContextMenuComponent.html":{"url":"components/ContextMenuComponent.html","title":"component - ContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contextMenu/contextMenu.component.ts\n\n\n    \n        Description\n    \n    \n        A reusable context menu component.\nExample Usage:\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    this.menu.addOption({\n  'icon': 'glyphicon-stats', // icon to display\n  'text': 'Add to Trend Tool', // text to display\n  'exec': function(data) { // what to execute upon click\n      console.log(data);\n  }\n});\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                contextMenu\n            \n\n\n\n\n            \n                templateUrl\n                ./contextMenu.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickSubscription\n                            \n                            \n                                closeable\n                            \n                            \n                                CLOSEABLE_DELAY\n                            \n                            \n                                data\n                            \n                            \n                                left\n                            \n                            \n                                options\n                            \n                            \n                                top\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addOption\n                            \n                            \n                                    Private\n                                handleDocClick\n                            \n                            \n                                    Private\n                                handleOptionClick\n                            \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addOption\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOption(option: ContextMenuOption)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:58\n                \n            \n\n\n            \n                \n                    Add an option to the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                ContextMenuOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleDocClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDocClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:67\n                \n            \n\n\n            \n                \n                    Hide the context menu if user clicks outside of it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleOptionClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleOptionClick(option, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:113\n                \n            \n\n\n            \n                \n                    Handles clicks on context menu options. If the option \nhas an associated exec function, it is executed with \ndata passed as the parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The context menu option that was clicked.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:133\n                \n            \n\n\n            \n                \n                    Closes the context menu. Also handles cleaning up \nthe click subscription, which is no longer needed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event triggering the hiding.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(data, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:82\n                \n            \n\n\n            \n                \n                    Show the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to be passed to the context menu.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered the menu.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:43\n                            \n                        \n\n                \n                    \n                        Observable subscription to document clicks. Clicking out of the \ncontext menu closes it.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLOSEABLE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:50\n                            \n                        \n\n                \n                    \n                        Prevents a glitch in contexts where the menu is opened by a left click.\nWithout this delay on being able to close the menu, the menu would close\nthe moment it opened.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:33\n                            \n                        \n\n                \n                    \n                        The data passed into the menu from wherever it was triggered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:28\n                            \n                        \n\n                \n                    \n                        The list of options displayed in the menu.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { ContextMenuOption } from '../../models/contextMenuOption.model';\nimport { fromEvent } from 'rxjs';\n\n/**\n * A reusable context menu component.\n * \n * Example Usage:\n * \n * @example\n * this.menu.addOption({\n *              'icon': 'glyphicon-stats', // icon to display\n *              'text': 'Add to Trend Tool', // text to display\n *              'exec': function(data) { // what to execute upon click\n *                  console.log(data);\n *              }\n * });\n */\n@Component({\n  selector: 'contextMenu',\n  templateUrl: './contextMenu.html'\n})\nexport class ContextMenuComponent {\n\n  /**\n  * The list of options displayed in the menu.\n  */\n  options: Array = [];\n\n  /**\n  * The data passed into the menu from wherever it was triggered.\n  */\n  data: any = null;\n\n  visible: boolean = false;\n  top: string = '0px';\n  left: string = '0px';\n\n  /**\n  * Observable subscription to document clicks. Clicking out of the \n  * context menu closes it.\n  */\n  clickSubscription: any = null;\n\n  /**\n  * Prevents a glitch in contexts where the menu is opened by a left click.\n  * Without this delay on being able to close the menu, the menu would close\n  * the moment it opened.\n  */\n  CLOSEABLE_DELAY: number = 100;\n  closeable: boolean = false;\n\n  constructor(private ref: ElementRef) { }\n\n  /**\n   * Add an option to the context menu.\n   */\n  public addOption(option: ContextMenuOption) {\n    this.options = this.options.concat(option);\n  }\n\n  /**\n  * Hide the context menu if user clicks outside of it.\n  * \n  * @param event The click event on the document.\n  */\n  private handleDocClick(event) {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      // Only hide the menu if it is currently closeable.\n      if (this.closeable) {\n          this.hide(null);\n      }\n    }\n  }\n\n  /**\n   * Show the context menu.\n   * \n   * @param data Data to be passed to the context menu.\n   * @param event The click event that triggered the menu.\n   */\n  public show(data, event) {\n    this.data = data;\n\n    // Set the location of the menu to where the user clicked.\n    this.top = event.pageY + 'px';\n    this.left = event.pageX + 'px';\n\n    this.visible = true;\n    this.closeable = false;\n\n    // Allow the menu to be closed only after an interval has elapsed.\n    setTimeout(() => { this.closeable = true; }, this.CLOSEABLE_DELAY);\n\n    // Disable the standard click behavior.\n    event.preventDefault();\n\n    // Subscribe to document click events.\n    this.clickSubscription = fromEvent(document, 'click')\n      .subscribe((event) => {\n        this.handleDocClick(event);\n    });\n  }\n\n  /**\n   * Handles clicks on context menu options. If the option \n   * has an associated `exec` function, it is executed with \n   * `data` passed as the parameter.\n   * \n   * @param option The context menu option that was clicked.\n   * @param event The click event on the option\n   */\n  private handleOptionClick(option, event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (option.exec) {\n      // Execute the function tied to the clicked menu option.\n      option.exec(this.data);\n    }\n\n    // Hide the context menu.\n    this.hide(event);\n  }\n\n  /**\n   * Closes the context menu. Also handles cleaning up \n   * the click subscription, which is no longer needed.\n   * \n   * @param event The click event triggering the hiding.\n   */\n  private hide(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    // Unsubscribe from document click events.\n    if (this.clickSubscription) {\n      this.clickSubscription.unsubscribe();\n      this.clickSubscription = null;\n    }\n\n    // Hide the menu and reset the associated data.\n    this.visible = false;\n    this.data = null;\n  }\n}\n    \n\n    \n        \n\n  {{ option.text }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ option.text }}'\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextMenuOption.html":{"url":"classes/ContextMenuOption.html","title":"class - ContextMenuOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextMenuOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contextMenuOption.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a context menu option for use with \nContextMenuComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exec\n                            \n                            \n                                icon\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:23\n                            \n                        \n\n                \n                    \n                        Function to be executed upon click of the option\nin the context menu. \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                Data associated with the context menu.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:10\n                            \n                        \n\n                \n                    \n                        Icon to display next to the option (from the \nBootstrap Icons library).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:15\n                            \n                        \n\n                \n                    \n                        Text to be displayed in the option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ContextMenuOption {\n    /**\n     * Icon to display next to the option (from the \n     * Bootstrap Icons library).\n     */\n    icon: string;\n\n    /**\n     * Text to be displayed in the option.\n     */\n    text: string;\n\n    /**\n     * Function to be executed upon click of the option\n     * in the context menu. \n     * \n     * @param data Data associated with the context menu.\n     */\n    exec: (data) => void;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoctorNoteComponent.html":{"url":"components/DoctorNoteComponent.html","title":"component - DoctorNoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DoctorNoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/doctorNote/doctorNote.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                doctorNote\n            \n\n\n\n\n            \n                templateUrl\n                ./notes.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'doctorNote',\n  templateUrl: './notes.html'\n})\nexport class DoctorNoteComponent { }\n\n    \n\n    \n        \n\n  \n    \n    \n  \n  Weight:\n    \n  \n  Height:\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Weight:        Height:      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'DoctorNoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DoctorService.html":{"url":"injectables/DoctorService.html","title":"injectable - DoctorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DoctorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/doctor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configMode\n                            \n                            \n                                filter\n                            \n                            \n                                graphConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGraphConfig\n                            \n                            \n                                assignVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGraphConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddGraphConfig(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assignVisible\n                        \n                        \n                    \n                \n            \n            \n                \nassignVisible(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { Condition } from '../models/condition.model';\n\n@Injectable()\nexport class DoctorService {\n  filter: Array = [];\n  configMode: boolean = true;\n  graphConfig: Array> = [];\n\n  constructor(private cookieService: CookieService) { }\n\n  // The change to visiblities modifiers for the list should be an input to assignVisible(), and input through conditions.component.ts\n  assignVisible(list: Array) {\n    // Wipes the lists, as assignVisible() gets called on subscribe){data == true} for conditions.component.ts\n    // Needs to have a clean list, or it will push doubles/triples, or more\n\n    // Use \"let of\" to generate enumerated list, allows for pass by value iteration\n    let count = 0;\n    for (let c of list) {\n      // Right now the logic only excludes one code, for testing purposes\n      // thisModel is a undefined data model, depending on if we want to leave the service with the data we need to create a static model, but\n      // it should work for testing purposes\n\n      if (count ) {\n    this.graphConfig.push(list);\n    this.cookieService.set('graphConfig', JSON.stringify(this.graphConfig));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encounter.html":{"url":"classes/Encounter.html","title":"class - Encounter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encounter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/encounter.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                position\n                            \n                            \n                                reason\n                            \n                            \n                                status\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEndDate\n                            \n                            \n                                getLogValue\n                            \n                            \n                                getReason\n                            \n                            \n                                getStartDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEndDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetEndDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReason\n                        \n                        \n                    \n                \n            \n            \n                \ngetReason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStartDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetStartDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Encounter {\n  \n  id: string;\n  status: string;\n\n  period: {\n    start: string;\n    end: string;\n  };\n\n  text: {\n    status: string;\n    div: string;\n  }\n\n  position:string;\n  // Reasons for the encounter.\n  reason: {\n    text: string;\n\n    // Coding details for the encounter reason.\n    coding: {\n      system: string;\n      code: string;\n    }[];\n  }[];\n\n  // Get the first reason for the encounter (if there is one). Otherwise, return null.\n  getReason(): string {\n    // Check if there are any reasons. If not, return null.\n    if (!this.reason) {\n      return null;\n    }\n\n    for (let r of this.reason) {\n      if (r.text) {\n        // Return the text associated with the reason.\n        return r.text;\n      }\n    }\n\n    return null;\n  }\n  getStartDate(): Date { return new Date(this.period.start)}\n  getEndDate(): Date { return new Date(this.period.end)}\n\n  getLogValue(): any {\n    return Math.log(this.getStartDate().getTime())\n  }\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncounterService.html":{"url":"injectables/EncounterService.html","title":"injectable - EncounterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EncounterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encounter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                    Public\n                                loadEncounters\n                            \n                            \n                                    Private\n                                loadEncountersPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/encounter.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Encounter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncountersPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncountersPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Encounter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/encounter.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, concat } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Encounter } from '../models/encounter.model';\n\n\n@Injectable()\nexport class EncounterService {\n  private path = '/Encounter';\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  private loadEncountersPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        let encounters: Array = [];\n        if (bundle.entry) {\n          encounters = bundle.entry.map(e => this.deserialize(e['resource']));\n        }\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(encounters), this.loadEncountersPage(nextLink.url));\n        } else {\n          return of(encounters);\n        }\n      }));\n  }\n\n  public loadEncounters(patient: Patient): Observable> {\n    const url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadEncountersPage(url);\n  }\n\n  // We cannot simply cast the JSON object to an Encounter, because this casted\n  // Encounter will not have the methods of the Encounter class.\n  private deserialize(input: any): Encounter {\n    var fixed: Encounter = new Encounter();\n\n    for (let prop in input) {\n      fixed[prop] = input[prop];\n    }\n\n    return fixed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Favorites.html":{"url":"components/Favorites.html","title":"component - Favorites","body":"\n                   \n\n\n\n\n\n  Components\n  Favorites\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                favorites\n            \n\n\n\n\n            \n                templateUrl\n                ./favorites.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newTest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onRightClick\n                            \n                            \n                                test\n                            \n                            \n                                test2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService, elRef: ElementRef, toolbarService: ToolBarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRightClick\n                        \n                        \n                    \n                \n            \n            \n                \nonRightClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            test\n                        \n                        \n                    \n                \n            \n            \n                \ntest(ref: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            test2\n                        \n                        \n                    \n                \n            \n            \n                \ntest2()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"100px\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ToolBarService } from '../../services/toolbar.service';\n\n@Component({\n  selector: 'favorites',\n  templateUrl: './favorites.html'\n})\nexport class Favorites {\n  constructor(private doctorService: DoctorService, private elRef: ElementRef, private toolbarService: ToolBarService) { }\n\n  newTest: string = \"100px\";\n\n  onRightClick() {\n    return false;\n  }\n\n  test(ref: ElementRef) {\n    /*console.log(\"normal\");\n    console.log(this.elRef);\n    console.log(this.elRef.nativeElement.querySelector('div').style.left);*/\n    this.newTest = \"200px\";\n  }\n\n  test2() {\n    console.log(\"hi\");\n  }\n}\n\n    \n\n    \n        \n\n  \n    Favorites List\n    Known Favorites\n    \n      Link 1\n      Link 2\n    \n    Recently Completed Actions\n    \n      Link 1\n      Link 2\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Favorites List    Known Favorites          Link 1      Link 2        Recently Completed Actions          Link 1      Link 2      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'Favorites'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FhirService.html":{"url":"injectables/FhirService.html","title":"injectable - FhirService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FhirService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/fhir.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                base\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequestOptions\n                            \n                            \n                                getUrl\n                            \n                            \n                                setToken\n                            \n                            \n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/fhir.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestOptions(withAuth: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withAuth\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetToken(newToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class FhirService {\n\n  constructor() { }\n\n  private base: string;\n  public token: string;\n\n  getUrl(): string {\n    return this.base;\n  }\n\n  setUrl(url: string) {\n    this.base = url;\n  }\n\n  setToken(newToken: string) {\n    this.token = newToken;\n  }\n\n  getRequestOptions(withAuth: boolean = true): { headers: HttpHeaders } {\n    let headers = new HttpHeaders({'Accept': 'application/json'});\n    if (withAuth) {\n      headers = headers.append('Authorization', 'Bearer ' + this.token);\n    }\n    return { headers: headers };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/form.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Form {\n\tid: number;\n\ttype: string;\n\tdata : any;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormBuilder.html":{"url":"components/FormBuilder.html","title":"component - FormBuilder","body":"\n                   \n\n\n\n\n\n  Components\n  FormBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-builder/form-builder.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                form-builder\n            \n\n\n            \n                styles\n                #main_list {list-style-type: none;}\n            \n\n\n            \n                templateUrl\n                ./form-builder.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                combData\n                            \n                            \n                                components\n                            \n                            \n                                    Public\n                                forms\n                            \n                            \n                                totalData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getData\n                            \n                            \n                                getForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                storeData\n                            \n                            \n                                    Public\n                                submitClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formInput\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmitClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formInput\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSubmitClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForms\n                        \n                        \n                    \n                \n            \n            \n                \ngetForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('form')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Form[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Form } from '../../models/form.model';\n\n@Component({\n  selector: 'form-builder',\n  templateUrl: './form-builder.html',\n  styles: [\"#main_list {list-style-type: none;}\"]\n})\n\nexport class FormBuilder  {\n\t// GLOBAL VARIABLES\n\tpublic forms: Form[];\n\t@ViewChildren('form') components: any;\n\t\n\ttotalData: String[] = [];\n\tcombData: any;\n\t\n\t@Input() formInput: any[];\n\t@Input() userId: String; \n\t\n\t@Output() onSubmitClick: EventEmitter = new EventEmitter();\n\t\n\t// ============================== EVENT METHODS ==================================\n\tconstructor(){}\n\t\n\tngOnInit(): void {\n\t\tthis.getForms();\n\t}\n\t\t\n\t// method that uses service to get the forms from the server\n\tgetForms(): void {\n\t\t//this.formBuilderService.getTemplate().then(forms => {this.forms = forms; console.log(forms);});\n\t\tthis.forms = this.formInput;\n\t}\n\t\n\t// ===================== LOGIC WHEN SUBMIT BUTTON CLICKED ========================\n\t\n\tpublic submitClick(): void {\n\t\tthis.totalData = [];\n\t\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n  \n    \n    \n       \n    \n    \n       \n    \n    \n       \n    \n    \n      \n    \n    \n      \n    \n  \n   Submit \n\n    \n\n    \n            #main_list {list-style-type: none;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Submit '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormBuilder'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormCreatorModule.html":{"url":"modules/FormCreatorModule.html","title":"module - FormCreatorModule","body":"\n                   \n\n\n\n\n    Modules\n    FormCreatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { CheckboxInline } from '../components/form_components/checkbox-inline.component';\nimport { NormalBox1 } from '../components/form_components/normal-box-1.component';\nimport { NormalBox2 } from '../components/form_components/normal-box-2.component';\nimport { SelectListSingle } from '../components/form_components/select-list-single.component';\nimport { ScratchPadUpdate } from '../components/form_components/scrachpad-update.component';\n\n@NgModule({\n\timports: [\n\t\tFormsModule,\n\t\tBrowserModule\n\t],\n\tdeclarations: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t], exports: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t]\n})\n\nexport class FormCreatorModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HighlightDirective.html":{"url":"directives/HighlightDirective.html","title":"directive - HighlightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  HighlightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/highlight.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [highlight]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlightText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlightText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer, Input} from '@angular/core';\n\n@Directive({\n\tselector: '[highlight]'\n})\nexport class HighlightDirective {\n\n\t@Input('highlightText') text: string = '';\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t\tconsole.log(\"Highlighting!\");\n\t\tthis.el.nativeElement.textContent = 'foo';\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoricalTrendsComponent.html":{"url":"components/HistoricalTrendsComponent.html","title":"component - HistoricalTrendsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoricalTrendsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/historicalTrends/historicalTrends.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                historicalTrends\n            \n\n\n\n\n            \n                templateUrl\n                ./historicalTrends.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartSize\n                            \n                            \n                                    Private\n                                maxDate\n                            \n                            \n                                menu\n                            \n                            \n                                    Private\n                                minDate\n                            \n                            \n                                mouseEvent\n                            \n                            \n                                mouseSubscription\n                            \n                            \n                                    Private\n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onDataPointSelect\n                            \n                            \n                                resetDateRange\n                            \n                            \n                                setDateRange\n                            \n                            \n                                setDateRangeMonths\n                            \n                            \n                                setDateRangeYears\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trendsService: HistoricalTrendsService, observationService: ObservationService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDataPointSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonDataPointSelect(chartEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartEvent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nresetDateRange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRange(form)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeMonths\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeMonths(months)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    months\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeYears\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeYears(years)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    years\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [800, 200]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            patient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\nimport * as moment from 'moment';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { PatientService } from '../../services/patient.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'historicalTrends',\n  templateUrl: './historicalTrends.html'\n})\nexport class HistoricalTrendsComponent {\n  // Width and height of displayed charts.\n  private chartSize: number[] = [800, 200];\n\n  // The minimum and maximum dates for the x-axis of the displayed charts.\n  private minDate: Date = null;\n  private maxDate: Date = null;\n\n  // Reference to the current patient.\n  private patient: Patient;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // Observable subscription to mouse movements.\n  mouseSubscription: any = null;\n\n  // Store the most recent mouse event to keep track of the mouse location.\n  mouseEvent: any = null;\n\n  constructor(\n    private trendsService: HistoricalTrendsService,\n    private observationService: ObservationService,\n    private patientService: PatientService\n  ) {\n      // Track the location of the mouse (needed for context menu).\n      this.mouseSubscription = fromEvent(document, 'mousemove')\n        .subscribe((event) => {\n          this.mouseEvent = event;\n      });\n\n      this.patientService.loadPatient().subscribe(patient => {\n        this.patient = patient;\n      })\n    }\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add option to the context menu shown when clicking data points.\n    this.menu.addOption({\n      'icon': 'glyphicon-list-alt',\n      'text': 'Add to Side Bar',\n      'exec': function(condition) {\n        console.log(\"Add to Side Bar\");\n        // TODO: Implement Add to Side Bar functionality.\n      }.bind(this)\n    });\n  }\n\n  // Set specific (user selected) min and max dates for the x-axis of displayed charts.\n  setDateRange(form) {\n    // Do nothing if one of the dates is invalid.\n    if (!moment(form.minDate).isValid() || !moment(form.maxDate).isValid()) {\n      return;\n    }\n\n    this.minDate = new Date(form.minDate);\n    this.maxDate = new Date(form.maxDate);\n  }\n\n  // Reset the min and max dates for the x-axis of displayed charts (so all data is shown).\n  resetDateRange() {\n    this.minDate = null;\n    this.maxDate = null;\n\n    // Choose the earliest date of all charts, and the latest date of all charts.\n    for (let chart of this.trendsService.charts) {\n      let [chartMinDate, chartMaxDate] = this.trendsService.getDateRange(chart);\n\n      if (this.minDate == null || chartMinDate.getTime()  this.maxDate.getTime()) {\n        this.maxDate = chartMaxDate;\n      }\n    }\n  }\n\n  // Subtracts the given number of years from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeYears(years) {\n    this.minDate = moment().subtract(years, 'years').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Subtracts the given number of months from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeMonths(months) {\n    this.minDate = moment().subtract(months, 'months').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Called when a data point is clicked on a chart.\n  onDataPointSelect(chartEvent) {\n    this.menu.show(null, this.mouseEvent);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n       Dashboard\n      Back\n    \n    \n      \n        \n          Conditions\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Findings List\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Medications\n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Fit All\n    25 Years\n    10 Years\n    5 Years\n    2 Years\n    1 Year\n    6 Months\n    3 Months\n    1 Month\n    \n       Specify\n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n      Specify start and end dates\n        ×\n      \n      \n        \n          \n          \n          Submit\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Dashboard      Back                                Conditions                                                                                                                Findings List                                                                                                                Medications                                                                                                    Fit All    25 Years    10 Years    5 Years    2 Years    1 Year    6 Months    3 Months    1 Month           Specify                                Specify start and end dates        ×                                                  Submit                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HistoricalTrendsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoricalTrendsService.html":{"url":"injectables/HistoricalTrendsService.html","title":"injectable - HistoricalTrendsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoricalTrendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/historicalTrends.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charts\n                            \n                            \n                                chartsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMedicationChart\n                            \n                            \n                                    Public\n                                addObservationChart\n                            \n                            \n                                    Public\n                                getDateRange\n                            \n                            \n                                    Private\n                                getValueRange\n                            \n                            \n                                    Public\n                                removeChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMedicationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMedicationChart(medication: Medication)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addObservationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addObservationChart(chartName, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDateRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDateRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChart(chartName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            charts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Chart } from '../models/chart.model';\nimport { Medication } from '../models/medication.model';\n\n@Injectable()\nexport class HistoricalTrendsService {\n  // Maps the name of a chart to the chart object itself.\n  chartsMap: Map = new Map();\n  \n  // Store all the charts currently being displayed.\n  charts: Array = [];\n\n  constructor() { }\n\n  // Add a new chart displaying a specific observation in the trends tool.\n  public addObservationChart(chartName, data) {\n    // A chart already exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      return;\n    }\n\n    if (data == null || data.length == 0) {\n      // Avoid creating an empty chart.\n      return;\n    }\n\n    let chart = new Chart();\n\n    // Get the title associated with the data point.\n    chart.title = data[0].code['text'];\n\n    for (let point of data) {\n      // Skip data points without a numeric value.\n      if (!point.valueQuantity || !point.valueQuantity['value']) {\n        continue;\n      }\n\n      // Add the data point to the chart.\n      chart.data.push({\n        name: new Date(point.relativeDateTime),\n        value: point.valueQuantity['value']\n      });\n    }\n\n    // Sort data points in order of date of occurrence.\n    chart.data = chart.data.sort((p1, p2) => p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    // Set the min and max y-axis values for the chart, providing a small buffer\n    // of extra space.\n    let [min, max] = this.getValueRange(chart);\n    let buffer = (max - min) * 0.2;\n\n    chart.yScaleMin = min - buffer;\n    chart.yScaleMax = max + buffer;\n\n    // Add the normal range values for the chart (displayed as horizontal \"reference\" lines).\n    chart.normalValues = [\n      {\n        name: \"Low\",\n        value: min // TODO: These shouldn't be hardcoded.\n      },\n      {\n        name: \"High\",\n        value: max // TODO: These shouldn't be hardcoded.\n      }\n    ];\n\n    // Add the newly created chart to the list of charts.\n    this.chartsMap.set(chartName, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  public addMedicationChart(medication: Medication) {\n    // A chart already exists for the given medication.\n    if (this.chartsMap.has(medication.name)) {\n      return;\n    }\n\n    let chart = new Chart();\n    chart.title = medication.name + ' (' + medication.dosageUnits + ')';\n\n    // Add every period the medication was taken to the chart.\n    for (let i = 0; i  0 ? medication.periods[i - 1] : null;\n      let next = i  p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    this.chartsMap.set(medication.name, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  // Remove the chart with the given name from the trends tool.\n  public removeChart(chartName) {\n    // First check if a chart exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      this.chartsMap.delete(chartName);\n      this.charts = Array.from(this.chartsMap.values());\n    }\n  }\n\n  // Get the smallest and largest values from a given chart.\n  private getValueRange(chart: Chart) {\n    // If the data provided is empty, return [0, 0].\n    if (!chart.data || chart.data.length == 0) {\n      return [0, 0];\n    }\n\n    let min = chart.data[0].value;\n    let max = chart.data[0].value;\n\n    for (let point of chart.data) {\n      min = Math.min(min, point.value);\n      max = Math.max(max, point.value);\n    }\n\n    return [min, max];\n  }\n\n  // Get the earliest and latest dates associated with any point in a chart.\n  public getDateRange(chart: Chart) {\n    // If the data provided is empty, return today's date.\n    if (!chart.data || chart.data.length == 0) {\n      return [new Date(), new Date()];\n    }\n    \n    let minDate: Date = chart.data[0].name;\n    let maxDate: Date = chart.data[0].name;\n\n    for (let point of chart.data) {\n      if (point.name.getTime()  maxDate.getTime()) {\n        maxDate = point.name;\n      }\n    }\n\n    return [minDate, maxDate];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        High-level component that wraps the components showing \npatient information, the toolbar, the timeline, and the \ntriple list (conditions, observations, and care plans).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectPatientById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, patientService: PatientService, cookieService: CookieService, smartService: SmartService, compiler: Compiler)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartService\n                                                  \n                                                        \n                                                                        SmartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compiler\n                                                  \n                                                        \n                                                                        Compiler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectPatientById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectPatientById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:50\n                \n            \n\n\n            \n                \n                    Select a patient to display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the selected patient.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                        The patient that is being displayed. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Compiler } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { PatientService } from '../../services/patient.service';\nimport { SmartService } from '../../services/smart.service';\nimport { FhirService } from '../../services/fhir.service';\n\nimport { Patient } from '../../models/patient.model';\n\n/**\n * High-level component that wraps the components showing \n * patient information, the toolbar, the timeline, and the \n * triple list (conditions, observations, and care plans).\n */\n@Component({\n    selector: 'home',\n    templateUrl: './home.html'\n})\nexport class HomeComponent {\n    /** The patient that is being displayed. */\n    selected: Patient = null;\n\n    constructor(\n        private fhirService: FhirService,\n        private patientService: PatientService,\n        private cookieService: CookieService,\n        private smartService: SmartService,\n        private compiler: Compiler\n    ) {\n        this.compiler.clearCache();\n        this.fhirService.setUrl(this.cookieService.get('fhirBaseUrl'));\n\n        // Retrieve patient data from sandbox.\n        if (this.fhirService.token) {\n            // Access token is already available.\n            this.selectPatientById(this.patientService.patientId);\n        } else {\n            // Retrieve the access token and patient.\n            this.smartService.authenticate().subscribe(data => {\n                this.fhirService.setToken(data['access_token']);\n                this.selectPatientById(data['patient']);\n            });\n        }\n    }\n\n    /**\n     * Select a patient to display.\n     * @param id The id of the selected patient.\n     */\n    public selectPatientById(id: string) {\n        this.patientService.setPatientId(id);\n        this.patientService.loadPatient().subscribe(patient => {\n            this.selected = patient;\n        });\n    }\n}\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoverBoxComponent.html":{"url":"components/HoverBoxComponent.html","title":"component - HoverBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HoverBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hoverBox/hoverBox.component.ts\n\n\n    \n        Description\n    \n    \n        A component for displaying a hover box containing \ncustom information. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hoverBox\n            \n\n\n\n\n            \n                templateUrl\n                ./hoverBox.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DISPLAY_DELAY\n                            \n                            \n                                items\n                            \n                            \n                                left\n                            \n                            \n                                leftOffset\n                            \n                            \n                                timeoutHandle\n                            \n                            \n                                top\n                            \n                            \n                                topOffset\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                isDate\n                            \n                            \n                                    Private\n                                isMonth\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hoverBox/hoverBox.component.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:69\n                \n            \n\n\n            \n                \n                    Hide the hover box.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDate(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:89\n                \n            \n\n\n            \n                \n                    Check whether x is a date to display it in a custom \nformat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isMonth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMonth(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:97\n                \n            \n\n\n            \n                \n                    Check whether x is a month to display it in a custom \nformat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(items: Array, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:37\n                \n            \n\n\n            \n                \n                    Show the hover box with multiple items.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The items to display in the hover box.\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered showing the hover box.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISPLAY_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:27\n                            \n                        \n\n                \n                    \n                        Time (in ms) following a hover before the hover box appears. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:13\n                            \n                        \n\n                \n                    \n                        The data passed into the hover box from wherever it was triggered. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeoutHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:24\n                            \n                        \n\n                \n                    \n                        Used to track whether the hover box is waiting to be shown. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:16\n                            \n                        \n\n                \n                    \n                        Whether the hover box is currently visible or not. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable } from '@angular/core';\n\n/**\n * A component for displaying a hover box containing \n * custom information. \n */\n@Component({\n  selector: 'hoverBox',\n  templateUrl: './hoverBox.html'\n})\nexport class HoverBoxComponent {\n  /** The data passed into the hover box from wherever it was triggered. */\n  items: Array = null;\n\n  /** Whether the hover box is currently visible or not. */\n  visible: boolean = false;\n\n  top: string = '0px';\n  left: string = '0px';\n  topOffset: number = 18;\n  leftOffset: number = 18;\n\n  /** Used to track whether the hover box is waiting to be shown. */\n  timeoutHandle: any = null;\n\n  /** Time (in ms) following a hover before the hover box appears. */\n  DISPLAY_DELAY: number = 200;\n\n  constructor() { }\n\n  /**\n   * Show the hover box with multiple items.\n   * \n   * @param items The items to display in the hover box.\n   * @param event The click event that triggered showing the hover box.\n   */\n  public show(items: Array, event) {\n    // The hover box is already queued to display, no need to display again.\n    if (this.timeoutHandle != null) {\n      return;\n    }\n\n    this.timeoutHandle = setTimeout(() => {\n      this.items = items;\n\n      // Set the location of the hover box to where the mouse is.\n      var topOffset = 0;\n      var leftOffset = 0;\n      // Code used to test moving the hover box away from the edge of the screen. \n      // TODO: do not hardcode pixels, find information of the pixel box\n       \n      if (window.innerWidth - event.pageX \n    \n\n    \n        \n\n  \n    \n      \n        {{item}}\n        &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;\n        \n      \n      {{item}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item}}                                         {{item}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HoverBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HumanizeBytesPipe.html":{"url":"pipes/HumanizeBytesPipe.html","title":"pipe - HumanizeBytesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HumanizeBytesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/humanizeBytes.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        humanizeBytes\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doIt\n                        \n                        \n                    \n                \n            \n            \n                \ndoIt(n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, args: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'humanizeBytes'\n})\nexport class HumanizeBytesPipe implements PipeTransform {\n\n    transform(value: string, args: string[]) {\n        return this.doIt(parseInt(value));\n    }\n\n    doIt(n): string {\n        if (n  (1 / Math.pow(1024, exp - 1))) ? result.toFixed(2) : result.toFixed(0);\n        return readable + si[exp - 1];\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingAnimation.html":{"url":"components/LoadingAnimation.html","title":"component - LoadingAnimation","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loadingAnimation/loadingAnimation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loading-animation\n            \n\n\n\n\n            \n                templateUrl\n                ./loadingAnimation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loadingAnimation/loadingAnimation.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'loading-animation',\n  templateUrl: './loadingAnimation.html'\n})\nexport class LoadingAnimation {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingAnimation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/map.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                STATIC_MAPPINGS\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            STATIC_MAPPINGS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapService {\n    public static STATIC_MAPPINGS = {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medication.html":{"url":"classes/Medication.html","title":"class - Medication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/medication.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dosageUnits\n                            \n                            \n                                name\n                            \n                            \n                                periods\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, dosageUnits: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/medication.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dosageUnits\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dosageUnits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Medication {\n    name: string;\n    dosageUnits: string;\n\n    periods: {\n        start: Date;\n        end: Date;\n        dosage: number;\n    }[];\n    \n    constructor(name: string, dosageUnits: string) {\n        this.periods = [];\n        this.name = name;\n        this.dosageUnits = dosageUnits;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MedicationsComponent.html":{"url":"components/MedicationsComponent.html","title":"component - MedicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MedicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/medications/medications.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                medications\n            \n\n\n\n\n            \n                templateUrl\n                ./medications.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                medications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carePlanService: CarePlanService, historicalTrendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historicalTrendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck(medication: Medication, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Medication } from '../../models/medication.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'medications',\n  templateUrl: './medications.html'\n})\nexport class MedicationsComponent {\n  medications: Array;\n  @Input() patient: Patient;\n\n  constructor(\n    private carePlanService: CarePlanService,\n    private historicalTrendsService: HistoricalTrendsService\n  ) { }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.carePlanService.loadMedications(this.patient).subscribe(medications => {\n        this.medications = medications;\n        console.log('Loaded ' + this.medications.length + ' medications.');\n      })\n    }\n  }\n\n  check(medication: Medication, event: any) {\n    // Check whether care plan was checked or unchecked.\n    if (event.target.checked) {\n      this.historicalTrendsService.addMedicationChart(medication);\n    } else {\n      this.historicalTrendsService.removeChart(medication.name);\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    \n      \n      Name\n    \n  \n  \n     \n      \n        \n      \n      {{m.name}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Name                                       {{m.name}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'MedicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewCondition.html":{"url":"components/NewCondition.html","title":"component - NewCondition","body":"\n                   \n\n\n\n\n\n  Components\n  NewCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newCondition/newCondition.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                newCondition\n            \n\n\n\n\n            \n                templateUrl\n                ./newCondition.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'newCondition',\n  templateUrl: './newCondition.html'\n})\nexport class NewCondition { }\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n      \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×                  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewCondition'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox1.html":{"url":"components/NormalBox1.html","title":"component - NormalBox1","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-1.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-1\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-1.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-1.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-1\",\n\ttemplateUrl: \"./normal-box-1.html\"\n})\n\nexport class NormalBox1{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox2.html":{"url":"components/NormalBox2.html","title":"component - NormalBox2","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-2.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-2\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-2.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-2.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-2\",\n\ttemplateUrl: \"./normal-box-2.html\"\n})\n\nexport class NormalBox2{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteNavigationComponent.html":{"url":"components/NoteNavigationComponent.html","title":"component - NoteNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoteNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/noteNavigation/noteNavigation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                noteNavigation\n            \n\n\n\n\n            \n                templateUrl\n                ./noteNavigation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeFinalNote\n                            \n                            \n                                closeProgressNote\n                            \n                            \n                                closeSideNote\n                            \n                            \n                                toggleFinalNote\n                            \n                            \n                                toggleProgressNote\n                            \n                            \n                                toggleSideNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeFinalNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseFinalNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeProgressNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseProgressNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeSideNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseSideNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFinalNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFinalNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleProgressNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleProgressNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSideNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSideNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'noteNavigation',\n  templateUrl: './noteNavigation.html',\n})\n\nexport class NoteNavigationComponent {\n\n    toggleSideNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n    }\n\n    closeSideNote() {\n        document.getElementById(\"sideNote\").style.width = \"0px\";\n        if (document.getElementById(\"sideNote\").style.width == \"0px\")\n        {\n            document.getElementById(\"progressNote\").style.width = \"0px\";\n            document.getElementById(\"finalNote\").style.width = \"0px\";\n        }\n\n    }\n\n    toggleProgressNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n        document.getElementById(\"progressNote\").style.width = \"34%\";\n    }\n\n    closeProgressNote() {\n        document.getElementById(\"progressNote\").style.width = \"0px\";\n        if (document.getElementById(\"progressNote\").style.width == \"0px\")\n        {\n            document.getElementById(\"finalNote\").style.width = \"0px\";\n        }\n    }\n\n    toggleFinalNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n        document.getElementById(\"progressNote\").style.width = \"34%\";\n        document.getElementById(\"finalNote\").style.width = \"33%\";\n    }\n\n    closeFinalNote() {\n        document.getElementById(\"finalNote\").style.width = \"0px\";\n    }\n}\n\n    \n\n    \n        \n\n  \n     \n    \n    \n  \n\n&times;\n  \n    Side\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n&times;\n  \n    Progress\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n&times;\n  \n    Final\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 ×      Side    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  ×      Progress    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  ×      Final    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoteNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Observation.html":{"url":"classes/Observation.html","title":"class - Observation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Observation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/observation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                grouping\n                            \n                            \n                                id\n                            \n                            \n                                referenceRange\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCode\n                            \n                            \n                                    Static\n                                getText\n                            \n                            \n                                    Static\n                                getUnits\n                            \n                            \n                                    Static\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnits(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Observation implements Associable {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\trelativeDateTime: string;\n\tcategory: Array;\n\tcode: Array;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n\n\t// This should be populated with the normal ranges, but isn't for whatever reason.\n\treferenceRange: Object;\n\tgrouping: string;\n\n\t// Get the value of an observation\n\tstatic getValue(o: Observation) {\n\t\treturn o['valueQuantity']['value'];\n\t}\n\n\t// Get the units for an observation\n\tstatic getUnits(o: Observation) {\n\t\treturn o['valueQuantity']['unit'];\n\t}\n\n\t// Get the text for an observation\n\tstatic getText(o: Observation) {\n\t\t// If the text is empty, use the display.\n\t\treturn o['code']['text'] || o['code']['coding'][0]['display'];\n\t}\n\n\tgetCode() {\n\t\treturn this['code']['coding'][0]['code'];\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursive.html":{"url":"components/ObservationRecursive.html","title":"component - ObservationRecursive","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursion/observationRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./observationRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graphData\n                            \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService, scratchpadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursion/observationRecursion.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchpadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(obs: any, event, position, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\n@Component({\n  selector: 'observationRecursion',\n  templateUrl: './observationRecursion.html'\n})\nexport class ObservationRecursive {\n  @Input() obs: any;\n  @Input() level: number;\n  graphData: Array = [];\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n              private trendsService: HistoricalTrendsService,\n              private scratchpadService: ScratchPadService) { }\n\n  // ========================================= EVENT HANDLERS ==============================\n\n  // handles whenever a checkbox is clicked\n  checked(obs: any, event, position, data) {\n    obs.isSelected = !obs.isSelected;\n\n    // shift click functionality [not tested]\n    if (event.shiftKey) {\n      let upper, lower;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.value}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.value}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursive'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursiveChart.html":{"url":"components/ObservationRecursiveChart.html","title":"component - ObservationRecursiveChart","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursiveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursionChart\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(changedObs: any, event, position: number, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changedObs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationRecursionChart',\n  templateUrl: './observationsChart.html'\n})\nexport class ObservationRecursiveChart {\n  @Input() obs: Array;\n  @Input() level: number;\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n    private trendsService: HistoricalTrendsService) { }\n\n  getData(): Array {\n    return this.obs;\n  }\n\n  getLevel(): number {\n    return this.level;\n  }\n\n  // Called when an observation is either checked or unchecked.\n  checked(changedObs: any, event, position: number, data) {\n    changedObs.isSelected = !changedObs.isSelected;\n\n    if (event.shiftKey) {\n      let upper: number, lower: number;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursiveChart'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObservationService.html":{"url":"injectables/ObservationService.html","title":"injectable - ObservationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/observation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categorizedObservations\n                            \n                            \n                                count\n                            \n                            \n                                filterSet\n                            \n                            \n                                groupMap\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                uniqueObservations\n                            \n                            \n                                uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesObservations\n                            \n                            \n                                extractNewObservations\n                            \n                            \n                                getCheckedObservations\n                            \n                            \n                                getGrouping\n                            \n                            \n                                getScratchPadObservations\n                            \n                            \n                                handleObservationBundle\n                            \n                            \n                                loadObservationsPage\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                populateCategories\n                            \n                            \n                                scaleDates\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesObservations\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractNewObservations\n                        \n                        \n                    \n                \n            \n            \n                \nextractNewObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrouping\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrouping(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:206\n                \n            \n\n\n            \n                \n                    Given a certain observation ID, returns the position mapping of that\n ID contained within the groupMap\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleObservationBundle\n                        \n                        \n                    \n                \n            \n            \n                \nhandleObservationBundle(bundle: Bundle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bundle\n                                    \n                                                Bundle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadObservationsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadObservationsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateCategories\n                        \n                        \n                    \n                \n            \n            \n                \npopulateCategories(categories: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDates\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categorizedObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as moment from 'moment';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Observation } from '../models/observation.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class ObservationService {\n  uniqueObservations: Array = [];\n  categorizedObservations: any;\n  groupMap: { [x: string]: Array };\n  count = 0;\n  observations: Array = [];\n  selected: Array = [];\n  uniqueObservationsLoadFinished = false;\n\n  filterSet = new Set();\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient,\n    private scratchPadService: ScratchPadService\n  ) {\n    // these are the codes of the observations; \n    // groupList is used to categorize where in categorizedObservations this is stored\n    this.groupMap = {\n      \"1-1\": [\"8302-2\", \"3141-9\", \"2710-2\"],\n      \"1-2\": [],\n      \"1-3\": [],\n      \"1-4\": [\"39156-5\", \"8310-5\"],\n      \"1-5\": [],\n      \"2-1\": [\"2571-8\"],\n      \"2-2-1\": [\"789-8\", \"3094-0\", \"72166-2\"],\n      \"2-2-2\": [],\n      \"2-2-3\": [\"2823-3\"]\n    };\n\n    // categories of the observations; found using groupList\n    this.categorizedObservations = {\n      \"categories\": [\n        {\n          \"display\": \"Vitals\",\n          \"id\": \"1\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Weight\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-1\"\n            },\n            {\n              \"display\": \"Blood Pressure\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-2\"\n            },\n            {\n              \"display\": \"Heart Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-3\"\n            },\n            {\n              \"display\": \"Respiration Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-4\"\n            },\n            {\n              \"display\": \"Temperature\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-5\"\n            }\n          ]\n        },\n\n        {\n          \"display\": \"Patient History / Review of Systems\",\n          \"id\": \"2\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Constitutional Symptoms\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"2-1\"\n            },\n            {\n              \"display\": \"Body Systems\",\n              \"count\": 0,\n              \"id\": \"2-2\",\n              \"child\": [\n                {\n                  \"display\": \"Eyes\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-1\"\n                },\n                {\n                  \"display\": \"Ears, Nose, Mouth and Throat (ENT)\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-2\"\n                },\n                {\n                  \"display\": \"Cardiovascular\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-3\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"display\": \"Other\",\n          \"id\": \"3\",\n          \"count\": 0,\n          \"data\": []\n        }\n      ]\n    };\n  }\n\n  loadObservationsPage(url: string): void {\n    this.http.get(url, this.fhirService.getRequestOptions())\n      .subscribe((bundle) => {\n        this.handleObservationBundle(bundle);\n      });\n  }\n\n  handleObservationBundle(bundle: Bundle): void {\n    if (bundle) {\n      let nextObservations = >bundle.entry.map(e => e.resource);\n      this.observations = this.observations.concat(nextObservations);\n      this.extractNewObservations(nextObservations);\n\n      let nextLink = bundle.link.find(link => link.relation == 'next');\n      if (nextLink) {\n        this.loadObservationsPage(nextLink.url);\n      } else {\n        this.onLoadComplete();\n      }\n    } else {\n      console.log(\"No observations for patient.\");\n      this.observations = new Array();\n    }\n  }\n\n  onLoadComplete() {\n    this.observations = this.observations.reverse();\n    console.log(\"Loaded \" + this.uniqueObservations.length + \" observations.\");\n    this.uniqueObservationsLoadFinished = true;\n\n    this.observations.sort((n1, n2) => {\n      return n1.effectiveDateTime  this.scratchPadService.checkedMapObservations.get(o));\n  }\n\n  scaleDates(): void {\n    let RECENCY_MULTIPLIER = 0.80;\n    let timeSinceObservation = new Date().getTime() - new Date(this.observations[0].effectiveDateTime).getTime();\n    let scaledTimeSinceObservation = Math.floor(RECENCY_MULTIPLIER * timeSinceObservation);\n\n    for (let ob of this.observations) {\n      let relativeDateTime = new Date(ob.effectiveDateTime).getTime() + scaledTimeSinceObservation;\n      ob.relativeDateTime = moment(relativeDateTime).toISOString();\n    }\n  }\n\n  extractNewObservations(observations: Array): void {\n    for (let observation of observations) {\n      let code: string = observation['code']['coding'][0]['code'];\n      if (!this.filterSet.has(code)) {\n        observation.grouping = this.getGrouping(code);\n        this.uniqueObservations.push(observation);\n\n        this.filterSet.add(code);\n      }\n    }\n  }\n\n  /**\n  * Given a certain observation ID, returns the position mapping of that\n   * ID contained within the groupMap\n   */\n  getGrouping(code: string): string {\n    for (let x in this.groupMap) {\n      if (this.groupMap[x].indexOf(code) !== -1) {\n        return x;\n      }\n    }\n\n    let OTHER_GROUPING = '3';\n    return OTHER_GROUPING;\n  }\n\n  populateCategories(categories: Array): number {\n    let totalCount = 0;\n    for (let i = 0; i ): Array {\n    let observationsByCategory: { [x: string]: Array } = {};\n\n    for (let observation of observations) {\n      if (observation.hasOwnProperty('valueQuantity') && observation.hasOwnProperty('category')) {\n        let observationCategory = observation.category[0].text;\n\n        if (!observationsByCategory.hasOwnProperty(observationCategory)) {\n          observationsByCategory[observationCategory] = [];\n        }\n        observationsByCategory[observationCategory].push(observation);\n      }\n    }\n\n    let reconstructedObject: Array = [];\n    for (let ctgry of Object.keys(observationsByCategory)) {\n      reconstructedObject.push({\n        category: ctgry,\n        subheadings: false,\n        subs: null,\n        data: observationsByCategory[ctgry]\n      });\n    }\n\n    return reconstructedObject;\n  }\n\n  // ====================== SCRATCH PAD FUNCTIONALITY =============================\n\n  getScratchPadObservations() {\n    return this.scratchPadService.getObservations();\n  }\n\n  // OVERRIDDEN FROM BASECOLUMN:\n  showDefault() {\n\n  }\n\n  showScratchPad() {\n    console.log(this.getScratchPadObservations());\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsComponent.html":{"url":"components/ObservationsComponent.html","title":"component - ObservationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observations/observations.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observations\n            \n\n\n\n\n            \n                templateUrl\n                ./observations.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mappings\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                test\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, observationService: ObservationService, mapService: MapService, doctorService: DoctorService, trendsService: HistoricalTrendsService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observations/observations.component.ts:60\n                \n            \n\n\n            \n                \n                    Description: This method is called whenever the patient data is passed as input to the application. Handles\nthe initial subscription to the observation service and continual loading of the data links.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ObservationService } from '../../services/observation.service';\nimport { MapService } from '../../services/map.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Observation } from '../../models/observation.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'observations',\n  templateUrl: './observations.html'\n})\nexport class ObservationsComponent extends BaseColumn{\n  selected: Observation;\n  test: Observation;\n  observations: Array = [];\n\n  @Input() patient: Patient;\n  //@Output() observationReturned: EventEmitter> = new EventEmitter();\n\n  mappings: { [key: string]: Array } = {};\n\n  // for column switching\n  subscription: Subscription;\n\n  constructor(\n    private fhirService: FhirService,\n    private observationService: ObservationService,\n    private mapService: MapService,\n    private doctorService: DoctorService,\n    private trendsService: HistoricalTrendsService,\n    private scratchPadService: ScratchPadService\n  ) {\n      super();\n      this.mappings = MapService.STATIC_MAPPINGS;\n\n      // subscribe to scratch pad service for column switching\n      this.subscription = scratchPadService.stateChange$.subscribe(\n        sPad => {\n          if (sPad)\n            this.columnState = \"scratchpad\";\n          else\n            this.columnState = \"default\";\n        }\n      );\n  }\n\n  // ===================== FOR DATA RETRIEVAL FROM OBSERVATIONS SERVICE ============\n\n  /**\n   * Description: This method is called whenever the patient data is passed as input to the application. Handles\n   * the initial subscription to the observation service and continual loading of the data links.\n   **/\n  ngOnChanges() {\n    if (this.patient) { //If the patient is loaded\n      let url = this.fhirService.getUrl() + \"/Observation?patient=\" + this.patient.id;\n      this.observationService.loadObservationsPage(url);    \n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Observations\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Observations                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsDisplay.html":{"url":"components/ObservationsDisplay.html","title":"component - ObservationsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationsDisplay/observationsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                Observation\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllObservations\n                            \n                            \n                                checkObservation\n                            \n                            \n                                expand\n                            \n                            \n                                isObservationAssociated\n                            \n                            \n                                isObservationChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectObservation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                observationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        observations\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        observationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllObservations\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllObservations(checked)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkObservation\n                        \n                        \n                    \n                \n            \n            \n                \ncheckObservation(checked: boolean, checkedObservation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationAssociated(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationChecked(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectObservation\n                        \n                        \n                    \n                \n            \n            \n                \nselectObservation(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Observation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Observation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationsDisplay',\n  templateUrl: './observationsDisplay.html'\n})\nexport class ObservationsDisplay {\n  // Trick to allow access to static methods of Observation class in pug template\n  Observation = Observation;\n\n  // The currently selected condition in the list.\n  selected: Observation;\n\n  //Whether the checkbox for checking all observations are currently checked\n  isAllChecked : boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() observations: Array;\n  @Output() observationSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private associationService: AssociationService, \n    private scratchPadService: ScratchPadService\n  ) { }\n\n  ngOnChanges() {\n    //console.log(this.observations);\n  }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n    \n    // Add options to the context menu shown when right clicking observations.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function(obs) {\n        // Add every checked observation to the scratch pad\n        this.scratchPadService.checkedMapObservations.forEach((isChecked, observation) => {\n          if (isChecked) {\n            this.scratchPadService.addObservation(observation);\n          }\n        });\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(obs) {\n        console.log(obs);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(obs) {\n        console.log(obs);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  // Whenever a line is selected\n  selectObservation(observation: Observation) {\n    this.selected = observation;\n    this.observationSelected.emit(this.selected);\n\n    for (let o of this.scratchPadService.totalObservations) {\n      o['selected'] = (o.id == this.selected.id);\n    }\n  }\n\n  // Determine whether an observation is currently checked.\n  isObservationChecked(observation: Observation) {\n    return this.scratchPadService.checkedMapObservations.get(observation) || false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkObservation(checked: boolean, checkedObservation: Observation) {\n    this.scratchPadService.checkObservation(checked, checkedObservation);\n  }\n  \n  //Check or uncheck all observations\n  checkAllObservations(checked){\n    this.isAllChecked = checked;\n    for (let c of this.observations){\n      this.scratchPadService.checkObservation(checked, c);\n    }\n  }\n\n  // Determine whether an observation is currently associated (based on associations tool)\n  isObservationAssociated(observation: Observation) {\n    return this.associationService.associatedMapObservations.get(observation) || false;\n  }\n\n  expand(parent: string) {\n    /**\n    for (let c of this.conditions) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Observation\n        Value\n        Unit\n        Onset\n      \n    \n    \n      \n        \n          \n        \n        \n          ... {{Observation.getText(o)}}\n        \n        {{Observation.getValue(o)}}\n        {{Observation.getUnits(o)}}\n        {{o.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Observation        Value        Unit        Onset                                                                ... {{Observation.getText(o)}}                {{Observation.getValue(o)}}        {{Observation.getUnits(o)}}        {{o.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Patient.html":{"url":"classes/Patient.html","title":"class - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/patient.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                address\n                            \n                            \n                                birthDate\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                identifier\n                            \n                            \n                                mrn\n                            \n                            \n                                name\n                            \n                            \n                                telecom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telecom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Patient {\n\n    active: boolean;\n    id: string;\n    birthDate: string;\n    gender: string;\n    address: Array;\n    identifier: Array;\n    name: Array;\n    telecom: Array;\n    mrn: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientComponent.html":{"url":"components/PatientComponent.html","title":"component - PatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/patient/patient.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                patient\n            \n\n\n\n\n            \n                templateUrl\n                ./patient.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                advancedSearch\n                            \n                            \n                                allergies\n                            \n                            \n                                allergy\n                            \n                            \n                                graphConfig\n                            \n                            \n                                hover\n                            \n                            \n                                hoverStyling\n                            \n                            \n                                reason\n                            \n                            \n                                selectedCondition\n                            \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                genderString\n                            \n                            \n                                    Private\n                                loadAllergies\n                            \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectCondition\n                            \n                            \n                                showAllergyHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, doctorService: DoctorService, homeComponent: HomeComponent, conditionService: ConditionService, encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        homeComponent\n                                                  \n                                                        \n                                                                        HomeComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genderString\n                        \n                        \n                    \n                \n            \n            \n                \ngenderString(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllergies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAllergyHover\n                        \n                        \n                    \n                \n            \n            \n                \nshowAllergyHover(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            advancedSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hover', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverStyling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Server\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input, Output, ViewChild } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { EncounterService } from '../../services/encounter.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { HomeComponent } from '../../components/home/home.component';\nimport { HoverBoxComponent } from '../hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\nimport { Server } from '../../models/server.model';\nimport { Condition } from '../../models/condition.model';\n\n@Injectable()\n@Component({\n  selector: 'patient',\n  templateUrl: './patient.html'\n})\nexport class PatientComponent {\n  @Input() patient: Patient;\n  server: Server;\n  selectedCondition: Condition;\n  advancedSearch = false;\n  graphConfig: any;\n\n  //allergy details\n  allergies: Array = [];\n  allergy: string = '';\n  hoverStyling: boolean = false;\n  reason: string = '';\n\n  @ViewChild('hover', { static: false }) hover: HoverBoxComponent;\n\n  constructor(\n    private cookieService: CookieService,\n    private doctorService: DoctorService,\n    private homeComponent: HomeComponent,\n    private conditionService: ConditionService,\n    private encounterService: EncounterService\n  ) {\n    this.graphConfig = JSON.parse(this.cookieService.get('graphConfig') || '{}');\n  }\n\n  genderString(patient: Patient) {\n    var s = 'Unknown';\n    switch (patient.gender) {\n      case 'female':\n        s = 'Female';\n        break;\n      case 'male':\n        s = 'Male';\n        break;\n    }\n    return s;\n  }\n\n  selectCondition(condition) {\n    this.selectedCondition = condition;\n  }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.loadAllergies();\n      this.loadEncounters();\n    }\n  }\n\n  private loadAllergies(): void {\n    this.conditionService.loadAllergies(this.patient).subscribe(allergies => {\n      if (allergies) {\n        //add allergy strings to allergies\n        this.allergies = allergies.map(allergy => allergy.code.text);\n\n        // Construct displayed allergy string\n        if (this.allergies.length == 0) {\n          this.allergy = \"None\";\n        } else if (this.allergies.length == 1) {\n          this.allergy = this.allergies[0];\n        } else {\n          this.allergy = \"Multiple...\";\n          this.hoverStyling = true;\n        }\n      }\n      else { //no allergies\n        this.allergy = \"None\";\n      }\n    });\n  }\n\n  private loadEncounters(): void {\n    // TODO: Display the reason for visit retrieved here onto the page.\n    this.encounterService.loadEncounters(this.patient).subscribe(res => {\n      // Cast the array of encounters to the proper model (Encounter).\n      let encounters = >res;\n\n      for (let enc of encounters) {\n        let reasonText = enc.getReason();\n\n        // Only print if reasonText is not null.\n        if (reasonText) {\n          this.reason = reasonText;\n        }\n      }\n    });\n  }\n\n  showAllergyHover(event) {\n    // Don't show hover box if there is only one allergy.\n    if (this.allergies.length > 1) {\n      this.hover.show(this.allergies, event);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n        \n          {{patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0]}}\n            \n               {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}}, \n            DOB: {{patient.birthDate | amDateFormat:'MM/DD/YYYY'}} ({{-1 * (patient.birthDate | amDifference:today:'years':false)}}yr)\n\t\t  \n        \n  \n  \n    \n        \n          \n            \n\t\t\t\tAllergies:\n              {{allergy}}\n            \n            Reason for Visit: {{reason}}\n          \n        \n  \n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{patient.name[0].given[0]}} {{patient.name[0].family[0]}}                           {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}},             DOB: {{patient.birthDate | amDateFormat:\\'MM/DD/YYYY\\'}} ({{-1 * (patient.birthDate | amDifference:today:\\'years\\':false)}}yr)\t\t                                                \t\t\t\tAllergies:              {{allergy}}                        Reason for Visit: {{reason}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                            \n                                    Public\n                                patientId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPatient\n                            \n                            \n                                setPatientId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPatient\n                        \n                        \n                    \n                \n            \n            \n                \nloadPatient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPatientId\n                        \n                        \n                    \n                \n            \n            \n                \nsetPatientId(patientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Patient'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { Patient } from '../models/patient.model';\n\n@Injectable()\nexport class PatientService {\n  private readonly path = '/Patient';\n\n  // The id of the currently set patient\n  public patientId: string;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  // Set the id of the patient\n  setPatientId(patientId) {\n    this.patientId = patientId;\n  }\n\n  // Retrieve the patient with the id previously set using setPatientId()\n  loadPatient(): Observable {\n    var url = this.fhirService.getUrl() + this.path + '/' + this.patientId;\n    let options = this.fhirService.getRequestOptions(true);\n\n    return this.http.get(url, options).pipe(map(res => {\n      let patient = res;\n\n      // Assign patient MRN\n      for (let id of res['identifier']) {\n        if (id.type && id.type.coding[0].code == \"MR\") {\n          patient.mrn = id.value;\n        }\n      }\n      return patient;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScratchPadUpdate.html":{"url":"components/ScratchPadUpdate.html","title":"component - ScratchPadUpdate","body":"\n                   \n\n\n\n\n\n  Components\n  ScratchPadUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/scrachpad-update.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scratchpad-update\n            \n\n\n\n\n            \n                templateUrl\n                ./scrachpad-update.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                onset\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                onRadioChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRadioChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonRadioChanged(currStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"scratchpad-update\",\n\ttemplateUrl: \"./scrachpad-update.html\"\n})\n\nexport class ScratchPadUpdate{\n\t@Input() inputData: any;\n\t\n\tdescription: string;\n\tstatus: string;\n\tonset: string;\n\t\n\tgetData(): any {\t\t\n\t\treturn {id: this.inputData.id, data: {description: this.description, status: this.status}};\n\t}\n\t\n\tonRadioChanged(currStatus: string): void {\n\t\tconsole.log(\"changing!!!\");\n\t\tthis.status = currStatus;\n\t}\n}\n    \n\n    \n        \n\n  {{inputData.data.name}} : {{inputData.data.status}}\n  \n    \n      \n    \n    \n      \n        \n          Active\n        \n        \n          Inactive\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{inputData.data.name}} : {{inputData.data.status}}                                            Active                          Inactive                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScratchPadUpdate'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectListSingle.html":{"url":"components/SelectListSingle.html","title":"component - SelectListSingle","body":"\n                   \n\n\n\n\n\n  Components\n  SelectListSingle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/select-list-single.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                select-list-single\n            \n\n\n\n\n            \n                templateUrl\n                ./select-list-single.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/select-list-single.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"select-list-single\",\n\ttemplateUrl: \"./select-list-single.html\"\n})\n\nexport class SelectListSingle{\n\t@Input() inputData: any;\n\tlistData: String;\n\t\n\tgetData(): any {\n\t\tif (this.listData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.listData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n     {{entry.description}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}            {{entry.description}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectListSingle'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Server.html":{"url":"classes/Server.html","title":"class - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/server.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/server.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Server {\n\t// name: String;\n    // url: String;\n\tconstructor(public name: string, public url: string) {\n\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartService.html":{"url":"injectables/SmartService.html","title":"injectable - SmartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SmartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aud\n                            \n                            \n                                authorizeUrl\n                            \n                            \n                                    Readonly\n                                clientId\n                            \n                            \n                                fhirBaseUrl\n                            \n                            \n                                launch\n                            \n                            \n                                    Readonly\n                                redirectUri\n                            \n                            \n                                    Readonly\n                                scope\n                            \n                            \n                                state\n                            \n                            \n                                tokenUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                findGetParameter\n                            \n                            \n                                getToken\n                            \n                            \n                                requestAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService, fhirService: FhirService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smart.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findGetParameter\n                        \n                        \n                    \n                \n            \n            \n                \nfindGetParameter(parameterName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameterName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestAuth\n                        \n                        \n                    \n                \n            \n            \n                \nrequestAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aud\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorizeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"2c304df8-711d-4de9-afbe-330c01a5ca8e\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fhirBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            launch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            redirectUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:9000\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"launch patient/*.* openid profile\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FhirService } from '../services/fhir.service';\nimport { PatientService } from '../services/patient.service';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class SmartService {\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private fhirService: FhirService,\n    private patientService: PatientService\n  ) { }\n\n  readonly clientId: string = \"2c304df8-711d-4de9-afbe-330c01a5ca8e\";\n  readonly scope: string = \"launch patient/*.* openid profile\";\n  readonly redirectUri: string = \"http://localhost:9000\";\n\n  fhirBaseUrl: string;\n  authorizeUrl: string;\n  tokenUrl: string;\n  launch: string;\n  state: string;\n  aud: string;\n\n  authenticate() {\n    this.fhirBaseUrl = this.findGetParameter(\"iss\");\n\n    if (this.fhirBaseUrl) {\n      // Occurs when arriving to the site for the first time.\n      this.aud = this.fhirBaseUrl;\n      this.launch = this.findGetParameter(\"launch\");\n\n      this.fhirService.setUrl(this.fhirBaseUrl);\n\n      const url = this.fhirService.getUrl() + '/metadata';\n      this.http.get(url, this.fhirService.getRequestOptions(false)).subscribe(data => {\n        var smartExtension = data['rest'][0].security.extension.filter(e => {\n          return (e.url === \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\");\n        });\n\n        var auth;\n        var tok;\n\n        smartExtension[0].extension.forEach(arg => {\n          if (arg.url === \"authorize\") {\n            auth = arg.valueUri;\n          } else if (arg.url === \"token\") {\n            tok = arg.valueUri;\n          }\n        });\n\n        this.tokenUrl = tok;\n        this.authorizeUrl = auth;\n\n        this.cookieService.set('tokenUrl', this.tokenUrl);\n        this.cookieService.set('fhirBaseUrl', this.fhirBaseUrl);\n\n        this.requestAuth();\n      });\n    } else {\n      // Occurs when arriving to the site after the redirect.\n      if (this.cookieService.get('state') == this.findGetParameter('state')) {\n        return this.getToken();\n      } else {\n        console.log('Stop cross-site scripting please, thanks');\n      }\n    }\n  }\n\n  getToken() {\n    var code = this.findGetParameter(\"code\");\n\n    var body = 'code=' + code\n      + '&redirect_uri=' + encodeURI(this.redirectUri)\n      + '&token_url=' + this.cookieService.get('tokenUrl');\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n\n    return this.http.post(\"https://mongo-proxy.herokuapp.com/token\",\n      body, { headers: headers });\n  }\n\n  requestAuth() {\n    //TODO Fix hashing method - not sure best way to do it\n\n    this.state = (Md5.hashStr(\"testing Hasing\")).toString();\n    this.cookieService.set('state', this.state);\n\n    var request = this.authorizeUrl + \"?response_type=code\"\n      + \"&client_id=\" + this.clientId\n      + \"&redirect_uri=\" + this.redirectUri\n      + \"&launch=\" + this.launch\n      + \"&scope=\" + this.scope\n      + \"&state=\" + this.state\n      + \"&aud=\" + this.aud;\n\n    // Comment out the below line for debugging purposes.\n    window.location.href = encodeURI(request);\n  }\n\n  findGetParameter(parameterName) {\n    let result = null;\n    let tmp = [];\n\n    location.search.substr(1).split(\"&\").forEach(item => {\n      tmp = item.split(\"=\");\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeline.html":{"url":"classes/Timeline.html","title":"class - Timeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/timeline.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Timeline {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\tcategory: Object;\n\tcode: Object;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineComponent.html":{"url":"components/TimelineComponent.html","title":"component - TimelineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline/timeline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timelines\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encounters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encounters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { EncounterService } from '../../services/encounter.service';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'timelines',\n  templateUrl: './timeline.html'\n})\nexport class TimelineComponent {\n  encounters: Array = [];\n  @Input() patient: Patient;\n\n  constructor(private encounterService: EncounterService) { }\n\n  ngOnChanges(): void {\n    this.loadEncounters();\n  }\n\n  private loadEncounters(): void {\n    if (this.patient) {\n      this.encounterService.loadEncounters(this.patient).subscribe(encounters => {\n        this.encounters = this.encounters.concat(encounters);\n        console.log('Loaded ' + this.encounters.length + ' encounters.');\n        console.log(this.encounters);\n\n        encounters.forEach(enc => enc.position = enc.getLogValue()/5 + \"%\")\n        encounters.forEach(enc =>  console.log('Log Val pos: ' + enc.getStartDate()))\n        \n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinePopupComponent.html":{"url":"components/TimelinePopupComponent.html","title":"component - TimelinePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelinePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline_popup/timeline_popup.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timeline-popup\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline_popup.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePipe\n                            \n                            \n                                hoverBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(encounter: Encounter, event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encounter\n                                    \n                                                Encounter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePipe\n\n                        \n                    \n                    \n                        \n                            Default value : new DatePipe('en-US')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hoverBox', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { HoverBoxComponent } from '../../components/hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\n\n@Component({\n  selector: 'timeline-popup',\n  templateUrl: './timeline_popup.html'\n})\n\nexport class TimelinePopupComponent {\n  @ViewChild('hoverBox', { static: false }) hoverBox: HoverBoxComponent;\n   datePipe: DatePipe = new DatePipe('en-US');\n  open(encounter: Encounter, event: MouseEvent): void {\n   \n    let details: Array = [\n      'Date: ' + this.datePipe.transform(encounter.getStartDate(),'MM-dd-yyyy').toString(),\n      'Reason: ' + (encounter.getReason() || 'None')\n    ];\n    this.hoverBox.show(details, event);\n  }\n\n  close(event: MouseEvent): void {\n    this.hoverBox.hide(event);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n        Encounter from {{condition.onsetDateTime | amTimeAgo}}\n      \n      \n        {{condition.code.coding[0].display}}\n        Code System:{{condition.code.coding[0].system}}\n        Code: {{condition.code.coding[0].code}}\n      \n      \n        Close\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×        Encounter from {{condition.onsetDateTime | amTimeAgo}}                    {{condition.code.coding[0].display}}        Code System:{{condition.code.coding[0].system}}        Code: {{condition.code.coding[0].code}}                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolBarService.html":{"url":"injectables/ToolBarService.html","title":"injectable - ToolBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToolBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toolbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftPosition\n                            \n                            \n                                topPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ToolBarService {\n  leftPosition: string;\n  topPosition: string;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/toolbar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nav2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterScratchPad\n                            \n                            \n                                resetToDefaultView\n                            \n                            \n                                runAssociationsTool\n                            \n                            \n                                switchNav\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, conditionService: ConditionService, doctorService: DoctorService, observationService: ObservationService, scratchPadService: ScratchPadService, toolbarService: ToolBarService, trendsService: HistoricalTrendsService, elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/toolbar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nfilterScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetToDefaultView\n                        \n                        \n                    \n                \n            \n            \n                \nresetToDefaultView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchNav\n                        \n                        \n                    \n                \n            \n            \n                \nswitchNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePosition\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePosition(ref: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nav2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ToolBarService } from '../../services/toolbar.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { ObservationService} from '../../services/observation.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.html'\n  // animations: [\n  // \ttrigger('fadeIn', [\n  // \t\tstate('in', style({ opacity: '1' })),\n  // \t\ttransition('void => *', [\n  // \t\t\tstyle({ opacity: '0' }),\n  // \t\t\tanimate('800ms ease-in')\n  // \t\t])\n  // \t])\n  // ]\n})\nexport class ToolbarComponent {\n  @Input() patient: Patient;\n  nav2: boolean = false;\n\n  constructor(\n    private associationService: AssociationService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private observationService: ObservationService,\n    private scratchPadService: ScratchPadService,\n    private toolbarService: ToolBarService,\n    private trendsService: HistoricalTrendsService,\n    private elRef: ElementRef\n  ) { }\n\n  switchNav() {\n    this.nav2 = !this.nav2;\n  }\n\n  runAssociationsTool() {\n    let checkedConditions = this.conditionService.getCheckedConditions();\n    let checkedObservations = this.observationService.getCheckedObservations();\n    this.associationService.runAssociationsTool(checkedConditions, checkedObservations);\n  }\n\n  // whenver the user presses the filter button\n  filterScratchPad() {\n    \n    // Call the filtering method in the service\n    this.scratchPadService.addConditionsToScratchPad();\n    this.scratchPadService.addObservationToScratchPad();\n\n    // also switch the views to the scratch pad view\n    this.scratchPadService.switchToScratchPad(true);\n  }\n\n  // reset to default (not scratchPad)\n  resetToDefaultView() {\n    this.scratchPadService.switchToScratchPad(false);\n  }\n\n  updatePosition(ref: ElementRef) {\n    let left = this.elRef.nativeElement.querySelector('div').style.left;\n    let top = this.elRef.nativeElement.querySelector('div').style.top;\n\n    this.toolbarService.leftPosition = (parseInt(left.replace(/px/, \"\")) + 150) + \"px\";\n    this.toolbarService.topPosition = (parseInt(top.replace(/px/, \"\")) + 100) + \"px\";\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n    \n    \n    \n    \n     \n  \n  \n    \n    \n    \n     \n    \n     \n    \n     \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripleListComponent.html":{"url":"components/TripleListComponent.html","title":"component - TripleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tripleList/tripleList.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                triplelist\n            \n\n\n\n\n            \n                templateUrl\n                ./tripleList.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                obsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                passThrough\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        passThrough\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTotal\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTotal(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tripleList/tripleList.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obsCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { DoctorService } from '../../services/doctor.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'triplelist',\n  templateUrl: './tripleList.html'\n})\n\nexport class TripleListComponent {\n  @Input() patient: Patient;\n  @Output() passThrough: EventEmitter = new EventEmitter();\n  obsCount: number = 0;\n\n  constructor(private doctorService: DoctorService, private observationService: ObservationService) {\n    this.passThrough.emit(this.patient);\n  }\n\n  updateTotal(event) {\n    console.log(\"total:\" + event);\n    this.obsCount = event;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n\tid: number;\n\tname: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            appRoutingProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/accordionRecursion/accordionRecursion.component.ts\n            \n            component\n            AccordionRecursion\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/addObservation/addObservation.component.ts\n            \n            component\n            AddObservation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/baseColumn.ts\n            \n            class\n            BaseColumn\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/carePlan/carePlan.component.ts\n            \n            component\n            CarePlanComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n            \n            component\n            CarePlanDisplay\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n            \n            component\n            ColumnStateSwitcherComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            component\n            ConditionsComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/conditionsChart/conditionsChart.component.ts\n            \n            component\n            ConditionsChartComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n            \n            component\n            ConditionsDisplay\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/contextMenu/contextMenu.component.ts\n            \n            component\n            ContextMenuComponent\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                src/app/components/doctorNote/doctorNote.component.ts\n            \n            component\n            DoctorNoteComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            component\n            Favorites\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form-builder/form-builder.component.ts\n            \n            component\n            FormBuilder\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/form_components/checkbox-inline.component.ts\n            \n            component\n            CheckboxInline\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-1.component.ts\n            \n            component\n            NormalBox1\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-2.component.ts\n            \n            component\n            NormalBox2\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/scrachpad-update.component.ts\n            \n            component\n            ScratchPadUpdate\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/form_components/select-list-single.component.ts\n            \n            component\n            SelectListSingle\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/historicalTrends/historicalTrends.component.ts\n            \n            component\n            HistoricalTrendsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/hoverBox/hoverBox.component.ts\n            \n            component\n            HoverBoxComponent\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/components/loadingAnimation/loadingAnimation.component.ts\n            \n            component\n            LoadingAnimation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/medications/medications.component.ts\n            \n            component\n            MedicationsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/newCondition/newCondition.component.ts\n            \n            component\n            NewCondition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/noteNavigation/noteNavigation.component.ts\n            \n            component\n            NoteNavigationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursion/observationRecursion.component.ts\n            \n            component\n            ObservationRecursive\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n            \n            component\n            ObservationRecursiveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/observations/observations.component.ts\n            \n            component\n            ObservationsComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/components/observationsDisplay/observationsDisplay.component.ts\n            \n            component\n            ObservationsDisplay\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            component\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            injectable\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/timeline_popup/timeline_popup.component.ts\n            \n            component\n            TimelinePopupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/tripleList/tripleList.component.ts\n            \n            component\n            TripleListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/directives/auto-grow.directive.ts\n            \n            directive\n            AutoGrowDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/directives/highlight.directive.ts\n            \n            directive\n            HighlightDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/allergyIntolerance.model.ts\n            \n            class\n            AllergyIntolerance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/associable.model.ts\n            \n            interface\n            Associable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Bundle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/carePlan.model.ts\n            \n            class\n            CarePlan\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/chart.model.ts\n            \n            class\n            Chart\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/client.model.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/condition.model.ts\n            \n            class\n            Condition\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/contextMenuOption.model.ts\n            \n            class\n            ContextMenuOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/encounter.model.ts\n            \n            class\n            Encounter\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/form.model.ts\n            \n            class\n            Form\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/medication.model.ts\n            \n            class\n            Medication\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/observation.model.ts\n            \n            class\n            Observation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/patient.model.ts\n            \n            class\n            Patient\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/server.model.ts\n            \n            class\n            Server\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/timeline.model.ts\n            \n            class\n            Timeline\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pipes/humanizeBytes.pipe.ts\n            \n            pipe\n            HumanizeBytesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/carePlan.service.ts\n            \n            injectable\n            CarePlanService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/condition.service.ts\n            \n            injectable\n            ConditionService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/doctor.service.ts\n            \n            injectable\n            DoctorService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/encounter.service.ts\n            \n            injectable\n            EncounterService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/fhir.service.ts\n            \n            injectable\n            FhirService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/historicalTrends.service.ts\n            \n            injectable\n            HistoricalTrendsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/map.service.ts\n            \n            injectable\n            MapService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/observation.service.ts\n            \n            injectable\n            ObservationService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/services/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/scratchPad.service.ts\n            \n            injectable\n            ScratchPadService\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/services/smart.service.ts\n            \n            injectable\n            SmartService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/toolbar.service.ts\n            \n            injectable\n            ToolBarService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/cli : ^8.3.25\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            angular2-router-loader : ^0.3.5\n        \n            bootstrap : ^3.3.7\n        \n            concurrently : ^3.4.0\n        \n            install : ^0.8.9\n        \n            jquery : ^3.2.1\n        \n            lite-server : ^2.3.0\n        \n            moment : ^2.24.0\n        \n            ngx-contextmenu : ^5.3.0\n        \n            ngx-cookie-service : ^2.3.0\n        \n            ngx-moment : ^3.5.0\n        \n            reflect-metadata : ^0.1.10\n        \n            rxjs : ^6.5.4\n        \n            rxjs-compat : ^6.5.4\n        \n            systemjs : ^0.19.47\n        \n            ts-md5 : ^1.2.0\n        \n            tslib : ^1.9.0\n        \n            typescript : ^3.4.5\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPatient Viewer\n\nFront-end project for context-driven clinical transactions.\nPreparing the Application\nThis is an Angular 8 project using grunt as the build system, SASS for CSS, and Bootstrap for layout. npm is the package manager. \nAssuming you already have node installed via brew install node or similar, begin by running the following commands in the terminal:\ngit clone https://github.com/HII-C/patient_viewer.git\ncd patient_viewer\nnpm install -g grunt\nnpm install # to install project development dependenciesIf you do not have npm installed, do the following:\n\nMac: brew install node in Terminal\nWindows: Instructions\nLinux: Instructions\n\nThe project was tested specifically with node version 10.19.0.\nRunning the Application\nTo launch in development mode, run the following terminal command from the patient_viewer folder:\ngrunt --force # to serve the project and automatically recompile on file changesThen, do the following:\n\nVisit HSPC Sandbox, select the \"HII-C\" sandbox, choose the \"Apps\" option from the left menu, click on the \"HII-C Confidential [USE THIS]\" app, and then click \"Launch\". \nSelect the persona \"John Smith\", and patient Adams, Daniel X in the popup. This should open the Patient Viewer application.\nOnce you are done running Patient Viewer, make sure to terminate the grunt --force command in the terminal.\n\nDevelopment Guidelines\nDo's:\n\nPrefer to use let rather than var for declaring variables. The scoping for variables declared with var is unintuitive and can result in strange bugs.\nPrefer to create models (such as Encounter) rather than dealing with JSON directly. By doing so, we can take advantage of Typescript's type checking and code completion.\n\nDont's:\n\nAvoid using libraries like jQuery. Also avoid using any other approach to accessing the DOM directly (ie, document.getElementById(..)).\nAvoid leaving console.log(..) statements in the code when pushing to the repository. You can use them while developing locally but it can cause clutter in the repository.\nWrite a brief comment above each component and method that you write giving a brief overview of the functionality. If some code is particularly complex, place comments within the body of the method too.\nAvoid writing components that are very similar to one another. Instead, create a generic component that supports all use cases through an interface (examples are contextMenu.component.ts and hoverBox.component.ts).\n\nLicense\nApache 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormCreatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAddObservation\n\nAddObservation\n\nAppModule -->\n\nAddObservation->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanComponent\n\nCarePlanComponent\n\nAppModule -->\n\nCarePlanComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nDoctorNoteComponent\n\nDoctorNoteComponent\n\nAppModule -->\n\nDoctorNoteComponent->AppModule\n\n\n\n\n\nFavorites\n\nFavorites\n\nAppModule -->\n\nFavorites->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nNewCondition\n\nNewCondition\n\nAppModule -->\n\nNewCondition->AppModule\n\n\n\n\n\nNoteNavigationComponent\n\nNoteNavigationComponent\n\nAppModule -->\n\nNoteNavigationComponent->AppModule\n\n\n\n\n\nObservationRecursive\n\nObservationRecursive\n\nAppModule -->\n\nObservationRecursive->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    35 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../conditions.component.ts)\n                        \n                        \n                            appRoutingProviders   (src/.../app.module.ts)\n                        \n                        \n                            routing   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/conditions/conditions.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutingProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
