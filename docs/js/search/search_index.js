var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AccordionRecursion.html",[0,0.077,1,0.699]],["body/components/AccordionRecursion.html",[0,0.129,1,1.171,2,0.831,3,0.071,4,0.071,5,0.631,6,0.608,7,0.631,8,0.048,9,2.661,10,0.522,11,1.569,12,0.93,13,4.516,14,0.13,15,0.327,16,4.665,17,5.366,18,0.825,19,4.516,20,3.129,21,4.516,22,4.516,23,4.516,24,1.39,25,5.366,26,5.366,27,5.924,28,5.366,29,0.463,30,2.398,31,3.028,32,0.288,33,4.516,34,0.956,35,0.014,36,0.54,37,0.288,38,0.995,39,2.365,40,3.061,41,3.061,42,3.061,43,3.061,44,4.516,45,3.061,46,5.924,47,0.88,48,3.061,49,1.09,50,4.516,51,3.061,52,3.061,53,3.061,54,3.061,55,3.061,56,1.848,57,0.542,58,0.502,59,2.077,60,3.061,61,0.369,62,1.742,63,1.617,64,0.294,65,1.914,66,0.082,67,0.091,68,3.061,69,2.242,70,4.204,71,3.859,72,3.061,73,5.366,74,2.823,75,3.061,76,3.248,77,0.341,78,3.061,79,2.661,80,1.077,81,2.661,82,2.201,83,3.061,84,2.661,85,1.616,86,3.926,87,0.8,88,2.352,89,1.897,90,1.704,91,2.163,92,1.617,93,2.352,94,2.044,95,2.201,96,2.658,97,3.061,98,2.823,99,1.342,100,2.201,101,2.398,102,3.061,103,2.661,104,3.538,105,3.061,106,1.095,107,1.467,108,2.201,109,2.044,110,3.061,111,3.061,112,3.248,113,5.366,114,3.061,115,3.061,116,3.061,117,4.516,118,3.061,119,2.661,120,3.061,121,2.661,122,3.248,123,3.061,124,3.538,125,3.061,126,1.914,127,2.201,128,2.201,129,3.061,130,3.061,131,3.061,132,2.201,133,3.061,134,2.661,135,3.538,136,3.061,137,3.061,138,1.127,139,3.061,140,3.061,141,3.061,142,2.044,143,3.926,144,2.201,145,3.061,146,3.061,147,2.044,148,1.402,149,2.398,150,4.516,151,4.516,152,0.564,153,0.93,154,0.93,155,0.522,156,0.631,157,0.631,158,0.542,159,0.631,160,0.542,161,0.631,162,0.542,163,0.631,164,0.542,165,0.631,166,0.542,167,0.631,168,0.542,169,0.631,170,0.631,171,0.542,172,0.631,173,0.542,174,0.631,175,0.542,176,0.631,177,0.542,178,0.631,179,0.522,180,0.631,181,0.542,182,0.542,183,0.631,184,0.542,185,0.631,186,0.542,187,0.631,188,0.542,189,0.631,190,0.542,191,0.631,192,0.631,193,0.542,194,0.631,195,0.542,196,0.631,197,0.542,198,0.863,199,0.863,200,0.631,201,0.542,202,0.631,203,0.542,204,0.631,205,0.542,206,0.631,207,0.542,208,0.631,209,0.542,210,0.631,211,0.542,212,0.631,213,0.542,214,0.631,215,0.542,216,0.631,217,0.631,218,0.542,219,0.608,220,0.631,221,0.542,222,0.631,223,0.542,224,0.564,225,0.631,226,0.542,227,0.631,228,0.542,229,0.631,230,0.542,231,0.564,232,0.631,233,0.564,234,0.608,235,0.631,236,0.005,237,0.008,238,0.005]],["title/components/AccountComponent.html",[0,0.077,158,0.699]],["body/components/AccountComponent.html",[0,0.106,1,0.555,2,0.845,3,0.073,4,0.073,5,0.645,6,0.622,7,0.645,8,0.05,10,0.534,11,1.571,12,0.946,14,0.133,15,0.332,18,0.639,29,0.474,32,0.278,34,0.695,35,0.014,36,0.491,37,0.265,38,0.723,47,0.757,49,1.001,56,1.872,57,1.13,58,1.045,59,1.212,61,0.375,64,0.301,66,0.084,67,0.093,77,0.606,80,1.747,87,1.13,89,1.929,91,2.414,93,1.373,106,1.643,107,1.501,138,1.021,142,3.067,143,5.207,144,3.302,152,0.576,153,0.946,154,0.946,155,0.534,156,0.645,157,0.645,158,1.061,159,0.645,160,0.555,161,0.645,162,0.555,163,0.645,164,0.555,165,0.645,166,0.555,167,0.645,168,0.555,169,0.645,170,0.645,171,0.555,172,0.645,173,0.555,174,0.645,175,0.555,176,0.645,177,0.555,178,0.645,179,0.534,180,0.645,181,0.555,182,0.555,183,0.645,184,0.555,185,0.645,186,0.555,187,0.645,188,0.555,189,0.645,190,0.555,191,0.645,192,0.645,193,0.555,194,0.645,195,0.555,196,0.645,197,0.555,198,0.878,199,0.878,200,0.645,201,0.555,202,0.645,203,0.555,204,0.645,205,0.555,206,0.645,207,0.555,208,0.645,209,0.555,210,0.645,211,0.555,212,0.645,213,0.555,214,0.645,215,0.555,216,0.645,217,0.645,218,0.555,219,0.622,220,0.645,221,0.555,222,0.645,223,0.555,224,1.001,225,0.645,226,0.555,227,0.645,228,0.555,229,0.645,230,0.555,231,0.576,232,0.645,233,0.576,234,0.622,235,0.645,236,0.005,237,0.008,238,0.005,239,2.722,240,3.597,241,4.592,242,5.437,243,5.437,244,5.437,245,5.437,246,5.437,247,4.592,248,5.989,249,5.989,250,3.131,251,3.194,252,4.592,253,4.592,254,4.727,255,3.131,256,2.425,257,3.131,258,3.131,259,4.592,260,4.592,261,4.592,262,4.592,263,3.131,264,4.592,265,4.592,266,4.592,267,4.592,268,4.592,269,4.592,270,4.592,271,4.592,272,4.592,273,3.131,274,4.592,275,4.592,276,4.592,277,3.992,278,4.592,279,4.592,280,4.592,281,3.131,282,3.131,283,1.958,284,3.131,285,3.131,286,3.131,287,3.131,288,3.131,289,3.131,290,5.437,291,4.592,292,4.592,293,4.592,294,5.989,295,4.592,296,4.592,297,4.592,298,4.592,299,3.992,300,3.992,301,4.592,302,4.592,303,3.597,304,3.992,305,4.592,306,4.592,307,4.592,308,3.067,309,3.597,310,4.592,311,3.302,312,5.221,313,4.592,314,3.992,315,4.592,316,3.597,317,4.592,318,4.592,319,3.992,320,4.592,321,5.533,322,2.201,323,7.063,324,4.592,325,3.597,326,4.592,327,3.992]],["title/components/AddObservation.html",[0,0.077,160,0.699]],["body/components/AddObservation.html",[0,0.12,1,0.7,2,0.997,3,0.092,4,0.092,5,0.814,6,0.784,7,0.814,8,0.063,10,0.674,11,1.595,12,1.116,14,0.168,15,0.392,29,0.935,32,0.238,35,0.014,36,0.614,37,0.209,57,0.96,58,1.09,61,0.323,64,0.38,66,0.106,67,0.117,87,0.7,93,2.374,96,3.913,127,4.445,132,4.782,138,1.133,152,0.728,153,1.116,154,1.116,155,0.674,156,0.814,157,0.814,158,0.7,159,0.814,160,1.275,161,0.814,162,0.7,163,0.814,164,0.7,165,0.814,166,0.7,167,0.814,168,0.7,169,0.814,170,0.814,171,0.7,172,0.814,173,0.7,174,0.814,175,0.7,176,0.814,177,0.7,178,0.814,179,0.674,180,0.814,181,0.7,182,0.7,183,0.814,184,0.7,185,0.814,186,0.7,187,0.814,188,0.7,189,0.814,190,0.7,191,0.814,192,0.814,193,0.7,194,0.814,195,0.7,196,0.814,197,0.7,198,1.036,199,1.036,200,0.814,201,0.7,202,0.814,203,0.7,204,0.814,205,0.7,206,0.814,207,0.7,208,0.814,209,0.7,210,0.814,211,0.7,212,0.814,213,0.7,214,0.814,215,0.7,216,0.814,217,0.814,218,0.7,219,0.784,220,0.814,221,0.7,222,0.814,223,0.7,224,0.728,225,0.814,226,0.7,227,0.814,228,0.7,229,0.814,230,0.7,231,0.728,232,0.814,233,0.728,234,0.784,235,0.814,236,0.007,237,0.009,238,0.007,328,3.436,329,5.417,330,6.18,331,5.417,332,4.244,333,3.199,334,4.709,335,4.709,336,4.709,337,4.244,338,5.417,339,4.709,340,4.709,341,4.709,342,5.417,343,4.709,344,2.326,345,3.952,346,5.417,347,5.417,348,4.244,349,4.244]],["title/classes/AllergyIntolerance.html",[67,0.117,350,2.836]],["body/classes/AllergyIntolerance.html",[3,0.14,4,0.14,8,0.096,14,0.258,15,0.515,32,0.274,35,0.014,37,0.291,66,0.163,67,0.179,77,0.841,236,0.01,237,0.012,238,0.01,333,3.042,350,5.114,351,2.168,352,5.268,353,2.808,354,3.2,355,6.059,356,6.059,357,2.775]],["title/components/AppComponent.html",[0,0.077,162,0.699]],["body/components/AppComponent.html",[0,0.142,1,0.809,2,1.098,3,0.106,4,0.106,5,0.941,6,0.906,7,0.941,8,0.072,10,0.778,11,1.607,12,1.229,29,1.005,32,0.176,35,0.014,36,0.512,61,0.373,64,0.439,66,0.123,67,0.135,87,0.809,138,1.201,152,0.84,153,1.229,154,1.229,155,0.778,156,0.941,157,0.941,158,0.809,159,0.941,160,0.809,161,0.941,162,1.249,163,0.941,164,0.809,165,0.941,166,0.809,167,0.941,168,0.809,169,0.941,170,0.941,171,0.809,172,0.941,173,0.809,174,0.941,175,0.809,176,0.941,177,0.809,178,0.941,179,0.778,180,0.941,181,0.809,182,0.809,183,0.941,184,0.809,185,0.941,186,0.809,187,0.941,188,0.809,189,0.941,190,0.809,191,0.941,192,0.941,193,0.809,194,0.941,195,0.809,196,0.941,197,0.809,198,1.141,199,1.141,200,0.941,201,0.809,202,0.941,203,0.809,204,0.941,205,0.809,206,0.941,207,0.809,208,0.941,209,0.809,210,0.941,211,0.809,212,0.941,213,0.809,214,0.941,215,0.809,216,0.941,217,0.941,218,0.809,219,0.906,220,0.941,221,0.809,222,0.941,223,0.809,224,0.84,225,0.941,226,0.809,227,0.941,228,0.809,229,0.941,230,0.809,231,0.84,232,0.941,233,0.84,234,0.906,235,0.941,236,0.008,237,0.01,238,0.008,240,4.674,325,4.674,358,3.969,359,2.001,360,5.187,361,5.966,362,4.291,363,5.187,364,5.966,365,4.565,366,5.966,367,5.187]],["title/modules/AppModule.html",[368,2.466,369,2.836]],["body/modules/AppModule.html",[0,0.119,1,1.085,2,0.462,3,0.058,4,0.058,8,0.04,31,2.805,35,0.015,61,0.672,64,0.373,66,0.068,67,0.074,88,1.099,90,2.646,92,1.325,152,0.462,158,1.132,160,1.085,162,1.268,164,1.085,166,1.085,171,1.085,173,1.085,175,1.085,177,1.085,179,1.044,181,1.085,184,1.132,186,1.17,188,1.085,190,1.085,193,1.085,195,1.085,203,1.085,205,1.085,207,1.085,209,1.085,211,1.085,213,1.085,221,1.085,223,1.085,226,1.085,228,1.085,230,0.444,236,0.004,237,0.007,238,0.004,240,1.965,251,2.936,360,2.181,368,1.568,369,6.025,370,1.675,371,1.675,372,3.724,373,2.972,374,3.724,375,1.965,376,2.181,377,2.181,378,2.181,379,2.181,380,2.181,381,4.091,382,3.409,383,3.605,384,2.936,385,3.605,386,2.468,387,2.936,388,3.829,389,3.409,390,2.371,391,3.829,392,3.829,393,3.043,394,1.568,395,1.675,396,1.965,397,4.654,398,3.377,399,3.884,400,3.884,401,2.508,402,2.181,403,2.508,404,2.508,405,2.508,406,2.508,407,2.508,408,2.508,409,2.508,410,2.508,411,2.508,412,2.508,413,2.508,414,2.508,415,2.508,416,2.508,417,2.508,418,2.508,419,2.508,420,2.508,421,2.508,422,2.508,423,2.508,424,1.965,425,2.508,426,2.508,427,2.508,428,2.508,429,2.508,430,2.508,431,2.508,432,2.508,433,1.703,434,2.594,435,2.162,436,1.568,437,2.508,438,2.508,439,2.508,440,2.508,441,2.508,442,2.508,443,2.508,444,2.508,445,2.508,446,2.508,447,2.508,448,2.508,449,2.508,450,3.884,451,1.476,452,3.884,453,2.181,454,1.675,455,3.377,456,3.377,457,3.043,458,1.804,459,3.377,460,1.965,461,3.884,462,1.325,463,1.965,464,1.965,465,2.181,466,3.884,467,2.508,468,2.508,469,3.175,470,2.508,471,3.346,472,2.181,473,3.043,474,3.043,475,2.181,476,1.476,477,2.508]],["title/interfaces/Associable.html",[478,2.634,479,2.466]],["body/interfaces/Associable.html",[3,0.148,4,0.148,8,0.101,35,0.014,66,0.172,236,0.011,237,0.013,238,0.011,478,4.262,479,4.582,480,6.381,481,5.548]],["title/injectables/AssociationService.html",[382,2.195,482,1.012]],["body/injectables/AssociationService.html",[3,0.078,4,0.078,8,0.054,14,0.144,15,0.352,18,0.677,29,0.735,31,3.23,32,0.278,34,0.995,35,0.014,36,0.506,37,0.278,38,1.036,47,0.865,49,0.623,57,1.007,58,0.932,61,0.559,64,0.325,66,0.091,67,0.1,77,0.377,80,1.891,88,3.309,89,2.041,92,3.987,103,2.944,148,3.136,236,0.006,237,0.008,238,0.006,256,1.788,333,2.759,382,2.705,384,3.381,462,1.788,471,3.554,482,1.246,483,1.484,484,2.944,485,5.685,486,5.685,487,1.93,488,4.86,489,4.86,490,5.685,491,4.225,492,2.261,493,3.656,494,4.86,495,2.86,496,4.86,497,3.386,498,4.573,499,4.225,500,4.86,501,3.616,502,3.386,503,3.807,504,3.386,505,6.132,506,3.386,507,5.401,508,4.86,509,3.386,510,4.819,511,2.139,512,3.386,513,4.86,514,4.86,515,4.225,516,4.86,517,4.86,518,4.86,519,4.86,520,3.386,521,3.386,522,3.386,523,1.993,524,2.261,525,1.884,526,4.86,527,2.329,528,3.386,529,2.944,530,3.386,531,3.164,532,4.866,533,2.117,534,2.652,535,3.386,536,3.386,537,3.386,538,3.386,539,3.386,540,3.386,541,3.386,542,6.578,543,4.225,544,3.386,545,4.86,546,3.386,547,4.86,548,3.386,549,4.86,550,4.225,551,1.993,552,3.386,553,4.86,554,3.386,555,2.652,556,3.386,557,3.386,558,4.86,559,4.86,560,4.86,561,3.386,562,4.86,563,3.386,564,4.86,565,3.386,566,4.86,567,3.386,568,2.944,569,1.458,570,3.386,571,3.386,572,3.386,573,3.495,574,2.261,575,4.86,576,3.386,577,3.386,578,3.386,579,3.386,580,2.944,581,3.386,582,3.386]],["title/directives/AutoGrowDirective.html",[155,0.672,231,0.726]],["body/directives/AutoGrowDirective.html",[3,0.126,4,0.126,8,0.086,10,0.926,11,1.274,14,0.231,18,0.928,29,0.822,32,0.278,34,0.822,35,0.014,36,0.418,37,0.209,38,0.856,47,0.928,49,1.226,61,0.443,64,0.522,66,0.146,67,0.161,107,2.604,155,1.135,230,0.963,231,1.226,236,0.009,237,0.011,238,0.009,487,1.344,583,6.529,584,4.724,585,6.661,586,7.706,587,7.706,588,4.724,589,5.401,590,6.906,591,5.433,592,5.792,593,5.433,594,5.433,595,5.433,596,4.257,597,5.433,598,5.433,599,6.661,600,5.792,601,5.433,602,5.433,603,5.433]],["title/classes/BaseColumn.html",[67,0.117,604,2.195]],["body/classes/BaseColumn.html",[3,0.105,4,0.105,8,0.071,14,0.192,15,0.429,18,0.825,29,1,32,0.298,34,0.683,35,0.014,36,0.348,37,0.255,38,0.712,39,2.511,47,0.977,49,1.292,57,1.291,58,1.084,61,0.484,66,0.122,67,0.196,70,4.642,77,0.66,90,4.162,106,2.12,112,3.249,134,3.927,147,3.017,236,0.008,237,0.01,238,0.008,309,3.539,332,5.179,351,1.616,362,3.249,527,2.165,604,3.298,605,3.927,606,4.755,607,4.416,608,4.755,609,4.261,610,4.687,611,4.687,612,5.047,613,4.517,614,4.517,615,4.517,616,4.261,617,4.517,618,4.261,619,4.517,620,4.517,621,4.517,622,4.517,623,3.539,624,2.165,625,4.517,626,3.017,627,3.249,628,3.539,629,3.927,630,3.017,631,3.927,632,5.925,633,4.517,634,3.539,635,3.487,636,5.151,637,2.84,638,2.84,639,2.659,640,5.925,641,4.517,642,5.925,643,6.611,644,4.517,645,4.517,646,4.517,647,4.517,648,4.517,649,4.517,650,3.539,651,4.517,652,3.249,653,4.517,654,4.517,655,2.824,656,4.517,657,3.017,658,3.927,659,3.927,660,3.927,661,4.517,662,4.517,663,4.517,664,3.927]],["title/classes/Bundle.html",[67,0.117,665,2.195]],["body/classes/Bundle.html",[3,0.139,4,0.139,8,0.095,14,0.255,15,0.512,32,0.273,35,0.014,37,0.273,66,0.19,67,0.209,77,0.788,80,1.852,236,0.01,237,0.012,238,0.01,351,2.146,665,3.935,666,4.699,667,6.535,668,5.583,669,5.998,670,5.998,671,5.215,672,2.875]],["title/classes/CarePlan.html",[67,0.117,476,2.321]],["body/classes/CarePlan.html",[3,0.118,4,0.118,8,0.08,14,0.216,15,0.463,32,0.297,35,0.014,37,0.308,39,1.819,56,1.751,58,0.833,61,0.415,66,0.137,67,0.151,77,0.925,99,2.802,236,0.009,237,0.011,238,0.009,333,2.576,351,1.819,353,2.601,354,3.376,357,2.328,359,3.065,476,3.762,479,4.371,498,4.269,573,3.656,673,4.42,674,4.597,675,6.991,676,5.028,677,4.318,678,5.477,679,5.084,680,5.084,681,5.084,682,5.084,683,5.084,684,5.084,685,3.983,686,3.178,687,3.558,688,2.992,689,5.084,690,5.084,691,5.084,692,5.084,693,5.084,694,4.42,695,5.084,696,5.084,697,3.656]],["title/components/CarePlanComponent.html",[0,0.077,164,0.699]],["body/components/CarePlanComponent.html",[0,0.108,1,0.573,2,0.866,3,0.075,4,0.075,5,0.667,6,0.642,7,0.667,8,0.051,10,0.552,11,1.575,12,0.969,14,0.138,15,0.341,18,0.655,20,3.213,24,1.448,29,0.49,32,0.299,34,0.712,35,0.014,36,0.497,37,0.28,38,0.741,39,1.683,47,0.939,49,1.19,56,1.62,57,1.145,58,0.908,59,1.82,61,0.582,62,1.297,64,0.311,66,0.087,67,0.096,77,0.361,80,1.122,85,1.158,87,0.573,89,1.359,90,2.618,94,4.062,95,4.374,106,1.158,107,1.551,138,1.037,152,0.596,153,0.969,154,0.969,155,0.552,156,0.667,157,0.667,158,0.573,159,0.667,160,0.573,161,0.667,162,0.573,163,0.667,164,1.078,165,0.667,166,0.573,167,0.667,168,0.573,169,0.667,170,0.667,171,0.573,172,0.667,173,0.573,174,0.667,175,0.573,176,0.667,177,0.573,178,0.667,179,0.552,180,0.667,181,0.573,182,0.573,183,0.667,184,0.573,185,0.667,186,0.573,187,0.667,188,0.573,189,0.667,190,0.573,191,0.667,192,0.667,193,0.573,194,0.667,195,0.573,196,0.667,197,0.573,198,0.899,199,0.899,200,0.667,201,0.573,202,0.667,203,0.573,204,0.667,205,0.573,206,0.667,207,0.573,208,0.667,209,0.573,210,0.667,211,0.573,212,0.667,213,0.573,214,0.667,215,0.573,216,0.969,217,0.667,218,0.573,219,0.642,220,0.667,221,0.573,222,0.667,223,0.573,224,0.596,225,0.667,226,0.573,227,0.667,228,0.573,229,0.667,230,0.573,231,0.596,232,0.667,233,0.596,234,0.642,235,0.667,236,0.006,237,0.008,238,0.006,322,2.656,383,4.095,386,2.717,390,2.693,433,1.418,476,3.803,487,1.163,569,0.83,604,4.162,606,3.383,607,3.141,608,3.383,609,3.383,610,3.701,611,3.701,612,3.985,616,2.327,618,2.327,624,1.551,627,2.327,637,2.254,638,2.254,657,3.141,698,2.813,699,3.685,700,4.703,701,5.541,702,4.062,703,4.503,704,6.083,705,2.153,706,2.023,707,4.703,708,3.236,709,3.236,710,5.45,711,2.535,712,2.535,713,2.535,714,2.535,715,3.236,716,3.236,717,3.236,718,3.236,719,2.535,720,2.535,721,2.535,722,2.161,723,2.813,724,1.482,725,2.535,726,1.304,727,1.801,728,2.813,729,2.813,730,2.535,731,2.535,732,2.535,733,3.685,734,3.383,735,2.023,736,1.801,737,3.236,738,2.813,739,3.236,740,2.535,741,3.236,742,2.813,743,3.236]],["title/components/CarePlanDisplay.html",[0,0.077,166,0.699]],["body/components/CarePlanDisplay.html",[0,0.1,1,0.502,2,0.785,3,0.066,4,0.066,5,0.584,6,0.563,7,0.584,8,0.045,10,0.483,11,1.56,12,0.879,14,0.121,15,0.309,18,0.714,24,1.313,29,0.429,32,0.287,34,0.972,35,0.014,36,0.54,37,0.28,38,1.012,47,0.928,49,1.183,56,2.417,57,0.502,58,0.465,59,2.487,61,0.466,62,1.176,63,2.253,64,0.272,66,0.076,67,0.084,74,1.773,77,0.571,80,1.223,87,0.756,88,1.87,89,1.792,106,1.014,107,1.359,109,1.894,122,3.688,138,0.972,152,0.522,153,0.879,154,0.879,155,0.483,156,0.584,157,0.584,158,0.502,159,0.584,160,0.502,161,0.584,162,0.502,163,0.584,164,0.502,165,0.584,166,1.139,167,0.584,168,0.502,169,1.056,170,0.584,171,0.502,172,0.584,173,0.502,174,0.584,175,0.502,176,0.584,177,0.502,178,0.584,179,0.972,180,0.584,181,0.502,182,0.502,183,0.584,184,0.502,185,0.584,186,0.502,187,0.584,188,0.502,189,0.584,190,0.502,191,0.584,192,0.584,193,0.502,194,0.584,195,0.502,196,0.584,197,0.502,198,0.816,199,0.816,200,0.584,201,0.502,202,0.584,203,0.502,204,0.584,205,0.502,206,0.584,207,0.502,208,0.584,209,0.502,210,0.584,211,0.502,212,0.584,213,0.502,214,0.584,215,0.502,216,0.584,217,0.584,218,0.502,219,0.563,220,0.584,221,0.502,222,0.584,223,0.502,224,0.522,225,0.584,226,0.502,227,0.584,228,0.502,229,0.584,230,0.502,231,0.522,232,0.584,233,0.522,234,0.563,235,0.584,236,0.005,237,0.007,238,0.005,256,3.013,308,1.894,322,2.932,357,2.348,359,1.87,390,2.655,476,4.551,511,0.976,527,2.045,533,2.667,551,2.511,569,1.094,596,2.221,635,1.669,637,2.045,638,2.045,655,1.773,686,2.667,688,2.511,702,4.085,724,1.299,725,2.221,727,2.374,735,1.773,738,3.708,744,2.465,745,4.265,746,4.017,747,3.404,748,4.265,749,4.265,750,4.265,751,3.068,752,4.102,753,3.81,754,4.265,755,2.667,756,5.128,757,2.221,758,4.265,759,2.835,760,3.357,761,2.835,762,4.265,763,2.835,764,4.265,765,5.704,766,2.835,767,4.265,768,2.835,769,3.068,770,2.835,771,2.849,772,2.835,773,2.835,774,4.265,775,2.835,776,2.835,777,1.669,778,3.068,779,2.253,780,2.835,781,1.773,782,2.039,783,1.894,784,1.894,785,1.299,786,2.511,787,2.849,788,2.667,789,3.566,790,1.894,791,2.039,792,1.894,793,1.894,794,1.894,795,2.039,796,2.854,797,1.894,798,1.894,799,1.894,800,1.894,801,3.425,802,3.206,803,3.425,804,2.221,805,4.458,806,2.835,807,3.688,808,2.039,809,4.265,810,2.221,811,1.773,812,2.221,813,2.465,814,2.465,815,2.465,816,1.894,817,2.835,818,2.835,819,2.465,820,2.465,821,2.221,822,2.835,823,1.894,824,1.773,825,2.465,826,2.465,827,2.221,828,4.265,829,3.068,830,2.039,831,2.039,832,2.221,833,2.221,834,2.835,835,4.265,836,4.265,837,2.835]],["title/injectables/CarePlanService.html",[383,2.321,482,1.012]],["body/injectables/CarePlanService.html",[3,0.098,4,0.098,8,0.067,14,0.179,15,0.41,18,0.788,29,0.857,32,0.263,34,0.967,35,0.014,36,0.492,37,0.263,38,1.007,47,0.788,57,0.747,58,0.691,61,0.63,64,0.405,66,0.114,67,0.125,77,0.47,80,1.351,94,3.782,95,4.072,236,0.007,237,0.01,238,0.007,383,3.333,386,2.956,462,2.228,471,3.995,476,3.762,482,1.452,483,1.849,487,1.762,493,4.02,495,3.762,510,4.268,511,2.453,569,1.881,624,2.022,626,2.818,665,2.348,672,2.022,676,3.034,686,2.637,688,2.483,702,2.818,705,2.545,706,2.637,725,3.305,726,1.7,796,2.348,838,3.668,839,5.662,840,5.662,841,5.662,842,5.662,843,4.219,844,4.454,845,5.662,846,4.219,847,2.818,848,4.454,849,3.305,850,3.034,851,4.268,852,4.268,853,2.637,854,3.034,855,3.305,856,2.637,857,3.034,858,3.668,859,3.305,860,3.668,861,3.668,862,3.305,863,3.305,864,3.668,865,4.219,866,3.305,867,3.668,868,4.219,869,2.483,870,4.219,871,4.219,872,4.219,873,4.923,874,4.219,875,4.219,876,3.305,877,3.668,878,5.662,879,4.219,880,4.219,881,3.668,882,4.219,883,4.219,884,4.219,885,3.668,886,4.219,887,4.219,888,4.219]],["title/classes/Chart.html",[67,0.117,889,2.634]],["body/classes/Chart.html",[3,0.114,4,0.114,8,0.078,14,0.209,15,0.452,32,0.303,35,0.014,36,0.557,37,0.31,39,2.779,56,2.151,57,0.868,58,1.186,66,0.132,67,0.145,69,2.228,77,0.833,80,1.49,98,3.064,99,2.148,128,3.525,236,0.008,237,0.011,238,0.008,321,4.893,333,2.77,351,1.754,354,3.631,435,3.476,454,4.591,531,2.728,678,5.385,697,3.525,785,2.245,816,4.171,889,5.105,890,4.261,891,6.874,892,6.874,893,6.874,894,6.874,895,6.874,896,4.901,897,4.901,898,4.901,899,4.901,900,4.901,901,4.901,902,4.901,903,4.901,904,3.839,905,4.901,906,4.261,907,4.261,908,4.261,909,4.261,910,4.261,911,3.839,912,4.261,913,4.261,914,4.901,915,4.901,916,4.261,917,4.261,918,3.839]],["title/components/CheckboxInline.html",[0,0.077,168,0.699]],["body/components/CheckboxInline.html",[0,0.124,1,0.745,2,1.04,3,0.097,4,0.097,5,0.867,6,0.835,7,0.867,8,0.067,10,0.717,11,1.6,12,1.164,14,0.179,15,0.409,18,0.787,24,1.739,32,0.274,35,0.014,36,0.491,37,0.246,47,0.787,49,0.774,56,1.946,57,1.001,58,0.926,59,1.628,61,0.343,62,1.558,64,0.404,66,0.113,67,0.125,77,0.63,87,0.745,91,1.695,138,1.213,152,0.774,153,1.164,154,1.164,155,0.717,156,0.867,157,0.867,158,0.745,159,0.867,160,0.745,161,0.867,162,0.745,163,0.867,164,0.745,165,0.867,166,0.745,167,0.867,168,1.209,169,1.466,170,0.867,171,0.745,172,0.867,173,0.745,174,0.867,175,0.745,176,0.867,177,0.745,178,0.867,179,0.717,180,0.867,181,0.745,182,0.745,183,0.867,184,0.745,185,0.867,186,0.745,187,0.867,188,0.745,189,0.867,190,0.745,191,0.867,192,0.867,193,0.745,194,0.867,195,0.745,196,0.867,197,0.745,198,1.081,199,1.081,200,0.867,201,0.745,202,0.867,203,0.745,204,0.867,205,0.745,206,0.867,207,0.745,208,0.867,209,0.745,210,0.867,211,0.745,212,0.867,213,0.745,214,0.867,215,0.745,216,0.867,217,0.867,218,0.745,219,0.835,220,0.867,221,0.745,222,0.867,223,0.745,224,0.774,225,0.867,226,0.745,227,0.867,228,0.745,229,0.867,230,0.745,231,0.774,232,0.867,233,0.774,234,0.835,235,0.867,236,0.007,237,0.01,238,0.007,753,4.557,919,6.372,920,3.658,921,5.651,922,5.651,923,6.382,924,6.382,925,3.552,926,4.262,927,4.207,928,4.207,929,4.207,930,4.207,931,4.207,932,3.658,933,4.207,934,3.774,935,4.913]],["title/classes/Client.html",[67,0.117,936,3.09]],["body/classes/Client.html",[3,0.142,4,0.142,8,0.097,14,0.26,15,0.518,32,0.276,35,0.014,36,0.583,37,0.276,67,0.181,77,0.871,236,0.01,237,0.012,238,0.01,351,2.19,353,2.82,936,5.604,937,5.321,938,6.121,939,6.121]],["title/components/ColumnStateSwitcherComponent.html",[0,0.077,171,0.699]],["body/components/ColumnStateSwitcherComponent.html",[0,0.137,1,0.596,2,0.89,3,0.078,4,0.078,5,0.693,6,0.668,7,0.693,8,0.053,10,0.573,11,1.579,12,0.996,14,0.143,18,0.673,24,1.488,29,0.732,32,0.263,34,0.509,35,0.014,36,0.477,37,0.253,38,0.53,39,2.444,47,0.789,49,0.89,57,1.162,61,0.462,62,1.562,64,0.323,66,0.091,67,0.1,74,3.023,77,0.539,85,1.73,87,0.596,88,2.482,90,4.277,91,1.949,92,2.991,98,3.023,124,3.789,138,1.056,147,3.23,152,0.619,153,0.996,154,0.996,155,0.573,156,0.693,157,0.693,158,0.596,159,0.693,160,0.596,161,0.693,162,0.596,163,0.693,164,0.596,165,0.693,166,0.596,167,0.693,168,0.596,169,0.693,170,0.693,171,1.097,172,0.693,173,0.596,174,0.693,175,0.596,176,0.693,177,0.596,178,0.693,179,0.573,180,0.693,181,0.596,182,0.596,183,0.693,184,0.596,185,0.693,186,0.596,187,0.693,188,0.596,189,0.693,190,0.596,191,0.693,192,0.693,193,0.596,194,0.693,195,0.596,196,0.693,197,0.596,198,0.925,199,0.925,200,0.693,201,0.596,202,0.693,203,0.596,204,0.693,205,0.596,206,0.693,207,0.596,208,0.693,209,0.596,210,0.693,211,0.596,212,0.693,213,0.596,214,0.693,215,0.596,216,0.996,217,0.693,218,0.596,219,0.668,220,0.693,221,0.596,222,0.693,223,0.596,224,0.619,225,0.693,226,0.596,227,0.693,228,0.596,229,0.693,230,0.596,231,0.619,232,0.693,233,0.619,234,0.668,235,0.693,236,0.006,237,0.008,238,0.006,359,1.474,390,2.644,433,2.12,487,0.832,525,1.872,569,1.588,604,3.447,628,4.851,635,2.846,637,3.374,638,3.516,652,3.478,657,3.23,658,4.205,659,5.384,702,4.136,724,1.54,729,2.924,757,2.635,785,2.215,788,3.871,851,3.23,940,2.924,941,4.836,942,4.836,943,4.836,944,6.831,945,6.193,946,6.193,947,5.663,948,4.836,949,3.363,950,6.193,951,4.205,952,3.363,953,4.205,954,4.836,955,3.363,956,4.851,957,3.363,958,4.836,959,4.836,960,4.836,961,3.478,962,3.363,963,3.363,964,5.663,965,3.363,966,3.363,967,2.924,968,2.924]],["title/classes/Condition.html",[67,0.117,148,1.806]],["body/classes/Condition.html",[3,0.121,4,0.121,8,0.083,14,0.222,15,0.471,32,0.31,35,0.014,37,0.312,56,2.551,61,0.426,66,0.141,67,0.155,77,0.922,99,2.29,148,2.978,236,0.009,237,0.011,238,0.009,333,2.986,351,1.87,353,2.634,354,2.76,357,2.393,479,4.426,498,3.49,499,6.155,573,3.758,674,4.676,685,4.094,771,4.728,969,4.543,970,7.079,971,7.079,972,7.079,973,5.091,974,7.079,975,5.225,976,5.225,977,5.225,978,5.225,979,5.225,980,5.225,981,5.225,982,5.225,983,5.225]],["title/injectables/ConditionService.html",[384,1.891,482,1.012]],["body/injectables/ConditionService.html",[3,0.078,4,0.078,8,0.054,14,0.144,15,0.352,18,0.677,29,0.735,32,0.294,34,0.995,35,0.015,36,0.506,37,0.287,38,1.036,47,0.953,49,0.895,57,1.165,58,1.018,61,0.609,64,0.325,66,0.091,67,0.1,69,1.042,77,0.841,80,1.356,85,1.739,88,3.092,90,2.705,104,2.652,138,0.577,148,3.136,236,0.006,237,0.008,238,0.006,316,3.807,322,1.623,344,1.993,350,3.495,384,2.329,386,2.842,390,2.73,433,1.484,462,1.788,469,2.261,471,3.554,482,1.246,483,1.484,487,1.693,492,2.261,493,3.656,495,2.86,510,2.261,511,1.166,523,1.993,525,1.884,527,1.623,543,4.225,569,1.912,607,3.797,624,1.623,626,2.261,635,2.86,637,1.623,638,1.623,665,1.884,672,2.725,705,2.476,724,1.551,726,1.365,728,2.944,734,3.495,844,4.409,847,2.261,850,2.435,851,3.246,852,3.246,853,3.038,854,2.435,855,3.807,856,3.038,857,3.495,858,2.944,859,2.652,860,4.225,861,4.225,984,2.944,985,5.685,986,4.942,987,6.212,988,6.212,989,4.225,990,4.86,991,4.86,992,4.86,993,4.86,994,3.386,995,3.386,996,4.86,997,3.386,998,4.86,999,3.386,1000,4.86,1001,3.386,1002,4.86,1003,3.386,1004,4.86,1005,3.386,1006,3.386,1007,3.386,1008,3.386,1009,2.944,1010,4.225,1011,3.386,1012,2.944,1013,3.386,1014,3.386,1015,3.386,1016,3.386,1017,3.386,1018,3.386,1019,3.386,1020,3.246,1021,2.652,1022,3.386,1023,3.386,1024,3.386,1025,3.386,1026,2.652,1027,3.386,1028,3.386,1029,2.944,1030,3.807,1031,2.652,1032,2.652,1033,3.386,1034,3.386,1035,3.386,1036,3.386,1037,3.386,1038,3.386,1039,2.944,1040,3.386,1041,3.386,1042,3.386,1043,3.386,1044,3.386,1045,3.386,1046,3.386,1047,3.386]],["title/components/ConditionsChartComponent.html",[0,0.077,173,0.699]],["body/components/ConditionsChartComponent.html",[0,0.084,1,0.38,2,0.632,3,0.08,4,0.05,5,0.441,6,0.425,7,0.441,8,0.034,10,0.365,11,1.521,12,0.707,14,0.091,15,0.248,16,3.731,18,0.478,20,2.591,24,1.056,29,0.519,32,0.292,34,0.91,35,0.015,36,0.509,37,0.279,38,0.947,39,2.049,47,0.958,49,1.266,56,1.848,57,0.951,58,1.024,59,2.419,61,0.491,62,0.946,63,1.812,64,0.206,66,0.058,67,0.063,69,0.659,77,0.789,80,1.611,85,1.228,87,0.608,88,2.151,89,2.625,91,0.864,93,2.353,98,1.34,99,0.939,100,1.541,112,1.541,119,1.863,126,1.34,138,1.065,142,2.866,144,2.468,148,3.028,152,0.394,153,0.707,154,0.707,155,0.365,156,0.441,157,0.441,158,0.38,159,0.441,160,0.38,161,0.441,162,0.38,163,0.441,164,0.38,165,0.441,166,0.38,167,0.441,168,0.38,169,0.441,170,0.441,171,0.38,172,0.441,173,0.869,174,0.441,175,0.38,176,0.441,177,0.38,178,0.441,179,0.365,180,0.441,181,0.38,182,0.38,183,0.441,184,0.38,185,0.441,186,0.38,187,0.441,188,0.38,189,0.441,190,0.38,191,0.441,192,0.441,193,0.38,194,0.441,195,0.38,196,0.441,197,0.38,198,0.656,199,0.656,200,0.441,201,0.38,202,0.441,203,0.38,204,0.441,205,0.38,206,0.441,207,0.38,208,0.441,209,0.38,210,0.441,211,0.38,212,0.441,213,0.38,214,0.441,215,0.38,216,0.441,217,0.441,218,0.38,219,0.425,220,0.441,221,0.38,222,0.441,223,0.38,224,0.394,225,0.441,226,0.38,227,0.441,228,0.38,229,0.441,230,0.38,231,0.394,232,0.441,233,0.394,234,0.425,235,0.441,236,0.004,237,0.006,238,0.004,251,2.883,254,1.863,256,1.812,283,1.34,322,2.057,325,2.688,359,1.504,368,1.34,384,2.745,390,2.328,451,2.02,487,1.061,511,1.848,523,1.261,534,1.679,551,4.112,569,0.88,574,2.292,677,2.02,687,2.389,705,1.829,724,0.981,726,0.864,735,2.145,736,1.193,751,2.468,755,2.145,760,2.888,769,2.468,771,2.292,790,1.431,799,1.431,819,1.863,820,1.863,821,1.679,827,1.679,829,2.468,830,3.086,831,1.541,869,1.261,877,1.863,1048,1.863,1049,3.431,1050,3.431,1051,4.291,1052,3.731,1053,4.291,1054,4.291,1055,3.731,1056,4.906,1057,4.906,1058,3.431,1059,3.431,1060,2.688,1061,3.431,1062,3.431,1063,4.906,1064,4.906,1065,3.362,1066,2.143,1067,3.431,1068,2.143,1069,2.143,1070,2.143,1071,2.143,1072,2.143,1073,3.431,1074,4.291,1075,5.368,1076,4.291,1077,2.143,1078,2.143,1079,2.143,1080,3.431,1081,2.143,1082,2.688,1083,2.143,1084,3.431,1085,2.143,1086,3.277,1087,3.431,1088,2.143,1089,3.431,1090,2.143,1091,2.143,1092,2.143,1093,2.143,1094,2.143,1095,2.143,1096,2.143,1097,2.143,1098,2.143,1099,1.431,1100,1.863,1101,4.857,1102,2.143,1103,3.431,1104,2.143,1105,3.431,1106,2.143,1107,1.863,1108,3.431,1109,2.143,1110,2.143,1111,2.143,1112,3.431,1113,1.679,1114,1.863,1115,2.143,1116,2.143,1117,2.983,1118,2.143,1119,2.143,1120,4.667,1121,3.431,1122,2.143,1123,2.983,1124,2.143,1125,1.34,1126,3.431,1127,2.143,1128,1.541,1129,1.679,1130,2.143,1131,1.863,1132,2.143,1133,2.143,1134,2.143,1135,1.679,1136,1.863,1137,2.143,1138,2.143,1139,1.431,1140,3.431,1141,2.143,1142,3.431,1143,2.143,1144,2.143,1145,1.863,1146,1.863,1147,2.143,1148,2.143,1149,2.143,1150,1.863,1151,2.143,1152,2.143,1153,1.863,1154,4.291,1155,2.143,1156,4.291,1157,2.143,1158,3.431,1159,2.143,1160,3.431,1161,3.431,1162,3.431,1163,3.431,1164,2.143,1165,2.143,1166,1.679,1167,2.983,1168,3.431,1169,2.143,1170,2.143,1171,2.143,1172,2.143,1173,2.143,1174,2.143,1175,2.143,1176,2.143,1177,2.143,1178,2.143,1179,3.431,1180,2.143,1181,2.143,1182,1.863,1183,3.431,1184,2.468,1185,3.431,1186,2.143,1187,2.143,1188,3.431,1189,3.431,1190,2.143,1191,2.143,1192,2.143]],["title/components/ConditionsComponent.html",[0,0.077,175,0.699]],["body/components/ConditionsComponent.html",[0,0.093,1,0.448,2,0.72,3,0.059,4,0.059,5,0.521,6,0.502,7,0.521,8,0.04,10,0.431,11,1.545,12,0.805,14,0.108,15,0.283,18,0.665,20,2.84,24,1.203,29,0.591,32,0.299,34,0.591,35,0.014,36,0.447,37,0.283,38,0.616,39,1.399,47,0.922,49,1.218,56,2.116,57,1.204,58,1.085,59,2.081,61,0.566,62,1.078,63,2.065,64,0.243,66,0.068,67,0.075,77,0.282,80,1.282,85,0.905,87,0.847,88,3.096,89,2.008,90,2.176,91,1.019,100,2.812,106,1.399,124,1.982,138,0.991,148,2.935,152,0.466,153,0.805,154,0.805,155,0.431,156,0.521,157,0.521,158,0.448,159,0.521,160,0.448,161,0.521,162,0.448,163,0.521,164,0.448,165,0.521,166,0.448,167,0.521,168,0.448,169,0.521,170,0.521,171,0.448,172,0.521,173,0.448,174,0.521,175,0.953,176,0.521,177,0.448,178,0.521,179,0.431,180,0.521,181,0.448,182,0.448,183,0.521,184,0.448,185,0.521,186,0.448,187,0.521,188,0.448,189,0.521,190,0.448,191,0.521,192,0.521,193,0.448,194,0.521,195,0.448,196,0.521,197,0.448,198,0.748,199,0.748,200,0.521,201,0.448,202,0.521,203,0.448,204,0.521,205,0.448,206,0.521,207,0.448,208,0.521,209,0.448,210,0.521,211,0.448,212,0.521,213,0.448,214,0.521,215,0.448,216,0.805,217,0.521,218,0.448,219,0.502,220,0.521,221,0.448,222,0.521,223,0.448,224,0.466,225,0.521,226,0.448,227,0.521,228,0.448,229,0.521,230,0.448,231,0.466,232,0.521,233,0.466,234,0.502,235,0.521,236,0.004,237,0.007,238,0.004,251,3.071,283,1.581,304,2.199,322,2.946,384,3.071,386,2.477,390,2.562,433,1.109,451,2.301,487,1.33,511,2.002,523,1.489,527,1.212,534,1.982,569,1.003,604,3.932,606,2.812,607,2.611,608,2.812,609,2.812,610,3.192,611,3.192,612,4.608,616,1.819,618,1.819,624,1.212,627,1.819,635,1.489,637,1.212,638,1.212,652,1.819,657,1.689,699,3.063,703,4.104,705,2.046,706,1.581,710,5.02,711,1.982,712,1.982,713,1.982,714,1.982,719,1.982,720,1.982,721,1.982,722,1.689,724,1.158,726,1.019,731,1.982,732,1.982,733,3.063,734,2.812,735,1.581,736,1.408,740,1.982,742,2.199,755,2.444,760,3.165,784,1.689,785,1.158,811,1.581,823,1.689,916,2.199,932,2.199,961,1.819,973,1.819,1021,3.063,1052,4.155,1055,4.155,1065,3.744,1099,1.689,1100,2.199,1101,4.181,1113,1.982,1114,2.199,1120,2.199,1123,2.199,1139,1.689,1193,1.982,1194,3.91,1195,4.779,1196,5.343,1197,4.779,1198,5.377,1199,4.675,1200,3.91,1201,2.529,1202,2.529,1203,2.529,1204,2.529,1205,2.529,1206,2.529,1207,2.529,1208,2.529,1209,2.529,1210,2.529,1211,2.529,1212,2.529,1213,2.529,1214,2.529,1215,2.529,1216,2.199,1217,1.689,1218,1.982,1219,1.982,1220,2.529,1221,2.529,1222,2.529,1223,1.982,1224,2.529,1225,2.529,1226,2.529,1227,2.199,1228,1.689,1229,3.91,1230,2.529,1231,2.529,1232,2.529,1233,3.063,1234,2.199,1235,2.199,1236,2.199,1237,2.199,1238,2.529,1239,3.91,1240,2.529,1241,2.529,1242,2.529,1243,2.199,1244,3.91,1245,3.91,1246,2.199,1247,2.529,1248,2.529,1249,2.529,1250,2.199,1251,2.529,1252,2.529,1253,2.529,1254,2.199,1255,2.529,1256,2.529,1257,2.529,1258,2.529,1259,2.529,1260,2.529,1261,2.529,1262,2.529,1263,3.91]],["title/components/ConditionsDisplay.html",[0,0.077,177,0.699]],["body/components/ConditionsDisplay.html",[0,0.088,1,0.414,2,0.676,3,0.054,4,0.054,5,0.481,6,0.463,7,0.481,8,0.037,10,0.398,11,1.534,12,0.757,14,0.099,15,0.266,18,0.632,24,1.13,29,0.556,32,0.287,34,1.026,35,0.014,36,0.549,37,0.281,38,1.069,47,0.963,49,1.145,56,2.382,57,0.651,58,0.602,59,2.626,61,0.485,62,1.252,63,1.94,64,0.224,66,0.063,67,0.069,74,1.459,77,0.574,80,1.083,81,2.03,87,0.414,88,2.824,89,0.981,99,1.023,106,0.835,109,1.559,138,0.878,147,2.453,148,3.72,149,1.829,152,0.43,153,0.757,154,0.757,155,0.398,156,0.481,157,0.481,158,0.414,159,0.481,160,0.414,161,0.481,162,0.414,163,0.481,164,0.414,165,0.481,166,0.414,167,0.481,168,0.414,169,0.935,170,0.481,171,0.414,172,0.481,173,0.414,174,0.481,175,0.414,176,0.481,177,1.053,178,0.481,179,0.878,180,0.481,181,0.414,182,0.414,183,0.481,184,0.414,185,0.481,186,0.414,187,0.481,188,0.414,189,0.481,190,0.414,191,0.481,192,0.481,193,0.414,194,0.481,195,0.414,196,0.481,197,0.414,198,0.702,199,0.702,200,0.481,201,0.414,202,0.481,203,0.414,204,0.481,205,0.414,206,0.481,207,0.414,208,0.481,209,0.414,210,0.481,211,0.414,212,0.481,213,0.414,214,0.481,215,0.414,216,0.757,217,0.481,218,0.414,219,0.463,220,0.481,221,0.414,222,0.481,223,0.414,224,0.43,225,0.481,226,0.414,227,0.481,228,0.414,229,0.481,230,0.414,231,0.43,232,0.481,233,0.43,234,0.463,235,0.481,236,0.004,237,0.006,238,0.004,256,3.583,308,1.559,357,2.358,359,1.61,382,3.462,384,2.981,390,2.407,469,1.559,487,1.123,511,1.265,523,1.374,527,2.176,531,1.299,532,1.829,533,2.839,551,2.162,569,1.32,574,2.453,637,2.981,638,2.981,655,1.459,677,2.162,724,1.069,727,2.527,746,3.557,747,3.116,751,2.641,752,3.703,753,3.439,755,2.296,757,1.829,760,3.03,769,2.641,771,2.453,777,1.374,778,2.641,779,1.94,781,1.459,782,1.679,783,3.439,784,2.453,785,1.069,786,2.162,787,2.453,788,2.296,789,3.5,790,1.559,791,1.679,792,1.559,793,1.559,794,1.559,795,1.679,796,3.586,797,1.559,798,1.559,799,1.559,800,1.559,801,3.439,802,3.219,803,3.439,804,2.877,807,3.703,808,1.679,810,1.829,811,1.459,812,1.829,829,2.641,830,1.679,831,1.679,832,2.877,833,2.877,1012,2.03,1060,2.877,1065,3.557,1082,2.877,1099,1.559,1101,2.641,1117,3.193,1153,3.193,1264,2.03,1265,3.673,1266,3.673,1267,3.673,1268,3.673,1269,3.673,1270,3.673,1271,3.673,1272,3.673,1273,4.54,1274,3.673,1275,2.335,1276,2.335,1277,2.335,1278,3.673,1279,2.335,1280,3.673,1281,2.335,1282,3.673,1283,2.335,1284,3.673,1285,2.335,1286,3.673,1287,2.335,1288,3.673,1289,2.335,1290,3.673,1291,2.335,1292,2.335,1293,2.335,1294,3.673,1295,2.335,1296,2.335,1297,2.335,1298,1.829,1299,1.829,1300,2.335,1301,3.193,1302,2.453,1303,4.476,1304,3.673,1305,3.193,1306,2.335,1307,2.335,1308,4.54,1309,2.335,1310,3.948,1311,2.335,1312,3.673,1313,3.673,1314,1.829,1315,3.193,1316,2.335,1317,2.335,1318,2.335,1319,2.335,1320,2.03,1321,2.335,1322,2.335,1323,2.335,1324,2.335,1325,2.335,1326,2.335,1327,2.335,1328,2.335,1329,2.335,1330,2.335,1331,2.335,1332,2.335,1333,2.335,1334,2.335,1335,2.335,1336,3.193,1337,2.335]],["title/components/ContextMenuComponent.html",[0,0.077,179,0.672]],["body/components/ContextMenuComponent.html",[0,0.107,1,0.399,2,0.658,3,0.052,4,0.052,5,0.464,6,0.447,7,0.464,8,0.036,10,0.384,11,1.529,12,0.736,14,0.096,15,0.259,18,0.497,29,0.341,32,0.276,34,0.886,35,0.014,36,0.504,37,0.259,38,0.922,39,1.278,47,0.766,49,1.013,56,1.739,57,1.128,58,1.043,59,2.266,61,0.362,64,0.217,66,0.061,67,0.067,69,2.177,77,0.563,80,0.852,85,2.095,87,0.786,89,1.501,99,2.213,106,2.73,107,1.08,122,3.191,138,0.861,152,0.415,153,0.736,154,0.736,155,0.384,156,0.464,157,0.464,158,0.399,159,0.464,160,0.399,161,0.464,162,0.399,163,0.464,164,0.399,165,0.464,166,0.399,167,0.464,168,0.399,169,0.464,170,0.464,171,0.399,172,0.464,173,0.399,174,0.464,175,0.399,176,0.464,177,0.399,178,0.464,179,0.861,180,0.464,181,0.399,182,0.399,183,0.464,184,0.399,185,0.464,186,0.399,187,0.464,188,0.399,189,0.464,190,0.399,191,0.464,192,0.464,193,0.399,194,0.464,195,0.399,196,0.464,197,0.399,198,0.683,199,0.683,200,0.464,201,0.399,202,0.464,203,0.399,204,0.464,205,0.399,206,0.464,207,0.399,208,0.464,209,0.399,210,0.464,211,0.399,212,0.464,213,0.399,214,0.464,215,0.399,216,0.464,217,0.464,218,0.399,219,0.447,220,0.464,221,0.399,222,0.464,223,0.399,224,0.415,225,0.464,226,0.399,227,0.464,228,0.399,229,0.464,230,0.399,231,0.415,232,0.464,233,0.415,234,0.447,235,0.464,236,0.004,237,0.006,238,0.004,308,2.386,349,3.955,357,2.312,359,2.413,394,1.409,395,2.386,451,2.103,487,1.621,527,1.08,531,2.47,533,2.233,589,3.631,623,1.766,624,1.08,639,1.327,650,1.766,703,3.372,730,1.766,747,4.443,785,1.636,786,4.411,789,3.156,793,1.505,796,2.81,797,4.098,800,2.386,801,2.386,802,3.156,803,2.386,808,2.569,824,3.156,844,2.233,881,3.106,951,4.39,1139,2.386,1166,1.766,1223,3.955,1302,4.655,1338,1.96,1339,3.572,1340,3.572,1341,4.437,1342,3.106,1343,4.97,1344,3.572,1345,3.106,1346,3.572,1347,4.437,1348,5.049,1349,4.437,1350,3.958,1351,3.476,1352,3.858,1353,2.943,1354,3.572,1355,3.572,1356,3.572,1357,5.335,1358,3.955,1359,2.254,1360,3.572,1361,3.106,1362,3.572,1363,3.631,1364,2.254,1365,3.572,1366,2.254,1367,2.774,1368,5.856,1369,3.572,1370,5.856,1371,3.572,1372,2.254,1373,3.955,1374,3.106,1375,4.587,1376,3.572,1377,3.106,1378,2.254,1379,5.049,1380,3.572,1381,3.572,1382,3.572,1383,3.106,1384,3.572,1385,3.572,1386,3.572,1387,2.254,1388,2.254,1389,2.799,1390,2.254,1391,3.572,1392,3.572,1393,3.572,1394,5.049,1395,3.106,1396,3.572,1397,2.254,1398,3.106,1399,3.955,1400,2.254,1401,2.254,1402,2.254,1403,2.254,1404,2.254,1405,2.254,1406,2.254,1407,4.211,1408,2.254,1409,4.437,1410,2.254,1411,3.572,1412,1.766,1413,2.254,1414,2.254,1415,3.106,1416,2.254,1417,1.96,1418,3.572,1419,2.254,1420,2.254,1421,2.254,1422,1.96,1423,2.254,1424,2.254,1425,2.254,1426,4.437,1427,3.572,1428,4.437,1429,1.96,1430,2.254,1431,2.254,1432,2.254,1433,2.254,1434,2.254,1435,2.254,1436,2.254,1437,3.572]],["title/classes/ContextMenuOption.html",[67,0.117,1363,2.836]],["body/classes/ContextMenuOption.html",[3,0.122,4,0.122,8,0.083,14,0.223,15,0.472,32,0.274,34,0.795,35,0.014,36,0.404,37,0.274,49,0.967,66,0.141,67,0.156,69,2.349,77,0.827,99,2.86,122,5.103,179,0.895,236,0.009,237,0.011,238,0.009,351,1.879,357,3.496,359,2.86,373,4.078,531,3.631,747,4.248,785,2.988,786,4.492,789,4.436,802,4.771,1020,4.357,1217,3.508,1302,5.268,1342,5.672,1343,4.357,1363,4.692,1374,5.672,1407,3.778,1438,4.567,1439,5.253,1440,5.253,1441,5.253,1442,6.524,1443,6.524,1444,5.253]],["title/injectables/DoctorService.html",[251,1.891,482,1.012]],["body/injectables/DoctorService.html",[3,0.105,4,0.105,8,0.071,14,0.192,15,0.429,18,0.824,29,0.682,32,0.288,34,0.999,35,0.014,36,0.509,37,0.288,38,1.041,47,0.824,49,0.83,56,2.038,57,1.171,58,1.15,61,0.539,62,1.632,64,0.433,66,0.121,67,0.134,69,1.822,80,1.865,87,1.324,89,2.775,91,1.818,100,4.257,101,4.637,107,2.162,112,3.244,127,4.257,135,5.176,148,2.066,236,0.008,237,0.01,238,0.008,251,2.837,333,1.818,433,2.595,434,4.992,435,2.511,436,2.82,482,1.518,483,1.977,523,2.655,551,2.655,664,3.921,779,2.382,799,3.012,869,2.655,876,3.534,1026,3.534,1039,3.921,1135,3.534,1217,3.012,1228,3.012,1236,3.921,1445,3.921,1446,6.607,1447,5.744,1448,5.919,1449,7.014,1450,3.921,1451,5.919,1452,4.51,1453,4.51,1454,5.919,1455,4.51,1456,4.51,1457,4.51,1458,4.51,1459,4.51,1460,4.51,1461,5.919,1462,4.51,1463,3.921,1464,4.51,1465,4.51,1466,4.51,1467,4.51,1468,4.51,1469,4.51,1470,4.51,1471,4.51,1472,4.51,1473,4.51,1474,5.146,1475,4.51,1476,4.51,1477,4.51,1478,4.51,1479,4.51,1480,4.51,1481,3.921,1482,4.51,1483,4.51,1484,4.51]],["title/classes/Encounter.html",[67,0.117,1485,2.195]],["body/classes/Encounter.html",[3,0.108,4,0.108,8,0.074,14,0.198,15,0.437,18,0.841,32,0.306,35,0.014,37,0.303,47,0.988,66,0.125,67,0.138,77,0.904,85,2.539,108,3.344,236,0.008,237,0.01,238,0.008,333,1.874,351,1.664,353,2.494,354,3.541,357,3.369,498,3.106,511,2.079,531,2.588,569,2.017,573,4.342,676,4.822,677,4.177,686,2.907,687,3.95,688,2.737,727,2.588,869,2.737,1485,4.094,1486,4.043,1487,4.342,1488,5.421,1489,7.097,1490,7.097,1491,7.097,1492,7.097,1493,4.65,1494,4.65,1495,4.65,1496,4.65,1497,4.65,1498,4.65,1499,4.65,1500,4.65,1501,4.65,1502,4.65,1503,4.65,1504,4.65,1505,6.038,1506,3.643,1507,4.65,1508,5.25,1509,4.65,1510,6.038,1511,4.65,1512,4.65,1513,4.65]],["title/injectables/EncounterService.html",[385,2.321,482,1.012]],["body/injectables/EncounterService.html",[3,0.099,4,0.099,8,0.067,14,0.181,15,0.413,18,0.894,29,0.862,32,0.276,34,1.037,35,0.014,36,0.528,37,0.276,38,1.08,47,0.894,57,0.755,58,0.698,61,0.623,62,1.572,64,0.409,66,0.115,67,0.169,77,0.764,80,1.016,138,0.726,236,0.007,237,0.01,238,0.007,344,2.508,385,3.355,386,3.027,462,2.25,469,2.846,471,4.015,482,1.462,483,1.868,487,1.948,492,2.846,493,4.036,495,3.355,511,1.467,569,1.833,624,2.042,626,2.846,665,2.371,672,2.732,705,2.349,726,1.717,844,4.469,847,2.846,850,3.064,853,2.664,854,3.064,855,3.338,856,2.664,857,3.064,859,3.338,1009,3.704,1010,3.704,1020,2.846,1029,3.704,1030,4.465,1031,3.338,1032,3.338,1129,3.338,1146,3.704,1353,3.228,1485,4.347,1514,3.704,1515,5.7,1516,4.465,1517,5.7,1518,5.7,1519,5.7,1520,4.261,1521,5.7,1522,4.261,1523,5.7,1524,4.261,1525,3.064,1526,4.465,1527,3.704,1528,4.261,1529,4.261,1530,4.261,1531,4.261,1532,4.261,1533,3.704,1534,4.261,1535,5.7,1536,4.261,1537,4.261,1538,4.261]],["title/injectables/FhirService.html",[386,1.59,482,1.012]],["body/injectables/FhirService.html",[3,0.111,4,0.111,8,0.076,14,0.204,15,0.445,18,0.856,29,1.028,32,0.298,34,1.028,35,0.014,36,0.523,37,0.293,38,1.07,47,0.999,49,1.132,56,2.34,57,0.848,58,0.784,61,0.502,64,0.46,66,0.129,67,0.142,77,0.899,89,2.583,236,0.008,237,0.011,238,0.008,354,2.527,386,2.478,462,2.527,482,1.577,483,2.097,487,1.681,511,1.647,569,1.577,672,2.948,1353,3.416,1539,4.159,1540,6.796,1541,5.324,1542,6.149,1543,7.173,1544,6.149,1545,6.149,1546,4.784,1547,6.149,1548,4.784,1549,6.149,1550,4.784,1551,6.149,1552,4.784,1553,6.149,1554,6.149,1555,4.784,1556,4.784,1557,4.784,1558,5.346,1559,6.149,1560,6.149,1561,6.452,1562,4.784,1563,4.784,1564,4.784,1565,4.784]],["title/classes/Form.html",[67,0.117,182,0.699]],["body/classes/Form.html",[3,0.139,4,0.139,8,0.095,14,0.256,15,0.512,32,0.29,35,0.014,37,0.31,39,2.532,66,0.162,67,0.178,69,2.315,77,0.789,182,1.254,236,0.01,237,0.012,238,0.01,351,2.15,353,2.799,1566,5.225,1567,6.01,1568,6.01,1569,6.01]],["title/components/FormBuilder.html",[0,0.077,181,0.699]],["body/components/FormBuilder.html",[0,0.111,1,0.603,2,1.214,3,0.079,4,0.079,5,0.701,6,0.676,7,0.701,8,0.054,10,0.58,11,1.58,12,1.005,14,0.145,15,0.353,18,0.794,24,1.502,29,0.863,32,0.297,34,0.515,35,0.014,36,0.479,37,0.291,38,0.536,47,0.918,49,1.301,57,0.603,58,0.558,61,0.398,62,1.573,63,2.577,64,0.327,66,0.092,67,0.101,69,1.048,77,0.694,87,1.103,91,1.372,106,1.218,121,2.96,138,1.124,152,0.627,153,1.005,154,1.005,155,0.58,156,0.701,157,0.701,158,0.603,159,0.701,160,0.603,161,0.701,162,0.603,163,0.701,164,0.603,165,0.701,166,0.603,167,0.701,168,0.603,169,0.701,170,0.701,171,0.603,172,0.701,173,0.603,174,0.701,175,0.603,176,0.701,177,0.603,178,0.701,179,0.58,180,0.701,181,1.103,182,1.28,183,0.701,184,0.603,185,0.701,186,0.603,187,0.701,188,0.603,189,0.701,190,0.603,191,0.701,192,0.701,193,0.603,194,0.701,195,0.603,196,0.701,197,0.603,198,0.933,199,0.933,200,0.701,201,0.603,202,0.701,203,0.603,204,0.701,205,0.603,206,0.701,207,0.603,208,0.701,209,0.603,210,0.701,211,0.603,212,0.701,213,0.603,214,0.701,215,0.603,216,0.701,217,0.701,218,0.603,219,0.676,220,0.701,221,0.603,222,0.701,223,0.603,224,0.627,225,0.701,226,0.603,227,0.701,228,0.603,229,0.701,230,0.603,231,0.627,232,0.701,233,0.627,234,0.676,235,0.701,236,0.006,237,0.008,238,0.006,348,4.467,424,6.079,433,1.492,511,1.172,753,4.159,755,3.05,760,3.666,777,2.004,824,2.129,925,3.174,1125,2.129,1135,2.667,1184,4.101,1353,3.752,1570,5.703,1571,6.746,1572,2.96,1573,4.879,1574,5.703,1575,4.958,1576,4.879,1577,5.703,1578,6.592,1579,5.703,1580,6.228,1581,4.879,1582,6.228,1583,5.703,1584,5.703,1585,5.703,1586,4.879,1587,3.405,1588,3.405,1589,3.405,1590,3.405,1591,3.405,1592,3.405,1593,3.405,1594,3.405,1595,3.405,1596,4.879,1597,3.405,1598,3.405,1599,3.405,1600,3.405,1601,3.405,1602,3.405,1603,2.449,1604,3.405,1605,2.129,1606,3.405,1607,4.879,1608,3.405,1609,3.405,1610,2.96,1611,3.405]],["title/modules/FormCreatorModule.html",[368,2.466,381,2.634]],["body/modules/FormCreatorModule.html",[3,0.111,4,0.111,8,0.076,35,0.014,61,0.638,64,0.459,66,0.129,67,0.141,87,0.846,152,0.879,168,1.429,197,1.429,199,1.175,201,1.429,215,1.429,218,1.429,236,0.008,237,0.011,238,0.008,368,2.986,370,3.19,371,3.19,372,5.32,373,2.986,374,3.742,375,5.32,381,5.515,393,4.813,394,2.986,395,3.19,397,4.152,455,5.341,456,5.341,457,3.742,458,3.435,459,5.341,460,3.742,1612,4.152,1613,4.152,1614,4.152,1615,4.776,1616,4.776,1617,4.776,1618,6.143,1619,4.776,1620,4.776,1621,4.776,1622,4.776,1623,4.776,1624,4.776]],["title/directives/HighlightDirective.html",[155,0.672,233,0.726]],["body/directives/HighlightDirective.html",[3,0.131,4,0.131,8,0.09,10,0.965,11,1.306,14,0.241,24,2.101,29,0.856,32,0.263,34,0.856,35,0.014,36,0.436,37,0.263,38,0.891,57,1.003,58,0.928,61,0.462,62,1.561,64,0.544,66,0.152,67,0.168,77,0.761,107,2.712,155,1.164,230,1.003,233,1.257,234,1.355,236,0.01,237,0.012,238,0.01,357,2.592,487,1.4,588,4.92,589,5.476,590,6.964,592,5.937,1625,4.92,1626,6.828,1627,6.828,1628,5.659,1629,5.659,1630,5.659,1631,5.659]],["title/components/HistoricalTrendsComponent.html",[0,0.077,184,0.699]],["body/components/HistoricalTrendsComponent.html",[0,0.092,1,0.444,2,0.714,3,0.058,4,0.058,5,0.516,6,0.497,7,0.516,8,0.04,10,0.427,11,1.544,12,0.799,14,0.107,15,0.281,18,0.54,29,0.587,31,2.924,32,0.283,34,0.875,35,0.014,36,0.508,37,0.254,38,0.911,39,1.914,47,0.852,49,1.127,57,1.025,58,0.948,59,1.501,61,0.538,64,0.241,65,1.565,66,0.067,67,0.074,69,1.462,70,1.962,74,1.565,85,2.521,87,0.948,88,1.7,93,2.344,96,2.283,106,1.388,109,1.672,132,2.79,138,0.912,152,0.461,153,0.799,154,0.799,155,0.427,156,0.516,157,0.516,158,0.444,159,0.516,160,0.444,161,0.516,162,0.444,163,0.516,164,0.444,165,0.516,166,0.444,167,0.516,168,0.444,169,0.516,170,0.516,171,0.444,172,0.516,173,0.444,174,0.516,175,0.444,176,0.516,177,0.444,178,0.516,179,0.912,180,0.516,181,0.444,182,0.687,183,0.516,184,0.948,185,0.516,186,0.444,187,0.516,188,0.444,189,0.516,190,0.444,191,0.516,192,0.516,193,0.444,194,0.516,195,0.444,196,0.516,197,0.444,198,0.742,199,0.742,200,0.516,201,0.444,202,0.516,203,0.444,204,0.516,205,0.444,206,0.516,207,0.444,208,0.516,209,0.444,210,0.516,211,0.444,212,0.516,213,0.444,214,0.516,215,0.444,216,0.516,217,0.516,218,0.444,219,0.497,220,0.516,221,0.444,222,0.516,223,0.444,224,0.461,225,0.516,226,0.444,227,0.516,228,0.444,229,0.516,230,0.444,231,0.461,232,0.516,233,0.461,234,0.497,235,0.516,236,0.008,237,0.007,238,0.004,277,2.177,311,2.79,312,3.039,319,3.373,322,1.2,332,1.962,348,3.039,357,1.147,387,2.563,389,3.553,390,0.969,394,1.565,451,2.283,454,4.406,487,1.831,511,1.336,515,3.373,525,1.394,569,0.642,600,2.177,623,1.962,624,1.2,630,1.672,634,3.039,639,1.474,650,1.962,655,1.565,686,2.425,687,3.852,688,2.283,697,1.801,703,1.672,705,2.107,726,1.009,736,1.394,747,3.221,752,3.846,777,1.474,778,2.79,779,2.049,781,1.565,782,1.801,785,2.803,786,2.283,787,2.591,788,2.425,789,2.425,790,1.672,791,1.801,792,1.672,793,1.672,794,1.672,795,1.801,796,2.643,798,2.591,800,1.672,801,1.672,802,1.565,803,1.672,807,1.801,824,1.565,844,1.565,852,2.591,863,3.039,869,1.474,889,2.591,904,1.962,908,4.129,909,2.177,911,4.533,961,1.801,967,2.177,1086,3.864,1228,1.672,1233,4.795,1237,2.177,1302,1.672,1303,2.177,1320,5.321,1367,1.565,1383,2.177,1412,3.039,1429,2.177,1632,2.177,1633,3.879,1634,3.879,1635,4.749,1636,4.129,1637,4.129,1638,4.129,1639,4.749,1640,3.879,1641,5.348,1642,3.879,1643,3.879,1644,3.879,1645,2.504,1646,3.879,1647,2.591,1648,2.504,1649,3.879,1650,2.504,1651,2.504,1652,2.504,1653,3.879,1654,2.504,1655,3.879,1656,2.504,1657,3.879,1658,2.504,1659,6.92,1660,3.879,1661,3.373,1662,2.504,1663,2.504,1664,2.504,1665,2.504,1666,2.504,1667,2.504,1668,1.565,1669,1.962,1670,4.65,1671,2.504,1672,2.504,1673,2.504,1674,2.504,1675,3.879,1676,2.177,1677,4.129,1678,4.749,1679,2.504,1680,2.177,1681,3.373,1682,3.373,1683,2.504,1684,2.504,1685,2.504,1686,2.504,1687,5.786,1688,2.504,1689,5.786,1690,2.504,1691,2.177,1692,2.177,1693,2.177,1694,2.504,1695,2.504,1696,3.879,1697,2.504,1698,2.504,1699,2.504,1700,3.879,1701,3.373,1702,3.879,1703,2.504,1704,2.504,1705,3.879,1706,2.504,1707,2.504,1708,2.177,1709,2.504,1710,3.879,1711,3.879,1712,3.879,1713,3.879,1714,3.879,1715,3.039,1716,5.348]],["title/injectables/HistoricalTrendsService.html",[387,1.891,482,1.012]],["body/injectables/HistoricalTrendsService.html",[3,0.068,4,0.068,8,0.047,14,0.126,15,0.318,18,0.612,29,0.794,32,0.268,34,0.941,35,0.015,36,0.583,37,0.24,38,0.98,47,0.866,49,0.967,57,0.778,58,1.069,61,0.429,64,0.283,66,0.079,67,0.087,69,2.308,80,1.048,85,1.572,87,0.523,91,2.859,93,1.293,108,2.121,126,2.747,128,3.16,198,0.564,236,0.005,237,0.008,238,0.005,321,4.113,344,1.736,387,2.106,435,2.445,454,4.738,472,3.82,482,1.127,483,1.293,487,1.299,501,1.558,510,3.885,511,2.39,525,2.445,527,1.414,529,2.564,531,2.445,533,2.747,569,1.82,639,1.736,676,2.121,678,2.311,687,3.63,697,2.121,727,1.642,785,2.012,796,3.462,816,2.934,848,4.223,849,2.311,852,4.155,862,4.113,864,2.564,889,5.403,904,4.557,906,3.82,907,3.82,910,2.564,911,2.311,912,2.564,913,2.564,917,2.564,918,2.311,961,3.776,1020,1.97,1139,1.97,1182,4.565,1216,2.564,1233,2.311,1301,2.564,1353,3.729,1395,2.564,1636,4.565,1637,3.82,1680,2.564,1681,6.036,1682,6.036,1692,2.564,1693,2.564,1701,2.564,1708,5.67,1717,2.564,1718,5.25,1719,4.393,1720,4.393,1721,4.393,1722,4.393,1723,4.393,1724,4.393,1725,4.393,1726,2.95,1727,4.393,1728,2.95,1729,4.393,1730,4.393,1731,2.95,1732,4.393,1733,2.95,1734,4.393,1735,2.95,1736,2.95,1737,2.95,1738,2.95,1739,2.564,1740,4.393,1741,2.95,1742,2.564,1743,2.95,1744,5.817,1745,2.95,1746,2.95,1747,2.95,1748,2.95,1749,4.393,1750,2.95,1751,2.95,1752,2.95,1753,2.95,1754,2.95,1755,6.756,1756,2.95,1757,2.95,1758,4.393,1759,4.393,1760,4.393,1761,2.95,1762,2.95,1763,5.817,1764,2.95,1765,2.95,1766,2.95,1767,2.95,1768,2.95,1769,2.95,1770,2.95,1771,2.95,1772,4.393,1773,4.393,1774,2.95,1775,2.95,1776,2.95,1777,5.25,1778,5.25,1779,2.95,1780,2.95,1781,2.95,1782,2.95,1783,2.95,1784,2.95,1785,2.95,1786,2.95,1787,4.393,1788,4.393,1789,4.393,1790,2.95,1791,4.393,1792,2.95,1793,4.393,1794,2.95,1795,2.95,1796,2.95]],["title/components/HomeComponent.html",[0,0.077,186,0.699]],["body/components/HomeComponent.html",[0,0.13,1,0.625,2,1.165,3,0.082,4,0.082,5,0.727,6,0.7,7,0.727,8,0.056,10,0.602,11,1.584,12,1.031,14,0.15,15,0.362,18,0.697,29,0.757,32,0.224,34,0.757,35,0.014,36,0.514,37,0.224,38,0.788,47,0.491,49,0.65,57,0.625,58,0.578,61,0.567,64,0.339,66,0.095,67,0.104,69,1.086,71,3.6,77,0.648,85,1.791,87,1.031,88,2.194,92,2.644,94,3.343,95,3.6,99,2.194,126,2.206,138,1.079,152,0.65,153,1.031,154,1.031,155,0.602,156,0.727,157,0.727,158,0.625,159,0.727,160,0.625,161,0.727,162,0.625,163,0.727,164,0.625,165,0.727,166,0.625,167,0.727,168,0.625,169,0.727,170,0.727,171,0.625,172,0.727,173,0.625,174,0.727,175,0.625,176,0.727,177,0.625,178,0.727,179,0.602,180,0.727,181,0.625,182,0.625,183,0.727,184,0.625,185,0.727,186,1.122,187,0.727,188,0.625,189,0.727,190,0.625,191,0.727,192,0.727,193,0.625,194,0.727,195,0.625,196,0.727,197,0.625,198,0.957,199,0.957,200,0.727,201,0.625,202,0.727,203,0.625,204,0.727,205,0.625,206,0.727,207,0.625,208,0.727,209,0.625,210,0.727,211,0.625,212,0.727,213,0.625,214,0.727,215,0.625,216,0.727,217,0.727,218,0.625,219,1.155,220,0.727,221,0.625,222,0.727,223,0.625,224,1.071,225,0.727,226,0.625,227,0.727,228,0.625,229,0.727,230,0.625,231,0.65,232,0.727,233,0.65,234,0.7,235,0.727,236,0.006,237,0.009,238,0.006,322,3.203,353,2.355,359,2.194,367,4.352,386,2.798,389,3.974,391,4.463,433,1.547,434,4.768,435,1.964,436,2.206,487,1.653,705,2.493,706,2.206,722,2.357,726,1.422,735,2.206,785,2.293,787,3.343,851,3.343,918,3.921,1139,3.343,1353,2.923,1407,2.538,1541,3.921,1669,2.765,1676,3.068,1797,3.068,1798,5.006,1799,4.352,1800,4.352,1801,4.352,1802,4.352,1803,5.006,1804,5.006,1805,7.139,1806,5.006,1807,5.006,1808,3.529,1809,3.529,1810,3.529,1811,3.529,1812,3.068,1813,3.529,1814,3.529,1815,3.529,1816,3.529,1817,3.529,1818,3.529,1819,3.529]],["title/components/HoverBoxComponent.html",[0,0.077,188,0.699]],["body/components/HoverBoxComponent.html",[0,0.12,1,0.514,2,0.799,3,0.067,4,0.067,5,0.598,6,0.576,7,0.598,8,0.046,10,0.495,11,1.562,12,0.894,14,0.123,15,0.314,18,0.604,29,0.786,32,0.288,34,0.873,35,0.014,36,0.517,37,0.272,38,0.909,39,2.319,47,0.803,49,0.799,56,1.79,57,1.224,58,1.132,59,1.68,61,0.237,64,0.279,66,0.078,67,0.086,69,1.336,77,0.643,80,1.473,85,2.21,87,0.514,91,1.749,98,3.25,99,2.841,106,2.404,126,1.814,128,3.121,138,1.105,152,0.534,153,0.894,154,0.894,155,0.495,156,0.598,157,0.598,158,0.514,159,0.598,160,0.514,161,0.598,162,0.514,163,0.598,164,0.514,165,0.598,166,0.514,167,0.598,168,0.514,169,0.598,170,0.598,171,0.514,172,0.598,173,0.514,174,0.598,175,0.514,176,0.598,177,0.514,178,0.598,179,0.495,180,0.598,181,0.514,182,0.514,183,0.598,184,0.514,185,0.598,186,0.514,187,0.598,188,1.022,189,0.598,190,0.514,191,0.598,192,0.598,193,0.514,194,0.598,195,0.514,196,0.598,197,0.514,198,0.83,199,1.516,200,0.598,201,0.514,202,0.598,203,0.514,204,0.598,205,0.514,206,0.598,207,0.514,208,0.598,209,0.514,210,0.598,211,0.514,212,0.598,213,0.514,214,0.598,215,0.514,216,0.598,217,0.598,218,0.514,219,0.576,220,0.598,221,0.514,222,0.598,223,0.514,224,0.534,225,0.598,226,0.514,227,0.598,228,0.514,229,0.598,230,0.514,231,0.534,232,0.598,233,0.534,234,0.576,235,0.598,236,0.005,237,0.007,238,0.005,303,3.4,312,2.273,314,5.016,333,1.169,359,1.902,482,0.744,487,1.427,525,1.615,527,2.08,569,0.744,634,3.4,639,1.708,660,2.522,687,1.615,727,2.415,783,4.329,798,2.898,866,3.4,953,6.253,1086,3.853,1223,4.52,1343,2.898,1350,3.739,1351,4.073,1352,5.37,1353,3.104,1357,4.52,1358,4.52,1375,3.4,1377,2.522,1398,3.773,1399,4.52,1407,3.121,1412,2.273,1417,2.522,1422,2.522,1481,2.522,1661,3.773,1670,2.522,1739,3.773,1799,3.773,1800,4.52,1820,2.522,1821,6.869,1822,4.339,1823,5.77,1824,3.773,1825,4.339,1826,5.199,1827,5.77,1828,5.199,1829,5.77,1830,4.339,1831,4.339,1832,4.339,1833,2.901,1834,2.901,1835,2.901,1836,2.901,1837,2.901,1838,4.339,1839,2.901,1840,4.339,1841,3.773,1842,4.339,1843,4.339,1844,2.901,1845,2.901,1846,2.901,1847,2.901,1848,4.339,1849,2.901,1850,2.901,1851,2.901,1852,2.901,1853,2.901,1854,4.339,1855,2.901,1856,2.522,1857,2.901,1858,2.901,1859,2.901,1860,2.901,1861,2.901,1862,2.901,1863,2.901,1864,2.901,1865,5.016,1866,6.719]],["title/pipes/HumanizeBytesPipe.html",[1867,2.836,1868,3.09]],["body/pipes/HumanizeBytesPipe.html",[3,0.128,4,0.128,8,0.088,10,0.943,18,0.771,32,0.26,34,1.019,35,0.014,36,0.582,37,0.213,38,1.061,47,0.938,58,0.907,61,0.452,64,0.532,66,0.149,67,0.164,77,0.903,93,3.183,236,0.009,237,0.012,238,0.009,569,1.728,674,3.98,1867,4.844,1868,5.277,1869,5.534,1870,4.811,1871,6.736,1872,5.534,1873,6.736,1874,5.534,1875,6.736,1876,5.534,1877,6.736,1878,7.262,1879,5.534,1880,6.736,1881,5.534,1882,5.534,1883,5.534,1884,5.534,1885,5.534,1886,5.534,1887,5.534]],["title/classes/Link.html",[67,0.117,668,2.836]],["body/classes/Link.html",[3,0.139,4,0.139,8,0.095,14,0.255,15,0.512,32,0.273,35,0.014,37,0.273,66,0.19,67,0.209,77,0.865,80,1.686,236,0.01,237,0.012,238,0.01,351,2.146,665,3.339,666,4.699,667,5.215,668,5.406,671,6.535,672,3.603,1888,5.998,1889,5.998]],["title/components/LoadingAnimation.html",[0,0.077,190,0.699]],["body/components/LoadingAnimation.html",[0,0.131,1,0.833,2,1.119,3,0.109,4,0.109,5,0.969,6,0.933,7,0.969,8,0.074,10,0.801,11,1.609,12,1.253,29,1.02,32,0.181,35,0.014,36,0.519,61,0.384,64,0.452,66,0.127,67,0.139,87,0.833,138,1.215,152,0.865,153,1.253,154,1.253,155,0.801,156,0.969,157,0.969,158,0.833,159,0.969,160,0.833,161,0.969,162,0.833,163,0.969,164,0.833,165,0.969,166,0.833,167,0.969,168,0.833,169,0.969,170,0.969,171,0.833,172,0.969,173,0.833,174,0.969,175,0.833,176,0.969,177,0.833,178,0.969,179,0.801,180,0.969,181,0.833,182,0.833,183,0.969,184,0.833,185,0.969,186,0.833,187,0.969,188,0.833,189,0.969,190,1.263,191,1.389,192,0.969,193,0.833,194,0.969,195,0.833,196,0.969,197,0.833,198,1.163,199,1.163,200,0.969,201,0.833,202,0.969,203,0.833,204,0.969,205,0.833,206,0.969,207,0.833,208,0.969,209,0.833,210,0.969,211,0.833,212,0.969,213,0.833,214,0.969,215,0.833,216,0.969,217,0.969,218,0.833,219,0.933,220,0.969,221,0.833,222,0.969,223,0.833,224,0.865,225,0.969,226,0.833,227,0.969,228,0.833,229,0.969,230,0.833,231,0.865,232,0.969,233,0.865,234,0.933,235,0.969,236,0.008,237,0.01,238,0.008,1890,4.087,1891,6.081,1892,6.081,1893,4.701]],["title/injectables/MapService.html",[388,2.466,482,1.012]],["body/injectables/MapService.html",[3,0.093,4,0.093,8,0.064,14,0.171,15,0.396,32,0.155,35,0.014,37,0.155,57,0.711,58,0.658,61,0.328,64,0.386,66,0.108,67,0.119,82,5.722,91,2.913,93,3.169,96,3.94,236,0.007,237,0.009,238,0.007,311,5.855,337,5.899,344,2.363,388,3.423,482,1.404,483,1.76,779,3.291,1353,2.018,1715,5.244,1894,3.491,1895,6.232,1896,6.693,1897,7.53,1898,7.229,1899,6.693,1900,6.693,1901,5.476,1902,5.476,1903,4.761,1904,6.693,1905,5.476,1906,6.693,1907,5.476,1908,7.229,1909,8.269,1910,5.476,1911,5.476,1912,7.53,1913,7.229,1914,6.293,1915,5.476,1916,7.53,1917,6.693,1918,5.476,1919,6.693,1920,5.476,1921,5.476,1922,4.761,1923,4.761,1924,7.229,1925,5.476,1926,5.476,1927,6.693,1928,5.476,1929,5.476,1930,6.693,1931,6.693,1932,5.476,1933,5.476,1934,5.476,1935,5.476,1936,4.761,1937,5.476,1938,5.476,1939,5.476,1940,4.015]],["title/classes/Medication.html",[67,0.117,848,2.466]],["body/classes/Medication.html",[3,0.129,4,0.129,8,0.088,14,0.237,15,0.489,29,0.842,32,0.292,34,0.842,35,0.014,36,0.607,37,0.299,38,0.876,39,1.991,66,0.15,67,0.165,77,0.909,236,0.01,237,0.012,238,0.01,351,1.991,354,2.939,686,3.479,687,3.762,688,3.275,848,4.225,867,6.329,873,6.941,885,4.838,1941,4.838,1942,5.876,1943,5.564,1944,5.564,1945,5.564,1946,5.564,1947,5.564,1948,5.564,1949,5.564]],["title/components/MedicationsComponent.html",[0,0.077,193,0.699]],["body/components/MedicationsComponent.html",[0,0.119,1,0.688,2,0.986,3,0.09,4,0.09,5,0.8,6,0.771,7,0.8,8,0.061,10,0.662,11,1.593,12,1.103,14,0.165,15,0.388,18,0.745,20,3.487,24,1.648,29,0.81,32,0.267,34,0.81,35,0.014,36,0.564,37,0.255,38,0.843,47,0.745,49,0.986,61,0.565,62,1.476,64,0.373,66,0.105,67,0.115,80,1.277,87,0.688,94,2.595,106,2.192,138,1.125,152,0.715,153,1.103,154,1.103,155,0.662,156,0.8,157,0.8,158,0.688,159,0.8,160,0.688,161,0.8,162,0.688,163,0.8,164,0.688,165,0.8,166,0.688,167,0.8,168,0.688,169,0.8,170,0.8,171,0.688,172,0.8,173,0.688,174,0.8,175,0.688,176,0.8,177,0.688,178,0.8,179,0.662,180,0.8,181,0.688,182,0.688,183,0.8,184,0.688,185,0.8,186,0.688,187,0.8,188,0.688,189,0.8,190,0.688,191,0.8,192,0.8,193,1.17,194,0.8,195,0.688,196,0.8,197,0.688,198,1.024,199,1.024,200,0.8,201,0.688,202,0.8,203,0.688,204,0.8,205,0.688,206,0.8,207,0.688,208,0.8,209,0.688,210,0.8,211,0.688,212,0.8,213,0.688,214,0.8,215,0.688,216,0.8,217,0.8,218,0.688,219,0.771,220,0.8,221,0.688,222,0.8,223,0.688,224,0.715,225,0.8,226,0.688,227,0.8,228,0.688,229,0.8,230,0.688,231,0.715,232,0.8,233,0.715,234,0.771,235,0.8,236,0.007,237,0.009,238,0.007,256,2.052,383,4.213,387,3.515,487,1.324,705,2.286,723,3.378,726,1.566,727,3.409,736,2.163,783,2.595,805,3.378,848,4.329,849,3.044,863,5.745,1314,3.044,1668,2.429,1950,3.378,1951,5.354,1952,3.885,1953,5.354,1954,5.354,1955,3.885,1956,3.885,1957,3.885,1958,3.885,1959,3.885,1960,3.378,1961,3.885,1962,3.885,1963,3.885,1964,3.885,1965,5.354]],["title/components/NewCondition.html",[0,0.077,195,0.699]],["body/components/NewCondition.html",[0,0.132,1,0.841,2,1.126,3,0.11,4,0.11,5,0.978,6,0.942,7,0.978,8,0.075,10,0.809,11,1.61,12,1.26,35,0.014,36,0.521,61,0.387,64,0.456,66,0.128,67,0.141,87,0.841,138,1.219,152,0.874,153,1.26,154,1.26,155,0.809,156,0.978,157,0.978,158,0.841,159,0.978,160,0.841,161,0.978,162,0.841,163,0.978,164,0.841,165,0.978,166,0.841,167,0.978,168,0.841,169,0.978,170,0.978,171,0.841,172,0.978,173,0.841,174,0.978,175,0.841,176,0.978,177,0.841,178,0.978,179,0.809,180,0.978,181,0.841,182,0.841,183,0.978,184,0.841,185,0.978,186,0.841,187,0.978,188,0.841,189,0.978,190,0.841,191,0.978,192,0.978,193,0.841,194,0.978,195,1.343,196,0.978,197,0.841,198,1.17,199,1.17,200,0.978,201,0.841,202,0.978,203,0.841,204,0.978,205,0.841,206,0.978,207,0.841,208,0.978,209,0.841,210,0.978,211,0.841,212,0.978,213,0.841,214,0.978,215,0.841,216,0.978,217,0.978,218,0.841,219,0.942,220,0.978,221,0.841,222,0.978,223,0.841,224,0.874,225,0.978,226,0.841,227,0.978,228,0.841,229,0.978,230,0.841,231,0.874,232,0.978,233,0.874,234,0.942,235,0.978,236,0.008,237,0.01,238,0.008,1966,4.126,1967,6.118]],["title/components/NormalBox1.html",[0,0.077,197,0.699]],["body/components/NormalBox1.html",[0,0.126,1,0.768,2,1.061,3,0.1,4,0.1,5,0.893,6,0.86,7,0.893,8,0.069,10,0.739,11,1.603,12,1.188,14,0.184,15,0.417,18,0.803,24,1.774,32,0.25,35,0.014,36,0.499,37,0.222,47,0.604,61,0.354,62,1.59,64,0.417,66,0.117,67,0.128,69,1.334,77,0.642,85,2.063,87,0.768,93,2.527,138,1.177,152,0.798,153,1.188,154,1.188,155,0.739,156,0.893,157,0.893,158,0.768,159,0.893,160,0.768,161,0.893,162,0.768,163,0.893,164,0.768,165,0.893,166,0.768,167,0.893,168,0.768,169,0.893,170,0.893,171,0.768,172,0.893,173,0.768,174,0.893,175,0.768,176,0.893,177,0.768,178,0.893,179,0.739,180,0.893,181,0.768,182,0.768,183,0.893,184,0.768,185,0.893,186,0.768,187,0.893,188,0.768,189,0.893,190,0.768,191,0.893,192,0.893,193,0.768,194,0.893,195,0.768,196,0.893,197,1.223,198,1.413,199,1.498,200,0.893,201,0.768,202,0.893,203,0.768,204,0.893,205,0.768,206,0.893,207,0.768,208,0.893,209,0.768,210,0.893,211,0.768,212,0.893,213,0.768,214,0.893,215,0.768,216,0.893,217,0.893,218,0.768,219,0.86,220,0.893,221,0.768,222,0.893,223,0.768,224,0.798,225,0.893,226,0.768,227,0.893,228,0.768,229,0.893,230,0.768,231,0.798,232,0.893,233,0.798,234,0.86,235,0.893,236,0.007,237,0.01,238,0.007,353,1.612,569,1.479,925,3.843,926,4.327,934,3.851,1968,5.41,1969,3.769,1970,5.765,1971,5.632,1972,4.335,1973,4.335,1974,4.335,1975,5.013,1976,3.117]],["title/components/NormalBox2.html",[0,0.077,201,0.699]],["body/components/NormalBox2.html",[0,0.126,1,0.768,2,1.061,3,0.1,4,0.1,5,0.893,6,0.86,7,0.893,8,0.069,10,0.739,11,1.603,12,1.188,14,0.184,15,0.417,18,0.803,24,1.774,32,0.25,35,0.014,36,0.499,37,0.222,47,0.604,61,0.354,62,1.59,64,0.417,66,0.117,67,0.128,69,1.334,77,0.642,85,2.063,87,0.768,96,3.393,138,1.177,152,0.798,153,1.188,154,1.188,155,0.739,156,0.893,157,0.893,158,0.768,159,0.893,160,0.768,161,0.893,162,0.768,163,0.893,164,0.768,165,0.893,166,0.768,167,0.893,168,0.768,169,0.893,170,0.893,171,0.768,172,0.893,173,0.768,174,0.893,175,0.768,176,0.893,177,0.768,178,0.893,179,0.739,180,0.893,181,0.768,182,0.768,183,0.893,184,0.768,185,0.893,186,0.768,187,0.893,188,0.768,189,0.893,190,0.768,191,0.893,192,0.893,193,0.768,194,0.893,195,0.768,196,0.893,197,0.768,198,1.413,199,1.498,200,0.893,201,1.223,202,0.893,203,0.768,204,0.893,205,0.768,206,0.893,207,0.768,208,0.893,209,0.768,210,0.893,211,0.768,212,0.893,213,0.768,214,0.893,215,0.768,216,0.893,217,0.893,218,0.768,219,0.86,220,0.893,221,0.768,222,0.893,223,0.768,224,0.798,225,0.893,226,0.768,227,0.893,228,0.768,229,0.893,230,0.768,231,0.798,232,0.893,233,0.798,234,0.86,235,0.893,236,0.007,237,0.01,238,0.007,353,1.612,569,1.479,925,3.843,926,4.327,934,3.851,1968,5.41,1971,5.632,1975,5.013,1976,3.117,1977,3.769,1978,5.765,1979,4.335,1980,4.335,1981,4.335]],["title/components/NoteNavigationComponent.html",[0,0.077,203,0.699]],["body/components/NoteNavigationComponent.html",[0,0.116,1,0.651,2,0.948,3,0.085,4,0.085,5,0.756,6,0.729,7,0.756,8,0.058,10,0.626,11,1.588,12,1.06,14,0.156,18,0.717,32,0.271,35,0.014,36,0.457,47,0.979,49,1.294,61,0.3,64,0.353,66,0.099,67,0.109,87,0.651,138,1.098,152,0.676,153,1.06,154,1.06,155,0.626,156,0.756,157,0.756,158,0.651,159,0.756,160,0.651,161,0.756,162,0.651,163,0.756,164,0.651,165,0.756,166,0.651,167,0.756,168,0.651,169,0.756,170,0.756,171,0.651,172,0.756,173,0.651,174,0.756,175,0.651,176,0.756,177,0.651,178,0.756,179,0.626,180,0.756,181,0.651,182,0.651,183,0.756,184,0.651,185,0.756,186,0.651,187,0.756,188,0.651,189,0.756,190,0.651,191,0.756,192,0.756,193,0.651,194,0.756,195,0.651,196,0.756,197,0.651,198,0.984,199,0.984,200,0.756,201,0.651,202,0.756,203,1.141,204,0.756,205,0.651,206,0.756,207,0.651,208,0.756,209,0.651,210,0.756,211,0.651,212,0.756,213,0.651,214,0.756,215,0.651,216,0.756,217,0.756,218,0.651,219,0.729,220,0.756,221,0.651,222,0.756,223,0.651,224,0.676,225,0.756,226,0.651,227,0.756,228,0.651,229,0.756,230,0.651,231,0.676,232,0.756,233,0.676,234,0.729,235,0.756,236,0.006,237,0.009,238,0.006,747,4.585,1399,5.773,1677,4.475,1865,7.162,1982,3.192,1983,5.147,1984,5.147,1985,6.442,1986,6.442,1987,6.442,1988,6.442,1989,6.442,1990,6.442,1991,3.672,1992,3.672,1993,3.672,1994,3.672,1995,3.672,1996,3.672,1997,6.783,1998,5.601,1999,6.783,2000,6.442,2001,5.147,2002,5.944,2003,5.147,2004,5.147]],["title/classes/Observation.html",[67,0.117,501,2.083]],["body/classes/Observation.html",[3,0.102,4,0.102,8,0.07,14,0.187,15,0.422,18,0.811,32,0.311,34,0.988,35,0.014,36,0.503,37,0.309,38,1.029,47,0.968,58,0.722,61,0.359,66,0.119,67,0.13,76,4.696,77,0.876,80,1.657,99,1.931,198,0.842,236,0.008,237,0.01,238,0.008,333,2.632,344,4.371,351,1.576,353,2.429,357,2.669,479,4.082,501,4.256,503,5.116,555,5.116,569,1.782,674,4.191,677,3.843,685,3.451,779,4.11,862,3.451,973,4.696,1217,2.942,1488,3.168,2005,3.829,2006,6.53,2007,6.53,2008,5.677,2009,5.677,2010,6.949,2011,5.827,2012,5.827,2013,5.827,2014,4.405,2015,4.405,2016,4.405,2017,4.405,2018,4.405,2019,4.405,2020,4.405,2021,4.405,2022,4.405,2023,4.405,2024,4.405,2025,5.827,2026,4.405,2027,5.827,2028,4.405,2029,5.827,2030,4.405,2031,4.405,2032,4.405,2033,4.405,2034,4.405,2035,4.405,2036,4.405,2037,4.405,2038,4.405,2039,4.405,2040,4.405]],["title/components/ObservationRecursive.html",[0,0.077,205,0.699]],["body/components/ObservationRecursive.html",[0,0.117,1,0.663,2,0.96,3,0.087,4,0.087,5,0.771,6,0.742,7,0.771,8,0.059,10,0.638,11,1.59,12,1.074,14,0.159,15,0.378,18,0.726,24,1.605,29,0.566,30,2.93,31,3.239,32,0.285,34,0.789,35,0.014,36,0.526,37,0.273,38,0.821,39,2.444,47,0.836,49,0.689,57,0.663,58,0.613,61,0.53,62,1.655,64,0.359,65,2.338,66,0.101,67,0.111,69,1.847,71,4.317,80,1.244,87,0.663,106,2.324,107,1.793,138,1.107,152,0.689,153,1.074,154,1.074,155,0.638,156,0.771,157,0.771,158,0.663,159,0.771,160,0.663,161,0.771,162,0.663,163,0.771,164,0.663,165,0.771,166,0.663,167,0.771,168,0.663,169,1.074,170,0.771,171,0.663,172,0.771,173,0.663,174,0.771,175,0.663,176,0.771,177,0.663,178,0.771,179,0.638,180,0.771,181,0.663,182,0.663,183,0.771,184,0.663,185,0.771,186,0.663,187,0.771,188,0.663,189,0.771,190,0.663,191,0.771,192,0.771,193,0.663,194,0.771,195,0.663,196,0.771,197,0.663,198,0.997,199,0.997,200,0.771,201,0.663,202,0.771,203,0.663,204,0.771,205,1.151,206,0.771,207,0.663,208,0.771,209,0.663,210,0.771,211,0.663,212,0.771,213,0.663,214,0.771,215,0.663,216,0.771,217,0.771,218,0.663,219,0.742,220,0.771,221,0.663,222,0.771,223,0.663,224,0.689,225,0.771,226,0.663,227,0.771,228,0.663,229,0.771,230,0.663,231,0.689,232,0.771,233,0.689,234,0.742,235,0.771,236,0.006,237,0.009,238,0.006,256,2.754,387,3.113,390,2.809,487,1.29,630,2.498,724,1.713,823,2.498,824,2.338,925,3.341,1343,2.498,1373,2.93,1487,4.67,1647,4.009,1668,2.338,2041,3.252,2042,5.214,2043,5.214,2044,6.003,2045,5.219,2046,5.219,2047,5.646,2048,5.214,2049,3.74,2050,3.74,2051,5.214,2052,3.74,2053,3.74,2054,3.74,2055,3.74,2056,3.74,2057,5.214,2058,3.74,2059,3.252,2060,3.252,2061,3.252,2062,3.252,2063,4.533,2064,4.533,2065,4.533,2066,5.214,2067,4.533,2068,4.085]],["title/components/ObservationRecursiveChart.html",[0,0.077,207,0.699]],["body/components/ObservationRecursiveChart.html",[0,0.118,1,0.674,2,0.972,3,0.088,4,0.088,5,0.784,6,0.756,7,0.784,8,0.06,10,0.649,11,1.591,12,1.087,14,0.162,15,0.382,18,0.735,24,1.625,29,0.576,30,2.982,31,3.257,32,0.281,34,0.799,35,0.014,36,0.529,37,0.265,38,0.831,39,2.763,47,0.844,49,0.701,61,0.534,62,1.671,64,0.366,65,2.38,66,0.103,67,0.113,69,1.865,71,4.358,80,1.561,87,0.674,106,2.168,107,1.825,138,1.115,152,0.701,153,1.087,154,1.087,155,0.649,156,0.784,157,0.784,158,0.674,159,0.784,160,0.674,161,0.784,162,0.674,163,0.784,164,0.674,165,0.784,166,0.674,167,0.784,168,0.674,169,0.784,170,0.784,171,0.674,172,0.784,173,0.674,174,0.784,175,0.674,176,0.784,177,0.674,178,0.784,179,0.649,180,0.784,181,0.674,182,0.674,183,0.784,184,0.674,185,0.784,186,0.674,187,0.784,188,0.674,189,0.784,190,0.674,191,0.784,192,0.784,193,0.674,194,0.784,195,0.674,196,0.784,197,0.674,198,1.009,199,1.009,200,0.784,201,0.674,202,0.784,203,0.674,204,0.784,205,0.674,206,0.784,207,1.159,208,0.784,209,0.674,210,0.784,211,0.674,212,0.784,213,0.674,214,0.784,215,0.674,216,0.784,217,0.784,218,0.674,219,0.756,220,0.784,221,0.674,222,0.784,223,0.674,224,0.701,225,0.784,226,0.674,227,0.784,228,0.674,229,0.784,230,0.674,231,0.701,232,0.784,233,0.701,234,0.756,235,0.784,236,0.007,237,0.009,238,0.007,256,3.2,387,3.137,487,0.942,501,2.788,524,2.542,569,1.354,925,3.642,1228,2.542,1314,2.982,1487,4.706,1647,4.047,1668,2.38,2045,5.268,2046,5.689,2047,5.268,2060,3.31,2061,3.31,2062,3.31,2063,4.589,2064,4.589,2065,4.589,2067,4.589,2068,4.135,2069,3.31,2070,5.279,2071,5.279,2072,5.279,2073,3.807,2074,3.807,2075,5.279,2076,3.807,2077,3.807,2078,3.807,2079,3.807,2080,3.807,2081,3.807,2082,5.279]],["title/injectables/ObservationService.html",[31,1.806,482,1.012]],["body/injectables/ObservationService.html",[3,0.055,4,0.055,8,0.037,14,0.1,15,0.268,18,0.515,29,0.56,31,1.695,32,0.295,34,0.944,35,0.015,36,0.48,37,0.279,38,0.983,39,1.634,47,1.008,49,1.277,57,1.057,58,0.978,59,1.768,61,0.509,64,0.226,66,0.063,67,0.07,69,2.134,76,1.695,77,0.773,79,2.049,80,1.812,82,2.661,85,0.843,86,2.049,89,0.99,91,3.023,92,3.663,93,3.288,96,4.562,98,1.473,99,3.133,132,3.722,236,0.004,237,0.006,238,0.004,322,2.19,333,1.491,334,2.049,335,2.049,336,2.049,337,1.846,339,2.049,340,2.049,341,2.049,343,2.049,353,2.77,354,1.245,386,2.405,390,2.416,451,2.178,462,1.245,482,0.949,483,1.033,487,1.13,493,3.046,495,2.689,501,2.97,511,2.055,524,1.574,569,1.442,580,2.049,604,1.312,610,3.456,611,3.456,630,1.574,637,1.13,638,1.13,639,2.178,655,2.856,665,3.322,672,1.13,705,1.182,706,1.473,724,1.079,740,1.846,847,1.574,850,1.695,852,2.471,856,1.473,857,1.695,973,1.695,1020,1.574,1030,2.899,1031,1.846,1032,1.846,1086,3.456,1107,2.049,1113,1.846,1128,1.695,1199,4.499,1227,2.049,1243,2.049,1246,2.049,1250,2.049,1299,2.899,1474,6.419,1487,2.661,1527,2.049,1715,4.89,1903,2.049,1914,2.899,1922,2.049,1923,2.049,1936,2.049,2083,2.049,2084,5.175,2085,4.568,2086,5.624,2087,4.568,2088,4.568,2089,3.7,2090,3.7,2091,4.568,2092,3.7,2093,5.175,2094,3.7,2095,3.7,2096,3.7,2097,5.175,2098,3.7,2099,2.357,2100,2.357,2101,3.7,2102,2.357,2103,2.357,2104,3.7,2105,2.357,2106,3.7,2107,3.7,2108,3.7,2109,2.357,2110,3.7,2111,2.357,2112,3.7,2113,2.357,2114,2.357,2115,3.7,2116,2.357,2117,4.568,2118,2.357,2119,2.357,2120,2.357,2121,2.357,2122,2.357,2123,2.357,2124,2.357,2125,2.357,2126,2.357,2127,2.357,2128,2.357,2129,3.7,2130,2.357,2131,2.357,2132,3.7,2133,2.357,2134,2.357,2135,2.357,2136,2.357,2137,2.357,2138,2.357,2139,2.357,2140,3.7,2141,2.357,2142,2.357,2143,2.357,2144,3.7,2145,2.357,2146,2.357,2147,1.846,2148,2.357,2149,2.357,2150,2.357,2151,2.357,2152,2.357,2153,2.357,2154,2.357,2155,2.357,2156,2.357,2157,2.357,2158,2.357,2159,4.499,2160,2.357,2161,2.357,2162,2.357,2163,2.357,2164,2.357,2165,2.357,2166,2.357,2167,2.357,2168,2.357,2169,2.357,2170,2.357,2171,3.7,2172,2.357,2173,3.7,2174,2.357,2175,2.357,2176,2.357,2177,2.357,2178,2.357,2179,2.357,2180,2.357,2181,2.357,2182,2.357,2183,3.7,2184,2.357,2185,2.357,2186,2.357,2187,2.357,2188,2.357,2189,2.357,2190,2.357,2191,2.357,2192,2.357,2193,3.7,2194,3.7,2195,2.357,2196,2.357,2197,2.357,2198,2.357,2199,2.357,2200,2.357]],["title/components/ObservationsComponent.html",[0,0.077,209,0.699]],["body/components/ObservationsComponent.html",[0,0.103,1,0.529,2,0.816,3,0.069,4,0.069,5,0.615,6,0.592,7,0.615,8,0.047,10,0.509,11,1.566,12,0.913,14,0.127,15,0.321,18,0.617,20,3.09,24,1.364,29,0.671,31,3.106,32,0.295,34,0.671,35,0.014,36,0.481,37,0.283,38,0.698,39,1.586,47,0.871,49,1.151,57,1.161,58,0.959,61,0.6,62,1.614,63,1.576,64,0.287,65,1.866,66,0.08,67,0.088,69,1.924,77,0.494,80,1.261,87,0.529,90,2.467,92,3.679,106,1.068,138,0.997,152,0.549,153,0.913,154,0.913,155,0.509,156,0.615,157,0.615,158,0.529,159,0.615,160,0.529,161,0.615,162,0.529,163,0.615,164,0.529,165,0.615,166,0.529,167,0.615,168,0.529,169,0.615,170,0.615,171,0.529,172,0.615,173,0.529,174,0.615,175,0.529,176,0.615,177,0.529,178,0.615,179,0.509,180,0.615,181,0.529,182,0.529,183,0.615,184,0.529,185,0.615,186,0.529,187,0.615,188,0.529,189,0.615,190,0.529,191,1.089,192,0.615,193,0.529,194,0.615,195,0.529,196,0.615,197,0.529,198,0.847,199,0.847,200,0.615,201,0.529,202,0.615,203,0.529,204,0.615,205,0.529,206,0.615,207,0.529,208,0.615,209,1.037,210,0.615,211,0.529,212,0.615,213,0.529,214,0.615,215,0.529,216,0.913,217,0.615,218,0.529,219,0.592,220,0.615,221,0.529,222,0.615,223,0.529,224,0.549,225,0.615,226,0.529,227,0.615,228,0.529,229,0.615,230,0.529,231,0.549,232,0.615,233,0.549,234,0.592,235,0.615,236,0.005,237,0.008,238,0.005,251,3.251,283,1.866,309,3.472,322,2.534,354,1.576,359,1.943,362,3.188,386,2.64,387,2.805,388,4.24,390,2.625,433,2.565,487,1.62,501,3.582,511,1.028,524,1.993,604,4.09,606,3.188,607,2.96,608,3.188,609,3.188,610,3.531,611,3.531,612,3.802,616,2.147,618,2.147,624,1.431,627,2.147,637,1.431,638,1.431,657,2.96,672,1.431,699,3.472,703,4.653,705,2.273,706,1.866,710,5.313,711,2.338,712,2.338,713,2.338,714,2.338,719,2.338,720,2.338,721,2.338,722,1.993,724,1.367,726,1.203,730,2.338,731,2.338,732,2.338,733,3.472,734,3.188,736,1.661,760,2.609,823,2.96,853,1.866,1125,2.771,1196,2.595,1228,2.96,1373,3.472,1375,3.472,1647,3.531,1668,1.866,1856,4.597,2201,2.595,2202,4.432,2203,5.287,2204,4.432,2205,2.985,2206,2.985,2207,4.432,2208,4.432,2209,2.985,2210,2.985,2211,2.985,2212,2.985,2213,2.985,2214,2.985,2215,2.985,2216,2.985,2217,2.985,2218,2.985,2219,2.985,2220,2.985,2221,2.985]],["title/components/ObservationsDisplay.html",[0,0.077,211,0.699]],["body/components/ObservationsDisplay.html",[0,0.095,1,0.461,2,0.736,3,0.06,4,0.06,5,0.823,6,0.516,7,0.536,8,0.041,10,0.443,11,1.549,12,0.823,14,0.111,15,0.289,18,0.76,20,2.882,24,1.23,29,0.604,32,0.29,34,0.979,35,0.014,36,0.538,37,0.274,38,1.019,47,0.954,49,1.192,56,2.028,57,0.708,58,0.895,59,2.505,61,0.481,62,1.102,63,2.11,64,0.25,66,0.07,67,0.118,74,1.627,77,0.542,80,1.16,87,0.708,88,1.14,89,1.093,92,3.283,106,0.931,109,1.738,138,0.93,148,1.192,149,2.038,152,0.479,153,0.823,154,0.823,155,0.443,156,0.536,157,0.536,158,0.461,159,0.536,160,0.461,161,0.536,162,0.461,163,0.536,164,0.461,165,0.536,166,0.461,167,0.536,168,0.461,169,1.002,170,0.536,171,0.461,172,0.536,173,0.461,174,0.536,175,0.461,176,0.536,177,0.461,178,0.536,179,0.93,180,0.536,181,0.461,182,0.461,183,0.536,184,0.461,185,0.536,186,0.461,187,0.536,188,0.461,189,0.536,190,0.461,191,0.536,192,0.536,193,0.461,194,0.536,195,0.461,196,0.536,197,0.461,198,0.764,199,0.764,200,0.536,201,0.461,202,0.536,203,0.461,204,0.536,205,0.461,206,0.536,207,0.461,208,0.536,209,0.461,210,0.536,211,1.101,212,0.536,213,0.461,214,0.536,215,0.461,216,0.536,217,0.536,218,0.461,219,0.516,220,0.536,221,0.461,222,0.536,223,0.461,224,0.479,225,0.536,226,0.461,227,0.536,228,0.461,229,0.536,230,0.461,231,0.479,232,0.536,233,0.479,234,0.516,235,0.536,236,0.004,237,0.007,238,0.004,256,3.283,308,1.738,322,2.822,357,2.228,382,3.46,390,2.651,487,0.988,501,4.231,511,0.896,524,1.738,527,2.616,531,1.448,532,2.038,533,3.041,551,2.863,555,2.038,569,1.025,574,2.669,596,2.038,635,1.531,637,2.332,638,2.332,655,1.627,724,1.192,727,2.224,735,1.627,746,3.811,747,3.277,751,2.874,752,3.925,753,3.645,755,2.498,760,3.212,769,2.874,771,2.669,777,1.531,778,2.874,779,2.569,781,1.627,782,1.871,783,3.249,784,1.738,785,1.192,786,2.352,787,3.249,788,2.498,789,3.412,790,1.738,791,1.871,792,1.738,793,1.738,794,1.738,795,1.871,796,3.038,797,1.738,798,1.738,799,1.738,800,1.738,801,3.249,802,3.041,803,3.249,804,2.038,807,3.498,808,1.871,810,2.038,811,1.627,812,2.038,813,2.262,814,2.262,816,1.738,821,2.038,823,2.669,824,1.627,825,2.262,826,2.262,827,2.038,829,2.874,830,1.871,831,1.871,832,2.038,833,2.038,1101,1.871,1166,2.038,1298,2.038,1305,2.262,1315,3.474,1336,3.474,2159,2.262,2222,2.262,2223,3.996,2224,3.996,2225,3.996,2226,3.996,2227,3.996,2228,3.996,2229,4.864,2230,2.262,2231,3.996,2232,2.602,2233,2.602,2234,3.996,2235,2.602,2236,3.996,2237,5.458,2238,2.602,2239,2.602,2240,3.996,2241,2.602,2242,3.996,2243,2.602,2244,2.602,2245,2.602,2246,2.602,2247,3.996,2248,2.602,2249,2.602,2250,2.602,2251,2.602,2252,2.602,2253,2.602,2254,2.602,2255,4.864,2256,2.602,2257,2.602,2258,3.996,2259,2.602,2260,2.602,2261,2.602,2262,2.602,2263,2.602,2264,3.996,2265,2.602,2266,3.996,2267,3.996,2268,3.996,2269,3.996,2270,3.996]],["title/classes/Patient.html",[67,0.117,705,1.26]],["body/classes/Patient.html",[3,0.125,4,0.125,8,0.086,14,0.23,15,0.481,32,0.311,35,0.014,36,0.554,37,0.311,56,2.289,66,0.146,67,0.16,77,0.893,80,1.912,142,4.804,236,0.009,237,0.011,238,0.009,351,1.937,353,2.676,705,2.123,2271,4.707,2272,7.193,2273,7.193,2274,7.193,2275,6.253,2276,5.635,2277,7.193,2278,5.414,2279,5.414,2280,5.414,2281,5.414,2282,5.414,2283,5.414,2284,5.414,2285,5.414,2286,5.414]],["title/components/PatientComponent.html",[0,0.077,213,0.699]],["body/components/PatientComponent.html",[0,0.096,1,0.47,2,0.747,3,0.061,4,0.061,5,0.546,6,0.526,7,0.546,8,0.042,10,0.452,11,1.551,12,0.835,14,0.113,15,0.294,18,0.565,20,2.912,29,0.613,32,0.291,34,0.834,35,0.014,36,0.502,37,0.271,38,0.868,47,0.872,49,1.2,56,1.396,57,1.052,58,0.974,59,2.424,61,0.583,62,1.118,63,1.401,64,0.255,66,0.071,67,0.079,77,0.698,80,1.174,84,2.306,85,0.949,87,0.47,89,1.114,91,1.069,93,2.416,99,1.163,106,1.451,127,1.908,138,1.012,148,2.72,152,0.488,153,0.835,154,0.835,155,0.452,156,0.546,157,0.546,158,0.47,159,0.546,160,0.47,161,0.546,162,0.47,163,0.546,164,0.47,165,0.546,166,0.47,167,0.546,168,0.47,169,0.546,170,0.546,171,0.47,172,0.546,173,0.47,174,0.546,175,0.47,176,0.546,177,0.47,178,0.546,179,0.452,180,0.546,181,0.47,182,0.47,183,0.546,184,0.47,185,0.546,186,1.191,187,0.546,188,0.977,189,0.546,190,0.47,191,0.546,192,0.546,193,0.47,194,0.546,195,0.47,196,0.546,197,0.47,198,0.775,199,0.941,200,0.546,201,0.47,202,0.546,203,0.47,204,0.546,205,0.47,206,0.546,207,0.47,208,0.546,209,0.47,210,0.546,211,0.47,212,0.546,213,0.977,214,0.546,215,0.47,216,0.546,217,0.546,218,0.47,219,0.526,220,0.546,221,0.47,222,0.546,223,0.47,224,0.488,225,0.546,226,0.47,227,0.546,228,0.47,229,0.546,230,0.47,231,0.488,232,0.546,233,0.488,234,0.526,235,0.546,236,0.005,237,0.007,238,0.005,251,3.124,283,1.658,316,5.265,384,3.124,385,3.836,433,1.163,434,4.183,435,1.476,436,1.658,482,1.04,487,1.768,523,1.561,525,1.476,569,0.68,705,2.2,726,1.069,736,1.476,777,1.561,779,2.142,781,1.658,785,1.215,796,1.476,866,2.078,869,1.561,956,2.078,986,4.28,989,4.793,1021,2.078,1060,3.177,1082,3.177,1099,1.771,1184,2.916,1358,2.078,1447,4.28,1450,2.306,1485,2.257,1488,4.833,1506,2.078,1508,2.306,1516,4.319,1525,1.908,1526,3.857,1533,2.306,1605,3.916,1821,4.793,2276,3.177,2287,2.306,2288,4.055,2289,4.923,2290,6.888,2291,4.923,2292,4.055,2293,4.055,2294,4.055,2295,4.055,2296,2.652,2297,2.652,2298,2.652,2299,2.652,2300,2.652,2301,4.055,2302,2.652,2303,2.652,2304,2.652,2305,2.652,2306,2.652,2307,4.055,2308,2.652,2309,2.652,2310,2.652,2311,2.652,2312,2.306,2313,2.652,2314,2.652,2315,2.652,2316,2.652,2317,2.652,2318,5.513,2319,2.652,2320,2.652,2321,4.055,2322,4.055,2323,4.055,2324,4.055,2325,2.652,2326,2.652,2327,2.306,2328,2.652,2329,2.652,2330,2.652,2331,2.652,2332,2.652,2333,2.652,2334,4.923,2335,5.513,2336,2.652,2337,2.652,2338,4.28,2339,2.652,2340,2.652,2341,2.652,2342,2.652,2343,2.306,2344,2.652,2345,5.513,2346,2.652,2347,2.652,2348,2.652,2349,2.652,2350,2.652,2351,4.055,2352,3.526,2353,4.055,2354,5.513,2355,2.652,2356,2.652,2357,2.652,2358,2.652,2359,2.652,2360,2.652]],["title/injectables/PatientService.html",[389,2.195,482,1.012]],["body/injectables/PatientService.html",[3,0.106,4,0.106,8,0.073,14,0.195,15,0.433,18,0.833,29,0.905,32,0.282,34,0.905,35,0.014,36,0.461,37,0.257,38,0.943,47,0.833,49,0.844,57,0.813,58,0.752,61,0.613,64,0.441,66,0.124,67,0.136,77,0.742,138,0.782,236,0.008,237,0.01,238,0.008,353,2.626,386,3.083,389,3.331,462,2.422,471,4.164,482,1.535,483,2.01,487,1.811,492,3.063,493,4.155,495,3.522,510,3.063,527,2.198,569,1.535,624,2.198,626,3.063,639,3.92,672,2.198,705,2.505,726,1.848,797,3.063,844,4.164,847,3.063,851,3.063,853,2.867,854,3.298,856,2.867,1128,3.298,1353,3.347,2276,3.593,2343,3.987,2352,3.987,2361,3.987,2362,5.791,2363,7.323,2364,7.059,2365,6.66,2366,5.984,2367,4.586,2368,5.984,2369,4.586,2370,4.586,2371,5.984,2372,4.586,2373,4.586,2374,4.586,2375,4.586,2376,4.586,2377,4.586,2378,4.586,2379,4.586,2380,4.586]],["title/components/ScratchPadUpdate.html",[0,0.077,215,0.699]],["body/components/ScratchPadUpdate.html",[0,0.122,1,0.722,2,1.018,3,0.094,4,0.094,5,0.84,6,0.809,7,0.84,8,0.064,10,0.695,11,1.598,12,1.14,14,0.173,15,0.401,18,0.77,24,1.702,32,0.28,34,0.617,35,0.014,36,0.518,37,0.271,38,0.642,47,0.77,49,1.018,61,0.333,62,1.525,64,0.392,66,0.11,67,0.121,69,1.254,77,0.854,87,0.722,138,1.148,142,3.694,144,3.978,152,0.75,153,1.14,154,1.14,155,0.695,156,0.84,157,0.84,158,0.722,159,0.84,160,0.722,161,0.84,162,0.722,163,0.84,164,0.722,165,0.84,166,0.722,167,0.84,168,0.722,169,0.84,170,0.84,171,0.722,172,0.84,173,0.722,174,0.84,175,0.722,176,0.84,177,0.722,178,0.84,179,0.695,180,0.84,181,0.722,182,0.722,183,0.84,184,0.722,185,0.84,186,0.722,187,0.84,188,0.722,189,0.84,190,0.722,191,0.84,192,0.84,193,0.722,194,0.84,195,0.722,196,0.84,197,0.722,198,1.058,199,1.058,200,0.84,201,0.722,202,0.84,203,0.722,204,0.84,205,0.722,206,0.84,207,0.722,208,0.84,209,0.722,210,0.84,211,0.722,212,0.84,213,0.722,214,0.84,215,1.193,216,1.294,217,0.84,218,0.722,219,0.809,220,0.84,221,0.722,222,0.84,223,0.722,224,0.75,225,0.84,226,0.722,227,0.84,228,0.722,229,0.84,230,0.722,231,0.75,232,0.84,233,0.75,234,0.809,235,0.84,236,0.007,237,0.009,238,0.007,353,1.516,359,2.952,569,1.045,574,4.194,652,3.978,677,3.964,925,3.748,926,4.194,934,3.694,1976,2.931,2381,6.457,2382,3.543,2383,5.532,2384,5.532,2385,5.532,2386,4.075,2387,4.075,2388,5.532,2389,4.075,2390,5.532,2391,4.075,2392,4.075,2393,4.075,2394,4.075,2395,5.532,2396,4.075,2397,5.532]],["title/components/SelectListSingle.html",[0,0.077,218,0.699]],["body/components/SelectListSingle.html",[0,0.126,1,0.766,2,1.059,3,0.1,4,0.1,5,0.89,6,0.858,7,0.89,8,0.068,10,0.737,11,1.603,12,1.185,14,0.184,15,0.417,18,0.801,24,1.771,32,0.249,35,0.014,36,0.498,37,0.222,47,0.602,61,0.353,62,1.587,64,0.415,66,0.116,67,0.128,69,1.33,77,0.641,85,2.059,87,1.374,138,1.176,152,0.796,153,1.185,154,1.185,155,0.737,156,0.89,157,0.89,158,0.766,159,0.89,160,0.766,161,0.89,162,0.766,163,0.89,164,0.766,165,0.89,166,0.766,167,0.89,168,0.766,169,0.89,170,0.89,171,0.766,172,0.89,173,0.766,174,0.89,175,0.766,176,0.89,177,0.766,178,0.89,179,0.737,180,0.89,181,0.766,182,0.766,183,0.89,184,0.766,185,0.89,186,0.766,187,0.89,188,0.766,189,0.89,190,0.766,191,0.89,192,0.89,193,0.766,194,0.89,195,0.766,196,0.89,197,0.766,198,1.1,199,1.1,200,0.89,201,0.766,202,0.89,203,0.766,204,0.89,205,0.766,206,0.89,207,0.766,208,0.89,209,0.766,210,0.89,211,0.766,212,0.89,213,0.766,214,0.89,215,0.766,216,0.89,217,0.89,218,1.222,219,1.426,220,0.89,221,0.766,222,0.89,223,0.766,224,0.796,225,0.89,226,0.766,227,0.89,228,0.766,229,0.89,230,0.766,231,0.796,232,0.89,233,0.796,234,0.858,235,0.89,236,0.007,237,0.01,238,0.007,353,1.608,569,1.476,925,3.839,926,4.32,934,3.843,935,5.003,1976,3.108,2398,5.997,2399,3.758,2400,5.754,2401,5.754,2402,6.469,2403,4.322,2404,4.322,2405,4.322,2406,5.754]],["title/classes/Server.html",[67,0.117,1605,2.466]],["body/classes/Server.html",[3,0.133,4,0.133,8,0.091,14,0.245,15,0.5,29,0.871,32,0.285,34,0.871,35,0.014,36,0.612,37,0.285,38,0.907,66,0.155,67,0.17,77,0.914,236,0.01,237,0.012,238,0.01,351,2.06,672,3.811,1353,3.936,1605,4.313,1942,5.005,2407,5.005,2408,5.757,2409,6.899,2410,5.757]],["title/injectables/SmartService.html",[391,2.466,482,1.012]],["body/injectables/SmartService.html",[3,0.075,4,0.075,8,0.051,10,0.55,14,0.137,15,0.34,18,0.653,29,0.71,32,0.296,34,0.71,35,0.015,36,0.361,37,0.288,38,0.739,47,0.846,49,0.594,57,0.98,58,0.907,61,0.55,64,0.31,66,0.087,67,0.096,77,0.878,85,1.154,101,2.527,108,2.32,138,1.148,182,0.572,236,0.01,237,0.008,238,0.006,303,2.527,333,2.229,386,2.801,389,3.868,391,2.934,395,2.154,433,1.414,434,4.642,435,1.795,436,2.016,462,1.704,463,2.527,464,2.527,465,2.804,469,3.134,482,1.203,483,1.414,487,1.502,492,2.154,493,3.575,495,2.762,511,1.111,525,1.795,569,1.558,635,3.575,672,1.546,705,1.499,722,2.154,816,2.154,853,2.016,856,2.016,1125,2.016,1254,2.804,1541,2.527,1558,4.08,1561,4.809,1669,2.527,2147,3.676,2362,6.313,2411,2.804,2412,6.073,2413,5.531,2414,5.531,2415,5.531,2416,5.855,2417,5.531,2418,6.073,2419,5.531,2420,6.073,2421,4.692,2422,6.073,2423,6.073,2424,3.225,2425,3.225,2426,4.692,2427,3.225,2428,4.692,2429,3.225,2430,3.225,2431,3.225,2432,3.225,2433,4.692,2434,4.692,2435,4.692,2436,4.692,2437,4.692,2438,3.225,2439,3.225,2440,3.225,2441,4.692,2442,3.225,2443,4.692,2444,4.692,2445,3.225,2446,3.225,2447,3.225,2448,6.073,2449,3.225,2450,4.692,2451,4.692,2452,5.531,2453,4.692,2454,4.692,2455,3.225,2456,3.225,2457,3.225,2458,3.225,2459,3.225,2460,3.225,2461,3.225,2462,3.225,2463,3.225,2464,5.531,2465,5.531,2466,3.225,2467,4.692,2468,3.225,2469,4.692,2470,4.692,2471,4.692,2472,3.225,2473,3.225,2474,3.225,2475,3.225,2476,3.225,2477,3.225,2478,3.225,2479,3.225,2480,3.225,2481,3.225,2482,3.225,2483,3.225,2484,3.225,2485,4.692,2486,3.225,2487,3.225,2488,3.225,2489,3.225,2490,3.225,2491,3.225,2492,3.225,2493,3.225,2494,3.225,2495,3.225,2496,3.225,2497,2.804,2498,3.225,2499,5.531,2500,3.225,2501,3.225,2502,3.225,2503,3.225,2504,3.225,2505,3.225,2506,3.225,2507,3.225,2508,3.225,2509,2.804,2510,3.225,2511,3.225,2512,3.225,2513,3.225,2514,4.692,2515,3.225,2516,3.225,2517,3.225,2518,3.225]],["title/classes/Timeline.html",[67,0.117,224,0.726]],["body/classes/Timeline.html",[3,0.13,4,0.13,8,0.089,14,0.238,15,0.491,32,0.308,35,0.014,37,0.308,66,0.151,67,0.166,76,5.248,77,0.88,224,1.248,236,0.01,237,0.012,238,0.01,333,2.941,344,4.746,351,2.002,353,2.715,503,5.717,677,4.295,2008,6.345,2009,6.345,2519,4.865,2520,5.596,2521,5.596,2522,5.596,2523,5.596,2524,5.596,2525,5.596,2526,5.596]],["title/components/TimelineComponent.html",[0,0.077,221,0.699]],["body/components/TimelineComponent.html",[0,0.121,1,0.703,2,1,3,0.092,4,0.092,5,0.817,6,0.788,7,0.817,8,0.063,10,0.676,11,1.595,12,1.119,14,0.169,15,0.393,18,0.756,20,3.518,24,1.672,29,0.6,32,0.269,34,0.6,35,0.014,36,0.513,37,0.239,38,0.625,47,0.756,49,1.226,57,0.703,58,0.65,61,0.544,62,1.498,64,0.381,66,0.107,67,0.117,80,1.296,87,0.703,107,1.902,138,1.135,152,0.73,153,1.119,154,1.119,155,0.676,156,0.817,157,0.817,158,0.703,159,0.817,160,0.703,161,0.817,162,0.703,163,0.817,164,0.703,165,0.817,166,0.703,167,0.817,168,0.703,169,0.817,170,0.817,171,0.703,172,0.817,173,0.703,174,0.817,175,0.703,176,0.817,177,0.703,178,0.817,179,0.676,180,0.817,181,0.703,182,0.703,183,0.817,184,0.703,185,0.817,186,0.703,187,0.817,188,0.703,189,0.817,190,0.703,191,0.817,192,0.817,193,0.703,194,0.817,195,0.703,196,0.817,197,0.703,198,1.038,199,1.038,200,0.817,201,0.703,202,0.817,203,0.703,204,0.817,205,0.703,206,0.817,207,0.703,208,0.817,209,0.703,210,0.817,211,0.703,212,0.817,213,0.703,214,0.817,215,0.703,216,0.817,217,0.817,218,0.703,219,0.788,220,0.817,221,1.18,222,0.817,223,0.703,224,0.73,225,0.817,226,0.703,227,0.817,228,0.703,229,0.817,230,0.703,231,0.73,232,0.817,233,0.73,234,0.788,235,0.817,236,0.007,237,0.009,238,0.007,385,4.24,487,1.532,705,2.3,726,1.599,736,2.208,1485,2.208,1516,5.217,1525,2.853,1526,5.217,1960,3.45,2312,3.45,2327,3.45,2527,3.45,2528,5.431,2529,5.431,2530,3.968,2531,5.431,2532,3.968,2533,3.968,2534,3.968,2535,3.968,2536,3.968,2537,3.968,2538,3.968,2539,3.968,2540,5.431,2541,3.968,2542,3.968,2543,3.968,2544,3.968,2545,3.968,2546,3.968]],["title/components/TimelinePopupComponent.html",[0,0.077,223,0.699]],["body/components/TimelinePopupComponent.html",[0,0.119,1,0.682,2,0.979,3,0.089,4,0.089,5,0.793,6,0.764,7,0.793,8,0.061,10,0.656,11,1.592,12,1.096,14,0.164,15,0.385,18,0.741,32,0.254,34,0.805,35,0.014,36,0.531,37,0.254,38,0.838,47,0.741,49,1.211,57,0.682,58,0.631,59,2.059,61,0.537,64,0.37,66,0.104,67,0.114,80,0.918,87,0.682,106,2.469,138,1.121,152,0.709,153,1.096,154,1.096,155,0.656,156,0.793,157,0.793,158,0.682,159,0.793,160,0.682,161,0.793,162,0.682,163,0.793,164,0.682,165,0.793,166,0.682,167,0.793,168,0.682,169,0.793,170,0.793,171,0.682,172,0.793,173,0.682,174,0.793,175,0.682,176,0.793,177,0.682,178,0.793,179,0.656,180,0.793,181,0.682,182,0.682,183,0.793,184,0.682,185,0.793,186,0.682,187,0.793,188,1.165,189,0.793,190,0.682,191,0.793,192,0.793,193,0.682,194,0.793,195,0.682,196,0.793,197,0.682,198,1.017,199,1.017,200,0.793,201,0.682,202,0.793,203,0.682,204,0.793,205,0.682,206,0.793,207,0.682,208,0.793,209,0.682,210,0.793,211,0.682,212,0.793,213,0.682,214,0.793,215,0.682,216,0.793,217,0.793,218,0.682,219,0.764,220,0.793,221,0.682,222,0.793,223,1.165,224,1.122,225,0.793,226,0.682,227,0.793,228,0.682,229,0.793,230,0.682,231,0.709,232,0.793,233,0.709,234,0.764,235,0.793,236,0.007,237,0.009,238,0.007,333,2.65,349,5.152,511,1.832,687,2.143,777,2.266,779,2.81,781,2.407,811,3.326,1184,2.769,1219,4.168,1485,4.072,1488,2.769,1506,3.017,1525,2.769,1638,6.205,1824,5.3,2068,4.168,2547,3.348,2548,5.321,2549,7.137,2550,5.321,2551,3.851,2552,5.321,2553,3.851,2554,5.321,2555,3.851,2556,5.321,2557,3.851,2558,3.348,2559,3.851,2560,3.851,2561,3.851,2562,3.851,2563,3.851,2564,3.851,2565,3.851,2566,5.321,2567,5.321,2568,5.321,2569,5.321]],["title/injectables/ToolBarService.html",[392,2.466,482,1.012]],["body/injectables/ToolBarService.html",[3,0.138,4,0.138,8,0.094,14,0.253,15,0.509,29,1.133,32,0.289,35,0.014,37,0.271,61,0.486,64,0.572,66,0.16,67,0.176,77,0.863,236,0.01,237,0.012,238,0.01,392,4.399,482,1.805,483,2.608,2570,5.174,2571,7.492,2572,7.492,2573,7.036,2574,5.951]],["title/components/ToolbarComponent.html",[0,0.077,226,0.699]],["body/components/ToolbarComponent.html",[0,0.108,1,0.575,2,0.868,3,0.075,4,0.075,5,0.669,6,0.644,7,0.669,8,0.051,10,0.553,11,1.575,12,0.971,14,0.138,15,0.341,18,0.656,24,1.451,29,0.713,31,3.19,32,0.275,34,0.713,35,0.014,36,0.498,37,0.235,38,0.743,47,0.901,49,1.191,56,1.623,57,0.835,58,0.532,59,1.825,61,0.594,62,1.3,64,0.312,65,2.03,66,0.087,67,0.096,87,0.575,91,1.308,93,1.423,135,2.543,138,1.038,152,0.598,153,0.971,154,0.971,155,0.553,156,0.669,157,0.669,158,0.575,159,0.669,160,0.575,161,0.669,162,0.575,163,0.669,164,0.575,165,0.669,166,0.575,167,0.669,168,0.575,169,0.669,170,0.669,171,0.575,172,0.669,173,0.575,174,0.669,175,0.575,176,0.669,177,0.575,178,0.669,179,0.553,180,0.669,181,0.575,182,0.575,183,0.669,184,0.575,185,0.669,186,0.575,187,0.669,188,0.575,189,0.669,190,0.575,191,0.669,192,0.669,193,0.575,194,0.669,195,0.575,196,0.669,197,0.575,198,0.901,199,0.901,200,0.669,201,0.575,202,0.669,203,0.575,204,0.669,205,0.575,206,0.669,207,0.575,208,0.669,209,0.575,210,0.669,211,0.575,212,0.669,213,0.575,214,0.669,215,0.575,216,0.971,217,0.669,218,0.575,219,0.644,220,0.669,221,0.575,222,0.669,223,0.575,224,0.598,225,0.669,226,1.079,227,0.669,228,0.575,229,0.669,230,0.575,231,0.598,232,0.669,233,0.598,234,0.644,235,0.669,236,0.006,237,0.008,238,0.006,251,3.338,283,2.03,382,3.757,384,3.338,387,2.92,390,2.695,392,4.354,394,2.03,433,1.423,487,1.765,491,5.296,505,4.099,507,2.823,568,2.823,589,5.008,637,1.556,638,1.556,705,2.156,724,1.487,726,1.308,788,2.03,815,2.823,956,2.543,1099,2.168,1125,2.03,1298,2.543,1350,2.335,1351,2.543,1361,2.823,1367,2.03,1389,2.543,1415,4.099,1575,4.099,1610,2.823,1647,3.708,1668,2.03,1801,4.099,2230,2.823,2575,2.823,2576,4.715,2577,5.551,2578,6.092,2579,6.092,2580,6.092,2581,4.715,2582,5.551,2583,4.715,2584,3.246,2585,3.246,2586,3.246,2587,3.246,2588,3.246,2589,4.715,2590,3.246,2591,3.246,2592,3.246,2593,3.246,2594,3.246,2595,4.715,2596,3.246,2597,3.246,2598,3.246,2599,4.715,2600,3.246,2601,3.246,2602,3.246,2603,3.246,2604,3.246,2605,3.246,2606,3.246,2607,3.246,2608,3.246,2609,3.246,2610,3.246,2611,3.246,2612,3.246,2613,3.246,2614,3.246,2615,3.246,2616,3.246]],["title/components/TripleListComponent.html",[0,0.077,228,0.699]],["body/components/TripleListComponent.html",[0,0.139,1,0.759,2,1.053,3,0.099,4,0.099,5,0.883,6,0.851,7,0.883,8,0.068,10,0.73,11,1.602,12,1.179,14,0.182,24,1.761,29,0.974,32,0.221,35,0.014,36,0.496,37,0.165,61,0.467,62,1.578,64,0.412,66,0.115,67,0.127,69,2.115,87,1.141,88,2.508,92,3.022,138,1.172,152,0.789,153,1.179,154,1.179,155,0.73,156,0.883,157,0.883,158,0.759,159,0.883,160,0.759,161,0.883,162,0.759,163,0.883,164,0.759,165,0.883,166,0.759,167,0.883,168,0.759,169,0.883,170,0.883,171,0.759,172,0.883,173,0.759,174,0.883,175,0.759,176,0.883,177,0.759,178,0.883,179,0.73,180,0.883,181,0.759,182,0.759,183,0.883,184,0.759,185,0.883,186,0.759,187,0.883,188,0.759,189,0.883,190,0.759,191,0.883,192,0.883,193,0.759,194,0.883,195,0.759,196,0.883,197,0.759,198,1.094,199,1.094,200,0.883,201,0.759,202,0.883,203,0.759,204,0.883,205,0.759,206,0.883,207,0.759,208,0.883,209,0.759,210,0.883,211,0.759,212,0.883,213,0.759,214,0.883,215,0.759,216,0.883,217,0.883,218,0.759,219,0.851,220,0.883,221,0.759,222,0.883,223,0.759,224,0.789,225,0.883,226,0.759,227,0.883,228,1.218,229,1.327,230,0.759,231,0.789,232,0.883,233,0.789,234,0.851,235,0.883,236,0.007,237,0.01,238,0.007,359,1.878,628,4.482,629,4.974,702,3.821,705,2.497,726,1.727,1235,4.974,1310,4.974,1463,5.976,1802,4.974,2617,3.725,2618,5.721,2619,5.721,2620,5.721,2621,5.721]],["title/classes/User.html",[67,0.117,1367,2.466]],["body/classes/User.html",[3,0.142,4,0.142,8,0.097,14,0.26,15,0.517,32,0.275,35,0.014,36,0.583,37,0.275,39,2.557,66,0.165,67,0.181,77,0.796,236,0.01,237,0.012,238,0.01,351,2.186,353,2.818,1367,4.467,2622,5.311,2623,6.108,2624,6.108]],["title/coverage.html",[2625,4.703]],["body/coverage.html",[0,0.16,1,0.587,8,0.052,9,2.882,31,1.518,35,0.014,37,0.128,67,0.233,82,2.384,87,0.587,91,3.382,148,1.518,155,0.816,158,0.587,160,0.587,162,0.587,164,0.587,166,0.587,168,0.587,171,0.587,173,0.587,175,0.587,177,0.587,179,0.565,181,0.587,182,0.587,184,0.587,186,0.587,188,0.587,190,0.587,193,0.587,195,0.587,197,0.587,199,0.915,201,0.587,203,0.587,205,0.587,207,0.587,209,0.587,211,0.587,213,0.848,215,0.587,218,0.587,221,0.587,223,0.587,224,0.61,226,0.587,228,0.587,231,0.61,233,0.61,236,0.006,237,0.008,238,0.006,239,2.882,251,1.589,311,2.384,328,2.882,350,2.384,352,2.882,358,2.882,382,1.845,383,1.951,384,1.589,385,1.951,386,1.336,387,1.589,388,2.072,389,1.845,390,1.283,391,2.072,392,2.072,396,3.749,424,2.597,473,2.597,474,2.597,476,1.951,478,2.214,479,2.072,481,2.882,482,1.981,484,2.882,501,1.751,511,1.141,583,2.882,584,2.882,604,1.845,605,2.882,665,1.845,666,3.749,668,2.384,673,2.882,698,2.882,705,1.059,744,2.882,838,2.882,848,2.072,889,2.214,890,2.882,919,2.882,920,2.882,936,2.597,937,2.882,940,2.882,969,2.882,984,2.882,1048,2.882,1167,2.882,1193,3.749,1264,2.882,1338,2.882,1363,2.384,1367,2.072,1389,2.597,1438,2.882,1445,2.882,1485,1.845,1486,2.882,1514,2.882,1539,2.882,1566,2.882,1571,2.882,1572,2.882,1605,2.072,1625,2.882,1632,2.882,1717,2.882,1797,2.882,1820,2.882,1867,2.384,1868,2.597,1870,2.882,1890,2.882,1894,2.882,1941,2.882,1950,2.882,1966,2.882,1968,3.749,1969,2.882,1977,2.882,1982,2.882,2005,2.882,2041,2.882,2069,2.882,2083,2.882,2201,2.882,2222,2.882,2271,2.882,2275,2.882,2287,4.161,2361,2.882,2381,2.882,2382,2.882,2398,2.882,2399,2.882,2407,2.882,2411,2.882,2519,2.882,2527,2.882,2547,2.882,2570,2.882,2575,2.882,2617,2.882,2622,2.882,2625,2.882,2626,3.315,2627,2.882,2628,5.617,2629,6.798,2630,4.786,2631,5.617,2632,7.175,2633,3.315,2634,3.315,2635,6.798,2636,3.315,2637,4.786,2638,3.315,2639,3.315,2640,4.786,2641,3.315,2642,4.786,2643,3.315,2644,6.523,2645,6.151,2646,5.617,2647,3.315,2648,3.315,2649,3.315,2650,3.315,2651,4.786,2652,5.617,2653,3.315,2654,5.617,2655,5.617,2656,3.315,2657,6.798,2658,3.315,2659,3.315,2660,3.315,2661,3.315,2662,3.315,2663,3.315]],["title/dependencies.html",[371,3.173,2664,2.853]],["body/dependencies.html",[10,0.911,35,0.014,64,0.514,236,0.009,237,0.011,238,0.009,371,3.571,373,3.342,402,4.648,433,2.344,435,3.981,436,3.342,451,3.882,453,4.648,454,3.571,457,5.167,458,4.743,460,4.188,463,4.188,464,4.188,624,3.161,631,4.648,1131,4.648,1218,4.188,1345,4.648,1605,3.342,2558,4.648,2665,5.346,2666,7.997,2667,5.346,2668,5.346,2669,5.346,2670,5.346,2671,5.346,2672,5.346,2673,5.346,2674,5.346,2675,5.346,2676,5.346,2677,5.346,2678,5.346,2679,4.648,2680,5.346,2681,5.346,2682,5.346,2683,6.596,2684,5.346,2685,5.346,2686,5.346,2687,5.346,2688,5.346,2689,6.596,2690,5.346,2691,5.346,2692,5.346,2693,5.346,2694,5.346,2695,5.346,2696,5.346,2697,5.346,2698,5.346,2699,5.346]],["title/index.html",[14,0.14,2700,3.281,2701,3.281]],["body/index.html",[0,0.111,2,0.79,6,0.852,8,0.068,35,0.012,37,0.165,104,3.362,126,2.683,138,0.976,147,2.866,219,1.137,236,0.01,237,0.01,238,0.007,299,3.731,300,3.731,327,3.731,333,2.598,362,4.636,363,3.731,373,2.683,478,2.866,498,2.866,550,3.731,551,3.371,630,2.866,636,3.731,688,2.526,694,3.731,705,2.197,747,2.388,784,2.866,786,2.526,792,2.866,794,2.866,811,2.683,869,2.526,876,4.486,968,3.731,1026,3.362,1086,2.866,1125,3.58,1128,4.636,1129,3.362,1136,3.731,1145,3.731,1150,3.731,1217,4.593,1218,3.362,1219,3.362,1234,3.731,1299,3.362,1302,2.866,1343,3.825,1350,3.086,1485,2.388,1603,4.119,1691,3.731,1742,5.979,1812,4.979,1841,5.979,1914,3.362,2059,3.731,2147,3.362,2338,3.731,2416,4.979,2497,3.731,2509,3.731,2627,3.731,2664,3.731,2679,6.23,2702,6.446,2703,4.291,2704,7.165,2705,4.291,2706,4.291,2707,4.291,2708,4.291,2709,4.291,2710,6.877,2711,4.291,2712,4.291,2713,4.291,2714,4.291,2715,6.877,2716,4.291,2717,6.877,2718,5.727,2719,4.291,2720,5.727,2721,5.727,2722,4.291,2723,6.446,2724,4.291,2725,6.877,2726,4.291,2727,4.291,2728,4.291,2729,4.291,2730,4.291,2731,5.727,2732,4.291,2733,6.446,2734,4.291,2735,4.291,2736,4.291,2737,5.727,2738,4.291,2739,4.291,2740,4.291,2741,5.727,2742,4.291,2743,5.727,2744,4.291,2745,4.291,2746,4.291,2747,4.291,2748,4.291,2749,5.727,2750,4.291,2751,4.291,2752,4.291,2753,4.291,2754,4.291,2755,4.291,2756,4.291,2757,4.291,2758,4.291,2759,5.727,2760,4.291,2761,4.291,2762,4.291,2763,4.291,2764,4.291,2765,4.291,2766,5.727,2767,4.291,2768,4.291,2769,4.291,2770,4.291,2771,4.291,2772,4.291,2773,4.291,2774,4.291,2775,4.291,2776,4.291,2777,4.291,2778,4.291,2779,4.291,2780,5.727,2781,4.291,2782,4.291,2783,4.291,2784,4.291,2785,5.727,2786,5.727,2787,4.291,2788,3.362,2789,4.291,2790,4.291,2791,4.291,2792,4.291,2793,4.291,2794,4.291,2795,4.291,2796,4.291,2797,4.291,2798,4.291,2799,4.291,2800,4.291,2801,4.291,2802,4.291,2803,4.291,2804,4.291]],["title/modules.html",[370,3.613]],["body/modules.html",[35,0.013,236,0.011,237,0.013,238,0.011,369,4.589,370,4.262,381,4.262,458,5.27,2805,7.328,2806,7.328,2807,7.328]],["title/overview.html",[2788,4.238]],["body/overview.html",[1,1.056,2,0.679,31,2.729,35,0.014,93,2.264,96,3.04,152,0.679,158,1.056,160,1.056,162,1.281,164,1.056,166,1.056,168,1.281,171,1.056,173,1.056,175,1.056,177,1.056,179,1.016,181,1.056,184,1.056,186,1.056,188,1.056,190,1.056,193,1.056,195,1.056,197,1.281,201,1.281,203,1.056,205,1.056,207,1.056,209,1.056,211,1.056,213,1.056,215,1.281,218,1.281,221,1.056,223,1.056,226,1.056,228,1.056,230,0.654,236,0.006,237,0.009,238,0.006,251,2.856,351,1.32,368,2.307,369,6.096,370,2.464,371,2.464,372,2.89,373,2.307,374,2.89,375,2.89,376,3.208,377,3.208,378,3.208,379,3.208,380,3.208,381,5.352,382,3.317,383,3.508,384,2.856,385,3.508,386,2.402,387,2.856,388,3.726,389,3.317,390,2.306,391,3.726,392,3.726,393,4.046,394,2.307,395,2.464,478,2.464,483,1.617,1612,3.208,1613,3.208,1614,3.208,1867,2.653,1998,3.208,2788,2.89,2808,3.69,2809,3.69]],["title/miscellaneous/variables.html",[1603,3.417,2810,2.853]],["body/miscellaneous/variables.html",[14,0.261,35,0.014,37,0.293,57,1.271,58,1.175,236,0.011,237,0.012,238,0.011,396,4.815,398,5.343,473,5.618,474,5.618,475,5.343,1193,4.815,1603,4.42,2810,5.343,2811,6.146,2812,7.171]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":91,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["0.1.10",{"_index":2688,"title":{},"body":{"dependencies.html":{}}}],["0.19.47",{"_index":2692,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1767,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["0.3.5",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":1239,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["0.8.9",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["0.80",{"_index":2170,"title":{},"body":{"injectables/ObservationService.html":{}}}],["0.9.1",{"_index":2699,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2631,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2630,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2636,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2654,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2657,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":2662,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2632,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2635,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1399,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["1",{"_index":93,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"components/NormalBox1.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["1'},{'name",{"_index":200,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["1.2.0",{"_index":2693,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":2695,"title":{},"body":{"dependencies.html":{}}}],["1.component",{"_index":1619,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["1.component.ts",{"_index":1969,"title":{},"body":{"components/NormalBox1.html":{},"coverage.html":{}}}],["1.component.ts:10",{"_index":1974,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:12",{"_index":1973,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:9",{"_index":1972,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.html",{"_index":1970,"title":{},"body":{"components/NormalBox1.html":{}}}],["1/16",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2660,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":515,"title":{},"body":{"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{}}}],["10.19.0",{"_index":2740,"title":{},"body":{"index.html":{}}}],["10/15",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1389,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["102588006",{"_index":1932,"title":{},"body":{"injectables/MapService.html":{}}}],["10839",{"_index":1906,"title":{},"body":{"injectables/MapService.html":{}}}],["10px",{"_index":298,"title":{},"body":{"components/AccountComponent.html":{}}}],["12",{"_index":313,"title":{},"body":{"components/AccountComponent.html":{}}}],["120px",{"_index":603,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["13.0.2",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["13969",{"_index":1917,"title":{},"body":{"injectables/MapService.html":{}}}],["14",{"_index":2808,"title":{},"body":{"overview.html":{}}}],["150",{"_index":2614,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["17",{"_index":2809,"title":{},"body":{"overview.html":{}}}],["17861",{"_index":1915,"title":{},"body":{"injectables/MapService.html":{}}}],["18",{"_index":314,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{}}}],["180",{"_index":616,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["181.us",{"_index":517,"title":{},"body":{"injectables/AssociationService.html":{}}}],["185903001",{"_index":1907,"title":{},"body":{"injectables/MapService.html":{}}}],["2",{"_index":96,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"overview.html":{}}}],["2'},{'name",{"_index":202,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["2.0",{"_index":2804,"title":{},"body":{"index.html":{}}}],["2.24.0",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["2.component",{"_index":1620,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["2.component.ts",{"_index":1977,"title":{},"body":{"components/NormalBox2.html":{},"coverage.html":{}}}],["2.component.ts:10",{"_index":1981,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:12",{"_index":1980,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:9",{"_index":1979,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.compute.amazonaws.com/get_items",{"_index":519,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2.html",{"_index":1978,"title":{},"body":{"components/NormalBox2.html":{}}}],["2/3",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1661,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["200px",{"_index":601,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["2075",{"_index":1901,"title":{},"body":{"injectables/MapService.html":{}}}],["2157",{"_index":1925,"title":{},"body":{"injectables/MapService.html":{}}}],["2160",{"_index":1929,"title":{},"body":{"injectables/MapService.html":{}}}],["220px",{"_index":661,"title":{},"body":{"classes/BaseColumn.html":{}}}],["2345",{"_index":1912,"title":{},"body":{"injectables/MapService.html":{}}}],["249288007",{"_index":1902,"title":{},"body":{"injectables/MapService.html":{}}}],["25",{"_index":1713,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["2571",{"_index":2133,"title":{},"body":{"injectables/ObservationService.html":{}}}],["26450",{"_index":1924,"title":{},"body":{"injectables/MapService.html":{}}}],["26464",{"_index":1916,"title":{},"body":{"injectables/MapService.html":{}}}],["26478",{"_index":1913,"title":{},"body":{"injectables/MapService.html":{}}}],["26511",{"_index":1904,"title":{},"body":{"injectables/MapService.html":{}}}],["26515",{"_index":1919,"title":{},"body":{"injectables/MapService.html":{}}}],["266998003",{"_index":1933,"title":{},"body":{"injectables/MapService.html":{}}}],["267432004",{"_index":1928,"title":{},"body":{"injectables/MapService.html":{}}}],["2710",{"_index":339,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["2823",{"_index":1923,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["28542",{"_index":1905,"title":{},"body":{"injectables/MapService.html":{}}}],["29",{"_index":516,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2951",{"_index":1920,"title":{},"body":{"injectables/MapService.html":{}}}],["29857009",{"_index":1935,"title":{},"body":{"injectables/MapService.html":{}}}],["2c304df8",{"_index":2433,"title":{},"body":{"injectables/SmartService.html":{}}}],["3",{"_index":1715,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3.2.1",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["3.4.5",{"_index":2697,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["30385",{"_index":1910,"title":{},"body":{"injectables/MapService.html":{}}}],["30428",{"_index":1931,"title":{},"body":{"injectables/MapService.html":{}}}],["3094",{"_index":1936,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3141",{"_index":336,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["32398004",{"_index":1921,"title":{},"body":{"injectables/MapService.html":{}}}],["32623",{"_index":1938,"title":{},"body":{"injectables/MapService.html":{}}}],["33",{"_index":1998,"title":{},"body":{"components/NoteNavigationComponent.html":{},"overview.html":{}}}],["330c01a5ca8e",{"_index":2437,"title":{},"body":{"injectables/SmartService.html":{}}}],["34",{"_index":2001,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["38341003",{"_index":1934,"title":{},"body":{"injectables/MapService.html":{}}}],["39156",{"_index":343,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["4",{"_index":82,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["4/4",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["44054006",{"_index":1899,"title":{},"body":{"injectables/MapService.html":{}}}],["442311008",{"_index":1937,"title":{},"body":{"injectables/MapService.html":{}}}],["4de9",{"_index":2435,"title":{},"body":{"injectables/SmartService.html":{}}}],["5",{"_index":132,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{}}}],["5.3.0",{"_index":2685,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2633,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":514,"title":{},"body":{"injectables/AssociationService.html":{}}}],["54150009",{"_index":1911,"title":{},"body":{"injectables/MapService.html":{}}}],["55284",{"_index":1898,"title":{},"body":{"injectables/MapService.html":{}}}],["6",{"_index":311,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["6.5.4",{"_index":2689,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1909,"title":{},"body":{"injectables/MapService.html":{}}}],["71",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["711d",{"_index":2434,"title":{},"body":{"injectables/SmartService.html":{}}}],["718",{"_index":1908,"title":{},"body":{"injectables/MapService.html":{}}}],["72166",{"_index":1903,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["75",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["777",{"_index":1939,"title":{},"body":{"injectables/MapService.html":{}}}],["785",{"_index":1927,"title":{},"body":{"injectables/MapService.html":{}}}],["786",{"_index":1930,"title":{},"body":{"injectables/MapService.html":{}}}],["789",{"_index":1922,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["8",{"_index":1914,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["8.2.14",{"_index":2666,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2668,"title":{},"body":{"dependencies.html":{}}}],["8.3.25",{"_index":2670,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":1660,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["80394007",{"_index":1918,"title":{},"body":{"injectables/MapService.html":{}}}],["8302",{"_index":334,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["8310",{"_index":341,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["8462",{"_index":1900,"title":{},"body":{"injectables/MapService.html":{}}}],["8480",{"_index":1897,"title":{},"body":{"injectables/MapService.html":{}}}],["89765005",{"_index":1926,"title":{},"body":{"injectables/MapService.html":{}}}],["9",{"_index":337,"title":{},"body":{"components/AddObservation.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["9/14",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["90708001",{"_index":1896,"title":{},"body":{"injectables/MapService.html":{}}}],["a['code",{"_index":553,"title":{},"body":{"injectables/AssociationService.html":{}}}],["abnormal",{"_index":320,"title":{},"body":{"components/AccountComponent.html":{}}}],["above",{"_index":104,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ConditionService.html":{},"index.html":{}}}],["access",{"_index":787,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["accessing",{"_index":2775,"title":{},"body":{"index.html":{}}}],["according",{"_index":103,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{}}}],["accordion",{"_index":72,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["accordionrecursion",{"_index":1,"title":{"components/AccordionRecursion.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordionrecursion'},{'name",{"_index":157,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["accordionrecursion.html",{"_index":13,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["account",{"_index":240,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["account'},{'name",{"_index":159,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["account.html",{"_index":241,"title":{},"body":{"components/AccountComponent.html":{}}}],["accountcomponent",{"_index":158,"title":{"components/AccountComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["achieved",{"_index":1025,"title":{},"body":{"injectables/ConditionService.html":{}}}],["active",{"_index":142,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"classes/Patient.html":{},"components/ScratchPadUpdate.html":{}}}],["active/inactive",{"_index":136,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["activities",{"_index":317,"title":{},"body":{"components/AccountComponent.html":{}}}],["activity",{"_index":675,"title":{},"body":{"classes/CarePlan.html":{}}}],["actual_component",{"_index":235,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["actually",{"_index":827,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["adams",{"_index":2753,"title":{},"body":{"index.html":{}}}],["add",{"_index":796,"title":{},"body":{"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["addcategoriesconditions",{"_index":19,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesconditions(arrdata",{"_index":44,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesobservations",{"_index":2089,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addcategoriesobservations(observations",{"_index":2099,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addgraphconfig",{"_index":1448,"title":{},"body":{"injectables/DoctorService.html":{}}}],["addgraphconfig(list",{"_index":1452,"title":{},"body":{"injectables/DoctorService.html":{}}}],["adding",{"_index":1176,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["addmedicationchart",{"_index":1719,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addmedicationchart(medication",{"_index":1725,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservation",{"_index":160,"title":{"components/AddObservation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addobservation'},{'name",{"_index":161,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["addobservation.html",{"_index":329,"title":{},"body":{"components/AddObservation.html":{}}}],["addobservationchart",{"_index":1720,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservationchart(chartname",{"_index":1727,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addoption",{"_index":1354,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["addoption(option",{"_index":1362,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["address",{"_index":2272,"title":{},"body":{"classes/Patient.html":{}}}],["addsetting",{"_index":247,"title":{},"body":{"components/AccountComponent.html":{}}}],["addsetting(checked",{"_index":253,"title":{},"body":{"components/AccountComponent.html":{}}}],["advancedsearch",{"_index":2289,"title":{},"body":{"components/PatientComponent.html":{}}}],["advantage",{"_index":2769,"title":{},"body":{"index.html":{}}}],["afbe",{"_index":2436,"title":{},"body":{"injectables/SmartService.html":{}}}],["again",{"_index":1853,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["albumin",{"_index":279,"title":{},"body":{"components/AccountComponent.html":{}}}],["allergies",{"_index":316,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["allergies.map(allergy",{"_index":2331,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergies/precautions",{"_index":145,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["allergy",{"_index":2290,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergy.code.text",{"_index":2332,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergyintolerance",{"_index":350,"title":{"classes/AllergyIntolerance.html":{}},"body":{"classes/AllergyIntolerance.html":{},"injectables/ConditionService.html":{},"coverage.html":{}}}],["allow",{"_index":1166,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["allows",{"_index":1471,"title":{},"body":{"injectables/DoctorService.html":{}}}],["already",{"_index":126,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["alt",{"_index":277,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["amdateformat:'mm/dd/yyyy",{"_index":2355,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdateformat:\\'mm/dd/yyyy",{"_index":2359,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:'years':false)}}yr",{"_index":2356,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:\\'years\\':false)}}yr",{"_index":2360,"title":{},"body":{"components/PatientComponent.html":{}}}],["amtimeago",{"_index":2068,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelinePopupComponent.html":{}}}],["amtimeago:true",{"_index":1336,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ana",{"_index":272,"title":{},"body":{"components/AccountComponent.html":{}}}],["angular",{"_index":2709,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2665,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2667,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":2669,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2558,"title":{},"body":{"components/TimelinePopupComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["angular/compiler",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":1131,"title":{},"body":{"components/ConditionsChartComponent.html":{},"dependencies.html":{}}}],["animate('800ms",{"_index":2597,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["animation",{"_index":1891,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["animation'},{'name",{"_index":192,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["animations",{"_index":2592,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["another",{"_index":2795,"title":{},"body":{"index.html":{}}}],["apache",{"_index":2803,"title":{},"body":{"index.html":{}}}],["api",{"_index":543,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{}}}],["app",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":163,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["app.html",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["app/components/accordionrecursion/accordionrecursion.component",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/account/account.component",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/addobservation/addobservation.component",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/app/app.component",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplan/careplan.component",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplandisplay/careplandisplay.component",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/columnstateswitcher/columnstateswitcher.component",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditions/conditions.component",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionschart/conditionschart.component",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionsdisplay/conditionsdisplay.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/contextmenu/contextmenu.component",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/form",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/historicaltrends/historicaltrends.component",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/home/home.component",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/hoverbox/hoverbox.component",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loadinganimation/loadinganimation.component",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/medications/medications.component",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/newcondition/newcondition.component",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/notenavigation/notenavigation.component",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursion/observationrecursion.component",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursionchart/observationrecursionchart.component",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observations/observations.component",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationsdisplay/observationsdisplay.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/patient/patient.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline/timeline.component",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline_popup/timeline_popup.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/toolbar/toolbar.component",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/triplelist/triplelist.component",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/form.module",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/association.service",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/careplan.service",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/condition.service",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/doctor.service",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/encounter.service",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/fhir.service",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/historicaltrends.service",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/map.service",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/observation.service",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/patient.service",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/scratchpad.service",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/smart.service",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/toolbar.service",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1235,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TripleListComponent.html":{}}}],["appears",{"_index":1843,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["application",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{},"index.html":{}}}],["application/json",{"_index":1563,"title":{},"body":{"injectables/FhirService.html":{}}}],["application/x",{"_index":2490,"title":{},"body":{"injectables/SmartService.html":{}}}],["appmodule",{"_index":369,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":2774,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingproviders",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approximate",{"_index":662,"title":{},"body":{"classes/BaseColumn.html":{}}}],["apps",{"_index":2750,"title":{},"body":{"index.html":{}}}],["april",{"_index":1324,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["arbitrary",{"_index":1240,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["arg.url",{"_index":2467,"title":{},"body":{"injectables/SmartService.html":{}}}],["arg.valueuri",{"_index":2469,"title":{},"body":{"injectables/SmartService.html":{}}}],["args",{"_index":1878,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["array",{"_index":80,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/Bundle.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["array.from(medicationmap.values",{"_index":888,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["array.from(this.chartsmap.values",{"_index":1778,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["arrayofkeyvalues",{"_index":330,"title":{},"body":{"components/AddObservation.html":{}}}],["arrdata",{"_index":46,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["arriving",{"_index":2451,"title":{},"body":{"injectables/SmartService.html":{}}}],["asc",{"_index":1103,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["assign",{"_index":2375,"title":{},"body":{"injectables/PatientService.html":{}}}],["assignvisible",{"_index":1449,"title":{},"body":{"injectables/DoctorService.html":{}}}],["assignvisible(list",{"_index":1454,"title":{},"body":{"injectables/DoctorService.html":{}}}],["associable",{"_index":479,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{},"coverage.html":{}}}],["associable.model",{"_index":685,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{}}}],["associated",{"_index":531,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Chart.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["associatedconditions",{"_index":545,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapconditions",{"_index":485,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapobservations",{"_index":486,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedobservations",{"_index":547,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association",{"_index":812,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associations",{"_index":532,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associationservice",{"_index":382,"title":{"injectables/AssociationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":1136,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["ast",{"_index":278,"title":{},"body":{"components/AccountComponent.html":{}}}],["aud",{"_index":2412,"title":{},"body":{"injectables/SmartService.html":{}}}],["august",{"_index":1327,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["auth",{"_index":2464,"title":{},"body":{"injectables/SmartService.html":{}}}],["authenticate",{"_index":2420,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorize",{"_index":2468,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorizeurl",{"_index":2413,"title":{},"body":{"injectables/SmartService.html":{}}}],["autogrow",{"_index":585,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["autogrow]'},{'name",{"_index":232,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["autogrowdirective",{"_index":231,"title":{"directives/AutoGrowDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":2745,"title":{},"body":{"index.html":{}}}],["available",{"_index":1814,"title":{},"body":{"components/HomeComponent.html":{}}}],["avoid",{"_index":1742,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"index.html":{}}}],["away",{"_index":1858,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["axis",{"_index":911,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["back",{"_index":1711,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["bar",{"_index":1678,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["base",{"_index":1540,"title":{},"body":{"injectables/FhirService.html":{}}}],["basecolumn",{"_index":604,"title":{"classes/BaseColumn.html":{}},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{}}}],["basecolumn:23",{"_index":711,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:28",{"_index":712,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:29",{"_index":713,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:30",{"_index":714,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:33",{"_index":719,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:36",{"_index":721,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:39",{"_index":720,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["based",{"_index":149,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["basic",{"_index":1126,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["bearer",{"_index":1565,"title":{},"body":{"injectables/FhirService.html":{}}}],["before",{"_index":1842,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["begin",{"_index":2722,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":793,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["being",{"_index":1139,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{}}}],["below",{"_index":2510,"title":{},"body":{"injectables/SmartService.html":{}}}],["best",{"_index":2498,"title":{},"body":{"injectables/SmartService.html":{}}}],["better",{"_index":1253,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["between",{"_index":658,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["bilirubin",{"_index":280,"title":{},"body":{"components/AccountComponent.html":{}}}],["bind(this",{"_index":807,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["birthdate",{"_index":2273,"title":{},"body":{"classes/Patient.html":{}}}],["blood",{"_index":2137,"title":{},"body":{"injectables/ObservationService.html":{}}}],["blur",{"_index":597,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["bmi",{"_index":342,"title":{},"body":{"components/AddObservation.html":{}}}],["body",{"_index":2147,"title":{},"body":{"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"index.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["bootstrap",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextMenuOption.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":294,"title":{},"body":{"components/AccountComponent.html":{}}}],["bound",{"_index":791,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["box",{"_index":199,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["boxdata",{"_index":1971,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["break",{"_index":2323,"title":{},"body":{"components/PatientComponent.html":{}}}],["brew",{"_index":2720,"title":{},"body":{"index.html":{}}}],["brief",{"_index":2786,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2807,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["buffer",{"_index":1763,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["bugs",{"_index":2763,"title":{},"body":{"index.html":{}}}],["build",{"_index":2711,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1573,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder'},{'name",{"_index":183,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["builder.component",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["builder.component.ts",{"_index":1572,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["builder.component.ts:13",{"_index":1598,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:14",{"_index":1597,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:16",{"_index":1599,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:17",{"_index":1595,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:19",{"_index":1587,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:20",{"_index":1588,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:22",{"_index":1586,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:27",{"_index":1591,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:32",{"_index":1590,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:39",{"_index":1594,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:55",{"_index":1593,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:59",{"_index":1589,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.html",{"_index":1576,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder/form",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"components/FormBuilder.html":{},"coverage.html":{}}}],["bun",{"_index":276,"title":{},"body":{"components/AccountComponent.html":{}}}],["bundle",{"_index":665,"title":{"classes/Bundle.html":{}},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["bundle.entry",{"_index":859,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["bundle.entry.map(e",{"_index":1527,"title":{},"body":{"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["bundle.entry.map(r",{"_index":860,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["bundle.link.find(link",{"_index":1031,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["button",{"_index":1610,"title":{},"body":{"components/FormBuilder.html":{},"components/ToolbarComponent.html":{}}}],["c",{"_index":551,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["c.clinicalstatus",{"_index":1153,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.id",{"_index":820,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c.isparent",{"_index":831,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.isvisible",{"_index":830,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.parent",{"_index":829,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.relativedatetime",{"_index":1117,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.sort((n1",{"_index":1106,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["c/patient_viewer.git",{"_index":2729,"title":{},"body":{"index.html":{}}}],["c2",{"_index":1231,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c2.onsetdatetime.localecompare(c1.onsetdatetime",{"_index":1232,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c['code']['text",{"_index":1335,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c['selected",{"_index":819,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c[\\'code\\'][\\'text",{"_index":1337,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c[element",{"_index":1171,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cache",{"_index":1042,"title":{},"body":{"injectables/ConditionService.html":{}}}],["calcium",{"_index":268,"title":{},"body":{"components/AccountComponent.html":{}}}],["call",{"_index":568,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["called",{"_index":1228,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["calls",{"_index":1043,"title":{},"body":{"injectables/ConditionService.html":{}}}],["cardiovascular",{"_index":2154,"title":{},"body":{"injectables/ObservationService.html":{}}}],["care",{"_index":94,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{}}}],["careplan",{"_index":476,"title":{"classes/CarePlan.html":{}},"body":{"modules/AppModule.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"coverage.html":{}}}],["careplan'},{'name",{"_index":165,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplan.html",{"_index":700,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplancomponent",{"_index":164,"title":{"components/CarePlanComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay",{"_index":166,"title":{"components/CarePlanDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay'},{'name",{"_index":167,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplandisplay.html",{"_index":745,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanloadfinished",{"_index":701,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplans",{"_index":702,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/TripleListComponent.html":{}}}],["careplans.length",{"_index":741,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplanselected",{"_index":756,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanservice",{"_index":383,"title":{"injectables/CarePlanService.html":{}},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/MedicationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":2321,"title":{},"body":{"components/PatientComponent.html":{}}}],["cases",{"_index":2798,"title":{},"body":{"index.html":{}}}],["cast",{"_index":1533,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{}}}],["casted",{"_index":1534,"title":{},"body":{"injectables/EncounterService.html":{}}}],["cat.category",{"_index":150,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.count",{"_index":2064,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["cat.data?.length",{"_index":151,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.display",{"_index":2063,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["catch",{"_index":1172,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["categories",{"_index":2117,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorize",{"_index":2130,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorizedobservations",{"_index":2084,"title":{},"body":{"injectables/ObservationService.html":{}}}],["category",{"_index":76,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Timeline.html":{}}}],["cause",{"_index":2783,"title":{},"body":{"index.html":{}}}],["causes",{"_index":1311,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["cd",{"_index":2730,"title":{},"body":{"index.html":{}}}],["certain",{"_index":2106,"title":{},"body":{"injectables/ObservationService.html":{}}}],["chain",{"_index":1015,"title":{},"body":{"injectables/ConditionService.html":{}}}],["change",{"_index":1458,"title":{},"body":{"injectables/DoctorService.html":{}}}],["changed",{"_index":1041,"title":{},"body":{"injectables/ConditionService.html":{}}}],["changedobs",{"_index":2077,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changedobs.isselected",{"_index":2082,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changesthen",{"_index":2747,"title":{},"body":{"index.html":{}}}],["chart",{"_index":889,"title":{"classes/Chart.html":{}},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["chart.data",{"_index":1755,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.length",{"_index":1788,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.push",{"_index":1751,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.sort((p1",{"_index":1756,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].name",{"_index":1793,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].value",{"_index":1789,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.linechartdata",{"_index":1760,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.normalvalues",{"_index":1771,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.title",{"_index":1744,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemax",{"_index":1769,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemin",{"_index":1768,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chartevent",{"_index":1651,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmaxdate",{"_index":1696,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate",{"_index":1695,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate.gettime",{"_index":1698,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartname",{"_index":1729,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["charts",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"dependencies.html":{}}}],["chartsize",{"_index":1635,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartsmap",{"_index":1718,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["check",{"_index":727,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["check(medication",{"_index":1954,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["checkallcareplans",{"_index":748,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallcareplans(checked",{"_index":762,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallconditions",{"_index":1266,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallconditions(checked",{"_index":1278,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallobservations",{"_index":2224,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkallobservations(checked",{"_index":2234,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkbox",{"_index":169,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["checkboxdata",{"_index":923,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxes",{"_index":933,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxinline",{"_index":168,"title":{"components/CheckboxInline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcareplan",{"_index":749,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcareplan(checked",{"_index":764,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked",{"_index":750,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked(careplan",{"_index":767,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcondition",{"_index":1267,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkcondition(checkedcondition",{"_index":1280,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checked",{"_index":256,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["checked(changedobs",{"_index":2075,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["checked(obs",{"_index":2051,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["checkedcareplan",{"_index":765,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkedcondition",{"_index":1282,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkedconditions",{"_index":507,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedconditions.map(this.extractconditioninfo",{"_index":561,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedconditionsinfo",{"_index":560,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservation",{"_index":2237,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkedobservations",{"_index":505,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedobservations.map(this.extractobservationinfo",{"_index":563,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservationsinfo",{"_index":562,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checking",{"_index":784,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["checkobservation",{"_index":2225,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkobservation(checked",{"_index":2236,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["chief",{"_index":140,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["child",{"_index":655,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["chloride",{"_index":266,"title":{},"body":{"components/AccountComponent.html":{}}}],["cholesteralbattery",{"_index":242,"title":{},"body":{"components/AccountComponent.html":{}}}],["choose",{"_index":1691,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["class",{"_index":67,"title":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":351,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{},"overview.html":{}}}],["clean",{"_index":1466,"title":{},"body":{"injectables/DoctorService.html":{}}}],["cleaning",{"_index":1380,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clear",{"_index":538,"title":{},"body":{"injectables/AssociationService.html":{}}}],["click",{"_index":1343,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HoverBoxComponent.html":{},"components/ObservationRecursive.html":{},"index.html":{}}}],["clicked",{"_index":824,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsDisplay.html":{}}}],["clickedset",{"_index":1089,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["clicking",{"_index":800,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["clicks",{"_index":1368,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clicksubscription",{"_index":1347,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["client",{"_index":936,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"coverage.html":{}}}],["client_id",{"_index":2505,"title":{},"body":{"injectables/SmartService.html":{}}}],["clientid",{"_index":2414,"title":{},"body":{"injectables/SmartService.html":{}}}],["clinical",{"_index":2706,"title":{},"body":{"index.html":{}}}],["clinicalstatus",{"_index":970,"title":{},"body":{"classes/Condition.html":{}}}],["clone",{"_index":2727,"title":{},"body":{"index.html":{}}}],["close",{"_index":349,"title":{},"body":{"components/AddObservation.html":{},"components/ContextMenuComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["close(event",{"_index":2550,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["closeable",{"_index":1348,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closeable_delay",{"_index":1349,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closed",{"_index":1419,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closefinalnote",{"_index":1985,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["closeprogressnote",{"_index":1986,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["closes",{"_index":1379,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closesidenote",{"_index":1987,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["cluster_appmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule",{"_index":1612,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_declarations",{"_index":1613,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_exports",{"_index":1614,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["clutter",{"_index":2784,"title":{},"body":{"index.html":{}}}],["cnum",{"_index":1158,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cnum.tostring",{"_index":1162,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["co2",{"_index":267,"title":{},"body":{"components/AccountComponent.html":{}}}],["code",{"_index":333,"title":{},"body":{"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["codes",{"_index":2128,"title":{},"body":{"injectables/ObservationService.html":{}}}],["coding",{"_index":573,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{}}}],["collapse",{"_index":295,"title":{},"body":{"components/AccountComponent.html":{}}}],["collapsequeue",{"_index":1051,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["column",{"_index":90,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["column's",{"_index":954,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnheight",{"_index":606,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnnum",{"_index":25,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["columns",{"_index":134,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{}}}],["columnstate",{"_index":607,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnstateswitcher",{"_index":942,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitcher'},{'name",{"_index":172,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["columnstateswitcher.html",{"_index":943,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitchercomponent",{"_index":171,"title":{"components/ColumnStateSwitcherComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["columntype",{"_index":947,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["combdata",{"_index":1577,"title":{},"body":{"components/FormBuilder.html":{}}}],["combineddata",{"_index":924,"title":{},"body":{"components/CheckboxInline.html":{}}}],["command",{"_index":2741,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2724,"title":{},"body":{"index.html":{}}}],["comment",{"_index":2509,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["comments",{"_index":2792,"title":{},"body":{"index.html":{}}}],["compat",{"_index":2690,"title":{},"body":{"dependencies.html":{}}}],["compiler",{"_index":1805,"title":{},"body":{"components/HomeComponent.html":{}}}],["complaint",{"_index":141,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["completion",{"_index":2771,"title":{},"body":{"index.html":{}}}],["complex",{"_index":2790,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":156,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/form_components/checkbox",{"_index":1616,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/normal",{"_index":1618,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/scrachpad",{"_index":1623,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/select",{"_index":1621,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/home/home.component",{"_index":2313,"title":{},"body":{"components/PatientComponent.html":{}}}],["components/hoverbox/hoverbox.component",{"_index":2559,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["concat",{"_index":1009,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concat(of(conditions",{"_index":1033,"title":{},"body":{"injectables/ConditionService.html":{}}}],["concat(of(encounters",{"_index":1529,"title":{},"body":{"injectables/EncounterService.html":{}}}],["concatmap",{"_index":1010,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concurrently",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":148,"title":{"classes/Condition.html":{}},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["condition.code.coding[0].code",{"_index":2569,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.code.coding[0].display",{"_index":2567,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.isvisible",{"_index":1247,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.onsetdatetime",{"_index":2566,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.relativedatetime",{"_index":1249,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.service",{"_index":521,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['code",{"_index":576,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['system",{"_index":577,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['onsetdatetime",{"_index":578,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionally",{"_index":1017,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditiongrouping",{"_index":1052,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["conditiongroupingname",{"_index":1053,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditiongroupingname[conditiongrouping.indexof(c",{"_index":1185,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditions",{"_index":88,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{},"components/TripleListComponent.html":{}}}],["conditions'},{'name",{"_index":176,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditions.component.ts",{"_index":1461,"title":{},"body":{"injectables/DoctorService.html":{}}}],["conditions.html",{"_index":1194,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["conditions.map(this.extractconditioninfo",{"_index":565,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionscache",{"_index":985,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditionschart",{"_index":1049,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschart'},{'name",{"_index":174,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionschart.html",{"_index":1050,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschartcomponent",{"_index":173,"title":{"components/ConditionsChartComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionscomponent",{"_index":175,"title":{"components/ConditionsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay",{"_index":177,"title":{"components/ConditionsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay'},{'name",{"_index":178,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionsdisplay.html",{"_index":1265,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["conditionselected",{"_index":1065,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{}}}],["conditionservice",{"_index":384,"title":{"injectables/ConditionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsinfo",{"_index":564,"title":{},"body":{"injectables/AssociationService.html":{}}}],["confidential",{"_index":2751,"title":{},"body":{"index.html":{}}}],["config",{"_index":326,"title":{},"body":{"components/AccountComponent.html":{}}}],["configmode",{"_index":1446,"title":{},"body":{"injectables/DoctorService.html":{}}}],["console.log",{"_index":2778,"title":{},"body":{"index.html":{}}}],["console.log(\"add",{"_index":1679,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["console.log(\"changing",{"_index":2396,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["console.log(\"highlighting",{"_index":1629,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["console.log(\"loaded",{"_index":740,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["console.log(\"no",{"_index":2163,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(\"saved",{"_index":289,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"this",{"_index":1181,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log('blur",{"_index":602,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('focus",{"_index":598,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('loaded",{"_index":1960,"title":{},"body":{"components/MedicationsComponent.html":{},"components/TimelineComponent.html":{}}}],["console.log('log",{"_index":2543,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('stop",{"_index":2479,"title":{},"body":{"injectables/SmartService.html":{}}}],["console.log('that",{"_index":1174,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(condition",{"_index":1308,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["console.log(data",{"_index":1344,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["console.log(forms",{"_index":1608,"title":{},"body":{"components/FormBuilder.html":{}}}],["console.log(fullpath",{"_index":1178,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(obs",{"_index":2258,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["console.log(plan",{"_index":809,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["console.log(this.encounters",{"_index":2539,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log(this.getscratchpadobservations",{"_index":2200,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(this.observations",{"_index":2254,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["const",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{},"injectables/EncounterService.html":{},"injectables/SmartService.html":{}}}],["constitutional",{"_index":2145,"title":{},"body":{"injectables/ObservationService.html":{}}}],["construct",{"_index":2333,"title":{},"body":{"components/PatientComponent.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(associationservice",{"_index":2230,"title":{},"body":{"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["constructor(careplanservice",{"_index":1952,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["constructor(conditionservice",{"_index":1066,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["constructor(cookieservice",{"_index":1450,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["constructor(doctorservice",{"_index":250,"title":{},"body":{"components/AccountComponent.html":{}}}],["constructor(el",{"_index":588,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["constructor(encounterservice",{"_index":2530,"title":{},"body":{"components/TimelineComponent.html":{}}}],["constructor(fhirservice",{"_index":706,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["constructor(http",{"_index":492,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["constructor(name",{"_index":1942,"title":{},"body":{"classes/Medication.html":{},"classes/Server.html":{}}}],["constructor(observationservice",{"_index":30,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"directives/HighlightDirective.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelineComponent.html":{}}}],["constructor(public",{"_index":2410,"title":{},"body":{"classes/Server.html":{}}}],["constructor(ref",{"_index":1359,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["constructor(scratchpadservice",{"_index":757,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{}}}],["constructor(trendsservice",{"_index":1645,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["contained",{"_index":2108,"title":{},"body":{"injectables/ObservationService.html":{}}}],["containing",{"_index":1822,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["contains",{"_index":1137,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["content",{"_index":2489,"title":{},"body":{"injectables/SmartService.html":{}}}],["context",{"_index":786,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["contextmenu",{"_index":1345,"title":{},"body":{"components/ContextMenuComponent.html":{},"dependencies.html":{}}}],["contextmenu'},{'name",{"_index":180,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["contextmenu.component.ts",{"_index":2800,"title":{},"body":{"index.html":{}}}],["contextmenu.html",{"_index":1346,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["contextmenu/contextmenu.component",{"_index":782,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["contextmenucomponent",{"_index":179,"title":{"components/ContextMenuComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contextmenuoption",{"_index":1363,"title":{"classes/ContextMenuOption.html":{}},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["contexts",{"_index":1393,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["continual",{"_index":2207,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["continually",{"_index":1019,"title":{},"body":{"injectables/ConditionService.html":{}}}],["continue",{"_index":1750,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["cookie",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["correct",{"_index":124,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{}}}],["count",{"_index":1474,"title":{},"body":{"injectables/DoctorService.html":{},"injectables/ObservationService.html":{}}}],["coverage",{"_index":2625,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":872,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.code",{"_index":874,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.value",{"_index":886,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.period.end",{"_index":836,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp.period.start",{"_index":835,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp['title",{"_index":834,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp[\\'title",{"_index":837,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["create",{"_index":876,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["created",{"_index":1775,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creating",{"_index":1743,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creatinine",{"_index":274,"title":{},"body":{"components/AccountComponent.html":{}}}],["cross",{"_index":2480,"title":{},"body":{"injectables/SmartService.html":{}}}],["css",{"_index":2713,"title":{},"body":{"index.html":{}}}],["csub.clinicalstatus",{"_index":1188,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub.relativedatetime",{"_index":1189,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['coding'][0]['code",{"_index":1187,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['text",{"_index":1186,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'coding\\'][0][\\'code",{"_index":1192,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'text",{"_index":1191,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ctgry",{"_index":2194,"title":{},"body":{"injectables/ObservationService.html":{}}}],["current",{"_index":70,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{}}}],["currently",{"_index":527,"title":{},"body":{"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["currstatus",{"_index":2390,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["custom",{"_index":1823,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["d",{"_index":1318,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getdate",{"_index":1333,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getfullyear",{"_index":1334,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["dailyamount",{"_index":690,"title":{},"body":{"classes/CarePlan.html":{}}}],["daniel",{"_index":2754,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1710,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["dashedlines",{"_index":891,"title":{},"body":{"classes/Chart.html":{}}}],["data",{"_index":69,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TripleListComponent.html":{}}}],["data.length",{"_index":1741,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["data['rest'][0].security.extension.filter(e",{"_index":2459,"title":{},"body":{"injectables/SmartService.html":{}}}],["data[0].code['text",{"_index":1745,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["datafilter",{"_index":139,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["datalocation",{"_index":1074,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["datalocation.foreach(element",{"_index":1169,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date",{"_index":687,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/TimelinePopupComponent.html":{}}}],["date().gettime",{"_index":1113,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["date(c.onsetdatetime",{"_index":1319,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["date(c.onsetdatetime).gettime",{"_index":1116,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(condition.onsetdatetime).gettime",{"_index":1248,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["date(cp.period.end",{"_index":884,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(cp.period.start",{"_index":883,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(form.maxdate",{"_index":1690,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(form.mindate",{"_index":1688,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(newdate).todatestring",{"_index":1118,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(ob.effectivedatetime).gettime",{"_index":2175,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(point.relativedatetime",{"_index":1752,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["date(this.conditions[0].onsetdatetime).gettime",{"_index":1114,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["date(this.observations[0].effectivedatetime).gettime",{"_index":2172,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(this.period.end",{"_index":1512,"title":{},"body":{"classes/Encounter.html":{}}}],["date(this.period.start",{"_index":1511,"title":{},"body":{"classes/Encounter.html":{}}}],["datepipe",{"_index":2549,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["datepipe('en",{"_index":2554,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dates",{"_index":1233,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["datetime",{"_index":575,"title":{},"body":{"injectables/AssociationService.html":{}}}],["dd",{"_index":2561,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dealing",{"_index":2765,"title":{},"body":{"index.html":{}}}],["debounce",{"_index":647,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debouncetime",{"_index":625,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debugging",{"_index":2511,"title":{},"body":{"injectables/SmartService.html":{}}}],["december",{"_index":1331,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["declarations",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["declare",{"_index":1214,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["declared",{"_index":2761,"title":{},"body":{"index.html":{}}}],["declaring",{"_index":2760,"title":{},"body":{"index.html":{}}}],["decodeuricomponent(tmp[1",{"_index":2518,"title":{},"body":{"injectables/SmartService.html":{}}}],["decorators",{"_index":777,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":1396,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["delete",{"_index":1144,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["demos",{"_index":1238,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["dependencies",{"_index":371,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependenciesif",{"_index":2734,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1478,"title":{},"body":{"injectables/DoctorService.html":{}}}],["desc",{"_index":1104,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["described",{"_index":129,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["description",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{},"components/TripleListComponent.html":{}}}],["deserialize",{"_index":1515,"title":{},"body":{"injectables/EncounterService.html":{}}}],["deserialize(input",{"_index":1519,"title":{},"body":{"injectables/EncounterService.html":{}}}],["detail",{"_index":689,"title":{},"body":{"classes/CarePlan.html":{}}}],["details",{"_index":1506,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["determine",{"_index":1315,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["developing",{"_index":2781,"title":{},"body":{"index.html":{}}}],["development",{"_index":2733,"title":{},"body":{"index.html":{}}}],["diff",{"_index":1112,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["different",{"_index":133,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["directive",{"_index":155,"title":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["directives",{"_index":230,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["directly",{"_index":2766,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1424,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["discussed",{"_index":1028,"title":{},"body":{"injectables/ConditionService.html":{}}}],["display",{"_index":99,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{}}}],["display_delay",{"_index":1826,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["displayed",{"_index":785,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["displaying",{"_index":1739,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{}}}],["displays",{"_index":2618,"title":{},"body":{"components/TripleListComponent.html":{}}}],["div",{"_index":1503,"title":{},"body":{"classes/Encounter.html":{}}}],["do's",{"_index":2758,"title":{},"body":{"index.html":{}}}],["dob",{"_index":2353,"title":{},"body":{"components/PatientComponent.html":{}}}],["doctorservice",{"_index":251,"title":{"injectables/DoctorService.html":{}},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["document",{"_index":1370,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["document.getelementbyid",{"_index":2776,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"cg",{"_index":1161,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["document.getelementbyid(\"finalnote\").style.width",{"_index":2000,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["document.getelementbyid(\"progressnote\").style.width",{"_index":1999,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["document.getelementbyid(\"sidenote\").style.width",{"_index":1997,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["documentation",{"_index":2626,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":2767,"title":{},"body":{"index.html":{}}}],["doit",{"_index":1872,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["doit(n",{"_index":1873,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["don't",{"_index":2348,"title":{},"body":{"components/PatientComponent.html":{}}}],["done",{"_index":2755,"title":{},"body":{"index.html":{}}}],["dont's",{"_index":2772,"title":{},"body":{"index.html":{}}}],["dosage",{"_index":885,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["dosageunits",{"_index":873,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["doubles/triples",{"_index":1468,"title":{},"body":{"injectables/DoctorService.html":{}}}],["driven",{"_index":2705,"title":{},"body":{"index.html":{}}}],["due",{"_index":318,"title":{},"body":{"components/AccountComponent.html":{}}}],["duration",{"_index":1046,"title":{},"body":{"injectables/ConditionService.html":{}}}],["dynamic",{"_index":631,"title":{},"body":{"classes/BaseColumn.html":{},"dependencies.html":{}}}],["e.resource",{"_index":2158,"title":{},"body":{"injectables/ObservationService.html":{}}}],["e.url",{"_index":2460,"title":{},"body":{"injectables/SmartService.html":{}}}],["each",{"_index":147,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"index.html":{}}}],["earliest",{"_index":1692,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["ears",{"_index":2149,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ease",{"_index":2598,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["edge",{"_index":1859,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["effective",{"_index":579,"title":{},"body":{"injectables/AssociationService.html":{}}}],["effectivedatetime",{"_index":503,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["el",{"_index":592,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["elapsed",{"_index":1421,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["electrolytes",{"_index":243,"title":{},"body":{"components/AccountComponent.html":{}}}],["element",{"_index":154,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["elementref",{"_index":589,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/ContextMenuComponent.html":{},"directives/HighlightDirective.html":{},"components/ToolbarComponent.html":{}}}],["elements",{"_index":916,"title":{},"body":{"classes/Chart.html":{},"components/ConditionsComponent.html":{}}}],["ellipsestoggle",{"_index":1056,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["elref",{"_index":2582,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["empty",{"_index":862,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{}}}],["emsp",{"_index":1866,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["enableprodmode",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["enc",{"_index":2344,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getlogvalue()/5",{"_index":2542,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.getreason",{"_index":2346,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getstartdate",{"_index":2546,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.position",{"_index":2541,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encodeuri(request",{"_index":2513,"title":{},"body":{"injectables/SmartService.html":{}}}],["encodeuri(this.redirecturi",{"_index":2486,"title":{},"body":{"injectables/SmartService.html":{}}}],["encounter",{"_index":1485,"title":{"classes/Encounter.html":{}},"body":{"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{},"index.html":{}}}],["encounter.getreason",{"_index":2563,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["encounters",{"_index":1526,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["encounters.foreach(enc",{"_index":2540,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encounterservice",{"_index":385,"title":{"injectables/EncounterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["end",{"_index":688,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{},"index.html":{}}}],["endpoint",{"_index":526,"title":{},"body":{"injectables/AssociationService.html":{}}}],["ent",{"_index":2153,"title":{},"body":{"injectables/ObservationService.html":{}}}],["entire",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["entry",{"_index":667,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["entry.description",{"_index":935,"title":{},"body":{"components/CheckboxInline.html":{},"components/SelectListSingle.html":{}}}],["enumerated",{"_index":1470,"title":{},"body":{"injectables/DoctorService.html":{}}}],["error",{"_index":1173,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["errors",{"_index":1148,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["even",{"_index":1224,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["event",{"_index":106,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["event.pagex",{"_index":1417,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["event.pagey",{"_index":1414,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.preventdefault",{"_index":1426,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.shiftkey",{"_index":2060,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["event.target.checked",{"_index":1962,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["event.target.innerheight",{"_index":653,"title":{},"body":{"classes/BaseColumn.html":{}}}],["eventemitter",{"_index":760,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["events",{"_index":1427,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["example",{"_index":951,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ContextMenuComponent.html":{}}}],["examples",{"_index":2799,"title":{},"body":{"index.html":{}}}],["excessive",{"_index":649,"title":{},"body":{"classes/BaseColumn.html":{}}}],["excludes",{"_index":1475,"title":{},"body":{"injectables/DoctorService.html":{}}}],["exec",{"_index":789,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["execute",{"_index":1341,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["executed",{"_index":1374,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["exist",{"_index":877,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{}}}],["existing",{"_index":875,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["exists",{"_index":1182,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["exp",{"_index":1883,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["expand",{"_index":751,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expand(parent",{"_index":769,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expected",{"_index":906,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["extends",{"_index":699,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["extra",{"_index":1764,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["extract",{"_index":542,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo",{"_index":488,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo(condition",{"_index":496,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractnewobservations",{"_index":2090,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractnewobservations(observations",{"_index":2101,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractobservationinfo",{"_index":489,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractobservationinfo(observation",{"_index":500,"title":{},"body":{"injectables/AssociationService.html":{}}}],["eyes",{"_index":2148,"title":{},"body":{"injectables/ObservationService.html":{}}}],["false",{"_index":59,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["february",{"_index":1322,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["female",{"_index":2322,"title":{},"body":{"components/PatientComponent.html":{}}}],["fhir.service",{"_index":847,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["fhirbaseurl",{"_index":2415,"title":{},"body":{"injectables/SmartService.html":{}}}],["fhirservice",{"_index":386,"title":{"injectables/FhirService.html":{}},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["field",{"_index":1175,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["fields",{"_index":559,"title":{},"body":{"injectables/AssociationService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":135,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"components/ToolbarComponent.html":{}}}],["filtering",{"_index":2604,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterscratchpad",{"_index":2578,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterset",{"_index":2085,"title":{},"body":{"injectables/ObservationService.html":{}}}],["final",{"_index":2004,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["find",{"_index":1862,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["findgetparameter",{"_index":2421,"title":{},"body":{"injectables/SmartService.html":{}}}],["findgetparameter(parametername",{"_index":2426,"title":{},"body":{"injectables/SmartService.html":{}}}],["finding",{"_index":346,"title":{},"body":{"components/AddObservation.html":{}}}],["findings",{"_index":319,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["finished",{"_index":729,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["first",{"_index":108,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/SmartService.html":{}}}],["firstiteration",{"_index":26,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["fit",{"_index":1712,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["fix",{"_index":2495,"title":{},"body":{"injectables/SmartService.html":{}}}],["fixed",{"_index":1535,"title":{},"body":{"injectables/EncounterService.html":{}}}],["fixed[prop",{"_index":1537,"title":{},"body":{"injectables/EncounterService.html":{}}}],["focus",{"_index":596,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["folder",{"_index":2742,"title":{},"body":{"index.html":{}}}],["following",{"_index":1841,"title":{},"body":{"components/HoverBoxComponent.html":{},"index.html":{}}}],["follows",{"_index":75,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["foo",{"_index":1631,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["force",{"_index":2743,"title":{},"body":{"index.html":{}}}],["form",{"_index":182,"title":{"classes/Form.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["format",{"_index":128,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{}}}],["formbuilder",{"_index":181,"title":{"components/FormBuilder.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcreatormodule",{"_index":381,"title":{"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["forminput",{"_index":1583,"title":{},"body":{"components/FormBuilder.html":{}}}],["forms",{"_index":1578,"title":{},"body":{"components/FormBuilder.html":{}}}],["formsmodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["found",{"_index":2134,"title":{},"body":{"injectables/ObservationService.html":{}}}],["fromevent",{"_index":623,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(document",{"_index":1429,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(window",{"_index":645,"title":{},"body":{"classes/BaseColumn.html":{}}}],["front",{"_index":2703,"title":{},"body":{"index.html":{}}}],["fullpath",{"_index":1168,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["function",{"_index":122,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["function(condition",{"_index":1303,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["function(data",{"_index":1340,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["function(obs",{"_index":2255,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["functionality",{"_index":630,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["functions",{"_index":790,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["g",{"_index":2732,"title":{},"body":{"index.html":{}}}],["gender",{"_index":2274,"title":{},"body":{"classes/Patient.html":{}}}],["genderstring",{"_index":2292,"title":{},"body":{"components/PatientComponent.html":{}}}],["genderstring(patient",{"_index":2295,"title":{},"body":{"components/PatientComponent.html":{}}}],["generalchange",{"_index":301,"title":{},"body":{"components/AccountComponent.html":{}}}],["generally",{"_index":914,"title":{},"body":{"classes/Chart.html":{}}}],["generate",{"_index":1469,"title":{},"body":{"injectables/DoctorService.html":{}}}],["generic",{"_index":2796,"title":{},"body":{"index.html":{}}}],["getassociations",{"_index":490,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations(checkedconditions",{"_index":504,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcheckedconditions",{"_index":987,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getcheckedobservations",{"_index":2091,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getcode",{"_index":2010,"title":{},"body":{"classes/Observation.html":{}}}],["getcolumnstate",{"_index":988,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getdata",{"_index":925,"title":{},"body":{"components/CheckboxInline.html":{},"components/FormBuilder.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["getdaterange",{"_index":1721,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdaterange(chart",{"_index":1730,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdatestring",{"_index":1268,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getdatestring(c",{"_index":1284,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getenddate",{"_index":1489,"title":{},"body":{"classes/Encounter.html":{}}}],["getforms",{"_index":1580,"title":{},"body":{"components/FormBuilder.html":{}}}],["getgrouping",{"_index":2092,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getgrouping(code",{"_index":2104,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getlevel",{"_index":2046,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["getlogvalue",{"_index":1490,"title":{},"body":{"classes/Encounter.html":{}}}],["getreason",{"_index":1491,"title":{},"body":{"classes/Encounter.html":{}}}],["getrequestoptions",{"_index":1542,"title":{},"body":{"injectables/FhirService.html":{}}}],["getrequestoptions(withauth",{"_index":1547,"title":{},"body":{"injectables/FhirService.html":{}}}],["gets",{"_index":1039,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{}}}],["getscratchpadcareplans",{"_index":704,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["getscratchpadconditions",{"_index":1198,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["getscratchpadcount",{"_index":944,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["getscratchpadobservations",{"_index":2093,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getstartdate",{"_index":1492,"title":{},"body":{"classes/Encounter.html":{}}}],["getters",{"_index":1259,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["gettext",{"_index":2011,"title":{},"body":{"classes/Observation.html":{}}}],["gettext(o",{"_index":2025,"title":{},"body":{"classes/Observation.html":{}}}],["getting",{"_index":2700,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":2422,"title":{},"body":{"injectables/SmartService.html":{}}}],["getunits",{"_index":2012,"title":{},"body":{"classes/Observation.html":{}}}],["getunits(o",{"_index":2027,"title":{},"body":{"classes/Observation.html":{}}}],["geturl",{"_index":1543,"title":{},"body":{"injectables/FhirService.html":{}}}],["getvalue",{"_index":2013,"title":{},"body":{"classes/Observation.html":{}}}],["getvalue(o",{"_index":2029,"title":{},"body":{"classes/Observation.html":{}}}],["getvaluerange",{"_index":1722,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getvaluerange(chart",{"_index":1732,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["gfr",{"_index":275,"title":{},"body":{"components/AccountComponent.html":{}}}],["git",{"_index":2726,"title":{},"body":{"index.html":{}}}],["given",{"_index":852,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["giving",{"_index":2787,"title":{},"body":{"index.html":{}}}],["glitch",{"_index":1392,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["global",{"_index":1602,"title":{},"body":{"components/FormBuilder.html":{}}}],["glu",{"_index":271,"title":{},"body":{"components/AccountComponent.html":{}}}],["glyphicon",{"_index":803,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["graphconfig",{"_index":1447,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["graphdata",{"_index":2044,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["groupconditions",{"_index":1057,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouping",{"_index":2006,"title":{},"body":{"classes/Observation.html":{}}}],["groupingcount",{"_index":1076,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouplist",{"_index":2129,"title":{},"body":{"injectables/ObservationService.html":{}}}],["groupmap",{"_index":2086,"title":{},"body":{"injectables/ObservationService.html":{}}}],["grow.directive.ts",{"_index":584,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["grow.directive.ts:10",{"_index":591,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:15",{"_index":594,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:19",{"_index":593,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grunt",{"_index":2710,"title":{},"body":{"index.html":{}}}],["guaranteed",{"_index":131,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["guidelines",{"_index":2757,"title":{},"body":{"index.html":{}}}],["handle",{"_index":656,"title":{},"body":{"classes/BaseColumn.html":{}}}],["handledocclick",{"_index":1355,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handledocclick(event",{"_index":1365,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleobservationbundle",{"_index":2094,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleobservationbundle(bundle",{"_index":2110,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleoptionclick",{"_index":1356,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleoptionclick(option",{"_index":1371,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleresize",{"_index":609,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handleresize(event",{"_index":618,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handlers",{"_index":2056,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["handles",{"_index":1373,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsComponent.html":{}}}],["hardcode",{"_index":1861,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hardcoded",{"_index":1773,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["hashing",{"_index":2496,"title":{},"body":{"injectables/SmartService.html":{}}}],["hasing\")).tostring",{"_index":2501,"title":{},"body":{"injectables/SmartService.html":{}}}],["hba1c",{"_index":270,"title":{},"body":{"components/AccountComponent.html":{}}}],["hdl",{"_index":261,"title":{},"body":{"components/AccountComponent.html":{}}}],["headers",{"_index":1561,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["headers.append('authorization",{"_index":1564,"title":{},"body":{"injectables/FhirService.html":{}}}],["headings",{"_index":83,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["heart",{"_index":2139,"title":{},"body":{"injectables/ObservationService.html":{}}}],["height",{"_index":332,"title":{},"body":{"components/AddObservation.html":{},"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{}}}],["height_offset",{"_index":608,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["here",{"_index":84,"title":{},"body":{"components/AccordionRecursion.html":{},"components/PatientComponent.html":{}}}],["hide",{"_index":1357,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hide(event",{"_index":1377,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hiding",{"_index":1385,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["high",{"_index":918,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{}}}],["highlight",{"_index":234,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["highlightdirective",{"_index":233,"title":{"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["highlighted",{"_index":1012,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{}}}],["highlighttext",{"_index":1626,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["hii",{"_index":2749,"title":{},"body":{"index.html":{}}}],["historical",{"_index":307,"title":{},"body":{"components/AccountComponent.html":{}}}],["historicaltrends",{"_index":1633,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrends'},{'name",{"_index":185,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["historicaltrends.html",{"_index":1634,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrendscomponent",{"_index":184,"title":{"components/HistoricalTrendsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["historicaltrendsservice",{"_index":387,"title":{"injectables/HistoricalTrendsService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["history",{"_index":2142,"title":{},"body":{"injectables/ObservationService.html":{}}}],["home",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":187,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["home.html",{"_index":1803,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":186,"title":{"components/HomeComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["horizontal",{"_index":912,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["host",{"_index":595,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["hover",{"_index":1821,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["hoverbox",{"_index":1824,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["hoverbox'},{'name",{"_index":189,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["hoverbox.component.ts",{"_index":2801,"title":{},"body":{"index.html":{}}}],["hoverbox.html",{"_index":1825,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hoverbox/hoverbox.component",{"_index":2314,"title":{},"body":{"components/PatientComponent.html":{}}}],["hoverboxcomponent",{"_index":188,"title":{"components/HoverBoxComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hoverstyling",{"_index":2291,"title":{},"body":{"components/PatientComponent.html":{}}}],["hspc",{"_index":2748,"title":{},"body":{"index.html":{}}}],["html",{"_index":153,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["http",{"_index":495,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["http://ec2",{"_index":513,"title":{},"body":{"injectables/AssociationService.html":{}}}],["http://fhir",{"_index":2461,"title":{},"body":{"injectables/SmartService.html":{}}}],["http://localhost:9000",{"_index":2441,"title":{},"body":{"injectables/SmartService.html":{}}}],["httpclient",{"_index":493,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["httpclientmodule",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1558,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["httpheaders({'accept",{"_index":1562,"title":{},"body":{"injectables/FhirService.html":{}}}],["https://github.com/hii",{"_index":2728,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/45594609/which",{"_index":1013,"title":{},"body":{"injectables/ConditionService.html":{}}}],["humanizebytes",{"_index":1871,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["humanizebytespipe",{"_index":1868,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["icon",{"_index":802,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["icons",{"_index":1442,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["id",{"_index":353,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"components/HomeComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Patient.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"classes/User.html":{}}}],["id.type",{"_index":2377,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.type.coding[0].code",{"_index":2378,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.value",{"_index":2380,"title":{},"body":{"injectables/PatientService.html":{}}}],["id=\"tableparentele",{"_index":1190,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["identifier",{"_index":2275,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["ie",{"_index":636,"title":{},"body":{"classes/BaseColumn.html":{},"index.html":{}}}],["implement",{"_index":967,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["implemented",{"_index":1225,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["implements",{"_index":674,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Observation.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["imports",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["inactive",{"_index":144,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1310,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/TripleListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["information",{"_index":1800,"title":{},"body":{"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["inherited",{"_index":710,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["initial",{"_index":309,"title":{},"body":{"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{}}}],["initialize",{"_index":932,"title":{},"body":{"components/CheckboxInline.html":{},"components/ConditionsComponent.html":{}}}],["initialized",{"_index":109,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["injectable",{"_index":482,"title":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"coverage.html":{}}}],["injectables",{"_index":483,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"overview.html":{}}}],["inline",{"_index":921,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline'},{'name",{"_index":170,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["inline.component",{"_index":1617,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["inline.component.ts",{"_index":920,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["inline.component.ts:10",{"_index":930,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:11",{"_index":931,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:13",{"_index":929,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:20",{"_index":928,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:9",{"_index":927,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.html",{"_index":922,"title":{},"body":{"components/CheckboxInline.html":{}}}],["input",{"_index":62,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["input('highlighttext",{"_index":1628,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["input[prop",{"_index":1538,"title":{},"body":{"injectables/EncounterService.html":{}}}],["inputdata",{"_index":926,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.name",{"_index":934,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.status",{"_index":2397,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["install",{"_index":2679,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["installed",{"_index":2718,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1145,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["instructions",{"_index":2737,"title":{},"body":{"index.html":{}}}],["interface",{"_index":478,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":480,"title":{},"body":{"interfaces/Associable.html":{}}}],["internal",{"_index":1130,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["interval",{"_index":1420,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["invalid",{"_index":1684,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["isallchecked",{"_index":746,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ischecked",{"_index":1305,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["isconditionassociated",{"_index":1269,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionassociated(condition",{"_index":1286,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked",{"_index":1270,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked(condition",{"_index":1288,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected",{"_index":1271,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected(condition",{"_index":1290,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isdate",{"_index":1830,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isdate(x",{"_index":1834,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth",{"_index":1831,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth(x",{"_index":1836,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isn't",{"_index":2033,"title":{},"body":{"classes/Observation.html":{}}}],["isobservationassociated",{"_index":2226,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationassociated(observation",{"_index":2240,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked",{"_index":2227,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked(observation",{"_index":2242,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isparent",{"_index":971,"title":{},"body":{"classes/Condition.html":{}}}],["isvisible",{"_index":972,"title":{},"body":{"classes/Condition.html":{}}}],["it's",{"_index":1177,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["item",{"_index":1865,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["item.split",{"_index":2516,"title":{},"body":{"injectables/SmartService.html":{}}}],["items",{"_index":953,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HoverBoxComponent.html":{}}}],["iteration",{"_index":1473,"title":{},"body":{"injectables/DoctorService.html":{}}}],["itself",{"_index":1738,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["january",{"_index":1321,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["john",{"_index":299,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["jquery",{"_index":1218,"title":{},"body":{"components/ConditionsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":1129,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{},"index.html":{}}}],["json.parse(json.stringify(this.conditions",{"_index":1122,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["json.parse(this.cookieservice.get('graphconfig",{"_index":2317,"title":{},"body":{"components/PatientComponent.html":{}}}],["json.stringify(this.graphconfig",{"_index":1484,"title":{},"body":{"injectables/DoctorService.html":{}}}],["july",{"_index":1326,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["june",{"_index":1325,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["justcreated",{"_index":1195,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["keep",{"_index":1672,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["keeps",{"_index":633,"title":{},"body":{"classes/BaseColumn.html":{}}}],["key",{"_index":2215,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["kidneyfunction",{"_index":244,"title":{},"body":{"components/AccountComponent.html":{}}}],["know",{"_index":1040,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lab",{"_index":323,"title":{},"body":{"components/AccountComponent.html":{}}}],["largest",{"_index":1786,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["last",{"_index":1045,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lastindex",{"_index":2045,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["latest",{"_index":1693,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["launch",{"_index":2416,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["layout",{"_index":2714,"title":{},"body":{"index.html":{}}}],["ldl",{"_index":260,"title":{},"body":{"components/AccountComponent.html":{}}}],["leave",{"_index":1480,"title":{},"body":{"injectables/DoctorService.html":{}}}],["leaving",{"_index":2777,"title":{},"body":{"index.html":{}}}],["left",{"_index":1350,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["leftoffset",{"_index":1827,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["leftposition",{"_index":2571,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["legend",{"_index":152,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["level",{"_index":71,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HomeComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["leveldata",{"_index":27,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["levelnum",{"_index":28,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["libraries",{"_index":2773,"title":{},"body":{"index.html":{}}}],["library",{"_index":1443,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["license",{"_index":2802,"title":{},"body":{"index.html":{}}}],["line",{"_index":816,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["linear",{"_index":305,"title":{},"body":{"components/AccountComponent.html":{}}}],["linechartdata",{"_index":892,"title":{},"body":{"classes/Chart.html":{}}}],["lines",{"_index":913,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["link",{"_index":668,"title":{"classes/Link.html":{}},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["link.relation",{"_index":1032,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["links",{"_index":2208,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["linux",{"_index":2738,"title":{},"body":{"index.html":{}}}],["list",{"_index":87,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["listdata",{"_index":2402,"title":{},"body":{"components/SelectListSingle.html":{}}}],["lists",{"_index":1463,"title":{},"body":{"injectables/DoctorService.html":{},"components/TripleListComponent.html":{}}}],["lite",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["literal",{"_index":354,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"injectables/FhirService.html":{},"classes/Medication.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["liverfunction",{"_index":245,"title":{},"body":{"components/AccountComponent.html":{}}}],["load",{"_index":728,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{}}}],["loadallergies",{"_index":989,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["loadallergies(patient",{"_index":996,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadcareplans",{"_index":839,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadcareplans(patient",{"_index":842,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadconditions",{"_index":990,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditions(patient",{"_index":998,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage",{"_index":991,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage(url",{"_index":1000,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loaded",{"_index":1196,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["loadencounters",{"_index":1516,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["loadencounters(patient",{"_index":1521,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage",{"_index":1517,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage(url",{"_index":1523,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loader",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["loadfinished",{"_index":16,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["loading",{"_index":191,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["loadinganimation",{"_index":190,"title":{"components/LoadingAnimation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadinganimation.html",{"_index":1892,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["loadmedications",{"_index":840,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadmedications(patient",{"_index":845,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadobservationspage",{"_index":2095,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadobservationspage(url",{"_index":2112,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadpatient",{"_index":2364,"title":{},"body":{"injectables/PatientService.html":{}}}],["locally",{"_index":2782,"title":{},"body":{"index.html":{}}}],["location",{"_index":1412,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["location.search.substr(1).split(\"&\").foreach(item",{"_index":2515,"title":{},"body":{"injectables/SmartService.html":{}}}],["logarithmic",{"_index":306,"title":{},"body":{"components/AccountComponent.html":{}}}],["logic",{"_index":1135,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{}}}],["long",{"_index":1149,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["longer",{"_index":1382,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["losing",{"_index":814,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["low",{"_index":917,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["lower",{"_index":2062,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["m.name",{"_index":1965,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["mac",{"_index":2735,"title":{},"body":{"index.html":{}}}],["magnesium",{"_index":269,"title":{},"body":{"components/AccountComponent.html":{}}}],["main_list",{"_index":1574,"title":{},"body":{"components/FormBuilder.html":{}}}],["maintaining",{"_index":813,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["make",{"_index":1234,"title":{},"body":{"components/ConditionsComponent.html":{},"index.html":{}}}],["male",{"_index":2324,"title":{},"body":{"components/PatientComponent.html":{}}}],["manager",{"_index":2716,"title":{},"body":{"index.html":{}}}],["map",{"_index":510,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/PatientService.html":{}}}],["mapping",{"_index":2107,"title":{},"body":{"injectables/ObservationService.html":{}}}],["mappings",{"_index":2203,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["maps",{"_index":529,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mapservice",{"_index":388,"title":{"injectables/MapService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapservice.static_mappings",{"_index":2217,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["march",{"_index":1323,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["mark",{"_index":549,"title":{},"body":{"injectables/AssociationService.html":{}}}],["matching",{"_index":237,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(recency_multiplier",{"_index":1246,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["math.log(this.getstartdate().gettime",{"_index":1513,"title":{},"body":{"classes/Encounter.html":{}}}],["math.max(max",{"_index":1792,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.min(min",{"_index":1790,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.pow(1024",{"_index":1882,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["max",{"_index":1682,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate",{"_index":1636,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate.gettime",{"_index":1795,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["maximum",{"_index":909,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["md5",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["md5.hashstr(\"testing",{"_index":2500,"title":{},"body":{"injectables/SmartService.html":{}}}],["md5/dist/md5",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{}}}],["med",{"_index":878,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["med.periods.push",{"_index":882,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication",{"_index":848,"title":{"classes/Medication.html":{}},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"coverage.html":{}}}],["medication(cp.title",{"_index":880,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication.dosageunits",{"_index":1781,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.name",{"_index":1780,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.periods[i",{"_index":1782,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medicationmap",{"_index":871,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.get(cp.title",{"_index":879,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.set(cp.title",{"_index":887,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medications",{"_index":863,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{}}}],["medications'},{'name",{"_index":194,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["medications.html",{"_index":1951,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["medicationscomponent",{"_index":193,"title":{"components/MedicationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menu",{"_index":747,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["merged",{"_index":868,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["method",{"_index":1125,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["methods",{"_index":18,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["min",{"_index":1681,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mindate",{"_index":1637,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["minimum",{"_index":908,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["miscellaneous",{"_index":2810,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":327,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["model",{"_index":127,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["model.code",{"_index":347,"title":{},"body":{"components/AddObservation.html":{}}}],["models",{"_index":2764,"title":{},"body":{"index.html":{}}}],["models/allergyintolerance.model",{"_index":1011,"title":{},"body":{"injectables/ConditionService.html":{}}}],["models/bundle.model",{"_index":850,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["models/careplan.model",{"_index":725,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{}}}],["models/chart.model",{"_index":1737,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["models/condition.model",{"_index":523,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["models/contextmenuoption.model",{"_index":1404,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["models/encounter.model",{"_index":1525,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["models/form.model",{"_index":1601,"title":{},"body":{"components/FormBuilder.html":{}}}],["models/medication.model",{"_index":849,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{}}}],["models/observation.model",{"_index":524,"title":{},"body":{"injectables/AssociationService.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["models/patient.model",{"_index":726,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["models/server.model",{"_index":2315,"title":{},"body":{"components/PatientComponent.html":{}}}],["modified",{"_index":1138,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["modifiers",{"_index":1460,"title":{},"body":{"injectables/DoctorService.html":{}}}],["module",{"_index":368,"title":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["modules",{"_index":370,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"dependencies.html":{}}}],["moment().subtract(months",{"_index":1706,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().subtract(years",{"_index":1703,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().todate",{"_index":1705,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.maxdate).isvalid",{"_index":1686,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.mindate).isvalid",{"_index":1685,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(newdate).toisostring",{"_index":1119,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["moment(relativedatetime).toisostring",{"_index":1250,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["momentmodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":312,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["months",{"_index":1320,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["months').todate",{"_index":1707,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["months[d.getmonth",{"_index":1332,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["more",{"_index":1236,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["mouse",{"_index":1670,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["mouseevent",{"_index":1638,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["mousemove",{"_index":1674,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mousesubscription",{"_index":1639,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mouth",{"_index":2151,"title":{},"body":{"injectables/ObservationService.html":{}}}],["movements",{"_index":1671,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moving",{"_index":1857,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["mr",{"_index":2379,"title":{},"body":{"injectables/PatientService.html":{}}}],["mrn",{"_index":2276,"title":{},"body":{"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["ms",{"_index":1840,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["multiple",{"_index":866,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["n",{"_index":1875,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["n1.code['coding'][0]['code",{"_index":1108,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n1.effectivedatetime",{"_index":2168,"title":{},"body":{"injectables/ObservationService.html":{}}}],["n1.onsetdatetime",{"_index":1110,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2",{"_index":1107,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{}}}],["n2.code['coding'][0]['code",{"_index":1109,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2.onsetdatetime",{"_index":1111,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["nav2",{"_index":2577,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["navigation",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1215,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["need",{"_index":1481,"title":{},"body":{"injectables/DoctorService.html":{},"components/HoverBoxComponent.html":{}}}],["needed",{"_index":1383,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["needs",{"_index":1465,"title":{},"body":{"injectables/DoctorService.html":{}}}],["new",{"_index":511,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["newcolumnstate",{"_index":1004,"title":{},"body":{"injectables/ConditionService.html":{}}}],["newcondition",{"_index":195,"title":{"components/NewCondition.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newcondition'},{'name",{"_index":196,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["newcondition.html",{"_index":1967,"title":{},"body":{"components/NewCondition.html":{}}}],["newdate",{"_index":1115,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newly",{"_index":1774,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["newtable",{"_index":1058,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtable(tablename",{"_index":1073,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtoken",{"_index":1553,"title":{},"body":{"injectables/FhirService.html":{}}}],["next",{"_index":1020,"title":{},"body":{"injectables/ConditionService.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["nextlink",{"_index":1030,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["nextobservations",{"_index":2157,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ngafterviewinit",{"_index":752,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ngmodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["ngonchanges",{"_index":20,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["ngoninit",{"_index":753,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{}}}],["ngx",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"injectables/DoctorService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":2717,"title":{},"body":{"index.html":{}}}],["none",{"_index":1184,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["normal",{"_index":198,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["normalbox1",{"_index":197,"title":{"components/NormalBox1.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalbox2",{"_index":201,"title":{"components/NormalBox2.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalvalues",{"_index":893,"title":{},"body":{"classes/Chart.html":{}}}],["nose",{"_index":2150,"title":{},"body":{"injectables/ObservationService.html":{}}}],["note",{"_index":74,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["notenavigation",{"_index":1983,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["notenavigation'},{'name",{"_index":204,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["notenavigation.html",{"_index":1984,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["notenavigationcomponent",{"_index":203,"title":{"components/NoteNavigationComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nothing",{"_index":1683,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["november",{"_index":1330,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["now",{"_index":112,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{}}}],["npm",{"_index":2715,"title":{},"body":{"index.html":{}}}],["null",{"_index":85,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["number",{"_index":39,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"classes/User.html":{}}}],["numeric",{"_index":1747,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["o",{"_index":555,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["o.date",{"_index":2067,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["o.id",{"_index":2262,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.name",{"_index":2065,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["o.relativedatetime",{"_index":2270,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.value",{"_index":2066,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["o['code']['coding'][0]['display",{"_index":2039,"title":{},"body":{"classes/Observation.html":{}}}],["o['code']['text",{"_index":2038,"title":{},"body":{"classes/Observation.html":{}}}],["o['selected",{"_index":2261,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o['valuequantity']['unit",{"_index":2037,"title":{},"body":{"classes/Observation.html":{}}}],["o['valuequantity']['value",{"_index":2035,"title":{},"body":{"classes/Observation.html":{}}}],["ob",{"_index":2174,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ob.relativedatetime",{"_index":2176,"title":{},"body":{"injectables/ObservationService.html":{}}}],["object",{"_index":344,"title":{},"body":{"components/AddObservation.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["object.keys(observationsbycategory",{"_index":2195,"title":{},"body":{"injectables/ObservationService.html":{}}}],["obs",{"_index":2047,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["obs.isselected",{"_index":2057,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observable",{"_index":844,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/PatientService.html":{}}}],["observable.concat",{"_index":1027,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observables",{"_index":1016,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observation",{"_index":501,"title":{"classes/Observation.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["observation.category[0].text",{"_index":2189,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.gettext(o",{"_index":2267,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getunits(o",{"_index":2269,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getvalue(o",{"_index":2268,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.grouping",{"_index":2178,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('category",{"_index":2187,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('valuequantity",{"_index":2186,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.service",{"_index":522,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation?patient",{"_index":2219,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observation['code']['coding'][0]['code",{"_index":580,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ObservationService.html":{}}}],["observation['code']['coding'][0]['system",{"_index":581,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation['effectivedatetime",{"_index":582,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationcategory",{"_index":2188,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationrecursion",{"_index":2042,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observationrecursion'},{'name",{"_index":206,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursion.html",{"_index":2043,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observationrecursionchart",{"_index":2070,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationrecursionchart'},{'name",{"_index":208,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursive",{"_index":205,"title":{"components/ObservationRecursive.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationrecursivechart",{"_index":207,"title":{"components/ObservationRecursiveChart.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationreturned",{"_index":2214,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations",{"_index":92,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/TripleListComponent.html":{}}}],["observations'},{'name",{"_index":210,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observations.html",{"_index":2202,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations.map(this.extractobservationinfo",{"_index":567,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationsbycategory",{"_index":2185,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory.hasownproperty(observationcategory",{"_index":2190,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[ctgry",{"_index":2197,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory",{"_index":2191,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory].push(observation",{"_index":2192,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationschart.html",{"_index":2071,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationscomponent",{"_index":209,"title":{"components/ObservationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay",{"_index":211,"title":{"components/ObservationsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay'},{'name",{"_index":212,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationsdisplay.html",{"_index":2223,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationselected",{"_index":2229,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationservice",{"_index":31,"title":{"injectables/ObservationService.html":{}},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsinfo",{"_index":566,"title":{},"body":{"injectables/AssociationService.html":{}}}],["occurrence",{"_index":1754,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["occurs",{"_index":2450,"title":{},"body":{"injectables/SmartService.html":{}}}],["october",{"_index":1329,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["of(conditions",{"_index":1035,"title":{},"body":{"injectables/ConditionService.html":{}}}],["of(encounters",{"_index":1531,"title":{},"body":{"injectables/EncounterService.html":{}}}],["onblur",{"_index":586,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["once",{"_index":968,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"index.html":{}}}],["onchanges",{"_index":1132,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ondatapointselect",{"_index":1640,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["ondatapointselect(chartevent",{"_index":1649,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["one",{"_index":869,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["onfocus",{"_index":587,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["onloadcomplete",{"_index":1199,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["onradiochanged",{"_index":2385,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onradiochanged(currstatus",{"_index":2388,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onset",{"_index":574,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{}}}],["onsetdatetime",{"_index":499,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Condition.html":{}}}],["onsubmitclick",{"_index":1585,"title":{},"body":{"components/FormBuilder.html":{}}}],["onto",{"_index":2340,"title":{},"body":{"components/PatientComponent.html":{}}}],["opacity",{"_index":2595,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["open",{"_index":811,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["open(encounter",{"_index":2552,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["opened",{"_index":1394,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["openid",{"_index":2443,"title":{},"body":{"injectables/SmartService.html":{}}}],["operator",{"_index":1014,"title":{},"body":{"injectables/ConditionService.html":{}}}],["option",{"_index":1302,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["option.exec",{"_index":1431,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.exec(this.data",{"_index":1433,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.text",{"_index":1437,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["options",{"_index":797,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["options).pipe(map(res",{"_index":2374,"title":{},"body":{"injectables/PatientService.html":{}}}],["order",{"_index":1216,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["other_grouping",{"_index":2183,"title":{},"body":{"injectables/ObservationService.html":{}}}],["otherwise",{"_index":1507,"title":{},"body":{"classes/Encounter.html":{}}}],["out",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"injectables/SmartService.html":{},"overview.html":{}}}],["output",{"_index":63,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["outputs",{"_index":755,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{}}}],["outside",{"_index":1369,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["over",{"_index":865,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["overridden",{"_index":2199,"title":{},"body":{"injectables/ObservationService.html":{}}}],["overriden",{"_index":654,"title":{},"body":{"classes/BaseColumn.html":{}}}],["overview",{"_index":2788,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oxygen_saturation",{"_index":338,"title":{},"body":{"components/AddObservation.html":{}}}],["p1.name",{"_index":1758,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2",{"_index":1757,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2.name",{"_index":1759,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["package",{"_index":2664,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":638,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["paddedtable",{"_index":293,"title":{},"body":{"components/AccountComponent.html":{}}}],["paddedtd",{"_index":291,"title":{},"body":{"components/AccountComponent.html":{}}}],["padding:10px",{"_index":292,"title":{},"body":{"components/AccountComponent.html":{}}}],["page",{"_index":1021,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/PatientComponent.html":{}}}],["pages",{"_index":1023,"title":{},"body":{"injectables/ConditionService.html":{}}}],["paginated",{"_index":1018,"title":{},"body":{"injectables/ConditionService.html":{}}}],["param",{"_index":1407,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["parameter",{"_index":1376,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["parametername",{"_index":2428,"title":{},"body":{"injectables/SmartService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["parent",{"_index":771,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["parsed",{"_index":102,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseddata",{"_index":17,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseint(left.replace(/px",{"_index":2613,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["parseint(top.replace(/px",{"_index":2616,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["particularly",{"_index":2789,"title":{},"body":{"index.html":{}}}],["pass",{"_index":1472,"title":{},"body":{"injectables/DoctorService.html":{}}}],["passed",{"_index":1375,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["password",{"_index":302,"title":{},"body":{"components/AccountComponent.html":{}}}],["path",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["patient",{"_index":705,"title":{"classes/Patient.html":{}},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["patient'},{'name",{"_index":214,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["patient.birthdate",{"_index":2354,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender",{"_index":2320,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender.charat(0).touppercase",{"_index":2351,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.html",{"_index":2288,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.id",{"_index":855,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["patient.mrn",{"_index":2352,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["patient.name[0].family[0",{"_index":2358,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0",{"_index":2357,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0",{"_index":2350,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient_viewer",{"_index":2731,"title":{},"body":{"index.html":{}}}],["patientcomponent",{"_index":213,"title":{"components/PatientComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["patientid",{"_index":2363,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientservice",{"_index":389,"title":{"injectables/PatientService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["pencil",{"_index":804,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["period",{"_index":676,"title":{},"body":{"classes/CarePlan.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{}}}],["periods",{"_index":867,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["persona",{"_index":2752,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1867,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(concatmap(bundle",{"_index":1029,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["pipe(debouncetime(100",{"_index":646,"title":{},"body":{"classes/BaseColumn.html":{}}}],["pipe(map(bundle",{"_index":858,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["pipes",{"_index":1869,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pipetransform",{"_index":1880,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pixel",{"_index":1863,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["pixels",{"_index":660,"title":{},"body":{"classes/BaseColumn.html":{},"components/HoverBoxComponent.html":{}}}],["place",{"_index":2791,"title":{},"body":{"index.html":{}}}],["plan",{"_index":805,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/MedicationsComponent.html":{}}}],["plans",{"_index":95,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/HomeComponent.html":{}}}],["please",{"_index":2482,"title":{},"body":{"injectables/SmartService.html":{}}}],["point",{"_index":1708,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["point.name",{"_index":1796,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.name.gettime",{"_index":1794,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.value",{"_index":1791,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity",{"_index":1748,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity['value",{"_index":1749,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["points",{"_index":904,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["popover",{"_index":1263,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["populatecategories",{"_index":2096,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populatecategories(categories",{"_index":2115,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populated",{"_index":2031,"title":{},"body":{"classes/Observation.html":{}}}],["popup",{"_index":1219,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["popup'},{'name",{"_index":225,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["pos",{"_index":2545,"title":{},"body":{"components/TimelineComponent.html":{}}}],["position",{"_index":1487,"title":{},"body":{"classes/Encounter.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{}}}],["position:string",{"_index":1504,"title":{},"body":{"classes/Encounter.html":{}}}],["possible",{"_index":941,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["potassium",{"_index":265,"title":{},"body":{"components/AccountComponent.html":{}}}],["practice",{"_index":125,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prefer",{"_index":2759,"title":{},"body":{"index.html":{}}}],["preparing",{"_index":2708,"title":{},"body":{"index.html":{}}}],["presses",{"_index":2603,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["pressure",{"_index":2138,"title":{},"body":{"injectables/ObservationService.html":{}}}],["prevent",{"_index":648,"title":{},"body":{"classes/BaseColumn.html":{}}}],["preventions/exposures",{"_index":146,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prevents",{"_index":1391,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["previously",{"_index":2372,"title":{},"body":{"injectables/PatientService.html":{}}}],["print",{"_index":2347,"title":{},"body":{"components/PatientComponent.html":{}}}],["printmsg",{"_index":1272,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["printmsg(condition",{"_index":1294,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["prior",{"_index":539,"title":{},"body":{"injectables/AssociationService.html":{}}}],["private",{"_index":487,"title":{},"body":{"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{}}}],["probably",{"_index":1252,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["problem",{"_index":315,"title":{},"body":{"components/AccountComponent.html":{}}}],["problems",{"_index":143,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{}}}],["produces",{"_index":1241,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["product",{"_index":691,"title":{},"body":{"classes/CarePlan.html":{}}}],["productcodableconcept",{"_index":692,"title":{},"body":{"classes/CarePlan.html":{}}}],["productreference",{"_index":696,"title":{},"body":{"classes/CarePlan.html":{}}}],["profile",{"_index":2444,"title":{},"body":{"injectables/SmartService.html":{}}}],["progress",{"_index":2003,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["project",{"_index":2704,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1536,"title":{},"body":{"injectables/EncounterService.html":{}}}],["proper",{"_index":2342,"title":{},"body":{"components/PatientComponent.html":{}}}],["properties",{"_index":15,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{}}}],["provided",{"_index":1787,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["providers",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["provides",{"_index":629,"title":{},"body":{"classes/BaseColumn.html":{},"components/TripleListComponent.html":{}}}],["providing",{"_index":1761,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["proxy.herokuapp.com/token",{"_index":2494,"title":{},"body":{"injectables/SmartService.html":{}}}],["public",{"_index":1353,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/PatientService.html":{},"classes/Server.html":{}}}],["pug",{"_index":2253,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["purposes",{"_index":101,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"injectables/SmartService.html":{}}}],["push",{"_index":1467,"title":{},"body":{"injectables/DoctorService.html":{}}}],["pushing",{"_index":2779,"title":{},"body":{"index.html":{}}}],["px",{"_index":1415,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{}}}],["quality",{"_index":1075,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["queued",{"_index":1852,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["r",{"_index":1509,"title":{},"body":{"classes/Encounter.html":{}}}],["r.resource",{"_index":861,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["r.text",{"_index":1510,"title":{},"body":{"classes/Encounter.html":{}}}],["random",{"_index":810,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["range",{"_index":1770,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["ranges",{"_index":2032,"title":{},"body":{"classes/Observation.html":{}}}],["rate",{"_index":2140,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reactivity",{"_index":1134,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["readable",{"_index":1886,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["readonly",{"_index":2362,"title":{},"body":{"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["realistic",{"_index":1242,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["reason",{"_index":1488,"title":{},"body":{"classes/Encounter.html":{},"classes/Observation.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["reasons",{"_index":1505,"title":{},"body":{"classes/Encounter.html":{}}}],["reasontext",{"_index":2345,"title":{},"body":{"components/PatientComponent.html":{}}}],["rebuild",{"_index":123,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["recency_multiplier",{"_index":1243,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["recent",{"_index":1237,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["recompile",{"_index":2746,"title":{},"body":{"index.html":{}}}],["reconstruct",{"_index":111,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions",{"_index":21,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions(arrdata",{"_index":50,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings",{"_index":22,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings(arrdata",{"_index":52,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations",{"_index":23,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations(arrdata",{"_index":54,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructedobject",{"_index":2193,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reconstructedobject.push",{"_index":2196,"title":{},"body":{"injectables/ObservationService.html":{}}}],["recursion",{"_index":97,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["redirect",{"_index":2475,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirect_uri",{"_index":2485,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirecturi",{"_index":2417,"title":{},"body":{"injectables/SmartService.html":{}}}],["ref",{"_index":1361,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{}}}],["reference",{"_index":697,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["referencerange",{"_index":2007,"title":{},"body":{"classes/Observation.html":{}}}],["reflect",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":826,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["registry.smarthealthit.org/structuredefinition/oauth",{"_index":2462,"title":{},"body":{"injectables/SmartService.html":{}}}],["relation",{"_index":671,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["relativedatetime",{"_index":973,"title":{},"body":{"classes/Condition.html":{},"components/ConditionsComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{}}}],["relevant",{"_index":558,"title":{},"body":{"injectables/AssociationService.html":{}}}],["remain",{"_index":1024,"title":{},"body":{"injectables/ConditionService.html":{}}}],["remove",{"_index":1301,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/HistoricalTrendsService.html":{}}}],["removechart",{"_index":1723,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["removechart(chartname",{"_index":1734,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["renderer",{"_index":590,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["rendering",{"_index":1251,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["repository",{"_index":2780,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1439,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["request",{"_index":2503,"title":{},"body":{"injectables/SmartService.html":{}}}],["requestauth",{"_index":2423,"title":{},"body":{"injectables/SmartService.html":{}}}],["res",{"_index":2343,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["res['identifier",{"_index":2376,"title":{},"body":{"injectables/PatientService.html":{}}}],["res['selectedconditions",{"_index":546,"title":{},"body":{"injectables/AssociationService.html":{}}}],["res['selectedobservations",{"_index":548,"title":{},"body":{"injectables/AssociationService.html":{}}}],["reset",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetdaterange",{"_index":1641,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["resettodefaultview",{"_index":2579,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resize",{"_index":643,"title":{},"body":{"classes/BaseColumn.html":{}}}],["resizing",{"_index":632,"title":{},"body":{"classes/BaseColumn.html":{}}}],["respiration",{"_index":2141,"title":{},"body":{"injectables/ObservationService.html":{}}}],["response",{"_index":544,"title":{},"body":{"injectables/AssociationService.html":{}}}],["response_type=code",{"_index":2504,"title":{},"body":{"injectables/SmartService.html":{}}}],["result",{"_index":236,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.tofixed(0",{"_index":1885,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["result.tofixed(2",{"_index":1884,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["results",{"_index":238,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":2218,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["retrieve",{"_index":851,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{}}}],["retrieved",{"_index":2339,"title":{},"body":{"components/PatientComponent.html":{}}}],["retrieves",{"_index":1261,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["return",{"_index":569,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["reusable",{"_index":1339,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["review",{"_index":2143,"title":{},"body":{"injectables/ObservationService.html":{}}}],["right",{"_index":799,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{}}}],["root",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["router",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["routermodule",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["routing",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1150,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["runassociationstool",{"_index":491,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["runassociationstool(checkedconditions",{"_index":508,"title":{},"body":{"injectables/AssociationService.html":{}}}],["running",{"_index":2723,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":624,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":626,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["s",{"_index":2318,"title":{},"body":{"components/PatientComponent.html":{}}}],["same",{"_index":81,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{}}}],["sandbox",{"_index":1812,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["sass",{"_index":2712,"title":{},"body":{"index.html":{}}}],["save",{"_index":324,"title":{},"body":{"components/AccountComponent.html":{}}}],["savesettings",{"_index":248,"title":{},"body":{"components/AccountComponent.html":{}}}],["scale",{"_index":304,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsComponent.html":{}}}],["scaledates",{"_index":2097,"title":{},"body":{"injectables/ObservationService.html":{}}}],["scaledtimesinceconditiononset",{"_index":1245,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scaledtimesinceobservation",{"_index":2173,"title":{},"body":{"injectables/ObservationService.html":{}}}],["schema",{"_index":105,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["scope",{"_index":2418,"title":{},"body":{"injectables/SmartService.html":{}}}],["scoping",{"_index":794,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["scrachpad",{"_index":2383,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["scratch",{"_index":637,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["scratchpad",{"_index":216,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["scratchpadcheckboxes",{"_index":1059,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadcheckboxes(checked",{"_index":1080,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadconditions",{"_index":1197,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scratchpadmode",{"_index":1273,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["scratchpadservice",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scratchpadservice.statechange$.subscribe",{"_index":732,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["scratchpadupdate",{"_index":215,"title":{"components/ScratchPadUpdate.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screen",{"_index":1860,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["scripting",{"_index":2481,"title":{},"body":{"injectables/SmartService.html":{}}}],["seems",{"_index":663,"title":{},"body":{"classes/BaseColumn.html":{}}}],["select",{"_index":219,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["selectcareplan",{"_index":754,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcareplan(careplan",{"_index":774,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcondition",{"_index":1060,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selectcondition(condition",{"_index":1082,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selected",{"_index":322,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["selectedcondition",{"_index":986,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["selectedconditions",{"_index":571,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectedobservations",{"_index":572,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectlistsingle",{"_index":218,"title":{"components/SelectListSingle.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectobservation",{"_index":2228,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selectobservation(observation",{"_index":2247,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["selectpatientbyid",{"_index":1804,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectpatientbyid(id",{"_index":1807,"title":{},"body":{"components/HomeComponent.html":{}}}],["selects",{"_index":1309,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["separate",{"_index":296,"title":{},"body":{"components/AccountComponent.html":{}}}],["september",{"_index":1328,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["series",{"_index":907,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["serve",{"_index":2744,"title":{},"body":{"index.html":{}}}],["server",{"_index":1605,"title":{"classes/Server.html":{}},"body":{"components/FormBuilder.html":{},"components/PatientComponent.html":{},"classes/Server.html":{},"coverage.html":{},"dependencies.html":{}}}],["service",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["services",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["services/association.service",{"_index":1298,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/careplan.service",{"_index":723,"title":{},"body":{"components/CarePlanComponent.html":{},"components/MedicationsComponent.html":{}}}],["services/condition.service",{"_index":1099,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/doctor.service",{"_index":283,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/encounter.service",{"_index":2312,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["services/fhir.service",{"_index":722,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{}}}],["services/historicaltrends.service",{"_index":1668,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/map.service",{"_index":2213,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["services/observation.service",{"_index":65,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/patient.service",{"_index":1669,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["services/scratchpad.service",{"_index":724,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/smart.service",{"_index":1809,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/toolbar.service",{"_index":2591,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["session",{"_index":1047,"title":{},"body":{"injectables/ConditionService.html":{}}}],["set",{"_index":639,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["setcolumnstate",{"_index":992,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setcolumnstate(newcolumnstate",{"_index":1002,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setdaterange",{"_index":1642,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterange(form",{"_index":1653,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths",{"_index":1643,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths(months",{"_index":1655,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears",{"_index":1644,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears(years",{"_index":1657,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setpatientid",{"_index":2365,"title":{},"body":{"injectables/PatientService.html":{}}}],["setpatientid(patientid",{"_index":2368,"title":{},"body":{"injectables/PatientService.html":{}}}],["sets",{"_index":1702,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setters",{"_index":1260,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["settimeout",{"_index":1422,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["setting",{"_index":254,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["settings",{"_index":246,"title":{},"body":{"components/AccountComponent.html":{}}}],["settoken",{"_index":1544,"title":{},"body":{"injectables/FhirService.html":{}}}],["settoken(newtoken",{"_index":1551,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl",{"_index":1545,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl(url",{"_index":1554,"title":{},"body":{"injectables/FhirService.html":{}}}],["shift",{"_index":2058,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["shouldn't",{"_index":1772,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["show",{"_index":1358,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["show(data",{"_index":1386,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["show(items",{"_index":1838,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["showallergyhover",{"_index":2293,"title":{},"body":{"components/PatientComponent.html":{}}}],["showallergyhover(event",{"_index":2301,"title":{},"body":{"components/PatientComponent.html":{}}}],["showdefault",{"_index":610,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["showing",{"_index":1799,"title":{},"body":{"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["shown",{"_index":798,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{}}}],["showscratchpad",{"_index":611,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["si[exp",{"_index":1887,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["side",{"_index":1677,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["sieve",{"_index":137,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["similar",{"_index":2721,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1146,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{}}}],["single",{"_index":2400,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single'},{'name",{"_index":220,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["single.component",{"_index":1622,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["single.component.ts",{"_index":2399,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["single.component.ts:10",{"_index":2405,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:12",{"_index":2404,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:9",{"_index":2403,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.html",{"_index":2401,"title":{},"body":{"components/SelectListSingle.html":{}}}],["site",{"_index":2452,"title":{},"body":{"injectables/SmartService.html":{}}}],["skip",{"_index":1746,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["small",{"_index":1762,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smallest",{"_index":1785,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smartextension",{"_index":2458,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartextension[0].extension.foreach(arg",{"_index":2466,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartservice",{"_index":391,"title":{"injectables/SmartService.html":{}},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["smith",{"_index":300,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["sodium",{"_index":264,"title":{},"body":{"components/AccountComponent.html":{}}}],["sort",{"_index":1753,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["sortcondition",{"_index":1061,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["sortcondition(x",{"_index":1084,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["space",{"_index":1765,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["spacing",{"_index":297,"title":{},"body":{"components/AccountComponent.html":{}}}],["spad",{"_index":733,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["specific",{"_index":1680,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["specifically",{"_index":2739,"title":{},"body":{"index.html":{}}}],["specify",{"_index":1716,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/.../app.module.ts",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../conditions.component.ts",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts",{"_index":9,"title":{},"body":{"components/AccordionRecursion.html":{},"coverage.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:120",{"_index":55,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:128",{"_index":53,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:26",{"_index":42,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:29",{"_index":40,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:32",{"_index":43,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:35",{"_index":41,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:38",{"_index":60,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:39",{"_index":33,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:48",{"_index":48,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:71",{"_index":51,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:75",{"_index":45,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/account/account.component.ts",{"_index":239,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/components/account/account.component.ts:10",{"_index":282,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:11",{"_index":273,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:12",{"_index":263,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:13",{"_index":281,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:14",{"_index":252,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:18",{"_index":255,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:27",{"_index":257,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:33",{"_index":258,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/addobservation/addobservation.component.ts",{"_index":328,"title":{},"body":{"components/AddObservation.html":{},"coverage.html":{}}}],["src/app/components/addobservation/addobservation.component.ts:8",{"_index":345,"title":{},"body":{"components/AddObservation.html":{}}}],["src/app/components/addobservation/addobservation.component.ts:9",{"_index":331,"title":{},"body":{"components/AddObservation.html":{}}}],["src/app/components/app/app.component.ts",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/app/app.component.ts:10",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/basecolumn.ts",{"_index":605,"title":{},"body":{"classes/BaseColumn.html":{},"coverage.html":{}}}],["src/app/components/basecolumn.ts:23",{"_index":619,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:28",{"_index":620,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:29",{"_index":621,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:30",{"_index":622,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:33",{"_index":614,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:36",{"_index":617,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:39",{"_index":615,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:9",{"_index":613,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/careplan/careplan.component.ts",{"_index":698,"title":{},"body":{"components/CarePlanComponent.html":{},"coverage.html":{}}}],["src/app/components/careplan/careplan.component.ts:18",{"_index":717,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:19",{"_index":716,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:22",{"_index":715,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:25",{"_index":718,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:27",{"_index":707,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:43",{"_index":709,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:56",{"_index":708,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts",{"_index":744,"title":{},"body":{"components/CarePlanDisplay.html":{},"coverage.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:111",{"_index":763,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:21",{"_index":780,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:24",{"_index":776,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:27",{"_index":759,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:28",{"_index":761,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:30",{"_index":758,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:39",{"_index":773,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:44",{"_index":772,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:77",{"_index":775,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:85",{"_index":768,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:94",{"_index":766,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:98",{"_index":770,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts",{"_index":940,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"coverage.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:16",{"_index":949,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:22",{"_index":948,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:29",{"_index":955,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:40",{"_index":957,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:53",{"_index":952,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts",{"_index":1193,"title":{},"body":{"components/ConditionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/conditions/conditions.component.ts:122",{"_index":1205,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:131",{"_index":1202,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:30",{"_index":1211,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:33",{"_index":1207,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:34",{"_index":1210,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:37",{"_index":1209,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:39",{"_index":1213,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:40",{"_index":1206,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:41",{"_index":1208,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:44",{"_index":1212,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:46",{"_index":1201,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:47",{"_index":1200,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:73",{"_index":1203,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:87",{"_index":1204,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts",{"_index":1048,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:111",{"_index":1069,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:121",{"_index":1090,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:129",{"_index":1081,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:145",{"_index":1091,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:149",{"_index":1070,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:159",{"_index":1071,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:16",{"_index":1096,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:17",{"_index":1095,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:18",{"_index":1098,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:181",{"_index":1088,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:19",{"_index":1092,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:195",{"_index":1077,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:20",{"_index":1093,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:21",{"_index":1094,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:22",{"_index":1097,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:24",{"_index":1068,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:26",{"_index":1067,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:34",{"_index":1079,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:45",{"_index":1083,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:53",{"_index":1085,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:82",{"_index":1072,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts",{"_index":1264,"title":{},"body":{"components/ConditionsDisplay.html":{},"coverage.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:104",{"_index":1296,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:109",{"_index":1281,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:116",{"_index":1291,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:121",{"_index":1289,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:126",{"_index":1287,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:131",{"_index":1279,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:138",{"_index":1283,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:147",{"_index":1295,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:151",{"_index":1285,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:23",{"_index":1297,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:26",{"_index":1275,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:27",{"_index":1277,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:30",{"_index":1276,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:32",{"_index":1274,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:45",{"_index":1293,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:50",{"_index":1292,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts",{"_index":1338,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:113",{"_index":1372,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:133",{"_index":1378,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:28",{"_index":1401,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:33",{"_index":1397,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:35",{"_index":1403,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:36",{"_index":1402,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:37",{"_index":1400,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:43",{"_index":1388,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:50",{"_index":1390,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:51",{"_index":1360,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:58",{"_index":1364,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:67",{"_index":1366,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:82",{"_index":1387,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/form",{"_index":1571,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["src/app/components/form_components/checkbox",{"_index":919,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["src/app/components/form_components/normal",{"_index":1968,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"coverage.html":{}}}],["src/app/components/form_components/scrachpad",{"_index":2381,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["src/app/components/form_components/select",{"_index":2398,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts",{"_index":1632,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:101",{"_index":1658,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:108",{"_index":1656,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:114",{"_index":1650,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:20",{"_index":1662,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:23",{"_index":1665,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:24",{"_index":1663,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:27",{"_index":1667,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:29",{"_index":1664,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:32",{"_index":1666,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:35",{"_index":1646,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:54",{"_index":1648,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:70",{"_index":1654,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:81",{"_index":1652,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1797,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:21",{"_index":1806,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:50",{"_index":1808,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts",{"_index":1820,"title":{},"body":{"components/HoverBoxComponent.html":{},"coverage.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:13",{"_index":1844,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:16",{"_index":1851,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:18",{"_index":1849,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:19",{"_index":1845,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:20",{"_index":1850,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:21",{"_index":1846,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:24",{"_index":1847,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:27",{"_index":1832,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:37",{"_index":1839,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:69",{"_index":1833,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:89",{"_index":1835,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:97",{"_index":1837,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts",{"_index":1890,"title":{},"body":{"components/LoadingAnimation.html":{},"coverage.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts:7",{"_index":1893,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["src/app/components/medications/medications.component.ts",{"_index":1950,"title":{},"body":{"components/MedicationsComponent.html":{},"coverage.html":{}}}],["src/app/components/medications/medications.component.ts:14",{"_index":1957,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:15",{"_index":1953,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:22",{"_index":1956,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:31",{"_index":1955,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/newcondition/newcondition.component.ts",{"_index":1966,"title":{},"body":{"components/NewCondition.html":{},"coverage.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts",{"_index":1982,"title":{},"body":{"components/NoteNavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:10",{"_index":1996,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:14",{"_index":1993,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:24",{"_index":1995,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:29",{"_index":1992,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:37",{"_index":1994,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:43",{"_index":1991,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts",{"_index":2041,"title":{},"body":{"components/ObservationRecursive.html":{},"coverage.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:12",{"_index":2050,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:13",{"_index":2049,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:14",{"_index":2055,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:15",{"_index":2048,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:24",{"_index":2052,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:61",{"_index":2053,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:65",{"_index":2054,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts",{"_index":2069,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"coverage.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:13",{"_index":2074,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:14",{"_index":2073,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:15",{"_index":2072,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:20",{"_index":2078,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:24",{"_index":2079,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:29",{"_index":2076,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observations/observations.component.ts",{"_index":2201,"title":{},"body":{"components/ObservationsComponent.html":{},"coverage.html":{}}}],["src/app/components/observations/observations.component.ts:20",{"_index":2211,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:21",{"_index":2212,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:22",{"_index":2210,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:24",{"_index":2205,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:27",{"_index":2209,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:30",{"_index":2204,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:60",{"_index":2206,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts",{"_index":2222,"title":{},"body":{"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:102",{"_index":2243,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:107",{"_index":2238,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:112",{"_index":2235,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:120",{"_index":2241,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:124",{"_index":2239,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:22",{"_index":2250,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:25",{"_index":2251,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:28",{"_index":2249,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:31",{"_index":2232,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:32",{"_index":2233,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:34",{"_index":2231,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:45",{"_index":2245,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:49",{"_index":2246,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:54",{"_index":2244,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:92",{"_index":2248,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/patient/patient.component.ts",{"_index":2287,"title":{},"body":{"components/PatientComponent.html":{},"coverage.html":{}}}],["src/app/components/patient/patient.component.ts:109",{"_index":2302,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:23",{"_index":2311,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:24",{"_index":2310,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:25",{"_index":2303,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:26",{"_index":2306,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:29",{"_index":2304,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:30",{"_index":2305,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:31",{"_index":2308,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:32",{"_index":2309,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:34",{"_index":2294,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:46",{"_index":2296,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:59",{"_index":2300,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:63",{"_index":2299,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:70",{"_index":2297,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:92",{"_index":2298,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts",{"_index":2527,"title":{},"body":{"components/TimelineComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline/timeline.component.ts:13",{"_index":2534,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:14",{"_index":2531,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:18",{"_index":2533,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:22",{"_index":2532,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts",{"_index":2547,"title":{},"body":{"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:14",{"_index":2557,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:15",{"_index":2555,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:16",{"_index":2553,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:25",{"_index":2551,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts",{"_index":2575,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:27",{"_index":2584,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:28",{"_index":2583,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:41",{"_index":2588,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:45",{"_index":2587,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:52",{"_index":2585,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:63",{"_index":2586,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:67",{"_index":2590,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts",{"_index":2617,"title":{},"body":{"components/TripleListComponent.html":{},"coverage.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:16",{"_index":2620,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/directives/auto",{"_index":583,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts",{"_index":1625,"title":{},"body":{"directives/HighlightDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts:8",{"_index":1627,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["src/app/models/allergyintolerance.model.ts",{"_index":352,"title":{},"body":{"classes/AllergyIntolerance.html":{},"coverage.html":{}}}],["src/app/models/allergyintolerance.model.ts:2",{"_index":356,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/allergyintolerance.model.ts:3",{"_index":355,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/associable.model.ts",{"_index":481,"title":{},"body":{"interfaces/Associable.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts",{"_index":666,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts:3",{"_index":669,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:4",{"_index":670,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:8",{"_index":1888,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/bundle.model.ts:9",{"_index":1889,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/careplan.model.ts",{"_index":673,"title":{},"body":{"classes/CarePlan.html":{},"coverage.html":{}}}],["src/app/models/careplan.model.ts:10",{"_index":682,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:15",{"_index":679,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:4",{"_index":681,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:5",{"_index":684,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:6",{"_index":683,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:7",{"_index":680,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/chart.model.ts",{"_index":890,"title":{},"body":{"classes/Chart.html":{},"coverage.html":{}}}],["src/app/models/chart.model.ts:14",{"_index":899,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:23",{"_index":903,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:24",{"_index":902,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:28",{"_index":900,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:3",{"_index":901,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:4",{"_index":896,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:5",{"_index":897,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:8",{"_index":898,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/client.model.ts",{"_index":937,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/app/models/client.model.ts:2",{"_index":938,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/client.model.ts:3",{"_index":939,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/condition.model.ts",{"_index":969,"title":{},"body":{"classes/Condition.html":{},"coverage.html":{}}}],["src/app/models/condition.model.ts:10",{"_index":978,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:11",{"_index":981,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:12",{"_index":976,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:4",{"_index":977,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:5",{"_index":980,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:6",{"_index":982,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:7",{"_index":983,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:8",{"_index":975,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:9",{"_index":979,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/contextmenuoption.model.ts",{"_index":1438,"title":{},"body":{"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["src/app/models/contextmenuoption.model.ts:10",{"_index":1441,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:15",{"_index":1444,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:23",{"_index":1440,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/encounter.model.ts",{"_index":1486,"title":{},"body":{"classes/Encounter.html":{},"coverage.html":{}}}],["src/app/models/encounter.model.ts:11",{"_index":1498,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:16",{"_index":1495,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:18",{"_index":1496,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:29",{"_index":1501,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:3",{"_index":1493,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:4",{"_index":1497,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:44",{"_index":1502,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:45",{"_index":1499,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:47",{"_index":1500,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:6",{"_index":1494,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/form.model.ts",{"_index":1566,"title":{},"body":{"classes/Form.html":{},"coverage.html":{}}}],["src/app/models/form.model.ts:2",{"_index":1568,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:3",{"_index":1569,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:4",{"_index":1567,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/medication.model.ts",{"_index":1941,"title":{},"body":{"classes/Medication.html":{},"coverage.html":{}}}],["src/app/models/medication.model.ts:10",{"_index":1943,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:3",{"_index":1945,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:4",{"_index":1944,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:6",{"_index":1946,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/observation.model.ts",{"_index":2005,"title":{},"body":{"classes/Observation.html":{},"coverage.html":{}}}],["src/app/models/observation.model.ts:10",{"_index":2023,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:11",{"_index":2022,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:14",{"_index":2019,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:15",{"_index":2017,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:18",{"_index":2030,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:23",{"_index":2028,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:28",{"_index":2026,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:33",{"_index":2024,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:4",{"_index":2018,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:5",{"_index":2021,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:6",{"_index":2016,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:7",{"_index":2020,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:8",{"_index":2014,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:9",{"_index":2015,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/patient.model.ts",{"_index":2271,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["src/app/models/patient.model.ts:10",{"_index":2286,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:11",{"_index":2284,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:3",{"_index":2278,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:4",{"_index":2282,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:5",{"_index":2280,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:6",{"_index":2281,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:7",{"_index":2279,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:8",{"_index":2283,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:9",{"_index":2285,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/server.model.ts",{"_index":2407,"title":{},"body":{"classes/Server.html":{},"coverage.html":{}}}],["src/app/models/server.model.ts:1",{"_index":2408,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/server.model.ts:4",{"_index":2409,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/timeline.model.ts",{"_index":2519,"title":{},"body":{"classes/Timeline.html":{},"coverage.html":{}}}],["src/app/models/timeline.model.ts:2",{"_index":2523,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:3",{"_index":2524,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:4",{"_index":2522,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:5",{"_index":2520,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:6",{"_index":2521,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:7",{"_index":2526,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:8",{"_index":2525,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/user.model.ts",{"_index":2622,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:3",{"_index":2623,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":2624,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/form.module.ts",{"_index":1615,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts",{"_index":1870,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:12",{"_index":1874,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:8",{"_index":1879,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/services/association.service.ts",{"_index":484,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{}}}],["src/app/services/association.service.ts:13",{"_index":520,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:17",{"_index":512,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:18",{"_index":494,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:26",{"_index":509,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:64",{"_index":506,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:88",{"_index":497,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:97",{"_index":502,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/careplan.service.ts",{"_index":838,"title":{},"body":{"injectables/CarePlanService.html":{},"coverage.html":{}}}],["src/app/services/careplan.service.ts:16",{"_index":841,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:24",{"_index":843,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:40",{"_index":846,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/condition.service.ts",{"_index":984,"title":{},"body":{"injectables/ConditionService.html":{},"coverage.html":{}}}],["src/app/services/condition.service.ts:17",{"_index":1007,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:19",{"_index":1005,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:21",{"_index":1008,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:23",{"_index":1006,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:24",{"_index":993,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:36",{"_index":1001,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:51",{"_index":999,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:56",{"_index":994,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:63",{"_index":997,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:77",{"_index":995,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:82",{"_index":1003,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/doctor.service.ts",{"_index":1445,"title":{},"body":{"injectables/DoctorService.html":{},"coverage.html":{}}}],["src/app/services/doctor.service.ts:10",{"_index":1451,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:15",{"_index":1455,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:46",{"_index":1453,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:8",{"_index":1457,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:9",{"_index":1456,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/encounter.service.ts",{"_index":1514,"title":{},"body":{"injectables/EncounterService.html":{},"coverage.html":{}}}],["src/app/services/encounter.service.ts:15",{"_index":1518,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:22",{"_index":1524,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:39",{"_index":1522,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:46",{"_index":1520,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/fhir.service.ts",{"_index":1539,"title":{},"body":{"injectables/FhirService.html":{},"coverage.html":{}}}],["src/app/services/fhir.service.ts:10",{"_index":1557,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:12",{"_index":1550,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:16",{"_index":1555,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:20",{"_index":1552,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:24",{"_index":1548,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:5",{"_index":1546,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:9",{"_index":1556,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/historicaltrends.service.ts",{"_index":1717,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["src/app/services/historicaltrends.service.ts:12",{"_index":1724,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:138",{"_index":1735,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:147",{"_index":1733,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:165",{"_index":1731,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:17",{"_index":1728,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:80",{"_index":1726,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:9",{"_index":1736,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/map.service.ts",{"_index":1894,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/services/map.service.ts:5",{"_index":1940,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/services/observation.service.ts",{"_index":2083,"title":{},"body":{"injectables/ObservationService.html":{},"coverage.html":{}}}],["src/app/services/observation.service.ts:132",{"_index":2113,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:139",{"_index":2111,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:14",{"_index":2126,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:15",{"_index":2121,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:157",{"_index":2114,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:16",{"_index":2123,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:17",{"_index":2122,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:175",{"_index":2103,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:179",{"_index":2118,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:18",{"_index":2124,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:19",{"_index":2125,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:190",{"_index":2102,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:20",{"_index":2127,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:206",{"_index":2105,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:217",{"_index":2116,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:22",{"_index":2098,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:255",{"_index":2100,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:284",{"_index":2109,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:289",{"_index":2119,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:293",{"_index":2120,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/patient.service.ts",{"_index":2361,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/app/services/patient.service.ts:12",{"_index":2370,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:15",{"_index":2366,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:23",{"_index":2369,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:28",{"_index":2367,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/scratchpad.service.ts",{"_index":2661,"title":{},"body":{"coverage.html":{}}}],["src/app/services/smart.service.ts",{"_index":2411,"title":{},"body":{"injectables/SmartService.html":{},"coverage.html":{}}}],["src/app/services/smart.service.ts:106",{"_index":2427,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:17",{"_index":2438,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:18",{"_index":2445,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:19",{"_index":2442,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:21",{"_index":2439,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:22",{"_index":2432,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:23",{"_index":2447,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:24",{"_index":2440,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:25",{"_index":2446,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:26",{"_index":2431,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:28",{"_index":2425,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:73",{"_index":2429,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:88",{"_index":2430,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:9",{"_index":2424,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/toolbar.service.ts",{"_index":2570,"title":{},"body":{"injectables/ToolBarService.html":{},"coverage.html":{}}}],["src/app/services/toolbar.service.ts:5",{"_index":2574,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["src/app/services/toolbar.service.ts:6",{"_index":2573,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["standard",{"_index":1425,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["start",{"_index":686,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{}}}],["started",{"_index":2701,"title":{"index.html":{}},"body":{}}],["state",{"_index":635,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["state('in",{"_index":2594,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["statements",{"_index":2627,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["states",{"_index":659,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["static",{"_index":779,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["static_mappings",{"_index":1895,"title":{},"body":{"injectables/MapService.html":{}}}],["stats",{"_index":808,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["status",{"_index":677,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"classes/Observation.html":{},"components/ScratchPadUpdate.html":{},"classes/Timeline.html":{}}}],["store",{"_index":961,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["stored",{"_index":2131,"title":{},"body":{"injectables/ObservationService.html":{}}}],["storedata",{"_index":1581,"title":{},"body":{"components/FormBuilder.html":{}}}],["storedata(data",{"_index":1592,"title":{},"body":{"components/FormBuilder.html":{}}}],["stores",{"_index":905,"title":{},"body":{"classes/Chart.html":{}}}],["strange",{"_index":792,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"classes/Medication.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"injectables/ToolBarService.html":{},"classes/User.html":{}}}],["strings",{"_index":2329,"title":{},"body":{"components/PatientComponent.html":{}}}],["structure",{"_index":73,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["structures",{"_index":1044,"title":{},"body":{"injectables/ConditionService.html":{}}}],["stuff",{"_index":742,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{}}}],["style",{"_index":1575,"title":{},"body":{"components/FormBuilder.html":{},"components/ToolbarComponent.html":{}}}],["styles",{"_index":1570,"title":{},"body":{"components/FormBuilder.html":{}}}],["subheading",{"_index":78,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["subheadings",{"_index":86,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["submit",{"_index":348,"title":{},"body":{"components/AddObservation.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{}}}],["submitclick",{"_index":1582,"title":{},"body":{"components/FormBuilder.html":{}}}],["subs",{"_index":79,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["subscribe",{"_index":730,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsComponent.html":{}}}],["subscribe((bundle",{"_index":2155,"title":{},"body":{"injectables/ObservationService.html":{}}}],["subscribe((event",{"_index":650,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["subscribe(res",{"_index":537,"title":{},"body":{"injectables/AssociationService.html":{}}}],["subscribe){data",{"_index":1464,"title":{},"body":{"injectables/DoctorService.html":{}}}],["subscription",{"_index":703,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["subtracts",{"_index":1700,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["such",{"_index":550,"title":{},"body":{"injectables/AssociationService.html":{},"index.html":{}}}],["super",{"_index":627,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["support",{"_index":2805,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":2797,"title":{},"body":{"index.html":{}}}],["sure",{"_index":2497,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["svg",{"_index":2806,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":956,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["switcher",{"_index":950,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switching",{"_index":657,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["switchnav",{"_index":2580,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["switchtodefault",{"_index":945,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switchtoscratchpad",{"_index":946,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["symptoms",{"_index":2146,"title":{},"body":{"injectables/ObservationService.html":{}}}],["system",{"_index":498,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"index.html":{}}}],["system:{{condition.code.coding[0].system",{"_index":2568,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["systemjs",{"_index":2691,"title":{},"body":{"dependencies.html":{}}}],["systems",{"_index":2144,"title":{},"body":{"injectables/ObservationService.html":{}}}],["table",{"_index":1167,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["tablename",{"_index":1078,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation",{"_index":1062,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation(clickedset",{"_index":1087,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2768,"title":{},"body":{"index.html":{}}}],["taken",{"_index":864,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["takes",{"_index":68,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["telecom",{"_index":2277,"title":{},"body":{"classes/Patient.html":{}}}],["temp",{"_index":1142,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temperature",{"_index":340,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["templateurl",{"_index":12,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["temptablevar",{"_index":1160,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temptablevar.hidden",{"_index":1163,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["terminal",{"_index":2725,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":2756,"title":{},"body":{"index.html":{}}}],["test",{"_index":1856,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["tested",{"_index":2059,"title":{},"body":{"components/ObservationRecursive.html":{},"index.html":{}}}],["testing",{"_index":100,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["text",{"_index":357,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["textinputforedit",{"_index":1054,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["thanks",{"_index":2483,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.addcategoriesconditions(arrdata",{"_index":130,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.allergies",{"_index":2330,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies.length",{"_index":2334,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies[0",{"_index":2336,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergy",{"_index":2335,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.associatedmapconditions.clear",{"_index":540,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapconditions.set(c",{"_index":554,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.clear",{"_index":541,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.set(o",{"_index":557,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.associatedmapconditions.get(condition",{"_index":1317,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.associationservice.associatedmapobservations.get(observation",{"_index":2265,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.associationservice.runassociationstool(checkedconditions",{"_index":2602,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.aud",{"_index":2453,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.authorizeurl",{"_index":2471,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.base",{"_index":1559,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.boxdata",{"_index":1975,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["this.careplanloadfinished",{"_index":739,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.careplans",{"_index":738,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{}}}],["this.careplanselected.emit(this.selected",{"_index":817,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.careplanservice.loadcareplans(this.patient).subscribe(careplans",{"_index":737,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.careplanservice.loadmedications(this.patient).subscribe(medications",{"_index":1958,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.categorizedobservations",{"_index":2135,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.charts",{"_index":1777,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.delete(chartname",{"_index":1784,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(chartname",{"_index":1740,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(medication.name",{"_index":1779,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(chartname",{"_index":1776,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(medication.name",{"_index":1783,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.clicksubscription",{"_index":1428,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clicksubscription.unsubscribe",{"_index":1436,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clientid",{"_index":2506,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.closeable",{"_index":1409,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.closeable_delay",{"_index":1423,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.column",{"_index":958,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.columnstate",{"_index":959,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showdefault",{"_index":962,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showscratchpad",{"_index":963,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.updateservice",{"_index":960,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.columnheight",{"_index":640,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.columnnum",{"_index":113,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.columnstate",{"_index":734,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.columntype",{"_index":964,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.compiler.clearcache",{"_index":1810,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.conditiongrouping",{"_index":1105,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping.indexof(c",{"_index":1159,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0",{"_index":1154,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0].push(c",{"_index":1155,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1",{"_index":1156,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1].push(c",{"_index":1157,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount",{"_index":1179,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount].push(c",{"_index":1180,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.indexof(tablename",{"_index":1164,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.push(tablename",{"_index":1165,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditions",{"_index":1101,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.conditions.concat(conditions",{"_index":1226,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.filter(c",{"_index":1037,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.conditions.length",{"_index":1229,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.sort((c1",{"_index":1230,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions[value].isselected",{"_index":1140,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionselected.emit(this.selected",{"_index":1102,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionservice.conditions",{"_index":534,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.getcheckedconditions",{"_index":2600,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.conditionservice.getcolumnstate",{"_index":1300,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.loadallergies(this.patient).subscribe(allergies",{"_index":2328,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.conditionservice.loadconditions(this.patient).subscribe(conditions",{"_index":1100,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.selectedcondition",{"_index":1312,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.setcolumnstate(this.columnstate",{"_index":1258,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.cookieservice.get('state",{"_index":2476,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.get('tokenurl",{"_index":2488,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('fhirbaseurl",{"_index":2473,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('graphconfig",{"_index":1483,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.cookieservice.set('state",{"_index":2502,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('tokenurl",{"_index":2472,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.data",{"_index":1411,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.datepipe.transform(encounter.getstartdate(),'mm",{"_index":2560,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.description",{"_index":2394,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.deserialize(e['resource",{"_index":1528,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.doctorservice.addgraphconfig(this.settings",{"_index":288,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.assignvisible(this.conditions",{"_index":1123,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.doctorservice.configmode",{"_index":290,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.filter",{"_index":286,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doit(parseint(value",{"_index":1881,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["this.dosageunits",{"_index":1949,"title":{},"body":{"classes/Medication.html":{}}}],["this.el.nativeelement.textcontent",{"_index":1630,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["this.elref.nativeelement.queryselector('div').style.left",{"_index":2610,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elref.nativeelement.queryselector('div').style.top",{"_index":2611,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.encounters",{"_index":2536,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.concat(encounters",{"_index":2537,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.length",{"_index":2538,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(encounters",{"_index":2535,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(res",{"_index":2341,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.extractconditioninfo(c)['code",{"_index":552,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.extractnewobservations(nextobservations",{"_index":2161,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.extractobservationinfo(o)['code",{"_index":556,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.fhirbaseurl",{"_index":2448,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions",{"_index":857,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["this.fhirservice.getrequestoptions(false)).subscribe(data",{"_index":2457,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions(true",{"_index":2373,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.fhirservice.geturl",{"_index":853,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.fhirservice.settoken(data['access_token",{"_index":1817,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.cookieservice.get('fhirbaseurl",{"_index":1811,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.fhirbaseurl",{"_index":2456,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.token",{"_index":1813,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterset.add(code",{"_index":2181,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.filterset.has(code",{"_index":2177,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.findgetparameter(\"code",{"_index":2484,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"iss",{"_index":2449,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"launch",{"_index":2455,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter('state",{"_index":2477,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.firstiteration",{"_index":110,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.formbuilderservice.gettemplate().then(forms",{"_index":1606,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forminput",{"_index":1609,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forms",{"_index":1607,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getassociations",{"_index":536,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.getforms",{"_index":1604,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getgrouping(code",{"_index":2179,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.getscratchpadconditions",{"_index":1222,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.gettoken",{"_index":2478,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.getvaluerange(chart",{"_index":1766,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.graphconfig",{"_index":2316,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.graphconfig.push(list",{"_index":1482,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.groupconditions",{"_index":1124,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.groupmap",{"_index":2132,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.groupmap[x].indexof(code",{"_index":2182,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handledocclick(event",{"_index":1430,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.handleobservationbundle(bundle",{"_index":2156,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handleresize(event",{"_index":651,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.height_offset",{"_index":642,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.hide(event",{"_index":1434,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.hide(null",{"_index":1410,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.historicaltrendsservice.addmedicationchart(medication",{"_index":1963,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.historicaltrendsservice.removechart(medication.name",{"_index":1964,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.hover.show(this.allergies",{"_index":2349,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.hoverbox.hide(event",{"_index":2565,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverbox.show(details",{"_index":2564,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverstyling",{"_index":2337,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.http.get(url",{"_index":856,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.http.post(\"https://mongo",{"_index":2493,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.http.post(this.path",{"_index":570,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.inputdata.id",{"_index":1976,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["this.isallchecked",{"_index":833,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.items",{"_index":1855,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.justcreated",{"_index":1220,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.launch",{"_index":2454,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.left",{"_index":1416,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.level",{"_index":2081,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.leveldata",{"_index":118,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.listdata",{"_index":2406,"title":{},"body":{"components/SelectListSingle.html":{}}}],["this.loadallergies",{"_index":2326,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.loadcareplans(patient).pipe(map(careplans",{"_index":870,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["this.loadconditionspage(nextlink.url",{"_index":1034,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loadconditionspage(url",{"_index":1036,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loaded",{"_index":1255,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.loadencounters",{"_index":2327,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.loadencounterspage(nextlink.url",{"_index":1530,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadencounterspage(url",{"_index":1532,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadfinished",{"_index":119,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["this.loadobservationspage(nextlink.url",{"_index":2162,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.mappings",{"_index":2216,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.maxdate",{"_index":1689,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.maxdate.gettime",{"_index":1699,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.medications",{"_index":1959,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.medications.length",{"_index":1961,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.menu.addoption",{"_index":801,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.menu.show(null",{"_index":1709,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mindate",{"_index":1687,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mouseevent",{"_index":1675,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mousesubscription",{"_index":1673,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.name",{"_index":1948,"title":{},"body":{"classes/Medication.html":{}}}],["this.nav2",{"_index":2599,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.obs",{"_index":2080,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.observations",{"_index":2159,"title":{},"body":{"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["this.observations.concat(nextobservations",{"_index":2160,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.reverse",{"_index":2164,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.sort((n1",{"_index":2167,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observationselected.emit(this.selected",{"_index":2259,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.observationservice.getcheckedobservations",{"_index":2601,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.observationservice.loadobservationspage(url",{"_index":2221,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.observationservice.observations",{"_index":535,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.onloadcomplete",{"_index":1227,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["this.options",{"_index":1405,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.options.concat(option",{"_index":1406,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.parseddata",{"_index":117,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.path",{"_index":854,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["this.patient",{"_index":736,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.patient.id",{"_index":2220,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.patientid",{"_index":2371,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.loadpatient().subscribe(patient",{"_index":1676,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{}}}],["this.patientservice.setpatientid(id",{"_index":1819,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.periods",{"_index":1947,"title":{},"body":{"classes/Medication.html":{}}}],["this.reason",{"_index":1508,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{}}}],["this.reconstructdataconditions(this.leveldata",{"_index":114,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdatafindings(this.leveldata",{"_index":116,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdataobservations(this.leveldata",{"_index":115,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.redirecturi",{"_index":2507,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.ref.nativeelement.contains(event.target",{"_index":1408,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.renderer.setelementstyle(this.el.nativeelement",{"_index":599,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["this.requestauth",{"_index":2474,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scope",{"_index":2508,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scratchpadconditions",{"_index":1221,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.addcareplan(plan",{"_index":806,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.addcondition(condition",{"_index":1307,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.addconditionstoscratchpad",{"_index":2605,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.addobservation(observation",{"_index":2257,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.addobservationtoscratchpad",{"_index":2606,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.buttonclicked(true",{"_index":1152,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.checkcareplan(checked",{"_index":828,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkcondition(checked",{"_index":1313,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapcareplans.get(careplan",{"_index":822,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.foreach((ischecked",{"_index":1304,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(c",{"_index":1038,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(condition",{"_index":1316,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.foreach((ischecked",{"_index":2256,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(o",{"_index":2169,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(observation",{"_index":2263,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkobservation(checked",{"_index":2264,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.conditions.length",{"_index":965,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.getcareplans",{"_index":743,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.scratchpadservice.getconditions",{"_index":1262,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.getobservations",{"_index":2198,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.initconditions(this.conditions",{"_index":1257,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.observations.length",{"_index":966,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.removecondition(condition",{"_index":1306,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.switchtoscratchpad(false",{"_index":2609,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.switchtoscratchpad(true",{"_index":2608,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.indexof(this.conditions[value",{"_index":1143,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.push(this.conditions[value",{"_index":1141,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.splice(temp",{"_index":1151,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.totalcareplans",{"_index":818,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.totalobservations",{"_index":2260,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.selected",{"_index":735,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selected.id",{"_index":821,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selectedcondition",{"_index":2325,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectpatientbyid(data['patient",{"_index":1818,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectpatientbyid(this.patientservice.patientid",{"_index":1815,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.settings",{"_index":287,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.push(setting",{"_index":284,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.splice(this.settings.indexof(setting",{"_index":285,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.smartservice.authenticate().subscribe(data",{"_index":1816,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.state",{"_index":2499,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.status",{"_index":2395,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.subscription",{"_index":731,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.timeouthandle",{"_index":1854,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.token",{"_index":1560,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.tokenurl",{"_index":2470,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.toolbarservice.leftposition",{"_index":2612,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.toolbarservice.topposition",{"_index":2615,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.top",{"_index":1413,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.totaldata",{"_index":1611,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.trendsservice.charts",{"_index":1694,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.trendsservice.getdaterange(chart",{"_index":1697,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.uniqueobservations.length",{"_index":2165,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservations.push(observation",{"_index":2180,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservationsloadfinished",{"_index":2166,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.viewconditionlist",{"_index":1121,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.viewtoggle",{"_index":1120,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.visible",{"_index":1418,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this['code']['coding'][0]['code",{"_index":2040,"title":{},"body":{"classes/Observation.html":{}}}],["thismodel",{"_index":1476,"title":{},"body":{"injectables/DoctorService.html":{}}}],["three",{"_index":628,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/TripleListComponent.html":{}}}],["throat",{"_index":2152,"title":{},"body":{"injectables/ObservationService.html":{}}}],["through",{"_index":1026,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["throw",{"_index":1147,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tied",{"_index":1432,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["time",{"_index":303,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/SmartService.html":{}}}],["timeframe",{"_index":310,"title":{},"body":{"components/AccountComponent.html":{}}}],["timeline",{"_index":224,"title":{"classes/Timeline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["timeline.html",{"_index":2529,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timeline_popup.html",{"_index":2548,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["timelinecomponent",{"_index":221,"title":{"components/TimelineComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinepopupcomponent",{"_index":223,"title":{"components/TimelinePopupComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelines",{"_index":2528,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timelines'},{'name",{"_index":222,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["timeouthandle",{"_index":1828,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["times",{"_index":2002,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["timesinceconditiononset",{"_index":1244,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["timesinceobservation",{"_index":2171,"title":{},"body":{"injectables/ObservationService.html":{}}}],["title",{"_index":678,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["tmp",{"_index":2514,"title":{},"body":{"injectables/SmartService.html":{}}}],["tmp[0",{"_index":2517,"title":{},"body":{"injectables/SmartService.html":{}}}],["today's",{"_index":1701,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["todo",{"_index":525,"title":{},"body":{"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["toggle",{"_index":325,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["toggleconfigmode",{"_index":249,"title":{},"body":{"components/AccountComponent.html":{}}}],["toggleexpansion",{"_index":1063,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["togglefinalnote",{"_index":1988,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["toggleprogressnote",{"_index":1989,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["togglesidenote",{"_index":1990,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["toggling",{"_index":1127,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tok",{"_index":2465,"title":{},"body":{"injectables/SmartService.html":{}}}],["token",{"_index":1541,"title":{},"body":{"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["token_url",{"_index":2487,"title":{},"body":{"injectables/SmartService.html":{}}}],["tokenurl",{"_index":2419,"title":{},"body":{"injectables/SmartService.html":{}}}],["tool",{"_index":533,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["toolbar",{"_index":1801,"title":{},"body":{"components/HomeComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":227,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["toolbar.html",{"_index":2576,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":226,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolbarservice",{"_index":392,"title":{"injectables/ToolBarService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":1183,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["top",{"_index":1351,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{}}}],["topoffset",{"_index":1829,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["topposition",{"_index":2572,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["total",{"_index":259,"title":{},"body":{"components/AccountComponent.html":{}}}],["totalconditions",{"_index":1256,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["totalcount",{"_index":2184,"title":{},"body":{"injectables/ObservationService.html":{}}}],["totaldata",{"_index":1579,"title":{},"body":{"components/FormBuilder.html":{}}}],["track",{"_index":634,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["tracking",{"_index":530,"title":{},"body":{"injectables/AssociationService.html":{}}}],["transactions",{"_index":2707,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1876,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transform(value",{"_index":1877,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transition('void",{"_index":2596,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["trend",{"_index":308,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["trends",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"injectables/HistoricalTrendsService.html":{}}}],["trendsservice",{"_index":1647,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["trick",{"_index":2252,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["trigger('fadein",{"_index":2593,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["triggered",{"_index":1223,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["triggering",{"_index":1384,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["triglycerides",{"_index":262,"title":{},"body":{"components/AccountComponent.html":{}}}],["triple",{"_index":1802,"title":{},"body":{"components/HomeComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist",{"_index":229,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist.html",{"_index":2619,"title":{},"body":{"components/TripleListComponent.html":{}}}],["triplelistcomponent",{"_index":228,"title":{"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":89,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["try",{"_index":1170,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ts",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["tslib",{"_index":2694,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":915,"title":{},"body":{"classes/Chart.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":2696,"title":{},"body":{"dependencies.html":{}}}],["typescript's",{"_index":2770,"title":{},"body":{"index.html":{}}}],["typescript/javascript",{"_index":795,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ui",{"_index":1133,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["unavailable",{"_index":528,"title":{},"body":{"injectables/AssociationService.html":{}}}],["uncheck",{"_index":832,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["unchecked",{"_index":1314,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{}}}],["unclicked",{"_index":825,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["undefined",{"_index":1477,"title":{},"body":{"injectables/DoctorService.html":{}}}],["unintuitive",{"_index":2762,"title":{},"body":{"index.html":{}}}],["uniqueobservations",{"_index":2087,"title":{},"body":{"injectables/ObservationService.html":{}}}],["uniqueobservationsloadfinished",{"_index":2088,"title":{},"body":{"injectables/ObservationService.html":{}}}],["unit",{"_index":2266,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["units",{"_index":2036,"title":{},"body":{"classes/Observation.html":{}}}],["unknown",{"_index":2319,"title":{},"body":{"components/PatientComponent.html":{}}}],["unsubscribe",{"_index":1435,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["until",{"_index":1022,"title":{},"body":{"injectables/ConditionService.html":{}}}],["up",{"_index":1381,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["update",{"_index":652,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["update'},{'name",{"_index":217,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["update.component",{"_index":1624,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["update.component.ts",{"_index":2382,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["update.component.ts:11",{"_index":2391,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:12",{"_index":2393,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:13",{"_index":2392,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:15",{"_index":2387,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:19",{"_index":2389,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:9",{"_index":2386,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.html",{"_index":2384,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["updateposition",{"_index":2581,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updateposition(ref",{"_index":2589,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updatescratchpad",{"_index":1064,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["updateservice",{"_index":612,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["upon",{"_index":1342,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["upper",{"_index":2061,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["uri",{"_index":693,"title":{},"body":{"classes/CarePlan.html":{}}}],["uris",{"_index":2463,"title":{},"body":{"injectables/SmartService.html":{}}}],["url",{"_index":672,"title":{},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{}}}],["urlencoded",{"_index":2492,"title":{},"body":{"injectables/SmartService.html":{}}}],["usage",{"_index":881,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ContextMenuComponent.html":{}}}],["use",{"_index":1217,"title":{},"body":{"components/ConditionsComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Observation.html":{},"index.html":{}}}],["used",{"_index":98,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{}}}],["user",{"_index":1367,"title":{"classes/User.html":{}},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["userid",{"_index":1584,"title":{},"body":{"components/FormBuilder.html":{}}}],["userselected",{"_index":695,"title":{},"body":{"classes/CarePlan.html":{}}}],["uses",{"_index":121,"title":{},"body":{"components/AccordionRecursion.html":{},"components/FormBuilder.html":{}}}],["using",{"_index":1128,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"index.html":{}}}],["utility",{"_index":120,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["val",{"_index":2544,"title":{},"body":{"components/TimelineComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["valuecodeableconcept",{"_index":2008,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["valuequantity",{"_index":2009,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["values",{"_index":321,"title":{},"body":{"components/AccountComponent.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["var",{"_index":138,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["variable",{"_index":2628,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1603,"title":{"miscellaneous/variables.html":{}},"body":{"components/FormBuilder.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verificationstatus",{"_index":974,"title":{},"body":{"classes/Condition.html":{}}}],["version",{"_index":694,"title":{},"body":{"classes/CarePlan.html":{},"index.html":{}}}],["very",{"_index":2794,"title":{},"body":{"index.html":{}}}],["via",{"_index":2719,"title":{},"body":{"index.html":{}}}],["view",{"_index":788,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["viewchild",{"_index":781,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["viewchild('hover",{"_index":2307,"title":{},"body":{"components/PatientComponent.html":{}}}],["viewchild('hoverbox",{"_index":2556,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["viewchild('menu",{"_index":778,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["viewchildren",{"_index":1600,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewchildren('form",{"_index":1596,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewer",{"_index":2702,"title":{},"body":{"index.html":{}}}],["views",{"_index":2607,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewtoggle",{"_index":1055,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["visible",{"_index":1352,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["visiblities",{"_index":1459,"title":{},"body":{"injectables/DoctorService.html":{}}}],["visit",{"_index":2338,"title":{},"body":{"components/PatientComponent.html":{},"index.html":{}}}],["vitals",{"_index":2136,"title":{},"body":{"injectables/ObservationService.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["waiting",{"_index":1848,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["want",{"_index":1479,"title":{},"body":{"injectables/DoctorService.html":{}}}],["way",{"_index":1254,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/SmartService.html":{}}}],["weight",{"_index":335,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["west",{"_index":518,"title":{},"body":{"injectables/AssociationService.html":{}}}],["whatever",{"_index":2034,"title":{},"body":{"classes/Observation.html":{}}}],["whenever",{"_index":823,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["whenver",{"_index":815,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ToolbarComponent.html":{}}}],["wherever",{"_index":1398,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["whether",{"_index":783,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["whose",{"_index":2621,"title":{},"body":{"components/TripleListComponent.html":{}}}],["width",{"_index":600,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/HistoricalTrendsComponent.html":{}}}],["window",{"_index":644,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerheight",{"_index":641,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerwidth",{"_index":1864,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["window.location.href",{"_index":2512,"title":{},"body":{"injectables/SmartService.html":{}}}],["windows",{"_index":2736,"title":{},"body":{"index.html":{}}}],["wipes",{"_index":1462,"title":{},"body":{"injectables/DoctorService.html":{}}}],["withauth",{"_index":1549,"title":{},"body":{"injectables/FhirService.html":{}}}],["within",{"_index":1299,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["without",{"_index":1395,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["work",{"_index":664,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/DoctorService.html":{}}}],["wraps",{"_index":1798,"title":{},"body":{"components/HomeComponent.html":{}}}],["write",{"_index":2785,"title":{},"body":{"index.html":{}}}],["writing",{"_index":2793,"title":{},"body":{"index.html":{}}}],["www",{"_index":2491,"title":{},"body":{"injectables/SmartService.html":{}}}],["x",{"_index":1086,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["y",{"_index":910,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["year",{"_index":1714,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years",{"_index":1659,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years').todate",{"_index":1704,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["yscalemax",{"_index":894,"title":{},"body":{"classes/Chart.html":{}}}],["yscalemin",{"_index":895,"title":{},"body":{"classes/Chart.html":{}}}],["yyyy').tostring",{"_index":2562,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["zone.js",{"_index":2698,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccordionRecursion.html":{"url":"components/AccordionRecursion.html","title":"component - AccordionRecursion","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionRecursion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/accordionRecursion/accordionRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                accordionRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./accordionRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFinished\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                reconstructDataConditions\n                            \n                            \n                                reconstructDataFindings\n                            \n                            \n                                reconstructDataObservations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnNum\n                            \n                            \n                                firstIteration\n                            \n                            \n                                levelData\n                            \n                            \n                                levelNum\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstIteration\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesConditions\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataConditions\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataFindings\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataFindings(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataObservations\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataObservations(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output } from '@angular/core';\nimport { ObservationService } from '../../services/observation.service';\n\n@Component({\n    selector: 'accordionRecursion',\n    templateUrl: './accordionRecursion.html'\n})\nexport class AccordionRecursion {\n\n    /* This component takes in the data at the current level of the accordion structure:\n    Note that the structure of the data should be as follows:\n        {[\n            category: string,\n            subheading: boolean,\n            subs: [array of the same 4 headings here] // null if subheadings is false\n            data: [array of the list of conditions for that level] // null if subheadings is true\n        ]}\n    */\n    @Input() levelData: any;\n\n    // This is the type of the column (conditions: 0, observations: 1, or care plans: 2)\n    @Input() columnNum: number;\n\n    // This is the current level of recursion (used for the display)\n    @Input() levelNum: number;\n\n    // for testing purposes\n    @Input() firstIteration: number;\n\n    // Parsed data according to the above data schema \n    parsedData: any;\n    loadFinished: boolean = false;\n\n    // ===============================================================================================================================================\n    // ================================================================== EVENT METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    constructor(private observationService: ObservationService) { }\n\n    // When the component is first initialized\n    ngOnChanges() {\n        if (this.firstIteration == 1) {\n            // reconstruct the data for now\n            if (this.columnNum == 0)\n                this.reconstructDataConditions(this.levelData);\n            else if (this.columnNum == 1) {\n                this.reconstructDataObservations(this.levelData);\n            }\n            else if (this.columnNum == 2)\n                this.reconstructDataFindings(this.levelData);\n        } else {\n            this.parsedData = this.levelData;\n        }\n\n        this.loadFinished = true;\n    }\n\n    // ===============================================================================================================================================\n    // ================================================================== UTILITY METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    // NOTE: The current component uses this function to rebuild the data into correct structure, but in practice, this function should not be used\n    // since the data should already in the correct model format (described above levelData)\n    reconstructDataConditions(arrData: any) {\n        this.parsedData = this.addCategoriesConditions(arrData);\n    }\n\n    addCategoriesConditions(arrData: any) {\n        // For conditions, there are guaranteed to be 5 different columns; for now, just filter by active/inactive\n\n        // data sieve\n        var dataFilter =\n        {\n            'Chief Complaint': [],\n            'Active Problems': [],\n            'Inactive Problems': [],\n            'Allergies/Precautions': [],\n            'Preventions/Exposures': []\n        };\n\n        // Filter each condition into a category based on the data\n        for (var i = 0; i \n    \n\n    \n        \n\n  \n    \n        {{cat.category}} ({{cat.data?.length}})\n    \n    \n      \n        \n          \n        \n        \n          \n        \n            \n          \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{cat.category}} ({{cat.data?.length}})                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionRecursion'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/account.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                account\n            \n\n\n\n\n            \n                templateUrl\n                ./account.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cholesteralBattery\n                            \n                            \n                                electrolytes\n                            \n                            \n                                kidneyFunction\n                            \n                            \n                                liverFunction\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSetting\n                            \n                            \n                                saveSettings\n                            \n                            \n                                toggleConfigMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSetting\n                        \n                        \n                    \n                \n            \n            \n                \naddSetting(checked: boolean, setting: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveSettings\n                        \n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleConfigMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleConfigMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cholesteralBattery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            electrolytes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kidneyFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Creatinine\", \"GFR\", \"BUN\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            liverFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\n\n@Component({\n  selector: 'account',\n  templateUrl: './account.html',\n})\nexport class AccountComponent {\n  settings: Array = [];\n  electrolytes: Array = [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"];\n  cholesteralBattery: Array = [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"];\n  liverFunction: Array = [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"];\n  kidneyFunction: Array = [\"Creatinine\", \"GFR\", \"BUN\"];\n\n  constructor(private doctorService: DoctorService) { }\n\n  addSetting(checked: boolean, setting: string) {\n    if (checked) {\n      this.settings.push(setting);\n    }\n    else {\n      this.settings.splice(this.settings.indexOf(setting), 1);\n    }\n  }\n\n  saveSettings() {\n    this.doctorService.filter = this.settings;\n    this.doctorService.addGraphConfig(this.settings);\n    console.log(\"saved\");\n  }\n\n  toggleConfigMode() {\n    if (this.doctorService.configMode == true) {\n      this.doctorService.configMode = false;\n    }\n    else {\n      this.doctorService.configMode = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  .paddedtd {\n    padding:10px 0;\n  }\n  .paddedtable {\n    border-collapse: separate;\n    border-spacing: 10px 0;\n  }\n\n\n  \n    \n      \n         John Smith\n        \n          GeneralChange password\n          Event Timeline\n          Time Scale:\n            Linear\n            Logarithmic\n          \n          Historical Trend\n          Initial Timeframe:\n          \n            6 month\n            12 month\n            18 month\n          \n          Problem List\n          \n            \n              \n                \n              \n              Active Problems\n              \n                \n              \n              Allergies\n            \n            \n              \n                \n              \n              Inactive Problems\n              \n                \n              \n              Activities Due\n            \n          \n          Findings List\n          \n            \n              \n                \n              \n              Abnormal Values\n              \n                \n              \n              All Values\n            \n            \n              \n                \n              \n              No Values\n              \n                \n              \n              Selected Values\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n                \n              \n            \n          \n          Save\n          Toggle Config Mode\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .paddedtd {    padding:10px 0;  }  .paddedtable {    border-collapse: separate;    border-spacing: 10px 0;  }                     John Smith                  GeneralChange password          Event Timeline          Time Scale:            Linear            Logarithmic                    Historical Trend          Initial Timeframe:                      6 month            12 month            18 month                    Problem List                                                                                Active Problems                                                          Allergies                                                                                  Inactive Problems                                                          Activities Due                                Findings List                                                                                Abnormal Values                                                          All Values                                                                                  No Values                                                          Selected Values                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                              Save          Toggle Config Mode                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddObservation.html":{"url":"components/AddObservation.html","title":"component - AddObservation","body":"\n                   \n\n\n\n\n\n  Components\n  AddObservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/addObservation/addObservation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                addObservation\n            \n\n\n\n\n            \n                templateUrl\n                ./addObservation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrayOfKeyValues\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/addObservation/addObservation.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayOfKeyValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{ name: 'height', code: '8302-2' }, { name: 'weight', code: '3141-9' }, { name: 'oxygen_saturation', code: '2710-2' }, { name: 'temperature', code: '8310-5' }, { name: 'bmi', code: '39156-5' }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/addObservation/addObservation.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: '', code: \"1\" }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/addObservation/addObservation.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'addObservation',\n  templateUrl: './addObservation.html'\n})\nexport class AddObservation {\n  model = { name: '', code: \"1\" };\n  arrayOfKeyValues: any[] = [{ name: 'height', code: '8302-2' }, { name: 'weight', code: '3141-9' }, { name: 'oxygen_saturation', code: '2710-2' }, { name: 'temperature', code: '8310-5' }, { name: 'bmi', code: '39156-5' }];\n\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n      \n      \n        Finding:\n          \n        \n        code: {{model.code}}\n        Value:\n          \n        \n        submit\n      \n      \n        Close\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×                    Finding:                          code: {{model.code}}        Value:                          submit                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddObservation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllergyIntolerance.html":{"url":"classes/AllergyIntolerance.html","title":"class - AllergyIntolerance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllergyIntolerance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/allergyIntolerance.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AllergyIntolerance {\n    id: string;\n    code: {\n        text: string;\n    };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The root component for the entire application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app/app.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The root component for the entire application.\n */\n@Component({\n  selector: 'app',\n  templateUrl: './app.html'\n})\nexport class AppComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n            Toggle navigation\n          \n          \n          \n           \n        \n    \n    \n      \n         Home\n         Account\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Toggle navigation                                                                        Home         Account            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAddObservation\n\nAddObservation\n\nAppModule -->\n\nAddObservation->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanComponent\n\nCarePlanComponent\n\nAppModule -->\n\nCarePlanComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nNewCondition\n\nNewCondition\n\nAppModule -->\n\nNewCondition->AppModule\n\n\n\n\n\nNoteNavigationComponent\n\nNoteNavigationComponent\n\nAppModule -->\n\nNoteNavigationComponent->AppModule\n\n\n\n\n\nObservationRecursive\n\nObservationRecursive\n\nAppModule -->\n\nObservationRecursive->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionRecursion\n                        \n                        \n                            AccountComponent\n                        \n                        \n                            AddObservation\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CarePlanComponent\n                        \n                        \n                            CarePlanDisplay\n                        \n                        \n                            ColumnStateSwitcherComponent\n                        \n                        \n                            ConditionsChartComponent\n                        \n                        \n                            ConditionsComponent\n                        \n                        \n                            ConditionsDisplay\n                        \n                        \n                            ContextMenuComponent\n                        \n                        \n                            FormBuilder\n                        \n                        \n                            HistoricalTrendsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HoverBoxComponent\n                        \n                        \n                            LoadingAnimation\n                        \n                        \n                            MedicationsComponent\n                        \n                        \n                            NewCondition\n                        \n                        \n                            NoteNavigationComponent\n                        \n                        \n                            ObservationRecursive\n                        \n                        \n                            ObservationRecursiveChart\n                        \n                        \n                            ObservationsComponent\n                        \n                        \n                            ObservationsDisplay\n                        \n                        \n                            PatientComponent\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelinePopupComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TripleListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AssociationService\n                        \n                        \n                            CarePlanService\n                        \n                        \n                            ConditionService\n                        \n                        \n                            DoctorService\n                        \n                        \n                            EncounterService\n                        \n                        \n                            FhirService\n                        \n                        \n                            HistoricalTrendsService\n                        \n                        \n                            MapService\n                        \n                        \n                            ObservationService\n                        \n                        \n                            PatientService\n                        \n                        \n                            ScratchPadService\n                        \n                        \n                            SmartService\n                        \n                        \n                            ToolBarService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormCreatorModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, enableProdMode } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// COMPONENT IMPORTS\nimport { AppComponent } from './app/components/app/app.component';\nimport { HomeComponent } from './app/components/home/home.component';\nimport { PatientComponent } from './app/components/patient/patient.component';\nimport { ConditionsComponent } from './app/components/conditions/conditions.component';\nimport { TimelineComponent } from './app/components/timeline/timeline.component';\nimport { TimelinePopupComponent } from './app/components/timeline_popup/timeline_popup.component';\nimport { ObservationsComponent } from './app/components/observations/observations.component';\nimport { CarePlanComponent } from './app/components/carePlan/carePlan.component';\nimport { HoverBoxComponent } from \"./app/components/hoverBox/hoverBox.component\";\nimport { LoadingAnimation } from './app/components/loadingAnimation/loadingAnimation.component';\nimport { AccountComponent } from './app/components/account/account.component';\nimport { ToolbarComponent } from './app/components/toolbar/toolbar.component';\nimport { TripleListComponent } from './app/components/tripleList/tripleList.component';\nimport { ObservationRecursive } from './app/components/observationRecursion/observationRecursion.component';\nimport { AddObservation } from './app/components/addObservation/addObservation.component';\nimport { ObservationRecursiveChart } from './app/components/observationRecursionChart/observationRecursionChart.component';\nimport { MedicationsComponent } from './app/components/medications/medications.component';\nimport { ConditionsChartComponent } from './app/components/conditionsChart/conditionsChart.component';\nimport { ColumnStateSwitcherComponent } from './app/components/columnStateSwitcher/columnStateSwitcher.component';\nimport { NewCondition } from './app/components/newCondition/newCondition.component';\nimport { FormBuilder } from './app/components/form-builder/form-builder.component'\nimport { ContextMenuComponent } from './app/components/contextMenu/contextMenu.component';\nimport { CarePlanDisplay } from './app/components/carePlanDisplay/carePlanDisplay.component';\nimport { NoteNavigationComponent } from './app/components/noteNavigation/noteNavigation.component';\nimport { AccordionRecursion } from './app/components/accordionRecursion/accordionRecursion.component';\nimport { ConditionsDisplay } from './app/components/conditionsDisplay/conditionsDisplay.component';\nimport { HistoricalTrendsComponent } from './app/components/historicalTrends/historicalTrends.component';\nimport { ObservationsDisplay } from './app/components/observationsDisplay/observationsDisplay.component';\n\n// SERVICE IMPORTS\nimport { CookieService } from 'ngx-cookie-service';\nimport { EncounterService } from './app/services/encounter.service';\nimport { FhirService } from './app/services/fhir.service';\nimport { PatientService } from './app/services/patient.service';\nimport { ConditionService } from './app/services/condition.service';\nimport { CarePlanService } from './app/services/carePlan.service';\nimport { ObservationService } from './app/services/observation.service';\nimport { MapService } from './app/services/map.service';\nimport { DoctorService } from './app/services/doctor.service';\nimport { SmartService } from './app/services/smart.service';\nimport { HistoricalTrendsService } from './app/services/historicalTrends.service';\nimport { ScratchPadService } from './app/services/scratchPad.service';\nimport { ToolBarService } from './app/services/toolbar.service';\nimport { AssociationService } from './app/services/association.service';\n\nimport { MomentModule } from 'ngx-moment';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n\nenableProdMode();\n\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormCreatorModule } from './app/modules/form.module';\n\nconst appRoutes: Routes = [\n  { path: 'account', component: AccountComponent },\n  { path: 'trends', component: HistoricalTrendsComponent },\n  { path: '', component: HomeComponent },\n  { path: '**', component: HomeComponent }\n]\nconst appRoutingProviders: any[] = [];\nconst routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n@NgModule({\n  imports: [\n    FormCreatorModule,\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    MomentModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  declarations: [ // Components and Directives\n    AppComponent,\n    HomeComponent,\n    PatientComponent,\n    AccordionRecursion,\n\n    // OBSERVATIONS COLUMN\n    ObservationsComponent,\n    ObservationsDisplay,\n\n    // CONDITIONS COLUMN\n    ConditionsComponent,\n    ConditionsDisplay,\n\n    // CAREPLAN COLUMN\n    CarePlanComponent,\n    CarePlanDisplay,\n    MedicationsComponent,\n\n    TimelineComponent,\n    TimelinePopupComponent,\n    LoadingAnimation,\n    FormBuilder,\n    AccountComponent,\n    ToolbarComponent,\n    TripleListComponent,\n    ObservationRecursive,\n    AddObservation,\n    ObservationRecursiveChart,\n    ConditionsChartComponent,\n    ColumnStateSwitcherComponent,\n    NewCondition,\n    ContextMenuComponent,\n    NoteNavigationComponent,\n    HoverBoxComponent,\n    HistoricalTrendsComponent,\n  ],\n  providers: [ // Services\n    appRoutingProviders,\n    CookieService,\n    EncounterService,\n    FhirService,\n    PatientService,\n    ObservationService,\n    ConditionService,\n    MapService,\n    DoctorService,\n    SmartService,\n    CarePlanService,\n    HistoricalTrendsService,\n    ScratchPadService,\n    ToolBarService,\n    AssociationService,\n  ],\n  bootstrap: [AppComponent] // Root Component\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Associable.html":{"url":"interfaces/Associable.html","title":"interface - Associable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Associable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/associable.model.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface Associable {\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associatedMapConditions\n                            \n                            \n                                associatedMapObservations\n                            \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractConditionInfo\n                            \n                            \n                                    Private\n                                extractObservationInfo\n                            \n                            \n                                    Private\n                                getAssociations\n                            \n                            \n                                runAssociationsTool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, conditionService: ConditionService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractConditionInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractConditionInfo(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; onsetDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractObservationInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractObservationInfo(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; effectiveDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAssociations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssociations(checkedConditions: Array, checkedObservations: Array, conditions: Array, observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool(checkedConditions: Array, checkedObservations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConditionService } from './condition.service';\nimport { ObservationService } from './observation.service';\n\nimport { Condition } from '../models/condition.model';\nimport { Observation } from '../models/observation.model';\n\n@Injectable()\nexport class AssociationService {\n    // TODO: This endpoint is currently unavailable\n    private path = 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items';\n\n    // Maps for tracking which conditions and observations\n    // are currently associated (according to the associations tool)\n    associatedMapConditions: Map = new Map();\n    associatedMapObservations: Map = new Map();\n\n    constructor(\n        private http: HttpClient,\n        private conditionService: ConditionService,\n        private observationService: ObservationService\n    ) { }\n\n    runAssociationsTool(checkedConditions: Array, checkedObservations: Array) {\n        let conditions = this.conditionService.conditions;\n        let observations = this.observationService.observations;\n\n        this.getAssociations(\n            checkedConditions,\n            checkedObservations,\n            conditions,\n            observations\n        ).subscribe(res => {\n            // Clear prior associations\n            this.associatedMapConditions.clear();\n            this.associatedMapObservations.clear();\n\n            // Extract associations API response\n            let associatedConditions = res['selectedConditions'];\n            let associatedObservations = res['selectedObservations'];\n\n            // Mark associated conditions as such\n            for (let a of associatedConditions) {\n                for (let c of conditions) {\n                    if (this.extractConditionInfo(c)['code'] == a['code']) {\n                        this.associatedMapConditions.set(c, true);\n                    }\n                }\n            }\n\n            // Mark associated observations as such\n            for (let a of associatedObservations) {\n                for (let o of observations) {\n                    if (this.extractObservationInfo(o)['code'] == a['code']) {\n                        this.associatedMapObservations.set(o, true);\n                    }\n                }\n            }\n        });\n    }\n\n    private getAssociations(\n        checkedConditions: Array,\n        checkedObservations: Array,\n        conditions: Array,\n        observations: Array,\n    ) {\n        // Extract relevant fields from checked conditions and observations\n        let checkedConditionsInfo = checkedConditions.map(this.extractConditionInfo);\n        let checkedObservationsInfo = checkedObservations.map(this.extractObservationInfo);\n\n        // Extract relevant fields from all conditions and observations\n        let conditionsInfo = conditions.map(this.extractConditionInfo);\n        let observationsInfo = observations.map(this.extractObservationInfo);\n\n        // Call associations API endpoint\n        return this.http.post(this.path, {\n            selectedConditions: checkedConditionsInfo,\n            selectedObservations: checkedObservationsInfo,\n            conditions: conditionsInfo,\n            observations: observationsInfo,\n        });\n    }\n\n    // Extract the code, coding system, and onset datetime from a condition\n    private extractConditionInfo(condition: Condition) {\n        return {\n            code: condition['code']['coding'][0]['code'],\n            system: condition['code']['coding'][0]['system'],\n            onsetDateTime: condition['onsetDateTime'],\n        }\n    }\n\n    // Extract the code, coding system, and effective datetime from an observation\n    private extractObservationInfo(observation: Observation) {\n        return {\n            code: observation['code']['coding'][0]['code'],\n            system: observation['code']['coding'][0]['system'],\n            effectiveDateTime: observation['effectiveDateTime'],\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutoGrowDirective.html":{"url":"directives/AutoGrowDirective.html","title":"directive - AutoGrowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AutoGrowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/auto-grow.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [autoGrow]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/auto-grow.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFocus\n                        \n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer} from '@angular/core';\n\n@Directive({\n\tselector: '[autoGrow]',\n\thost: {\n\t\t'(focus)': 'onFocus()',\n\t\t'(blur)': 'onBlur()'\n\t}\n})\nexport class AutoGrowDirective {\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t}\n\n\tonFocus() {\n\t\t// console.log('focus!');\n\t\tthis.renderer.setElementStyle(this.el.nativeElement, 'width', '200px');\n\t}\n\t onBlur() {\n\t\t//  console.log('blur');\n\t\t this.renderer.setElementStyle(this.el.nativeElement, 'width', '120px');\n\t }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseColumn.html":{"url":"classes/BaseColumn.html","title":"class - BaseColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/baseColumn.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/baseColumn.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/*\nSuper class of all three columns in the application. Provides\nfunctionality for dynamic resizing, and keeps track of which\nstate the column is currently in (ie, scratch pad or default).\n*/\nexport class BaseColumn {\n  constructor() {\n    // Set the initial height of the column.\n    this.columnHeight = window.innerHeight - this.HEIGHT_OFFSET;\n\n    // Resize the column on each window resize event.\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(100)) // Debounce to prevent excessive resizing.\n      .subscribe((event) => {\n        this.handleResize(event);\n    });\n  }\n\n  // Update the height of the column.\n  handleResize(event) {\n    this.columnHeight = event.target.innerHeight - this.HEIGHT_OFFSET;\n  }\n\n  // Can be overriden in the child class to handle switching between states.\n  showDefault() { }\n  showScratchPad() { }\n  updateService() { }\n\n  // The current height (in pixels) of the column.\n  columnHeight: number;\n\n  // 220px is an approximate value that seems to work for now.\n  HEIGHT_OFFSET: number = 180;\n\n  // The current state (ie, scratch pad) of the column.\n  columnState: string = \"default\";\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bundle.html":{"url":"classes/Bundle.html","title":"class - Bundle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bundle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                link\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CarePlan.html":{"url":"classes/CarePlan.html","title":"class - CarePlan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CarePlan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/carePlan.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class CarePlan implements Associable {\n    id: string;\n    title: string;\n    status: string;\n    description: string;\n\n\n    period: {\n        start: Date;\n        end: Date;\n    }\n\n    activity: {\n        detail: {\n            status: string;\n            dailyAmount: {\n                value: number;\n                system: string;\n                code: string;\n            }\n            product: {\n                productCodableConcept: {\n                    coding: {\n                        // URI\n                        system: string;\n                        version: string;\n                        code: string;\n                        display: string;\n                        userSelected: boolean;\n                    }[],\n                    text: string;\n                }\n                productReference: {\n                    reference: string;\n                    type: string;\n                    display: string;\n                }\n            }\n        }\n    }[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanComponent.html":{"url":"components/CarePlanComponent.html","title":"component - CarePlanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlan/carePlan.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                carePlan\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlan.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carePlanLoadFinished\n                            \n                            \n                                carePlans\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCarePlans\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, carePlanService: CarePlanService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlan/carePlan.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCarePlans()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlan/carePlan.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlan/carePlan.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlanLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlans\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { CarePlan } from '../../models/carePlan.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'carePlan',\n  templateUrl: './carePlan.html'\n})\nexport class CarePlanComponent extends BaseColumn {\n\n  selected: CarePlan;\n  carePlans: Array;\n  \n  // check for load finished\n  carePlanLoadFinished: boolean = false;\n\n  // for column switching\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n\n  constructor(private fhirService: FhirService, private carePlanService: CarePlanService, private scratchPadService: ScratchPadService) {\n    super();\n\n    // subscribe to scratch pad service for column switching\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.carePlanService.loadCarePlans(this.patient).subscribe(carePlans => {\n        this.carePlans = carePlans;\n        this.carePlanLoadFinished = true;\n        console.log(\"Loaded \" + carePlans.length + \" care plans.\");\n      });\n    }\n  }\n\n  // get the scratch pad stuff for care plans\n  getScratchPadCarePlans() {\n    return this.scratchPadService.getCarePlans();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Care Plans\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Care Plans                                                                                            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanDisplay.html":{"url":"components/CarePlanDisplay.html","title":"component - CarePlanDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                careplanDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlanDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllCarePlans\n                            \n                            \n                                checkCarePlan\n                            \n                            \n                                checkClicked\n                            \n                            \n                                expand\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectCarePlan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                carePlans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                careplanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        carePlans\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        careplanSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllCarePlans(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCarePlan(checked: boolean, checkedCarePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedCarePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncheckClicked(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \nselectCarePlan(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { CarePlan } from '../../models/carePlan.model';\n\n@Component({\n  selector: 'careplanDisplay',\n  templateUrl: './carePlanDisplay.html'\n})\nexport class CarePlanDisplay {\n  // The currently selected careplan in the list.\n  selected: CarePlan;\n\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of careplans to be displayed\n  @Input() carePlans: Array;\n  @Output() careplanSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu !: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(private scratchPadService: ScratchPadService) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking careplans.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function (plan) {\n        this.scratchPadService.addCarePlan(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  //whenver a line is selected\n  selectCarePlan(carePlan: CarePlan) {\n    this.selected = carePlan;\n    this.careplanSelected.emit(this.selected);\n    for (let c of this.scratchPadService.totalCareplans) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  checkClicked(carePlan: CarePlan) {\n    if (this.scratchPadService.checkedMapCareplans.get(carePlan)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkCarePlan(checked: boolean, checkedCarePlan: CarePlan) {\n    this.scratchPadService.checkCarePlan(checked, checkedCarePlan);\n  }\n\n  expand(parent: string) {\n    /*\n    for (let c of this.carePlans) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n\n  // Check or uncheck all conditions.\n  checkAllCarePlans(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let carePlan of this.carePlans) {\n      this.scratchPadService.checkCarePlan(checked, carePlan);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      Description\n      Start\n      End\n    \n  \n  \n     \n      \n        \n      \n      {{cP['title']}}\n      {{cP.period.start}}\n      {{cP.period.end}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Description      Start      End                                       {{cP[\\'title\\']}}      {{cP.period.start}}      {{cP.period.end}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarePlanService.html":{"url":"injectables/CarePlanService.html","title":"injectable - CarePlanService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CarePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/carePlan.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCarePlans\n                            \n                            \n                                loadMedications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \nloadCarePlans(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMedications\n                        \n                        \n                    \n                \n            \n            \n                \nloadMedications(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/CarePlan'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Patient } from '../models/patient.model';\nimport { CarePlan } from '../models/carePlan.model';\nimport { Medication } from '../models/medication.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class CarePlanService {\n  private path = '/CarePlan';\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient\n  ) { }\n\n  // Retrieve care plans for a given patient\n  loadCarePlans(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no care plans, so return an empty array\n          return new Array();\n        }\n      }));\n  }\n\n  // Retrieve medications for a given patient.\n  // If a given medication is taken over multiple periods, it is merged into one.\n  loadMedications(patient: Patient): Observable> {\n    return this.loadCarePlans(patient).pipe(map(carePlans => {\n      let medicationMap: Map = new Map();\n\n      for (let cp of carePlans) {\n        let dosageUnits = cp.activity[0].detail.dailyAmount.code;\n\n        // Retrieve the existing medication, or create it if it does not yet exist.\n        let med: Medication = medicationMap.get(cp.title) || new Medication(cp.title, dosageUnits);\n\n        // Add a period of usage to the medication.\n        med.periods.push({\n          start: new Date(cp.period.start),\n          end: new Date(cp.period.end),\n          dosage: cp.activity[0].detail.dailyAmount.value\n        });\n\n        medicationMap.set(cp.title, med);\n      }\n\n      return Array.from(medicationMap.values());\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chart.html":{"url":"classes/Chart.html","title":"class - Chart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chart.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                dashedLines\n                            \n                            \n                                data\n                            \n                            \n                                lineChartData\n                            \n                            \n                                normalValues\n                            \n                            \n                                title\n                            \n                            \n                                yScaleMax\n                            \n                            \n                                yScaleMin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashedLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Chart {\n  title: string;\n  code: string;\n  dashedLines: boolean;\n\n  // An array of data points associated with the chart.\n  data: {\n    value: number;\n    name: any;\n  }[] = [];\n\n  // Stores the chart in the format expected for line charts by NGX-Charts.\n  lineChartData: {\n    name: any;\n    series: {\n      value: number;\n      name: any;\n    }[];\n  }[];\n\n  // The minimum and maximum Y-axis values to be displayed on the chart.\n  yScaleMin: number;\n  yScaleMax: number;\n\n  // Used to display horizontal \"reference\" lines in the NGX-Charts line chart.\n  // Generally an array of two elements (the low and high values).\n  normalValues: {\n    name: string;\n    value: number;\n  }[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxInline.html":{"url":"components/CheckboxInline.html","title":"component - CheckboxInline","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxInline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/checkbox-inline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                checkbox-inline\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-inline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxData\n                            \n                            \n                                combinedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkboxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"checkbox-inline\",\n\ttemplateUrl: \"./checkbox-inline.html\"\n})\n\nexport class CheckboxInline{\n\t@Input() inputData: any;\n\tcheckboxData : boolean[] = [];\n\tcombinedData: String[] = [];\n\t\n\tngOnInit(){\n\t\t// initialize the checkboxes all to false\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n      \n       {{entry.description}} \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}                    {{entry.description}}           '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxInline'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/client.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class Client {\n\tid: string;\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColumnStateSwitcherComponent.html":{"url":"components/ColumnStateSwitcherComponent.html","title":"component - ColumnStateSwitcherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColumnStateSwitcherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component for switching between the three states of each column.\nThe three possible states are: Default, Note Pad, and Scratch Pad.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                columnStateSwitcher\n            \n\n\n\n\n            \n                templateUrl\n                ./columnStateSwitcher.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCount\n                            \n                            \n                                switchToDefault\n                            \n                            \n                                switchToScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                columnType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         BaseColumn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n                \n                    \n                        The type of the column in which the switcher is used.\nFor example, 'conditions', 'observations', or 'careplans'.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:53\n                \n            \n\n\n            \n                \n                    Retrieve the number of items in the column's scratch pad. This \nnumber is displayed in the switcher component.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToDefault\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:29\n                \n            \n\n\n            \n                \n                    Switch to the default view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:40\n                \n            \n\n\n            \n                \n                    Switch to the scratch pad view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { BaseColumn } from '../baseColumn';\n\n\n /**\n  * Component for switching between the three states of each column.\n  * The three possible states are: Default, Note Pad, and Scratch Pad.\n  */\n@Component({\n  selector: 'columnStateSwitcher',\n  templateUrl: './columnStateSwitcher.html'\n})\nexport class ColumnStateSwitcherComponent {\n  @Input() column: BaseColumn;\n\n  /**\n   * The type of the column in which the switcher is used.\n   * For example, 'conditions', 'observations', or 'careplans'.\n   */\n  @Input() columnType: string;\n\n  constructor (private scratchPadService: ScratchPadService) { }\n\n  /**\n   * Switch to the default view of the column.\n   */\n  switchToDefault() {\n    if (this.column != null) {\n      this.column.columnState = 'default';\n      this.column.updateService(); // Update the service to store correct column state\n      this.column.showDefault();\n    }\n  }\n\n  /**\n   * Switch to the scratch pad view of the column.\n   */\n  switchToScratchPad() {\n    if (this.column != null) {\n      this.column.columnState = 'scratchpad';\n      // Update the service to store correct column state\n      this.column.updateService(); \n      this.column.showScratchPad();\n    }\n  }\n\n  /**\n   * Retrieve the number of items in the column's scratch pad. This \n   * number is displayed in the switcher component.\n   */\n  getScratchPadCount(): number {\n    if (this.columnType == 'conditions') {\n      return this.scratchPadService.conditions.length;\n    } else if (this.columnType == 'observations') {\n      return this.scratchPadService.observations.length;\n    } else if (this.columnType == 'careplans') {\n      // TODO: Implement once scratch pad is finished for careplans.\n      return 0;\n    }\n    return 0;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      {{ getScratchPadCount() }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ getScratchPadCount() }}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColumnStateSwitcherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condition.html":{"url":"classes/Condition.html","title":"class - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/condition.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clinicalStatus\n                            \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                isParent\n                            \n                            \n                                isVisible\n                            \n                            \n                                onsetDateTime\n                            \n                            \n                                parent\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                verificationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clinicalStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onsetDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verificationStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Condition implements Associable {\n    id: string;\n    onsetDateTime: string;\n    relativeDateTime: string;\n    verificationStatus: string;\n    clinicalStatus: string;\n    isVisible: boolean;\n    isParent: boolean;\n    parent: string;\n\tcode: {\n        coding: [{code: string, display: string, system: string}],\n        text: string\n    };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConditionService.html":{"url":"injectables/ConditionService.html","title":"injectable - ConditionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConditionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/condition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnState\n                            \n                            \n                                conditions\n                            \n                            \n                                conditionsCache\n                            \n                            \n                                    Private\n                                path\n                            \n                            \n                                selectedCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCheckedConditions\n                            \n                            \n                                getColumnState\n                            \n                            \n                                loadAllergies\n                            \n                            \n                                loadConditions\n                            \n                            \n                                loadConditionsPage\n                            \n                            \n                                setColumnState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnState\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         String\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \nloadAllergies(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditions\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditions(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditionsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditionsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setColumnState\n                        \n                        \n                    \n                \n            \n            \n                \nsetColumnState(newColumnState: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newColumnState\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionsCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Condition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of, concat } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Condition } from '../models/condition.model';\nimport { AllergyIntolerance } from '../models/allergyIntolerance.model';\n\n@Injectable()\nexport class ConditionService {\n  private path = '/Condition';\n\n  conditions: Array = [];\n  // The currently selected (highlighted) condition \n  selectedCondition: Condition = null;\n\n  conditionsCache = {};\n  columnState: String;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  // https://stackoverflow.com/questions/45594609/which-operator-to-chain-observables-conditionally\n  // Because the conditions are paginated in the API, we must continually\n  // load the next page until no pages remain. This is achieved through\n  // concatMap and Observable.concat, as discussed above.\n  loadConditionsPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        const conditions = >bundle.entry.map(r => r.resource);\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(conditions), this.loadConditionsPage(nextLink.url));\n        } else {\n          return of(conditions);\n        }\n      }));\n  }\n\n  // Retrieve conditions for a given patient\n  loadConditions(patient: Patient): Observable> {\n    var url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadConditionsPage(url);\n  }\n\n  getCheckedConditions() {\n    return this.conditions.filter(c => {\n      return this.scratchPadService.checkedMapConditions.get(c);\n    });\n  }\n\n  // Retrieve allergies for a given patient\n  loadAllergies(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + \"/AllergyIntolerance\" + \"?patient=\" + patient.id;\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no allergies\n          return new Array();\n        }\n      }));\n  }\n\n  // Gets the state of the conditions column (default or scratch pad)\n  getColumnState(): String {\n    return this.columnState;\n  }\n\n  // Let the service know that the column state has changed\n  setColumnState(newColumnState: String): void {\n    this.columnState = newColumnState;\n  }\n\n  // TODO: Cache API calls into data structures that last for the duration of a session \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsChartComponent.html":{"url":"components/ConditionsChartComponent.html","title":"component - ConditionsChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsChart/conditionsChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsChart\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collapseQueue\n                            \n                            \n                                conditionGrouping\n                            \n                            \n                                conditionGroupingName\n                            \n                            \n                                conditions\n                            \n                            \n                                selected\n                            \n                            \n                                textInputForEdit\n                            \n                            \n                                viewToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ellipsesToggle\n                            \n                            \n                                expand\n                            \n                            \n                                groupConditions\n                            \n                            \n                                loadFinished\n                            \n                            \n                                newTable\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                scratchPadCheckBoxes\n                            \n                            \n                                selectCondition\n                            \n                            \n                                sortCondition\n                            \n                            \n                                tableNavigation\n                            \n                            \n                                toggleExpansion\n                            \n                            \n                                updateScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ellipsesToggle\n                        \n                        \n                    \n                \n            \n            \n                \nellipsesToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            groupConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngroupConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadFinished\n                        \n                        \n                    \n                \n            \n            \n                \nloadFinished()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newTable\n                        \n                        \n                    \n                \n            \n            \n                \nnewTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLocation\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scratchPadCheckBoxes\n                        \n                        \n                    \n                \n            \n            \n                \nscratchPadCheckBoxes(checked: boolean, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsortCondition(x: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tableNavigation\n                        \n                        \n                    \n                \n            \n            \n                \ntableNavigation(clickedSet: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clickedSet\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleExpansion\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapseQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGroupingName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Active\", \"Inactive\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInputForEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'conditionsChart',\n  templateUrl: './conditionsChart.html'\n})\nexport class ConditionsChartComponent {\n  selected: Condition;\n  conditions: Array = [];\n  viewToggle: boolean = false;\n  collapseQueue: Array = [];\n  conditionGrouping: Array = [];\n  conditionGroupingName: Array = [\"Active\", \"Inactive\"];\n  textInputForEdit: String;\n\n  @Input() patient: Patient;\n\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  constructor(\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = conditions;\n        this.loadFinished();\n      });\n    }\n  }\n\n  selectCondition(condition: Condition) {\n    this.selected = condition;\n    this.conditionSelected.emit(this.selected);\n    for (let c of this.conditions) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  sortCondition(x: string) {\n    if (x == \"date-asc\" || x == \"date-desc\") {\n      var a = 1;\n      if (x == \"date-asc\") {\n        a = -a;\n      }\n\n      for (let c of this.conditionGrouping) {\n        c.sort((n1, n2) => {\n          if (n1.code['coding'][0]['code'] > n2.code['coding'][0]['code']) {\n            return a;\n          }\n          if (n1.code['coding'][0]['code']  {\n      if (n1.onsetDateTime  n2.onsetDateTime) {\n        return -1;\n      }\n    })\n    var diff = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n\n    for (let c of this.conditions) {\n      c.isVisible = true;\n      var newDate = new Date(c.onsetDateTime).getTime() + diff;\n      c.relativeDateTime = new Date(newDate).toDateString();\n      c.relativeDateTime = moment(newDate).toISOString();\n    }\n    if (this.viewToggle == false) {\n      //this.viewConditionList = JSON.parse(JSON.stringify(this.conditions));\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n    this.conditionService.conditions = this.conditions;\n    this.groupConditions();\n  }\n\n  // Method for basic toggling, using JSON functions to toggle internal Angular2 module OnChanges for UI reactivity\n  ellipsesToggle() {\n    // Basic logic for toggle, assuming this.conditions contains all info, and this.viewConditionList is the modified list being used to display data\n    if (this.viewToggle == false) {\n      for (let c of this.conditions) {\n        c.isVisible = true;\n      }\n      this.viewToggle = true;\n    }\n  }\n\n  toggleExpansion() {\n\n    if (this.viewToggle == true) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n      this.viewToggle = false;\n    }\n  }\n\n  scratchPadCheckBoxes(checked: boolean, value) {\n\n    if (checked) {\n      // this.conditions[value].isSelected = true;\n      this.scratchPadService.toAddToCondSpArray.push(this.conditions[value]);\n    }\n    else {\n      // this.conditions[value].isSelected = false;\n      let temp = this.scratchPadService.toAddToCondSpArray.indexOf(this.conditions[value]);\n      if (temp > -1) {\n        // This will actually delete instead of simply setting to null, which will throw errors in the long run\n        this.scratchPadService.toAddToCondSpArray.splice(temp, 1);\n      }\n    }\n  }\n\n  updateScratchPad() {\n    //this.scratchPadService.buttonClicked(true);\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n\n  groupConditions() {\n    for (let c of this.conditions) {\n      if (c.clinicalStatus == \"active\") {\n        if (!this.conditionGrouping[0]) {\n          this.conditionGrouping[0] = [c];\n        }\n        else {\n          this.conditionGrouping[0].push(c);\n        }\n      }\n      else {\n        if (!this.conditionGrouping[1]) {\n          this.conditionGrouping[1] = [c];\n        }\n        else {\n          this.conditionGrouping[1].push(c);\n        }\n      }\n    }\n    // this.conditionGrouping[1] = this.conditionGrouping[0];\n  }\n\n  tableNavigation(clickedSet: number) {\n    for (let c of this.conditionGrouping) {\n      let cNum = this.conditionGrouping.indexOf(c);\n      if (cNum != clickedSet) {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = true;\n      }\n      else {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = false;\n      }\n    }\n  }\n\n  newTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number) {\n    if (this.conditionGroupingName.indexOf(tableName) == -1) {\n      this.conditionGroupingName.push(tableName);\n      for (let c of this.conditions) {\n        // Right now this will only allow for a table with one quality!\n        var fullPath = c;\n        dataLocation.forEach(element => {\n          try {\n            fullPath = c[element];\n          }\n          catch (error) {\n            console.log('That field does not exist on this Condition' + c);\n          }\n        });\n        // Testing condition and adding if it's true\n        if (quality) {\n          console.log(fullPath);\n          if (!this.conditionGrouping[groupingCount]) {\n            this.conditionGrouping[groupingCount] = [c];\n          }\n          else {\n            this.conditionGrouping[groupingCount].push(c);\n\n          }\n        }\n      }\n    }\n    else {\n      console.log(\"This table already exists\");\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Tools\n    \n      \n      \n    \n  \n  (none)\n  \n    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}\n    \n    \n      \n        \n          \n          Description\n          Status\n          Onset\n           \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              ... {{cSub['code']['text']}} {{cSub['code']['coding'][0]['code']}}\n            \n            {{cSub.clinicalStatus}}\n            {{cSub.relativeDateTime}}\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tools                        (none)   0\" id=\"tableParentEle\">    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}                                          Description          Status          Onset                                                                                                                 ... {{cSub[\\'code\\'][\\'text\\']}} {{cSub[\\'code\\'][\\'coding\\'][0][\\'code\\']}}                        {{cSub.clinicalStatus}}            {{cSub.relativeDateTime}}                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsComponent.html":{"url":"components/ConditionsComponent.html","title":"component - ConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditions/conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditions\n            \n\n\n\n\n            \n                templateUrl\n                ./conditions.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conditionGrouping\n                            \n                            \n                                conditions\n                            \n                            \n                                justCreated\n                            \n                            \n                                loaded\n                            \n                            \n                                scratchPadConditions\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                viewToggle\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                updateService\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            justCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scratchPadConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\ndeclare var $: any; //Necessary in order to use jQuery to open popup.\n\n@Component({\n  selector: 'conditions',\n  templateUrl: './conditions.html'\n})\nexport class ConditionsComponent extends BaseColumn {\n  // The currently selected condition in the list.\n  selected: Condition;\n\n  // The list of conditions being displayed.\n  conditions: Array = [];\n  scratchPadConditions: any = [];\n\n  // for checking whenever the page is loaded\n  loaded: boolean = false;\n\n  viewToggle: boolean = false;\n  conditionGrouping: Array = [];\n  justCreated: boolean;\n\n  // for column switching\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private fhirService: FhirService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService\n  ) {\n    super();\n    this.justCreated = true;\n    this.scratchPadConditions = this.getScratchPadConditions();\n\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    // Triggered if a new patient is selected (not even implemented yet).\n    this.selected = null;\n    this.conditions = [];\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = this.conditions.concat(conditions);\n        this.onLoadComplete();\n      });\n    }\n  }\n\n  // Called when all conditions have been loaded.\n  onLoadComplete() {\n    console.log(\"Loaded \" + this.conditions.length + \" conditions.\");\n\n    this.conditions.sort((c1, c2) => {\n      return c2.onsetDateTime.localeCompare(c1.onsetDateTime);\n    });\n\n    // Scale dates to make them appear more recent for demos.\n    // 0.8 is an arbitrary value that produces realistic dates.\n    if (this.conditions.length > 0) {\n      let RECENCY_MULTIPLIER = 0.8;\n      let timeSinceConditionOnset = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n      let scaledTimeSinceConditionOnset = Math.floor(RECENCY_MULTIPLIER * timeSinceConditionOnset);\n\n      for (let condition of this.conditions) {\n        condition.isVisible = true;\n        let relativeDateTime = new Date(condition.onsetDateTime).getTime() + scaledTimeSinceConditionOnset;\n        condition.relativeDateTime = moment(relativeDateTime).toISOString();\n      }\n    }\n\n    if (!this.viewToggle) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n\n    this.conditionService.conditions = this.conditions;\n\n    // for rendering elements only after page is loaded (there probably is a better way)\n    this.loaded = true;\n\n    // initialize the scratchPadService totalConditions with all the stuff\n    this.scratchPadService.initConditions(this.conditions);\n  }\n\n  // Update the service to store correct column state\n  updateService(): void {\n    this.conditionService.setColumnState(this.columnState);\n  }\n\n  // ===============================================================================================================================================\n  // ======================================================== GETTERS AND SETTERS===================================================================\n  // ===============================================================================================================================================\n\n  // retrieves the selected conditions from the scratch pad\n  getScratchPadConditions() {\n    return this.scratchPadService.getConditions();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Conditions\n      \n        \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Testing condition popover\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Conditions                                                                          Testing condition popover  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsDisplay.html":{"url":"components/ConditionsDisplay.html","title":"component - ConditionsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllConditions\n                            \n                            \n                                checkCondition\n                            \n                            \n                                expand\n                            \n                            \n                                getDateString\n                            \n                            \n                                isConditionAssociated\n                            \n                            \n                                isConditionChecked\n                            \n                            \n                                isConditionSelected\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printmsg\n                            \n                            \n                                selectCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditions\n                            \n                            \n                                scratchPadMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService, conditionService: ConditionService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditions\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scratchPadMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllConditions\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllConditions(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCondition\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCondition(checkedCondition: Condition, checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedCondition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateString\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateString(c: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionAssociated(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionChecked(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionSelected(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printmsg\n                        \n                        \n                    \n                \n            \n            \n                \nprintmsg(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Condition } from '../../models/condition.model';\n\n@Component({\n  selector: 'conditionsDisplay',\n  templateUrl: './conditionsDisplay.html'\n})\nexport class ConditionsDisplay {\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() conditions: Array;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // Whether this display of conditions is within the scratch pad.\n  @Input() scratchPadMode: boolean = false;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private scratchPadService: ScratchPadService,\n    private conditionService: ConditionService,\n    private associationService: AssociationService\n  ) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking conditions.\n    if (this.conditionService.getColumnState() === \"scratchpad\") {\n      // Add 'Remove from Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Remove from Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.removeCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    } else {\n      // Add 'Add to Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Add to Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.addCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    }\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n  }\n\n  // Selects an individual condition (which causes it to be highlighted).\n  // This is NOT the same as checking a condition.\n  selectCondition(condition: Condition) {\n    this.conditionService.selectedCondition = condition;\n  }\n\n  // Check or uncheck an individual condition\n  checkCondition(checkedCondition: Condition, checked: boolean) {\n    this.scratchPadService.checkCondition(checked, checkedCondition);\n  \n    // When an individual condition is checked, the \"check all\" checkbox should be unchecked.\n    this.isAllChecked = false;\n  }\n\n  isConditionSelected(condition: Condition) {\n    return condition == this.conditionService.selectedCondition;\n  }\n\n  // Determine whether a condition is currently checked.\n  isConditionChecked(condition: Condition) {\n    return this.scratchPadService.checkedMapConditions.get(condition) || false;\n  }\n\n  // Determine whether a condition is currently associated (based on associations tool)\n  isConditionAssociated(condition: Condition) {\n    return this.associationService.associatedMapConditions.get(condition) || false;\n  }\n\n  // Check or uncheck all conditions.\n  checkAllConditions(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let condition of this.conditions) {\n        this.scratchPadService.checkCondition(checked, condition);\n    }\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n  printmsg(condition: Condition) {\n      console.log(condition);\n  }\n\n  getDateString(c: Condition) {\n    let d = new Date(c.onsetDateTime);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Description\n        Status\n        Onset\n      \n    \n    \n       \n        \n          \n        \n        \n          ... {{c['code']['text']}} \n        \n        {{c.clinicalStatus}}\n        {{c.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Description        Status        Onset                                                                 ... {{c[\\'code\\'][\\'text\\']}}                 {{c.clinicalStatus}}        {{c.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContextMenuComponent.html":{"url":"components/ContextMenuComponent.html","title":"component - ContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contextMenu/contextMenu.component.ts\n\n\n    \n        Description\n    \n    \n        A reusable context menu component.\nExample Usage:\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    this.menu.addOption({\n  'icon': 'glyphicon-stats', // icon to display\n  'text': 'Add to Trend Tool', // text to display\n  'exec': function(data) { // what to execute upon click\n      console.log(data);\n  }\n});\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                contextMenu\n            \n\n\n\n\n            \n                templateUrl\n                ./contextMenu.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickSubscription\n                            \n                            \n                                closeable\n                            \n                            \n                                CLOSEABLE_DELAY\n                            \n                            \n                                data\n                            \n                            \n                                left\n                            \n                            \n                                options\n                            \n                            \n                                top\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addOption\n                            \n                            \n                                    Private\n                                handleDocClick\n                            \n                            \n                                    Private\n                                handleOptionClick\n                            \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addOption\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOption(option: ContextMenuOption)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:58\n                \n            \n\n\n            \n                \n                    Add an option to the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                ContextMenuOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleDocClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDocClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:67\n                \n            \n\n\n            \n                \n                    Hide the context menu if user clicks outside of it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleOptionClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleOptionClick(option, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:113\n                \n            \n\n\n            \n                \n                    Handles clicks on context menu options. If the option \nhas an associated exec function, it is executed with \ndata passed as the parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The context menu option that was clicked.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:133\n                \n            \n\n\n            \n                \n                    Closes the context menu. Also handles cleaning up \nthe click subscription, which is no longer needed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event triggering the hiding.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(data, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:82\n                \n            \n\n\n            \n                \n                    Show the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to be passed to the context menu.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered the menu.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:43\n                            \n                        \n\n                \n                    \n                        Observable subscription to document clicks. Clicking out of the \ncontext menu closes it.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLOSEABLE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:50\n                            \n                        \n\n                \n                    \n                        Prevents a glitch in contexts where the menu is opened by a left click.\nWithout this delay on being able to close the menu, the menu would close\nthe moment it opened.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:33\n                            \n                        \n\n                \n                    \n                        The data passed into the menu from wherever it was triggered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:28\n                            \n                        \n\n                \n                    \n                        The list of options displayed in the menu.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { ContextMenuOption } from '../../models/contextMenuOption.model';\nimport { fromEvent } from 'rxjs';\n\n/**\n * A reusable context menu component.\n * \n * Example Usage:\n * \n * @example\n * this.menu.addOption({\n *              'icon': 'glyphicon-stats', // icon to display\n *              'text': 'Add to Trend Tool', // text to display\n *              'exec': function(data) { // what to execute upon click\n *                  console.log(data);\n *              }\n * });\n */\n@Component({\n  selector: 'contextMenu',\n  templateUrl: './contextMenu.html'\n})\nexport class ContextMenuComponent {\n\n  /**\n  * The list of options displayed in the menu.\n  */\n  options: Array = [];\n\n  /**\n  * The data passed into the menu from wherever it was triggered.\n  */\n  data: any = null;\n\n  visible: boolean = false;\n  top: string = '0px';\n  left: string = '0px';\n\n  /**\n  * Observable subscription to document clicks. Clicking out of the \n  * context menu closes it.\n  */\n  clickSubscription: any = null;\n\n  /**\n  * Prevents a glitch in contexts where the menu is opened by a left click.\n  * Without this delay on being able to close the menu, the menu would close\n  * the moment it opened.\n  */\n  CLOSEABLE_DELAY: number = 100;\n  closeable: boolean = false;\n\n  constructor(private ref: ElementRef) { }\n\n  /**\n   * Add an option to the context menu.\n   */\n  public addOption(option: ContextMenuOption) {\n    this.options = this.options.concat(option);\n  }\n\n  /**\n  * Hide the context menu if user clicks outside of it.\n  * \n  * @param event The click event on the document.\n  */\n  private handleDocClick(event) {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      // Only hide the menu if it is currently closeable.\n      if (this.closeable) {\n          this.hide(null);\n      }\n    }\n  }\n\n  /**\n   * Show the context menu.\n   * \n   * @param data Data to be passed to the context menu.\n   * @param event The click event that triggered the menu.\n   */\n  public show(data, event) {\n    this.data = data;\n\n    // Set the location of the menu to where the user clicked.\n    this.top = event.pageY + 'px';\n    this.left = event.pageX + 'px';\n\n    this.visible = true;\n    this.closeable = false;\n\n    // Allow the menu to be closed only after an interval has elapsed.\n    setTimeout(() => { this.closeable = true; }, this.CLOSEABLE_DELAY);\n\n    // Disable the standard click behavior.\n    event.preventDefault();\n\n    // Subscribe to document click events.\n    this.clickSubscription = fromEvent(document, 'click')\n      .subscribe((event) => {\n        this.handleDocClick(event);\n    });\n  }\n\n  /**\n   * Handles clicks on context menu options. If the option \n   * has an associated `exec` function, it is executed with \n   * `data` passed as the parameter.\n   * \n   * @param option The context menu option that was clicked.\n   * @param event The click event on the option\n   */\n  private handleOptionClick(option, event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (option.exec) {\n      // Execute the function tied to the clicked menu option.\n      option.exec(this.data);\n    }\n\n    // Hide the context menu.\n    this.hide(event);\n  }\n\n  /**\n   * Closes the context menu. Also handles cleaning up \n   * the click subscription, which is no longer needed.\n   * \n   * @param event The click event triggering the hiding.\n   */\n  private hide(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    // Unsubscribe from document click events.\n    if (this.clickSubscription) {\n      this.clickSubscription.unsubscribe();\n      this.clickSubscription = null;\n    }\n\n    // Hide the menu and reset the associated data.\n    this.visible = false;\n    this.data = null;\n  }\n}\n    \n\n    \n        \n\n  {{ option.text }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ option.text }}'\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextMenuOption.html":{"url":"classes/ContextMenuOption.html","title":"class - ContextMenuOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextMenuOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contextMenuOption.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a context menu option for use with \nContextMenuComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exec\n                            \n                            \n                                icon\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:23\n                            \n                        \n\n                \n                    \n                        Function to be executed upon click of the option\nin the context menu. \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                Data associated with the context menu.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:10\n                            \n                        \n\n                \n                    \n                        Icon to display next to the option (from the \nBootstrap Icons library).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:15\n                            \n                        \n\n                \n                    \n                        Text to be displayed in the option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ContextMenuOption {\n    /**\n     * Icon to display next to the option (from the \n     * Bootstrap Icons library).\n     */\n    icon: string;\n\n    /**\n     * Text to be displayed in the option.\n     */\n    text: string;\n\n    /**\n     * Function to be executed upon click of the option\n     * in the context menu. \n     * \n     * @param data Data associated with the context menu.\n     */\n    exec: (data) => void;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DoctorService.html":{"url":"injectables/DoctorService.html","title":"injectable - DoctorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DoctorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/doctor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configMode\n                            \n                            \n                                filter\n                            \n                            \n                                graphConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGraphConfig\n                            \n                            \n                                assignVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGraphConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddGraphConfig(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assignVisible\n                        \n                        \n                    \n                \n            \n            \n                \nassignVisible(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { Condition } from '../models/condition.model';\n\n@Injectable()\nexport class DoctorService {\n  filter: Array = [];\n  configMode: boolean = true;\n  graphConfig: Array> = [];\n\n  constructor(private cookieService: CookieService) { }\n\n  // The change to visiblities modifiers for the list should be an input to assignVisible(), and input through conditions.component.ts\n  assignVisible(list: Array) {\n    // Wipes the lists, as assignVisible() gets called on subscribe){data == true} for conditions.component.ts\n    // Needs to have a clean list, or it will push doubles/triples, or more\n\n    // Use \"let of\" to generate enumerated list, allows for pass by value iteration\n    let count = 0;\n    for (let c of list) {\n      // Right now the logic only excludes one code, for testing purposes\n      // thisModel is a undefined data model, depending on if we want to leave the service with the data we need to create a static model, but\n      // it should work for testing purposes\n\n      if (count ) {\n    this.graphConfig.push(list);\n    this.cookieService.set('graphConfig', JSON.stringify(this.graphConfig));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encounter.html":{"url":"classes/Encounter.html","title":"class - Encounter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encounter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/encounter.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                position\n                            \n                            \n                                reason\n                            \n                            \n                                status\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEndDate\n                            \n                            \n                                getLogValue\n                            \n                            \n                                getReason\n                            \n                            \n                                getStartDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEndDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetEndDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReason\n                        \n                        \n                    \n                \n            \n            \n                \ngetReason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStartDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetStartDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Encounter {\n  \n  id: string;\n  status: string;\n\n  period: {\n    start: string;\n    end: string;\n  };\n\n  text: {\n    status: string;\n    div: string;\n  }\n\n  position:string;\n  // Reasons for the encounter.\n  reason: {\n    text: string;\n\n    // Coding details for the encounter reason.\n    coding: {\n      system: string;\n      code: string;\n    }[];\n  }[];\n\n  // Get the first reason for the encounter (if there is one). Otherwise, return null.\n  getReason(): string {\n    // Check if there are any reasons. If not, return null.\n    if (!this.reason) {\n      return null;\n    }\n\n    for (let r of this.reason) {\n      if (r.text) {\n        // Return the text associated with the reason.\n        return r.text;\n      }\n    }\n\n    return null;\n  }\n  getStartDate(): Date { return new Date(this.period.start)}\n  getEndDate(): Date { return new Date(this.period.end)}\n\n  getLogValue(): any {\n    return Math.log(this.getStartDate().getTime())\n  }\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncounterService.html":{"url":"injectables/EncounterService.html","title":"injectable - EncounterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EncounterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encounter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                    Public\n                                loadEncounters\n                            \n                            \n                                    Private\n                                loadEncountersPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/encounter.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Encounter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncountersPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncountersPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Encounter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/encounter.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, concat } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Encounter } from '../models/encounter.model';\n\n\n@Injectable()\nexport class EncounterService {\n  private path = '/Encounter';\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  private loadEncountersPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        let encounters: Array = [];\n        if (bundle.entry) {\n          encounters = bundle.entry.map(e => this.deserialize(e['resource']));\n        }\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(encounters), this.loadEncountersPage(nextLink.url));\n        } else {\n          return of(encounters);\n        }\n      }));\n  }\n\n  public loadEncounters(patient: Patient): Observable> {\n    const url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadEncountersPage(url);\n  }\n\n  // We cannot simply cast the JSON object to an Encounter, because this casted\n  // Encounter will not have the methods of the Encounter class.\n  private deserialize(input: any): Encounter {\n    var fixed: Encounter = new Encounter();\n\n    for (let prop in input) {\n      fixed[prop] = input[prop];\n    }\n\n    return fixed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FhirService.html":{"url":"injectables/FhirService.html","title":"injectable - FhirService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FhirService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/fhir.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                base\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequestOptions\n                            \n                            \n                                getUrl\n                            \n                            \n                                setToken\n                            \n                            \n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/fhir.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestOptions(withAuth: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withAuth\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetToken(newToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class FhirService {\n\n  constructor() { }\n\n  private base: string;\n  public token: string;\n\n  getUrl(): string {\n    return this.base;\n  }\n\n  setUrl(url: string) {\n    this.base = url;\n  }\n\n  setToken(newToken: string) {\n    this.token = newToken;\n  }\n\n  getRequestOptions(withAuth: boolean = true): { headers: HttpHeaders } {\n    let headers = new HttpHeaders({'Accept': 'application/json'});\n    if (withAuth) {\n      headers = headers.append('Authorization', 'Bearer ' + this.token);\n    }\n    return { headers: headers };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/form.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Form {\n\tid: number;\n\ttype: string;\n\tdata : any;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormBuilder.html":{"url":"components/FormBuilder.html","title":"component - FormBuilder","body":"\n                   \n\n\n\n\n\n  Components\n  FormBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-builder/form-builder.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                form-builder\n            \n\n\n            \n                styles\n                #main_list {list-style-type: none;}\n            \n\n\n            \n                templateUrl\n                ./form-builder.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                combData\n                            \n                            \n                                components\n                            \n                            \n                                    Public\n                                forms\n                            \n                            \n                                totalData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getData\n                            \n                            \n                                getForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                storeData\n                            \n                            \n                                    Public\n                                submitClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formInput\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmitClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formInput\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSubmitClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForms\n                        \n                        \n                    \n                \n            \n            \n                \ngetForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('form')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Form[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Form } from '../../models/form.model';\n\n@Component({\n  selector: 'form-builder',\n  templateUrl: './form-builder.html',\n  styles: [\"#main_list {list-style-type: none;}\"]\n})\n\nexport class FormBuilder  {\n\t// GLOBAL VARIABLES\n\tpublic forms: Form[];\n\t@ViewChildren('form') components: any;\n\t\n\ttotalData: String[] = [];\n\tcombData: any;\n\t\n\t@Input() formInput: any[];\n\t@Input() userId: String; \n\t\n\t@Output() onSubmitClick: EventEmitter = new EventEmitter();\n\t\n\t// ============================== EVENT METHODS ==================================\n\tconstructor(){}\n\t\n\tngOnInit(): void {\n\t\tthis.getForms();\n\t}\n\t\t\n\t// method that uses service to get the forms from the server\n\tgetForms(): void {\n\t\t//this.formBuilderService.getTemplate().then(forms => {this.forms = forms; console.log(forms);});\n\t\tthis.forms = this.formInput;\n\t}\n\t\n\t// ===================== LOGIC WHEN SUBMIT BUTTON CLICKED ========================\n\t\n\tpublic submitClick(): void {\n\t\tthis.totalData = [];\n\t\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n  \n    \n    \n       \n    \n    \n       \n    \n    \n       \n    \n    \n      \n    \n    \n      \n    \n  \n   Submit \n\n    \n\n    \n            #main_list {list-style-type: none;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Submit '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormBuilder'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormCreatorModule.html":{"url":"modules/FormCreatorModule.html","title":"module - FormCreatorModule","body":"\n                   \n\n\n\n\n    Modules\n    FormCreatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { CheckboxInline } from '../components/form_components/checkbox-inline.component';\nimport { NormalBox1 } from '../components/form_components/normal-box-1.component';\nimport { NormalBox2 } from '../components/form_components/normal-box-2.component';\nimport { SelectListSingle } from '../components/form_components/select-list-single.component';\nimport { ScratchPadUpdate } from '../components/form_components/scrachpad-update.component';\n\n@NgModule({\n\timports: [\n\t\tFormsModule,\n\t\tBrowserModule\n\t],\n\tdeclarations: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t], exports: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t]\n})\n\nexport class FormCreatorModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HighlightDirective.html":{"url":"directives/HighlightDirective.html","title":"directive - HighlightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  HighlightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/highlight.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [highlight]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlightText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlightText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer, Input} from '@angular/core';\n\n@Directive({\n\tselector: '[highlight]'\n})\nexport class HighlightDirective {\n\n\t@Input('highlightText') text: string = '';\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t\tconsole.log(\"Highlighting!\");\n\t\tthis.el.nativeElement.textContent = 'foo';\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoricalTrendsComponent.html":{"url":"components/HistoricalTrendsComponent.html","title":"component - HistoricalTrendsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoricalTrendsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/historicalTrends/historicalTrends.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                historicalTrends\n            \n\n\n\n\n            \n                templateUrl\n                ./historicalTrends.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartSize\n                            \n                            \n                                    Private\n                                maxDate\n                            \n                            \n                                menu\n                            \n                            \n                                    Private\n                                minDate\n                            \n                            \n                                mouseEvent\n                            \n                            \n                                mouseSubscription\n                            \n                            \n                                    Private\n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onDataPointSelect\n                            \n                            \n                                resetDateRange\n                            \n                            \n                                setDateRange\n                            \n                            \n                                setDateRangeMonths\n                            \n                            \n                                setDateRangeYears\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trendsService: HistoricalTrendsService, observationService: ObservationService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDataPointSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonDataPointSelect(chartEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartEvent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nresetDateRange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRange(form)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeMonths\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeMonths(months)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    months\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeYears\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeYears(years)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    years\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [800, 200]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            patient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\nimport * as moment from 'moment';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { PatientService } from '../../services/patient.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'historicalTrends',\n  templateUrl: './historicalTrends.html'\n})\nexport class HistoricalTrendsComponent {\n  // Width and height of displayed charts.\n  private chartSize: number[] = [800, 200];\n\n  // The minimum and maximum dates for the x-axis of the displayed charts.\n  private minDate: Date = null;\n  private maxDate: Date = null;\n\n  // Reference to the current patient.\n  private patient: Patient;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // Observable subscription to mouse movements.\n  mouseSubscription: any = null;\n\n  // Store the most recent mouse event to keep track of the mouse location.\n  mouseEvent: any = null;\n\n  constructor(\n    private trendsService: HistoricalTrendsService,\n    private observationService: ObservationService,\n    private patientService: PatientService\n  ) {\n      // Track the location of the mouse (needed for context menu).\n      this.mouseSubscription = fromEvent(document, 'mousemove')\n        .subscribe((event) => {\n          this.mouseEvent = event;\n      });\n\n      this.patientService.loadPatient().subscribe(patient => {\n        this.patient = patient;\n      })\n    }\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add option to the context menu shown when clicking data points.\n    this.menu.addOption({\n      'icon': 'glyphicon-list-alt',\n      'text': 'Add to Side Bar',\n      'exec': function(condition) {\n        console.log(\"Add to Side Bar\");\n        // TODO: Implement Add to Side Bar functionality.\n      }.bind(this)\n    });\n  }\n\n  // Set specific (user selected) min and max dates for the x-axis of displayed charts.\n  setDateRange(form) {\n    // Do nothing if one of the dates is invalid.\n    if (!moment(form.minDate).isValid() || !moment(form.maxDate).isValid()) {\n      return;\n    }\n\n    this.minDate = new Date(form.minDate);\n    this.maxDate = new Date(form.maxDate);\n  }\n\n  // Reset the min and max dates for the x-axis of displayed charts (so all data is shown).\n  resetDateRange() {\n    this.minDate = null;\n    this.maxDate = null;\n\n    // Choose the earliest date of all charts, and the latest date of all charts.\n    for (let chart of this.trendsService.charts) {\n      let [chartMinDate, chartMaxDate] = this.trendsService.getDateRange(chart);\n\n      if (this.minDate == null || chartMinDate.getTime()  this.maxDate.getTime()) {\n        this.maxDate = chartMaxDate;\n      }\n    }\n  }\n\n  // Subtracts the given number of years from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeYears(years) {\n    this.minDate = moment().subtract(years, 'years').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Subtracts the given number of months from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeMonths(months) {\n    this.minDate = moment().subtract(months, 'months').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Called when a data point is clicked on a chart.\n  onDataPointSelect(chartEvent) {\n    this.menu.show(null, this.mouseEvent);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n       Dashboard\n      Back\n    \n    \n      \n        \n          Conditions\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Findings List\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Medications\n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Fit All\n    25 Years\n    10 Years\n    5 Years\n    2 Years\n    1 Year\n    6 Months\n    3 Months\n    1 Month\n    \n       Specify\n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n      Specify start and end dates\n        ×\n      \n      \n        \n          \n          \n          Submit\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Dashboard      Back                                Conditions                                                                                                                Findings List                                                                                                                Medications                                                                                                    Fit All    25 Years    10 Years    5 Years    2 Years    1 Year    6 Months    3 Months    1 Month           Specify                                Specify start and end dates        ×                                                  Submit                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HistoricalTrendsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoricalTrendsService.html":{"url":"injectables/HistoricalTrendsService.html","title":"injectable - HistoricalTrendsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoricalTrendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/historicalTrends.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charts\n                            \n                            \n                                chartsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMedicationChart\n                            \n                            \n                                    Public\n                                addObservationChart\n                            \n                            \n                                    Public\n                                getDateRange\n                            \n                            \n                                    Private\n                                getValueRange\n                            \n                            \n                                    Public\n                                removeChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMedicationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMedicationChart(medication: Medication)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addObservationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addObservationChart(chartName, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDateRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDateRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChart(chartName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            charts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Chart } from '../models/chart.model';\nimport { Medication } from '../models/medication.model';\n\n@Injectable()\nexport class HistoricalTrendsService {\n  // Maps the name of a chart to the chart object itself.\n  chartsMap: Map = new Map();\n  \n  // Store all the charts currently being displayed.\n  charts: Array = [];\n\n  constructor() { }\n\n  // Add a new chart displaying a specific observation in the trends tool.\n  public addObservationChart(chartName, data) {\n    // A chart already exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      return;\n    }\n\n    if (data == null || data.length == 0) {\n      // Avoid creating an empty chart.\n      return;\n    }\n\n    let chart = new Chart();\n\n    // Get the title associated with the data point.\n    chart.title = data[0].code['text'];\n\n    for (let point of data) {\n      // Skip data points without a numeric value.\n      if (!point.valueQuantity || !point.valueQuantity['value']) {\n        continue;\n      }\n\n      // Add the data point to the chart.\n      chart.data.push({\n        name: new Date(point.relativeDateTime),\n        value: point.valueQuantity['value']\n      });\n    }\n\n    // Sort data points in order of date of occurrence.\n    chart.data = chart.data.sort((p1, p2) => p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    // Set the min and max y-axis values for the chart, providing a small buffer\n    // of extra space.\n    let [min, max] = this.getValueRange(chart);\n    let buffer = (max - min) * 0.2;\n\n    chart.yScaleMin = min - buffer;\n    chart.yScaleMax = max + buffer;\n\n    // Add the normal range values for the chart (displayed as horizontal \"reference\" lines).\n    chart.normalValues = [\n      {\n        name: \"Low\",\n        value: min // TODO: These shouldn't be hardcoded.\n      },\n      {\n        name: \"High\",\n        value: max // TODO: These shouldn't be hardcoded.\n      }\n    ];\n\n    // Add the newly created chart to the list of charts.\n    this.chartsMap.set(chartName, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  public addMedicationChart(medication: Medication) {\n    // A chart already exists for the given medication.\n    if (this.chartsMap.has(medication.name)) {\n      return;\n    }\n\n    let chart = new Chart();\n    chart.title = medication.name + ' (' + medication.dosageUnits + ')';\n\n    // Add every period the medication was taken to the chart.\n    for (let i = 0; i  0 ? medication.periods[i - 1] : null;\n      let next = i  p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    this.chartsMap.set(medication.name, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  // Remove the chart with the given name from the trends tool.\n  public removeChart(chartName) {\n    // First check if a chart exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      this.chartsMap.delete(chartName);\n      this.charts = Array.from(this.chartsMap.values());\n    }\n  }\n\n  // Get the smallest and largest values from a given chart.\n  private getValueRange(chart: Chart) {\n    // If the data provided is empty, return [0, 0].\n    if (!chart.data || chart.data.length == 0) {\n      return [0, 0];\n    }\n\n    let min = chart.data[0].value;\n    let max = chart.data[0].value;\n\n    for (let point of chart.data) {\n      min = Math.min(min, point.value);\n      max = Math.max(max, point.value);\n    }\n\n    return [min, max];\n  }\n\n  // Get the earliest and latest dates associated with any point in a chart.\n  public getDateRange(chart: Chart) {\n    // If the data provided is empty, return today's date.\n    if (!chart.data || chart.data.length == 0) {\n      return [new Date(), new Date()];\n    }\n    \n    let minDate: Date = chart.data[0].name;\n    let maxDate: Date = chart.data[0].name;\n\n    for (let point of chart.data) {\n      if (point.name.getTime()  maxDate.getTime()) {\n        maxDate = point.name;\n      }\n    }\n\n    return [minDate, maxDate];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        High-level component that wraps the components showing \npatient information, the toolbar, the timeline, and the \ntriple list (conditions, observations, and care plans).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectPatientById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, patientService: PatientService, cookieService: CookieService, smartService: SmartService, compiler: Compiler)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartService\n                                                  \n                                                        \n                                                                        SmartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compiler\n                                                  \n                                                        \n                                                                        Compiler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectPatientById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectPatientById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:50\n                \n            \n\n\n            \n                \n                    Select a patient to display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the selected patient.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                        The patient that is being displayed. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Compiler } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { PatientService } from '../../services/patient.service';\nimport { SmartService } from '../../services/smart.service';\nimport { FhirService } from '../../services/fhir.service';\n\nimport { Patient } from '../../models/patient.model';\n\n/**\n * High-level component that wraps the components showing \n * patient information, the toolbar, the timeline, and the \n * triple list (conditions, observations, and care plans).\n */\n@Component({\n    selector: 'home',\n    templateUrl: './home.html'\n})\nexport class HomeComponent {\n    /** The patient that is being displayed. */\n    selected: Patient = null;\n\n    constructor(\n        private fhirService: FhirService,\n        private patientService: PatientService,\n        private cookieService: CookieService,\n        private smartService: SmartService,\n        private compiler: Compiler\n    ) {\n        this.compiler.clearCache();\n        this.fhirService.setUrl(this.cookieService.get('fhirBaseUrl'));\n\n        // Retrieve patient data from sandbox.\n        if (this.fhirService.token) {\n            // Access token is already available.\n            this.selectPatientById(this.patientService.patientId);\n        } else {\n            // Retrieve the access token and patient.\n            this.smartService.authenticate().subscribe(data => {\n                this.fhirService.setToken(data['access_token']);\n                this.selectPatientById(data['patient']);\n            });\n        }\n    }\n\n    /**\n     * Select a patient to display.\n     * @param id The id of the selected patient.\n     */\n    public selectPatientById(id: string) {\n        this.patientService.setPatientId(id);\n        this.patientService.loadPatient().subscribe(patient => {\n            this.selected = patient;\n        });\n    }\n}\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoverBoxComponent.html":{"url":"components/HoverBoxComponent.html","title":"component - HoverBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HoverBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hoverBox/hoverBox.component.ts\n\n\n    \n        Description\n    \n    \n        A component for displaying a hover box containing \ncustom information. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hoverBox\n            \n\n\n\n\n            \n                templateUrl\n                ./hoverBox.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DISPLAY_DELAY\n                            \n                            \n                                items\n                            \n                            \n                                left\n                            \n                            \n                                leftOffset\n                            \n                            \n                                timeoutHandle\n                            \n                            \n                                top\n                            \n                            \n                                topOffset\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                isDate\n                            \n                            \n                                    Private\n                                isMonth\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hoverBox/hoverBox.component.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:69\n                \n            \n\n\n            \n                \n                    Hide the hover box.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDate(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:89\n                \n            \n\n\n            \n                \n                    Check whether x is a date to display it in a custom \nformat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isMonth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMonth(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:97\n                \n            \n\n\n            \n                \n                    Check whether x is a month to display it in a custom \nformat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(items: Array, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:37\n                \n            \n\n\n            \n                \n                    Show the hover box with multiple items.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The items to display in the hover box.\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered showing the hover box.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISPLAY_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:27\n                            \n                        \n\n                \n                    \n                        Time (in ms) following a hover before the hover box appears. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:13\n                            \n                        \n\n                \n                    \n                        The data passed into the hover box from wherever it was triggered. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeoutHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:24\n                            \n                        \n\n                \n                    \n                        Used to track whether the hover box is waiting to be shown. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:16\n                            \n                        \n\n                \n                    \n                        Whether the hover box is currently visible or not. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable } from '@angular/core';\n\n/**\n * A component for displaying a hover box containing \n * custom information. \n */\n@Component({\n  selector: 'hoverBox',\n  templateUrl: './hoverBox.html'\n})\nexport class HoverBoxComponent {\n  /** The data passed into the hover box from wherever it was triggered. */\n  items: Array = null;\n\n  /** Whether the hover box is currently visible or not. */\n  visible: boolean = false;\n\n  top: string = '0px';\n  left: string = '0px';\n  topOffset: number = 18;\n  leftOffset: number = 18;\n\n  /** Used to track whether the hover box is waiting to be shown. */\n  timeoutHandle: any = null;\n\n  /** Time (in ms) following a hover before the hover box appears. */\n  DISPLAY_DELAY: number = 200;\n\n  constructor() { }\n\n  /**\n   * Show the hover box with multiple items.\n   * \n   * @param items The items to display in the hover box.\n   * @param event The click event that triggered showing the hover box.\n   */\n  public show(items: Array, event) {\n    // The hover box is already queued to display, no need to display again.\n    if (this.timeoutHandle != null) {\n      return;\n    }\n\n    this.timeoutHandle = setTimeout(() => {\n      this.items = items;\n\n      // Set the location of the hover box to where the mouse is.\n      var topOffset = 0;\n      var leftOffset = 0;\n      // Code used to test moving the hover box away from the edge of the screen. \n      // TODO: do not hardcode pixels, find information of the pixel box\n       \n      if (window.innerWidth - event.pageX \n    \n\n    \n        \n\n  \n    \n      \n        {{item}}\n        &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;\n        \n      \n      {{item}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item}}                                         {{item}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HoverBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HumanizeBytesPipe.html":{"url":"pipes/HumanizeBytesPipe.html","title":"pipe - HumanizeBytesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HumanizeBytesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/humanizeBytes.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        humanizeBytes\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doIt\n                        \n                        \n                    \n                \n            \n            \n                \ndoIt(n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, args: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'humanizeBytes'\n})\nexport class HumanizeBytesPipe implements PipeTransform {\n\n    transform(value: string, args: string[]) {\n        return this.doIt(parseInt(value));\n    }\n\n    doIt(n): string {\n        if (n  (1 / Math.pow(1024, exp - 1))) ? result.toFixed(2) : result.toFixed(0);\n        return readable + si[exp - 1];\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingAnimation.html":{"url":"components/LoadingAnimation.html","title":"component - LoadingAnimation","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loadingAnimation/loadingAnimation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loading-animation\n            \n\n\n\n\n            \n                templateUrl\n                ./loadingAnimation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loadingAnimation/loadingAnimation.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'loading-animation',\n  templateUrl: './loadingAnimation.html'\n})\nexport class LoadingAnimation {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingAnimation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/map.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                STATIC_MAPPINGS\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            STATIC_MAPPINGS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapService {\n    public static STATIC_MAPPINGS = {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medication.html":{"url":"classes/Medication.html","title":"class - Medication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/medication.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dosageUnits\n                            \n                            \n                                name\n                            \n                            \n                                periods\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, dosageUnits: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/medication.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dosageUnits\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dosageUnits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Medication {\n    name: string;\n    dosageUnits: string;\n\n    periods: {\n        start: Date;\n        end: Date;\n        dosage: number;\n    }[];\n    \n    constructor(name: string, dosageUnits: string) {\n        this.periods = [];\n        this.name = name;\n        this.dosageUnits = dosageUnits;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MedicationsComponent.html":{"url":"components/MedicationsComponent.html","title":"component - MedicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MedicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/medications/medications.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                medications\n            \n\n\n\n\n            \n                templateUrl\n                ./medications.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                medications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carePlanService: CarePlanService, historicalTrendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historicalTrendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck(medication: Medication, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Medication } from '../../models/medication.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'medications',\n  templateUrl: './medications.html'\n})\nexport class MedicationsComponent {\n  medications: Array;\n  @Input() patient: Patient;\n\n  constructor(\n    private carePlanService: CarePlanService,\n    private historicalTrendsService: HistoricalTrendsService\n  ) { }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.carePlanService.loadMedications(this.patient).subscribe(medications => {\n        this.medications = medications;\n        console.log('Loaded ' + this.medications.length + ' medications.');\n      })\n    }\n  }\n\n  check(medication: Medication, event: any) {\n    // Check whether care plan was checked or unchecked.\n    if (event.target.checked) {\n      this.historicalTrendsService.addMedicationChart(medication);\n    } else {\n      this.historicalTrendsService.removeChart(medication.name);\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    \n      \n      Name\n    \n  \n  \n     \n      \n        \n      \n      {{m.name}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Name                                       {{m.name}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'MedicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewCondition.html":{"url":"components/NewCondition.html","title":"component - NewCondition","body":"\n                   \n\n\n\n\n\n  Components\n  NewCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newCondition/newCondition.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                newCondition\n            \n\n\n\n\n            \n                templateUrl\n                ./newCondition.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'newCondition',\n  templateUrl: './newCondition.html'\n})\nexport class NewCondition { }\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n      \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×                  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewCondition'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox1.html":{"url":"components/NormalBox1.html","title":"component - NormalBox1","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-1.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-1\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-1.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-1.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-1\",\n\ttemplateUrl: \"./normal-box-1.html\"\n})\n\nexport class NormalBox1{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox2.html":{"url":"components/NormalBox2.html","title":"component - NormalBox2","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-2.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-2\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-2.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-2.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-2\",\n\ttemplateUrl: \"./normal-box-2.html\"\n})\n\nexport class NormalBox2{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteNavigationComponent.html":{"url":"components/NoteNavigationComponent.html","title":"component - NoteNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoteNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/noteNavigation/noteNavigation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                noteNavigation\n            \n\n\n\n\n            \n                templateUrl\n                ./noteNavigation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeFinalNote\n                            \n                            \n                                closeProgressNote\n                            \n                            \n                                closeSideNote\n                            \n                            \n                                toggleFinalNote\n                            \n                            \n                                toggleProgressNote\n                            \n                            \n                                toggleSideNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeFinalNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseFinalNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeProgressNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseProgressNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeSideNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseSideNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFinalNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFinalNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleProgressNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleProgressNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSideNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSideNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'noteNavigation',\n  templateUrl: './noteNavigation.html',\n})\n\nexport class NoteNavigationComponent {\n\n    toggleSideNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n    }\n\n    closeSideNote() {\n        document.getElementById(\"sideNote\").style.width = \"0px\";\n        if (document.getElementById(\"sideNote\").style.width == \"0px\")\n        {\n            document.getElementById(\"progressNote\").style.width = \"0px\";\n            document.getElementById(\"finalNote\").style.width = \"0px\";\n        }\n\n    }\n\n    toggleProgressNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n        document.getElementById(\"progressNote\").style.width = \"34%\";\n    }\n\n    closeProgressNote() {\n        document.getElementById(\"progressNote\").style.width = \"0px\";\n        if (document.getElementById(\"progressNote\").style.width == \"0px\")\n        {\n            document.getElementById(\"finalNote\").style.width = \"0px\";\n        }\n    }\n\n    toggleFinalNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n        document.getElementById(\"progressNote\").style.width = \"34%\";\n        document.getElementById(\"finalNote\").style.width = \"33%\";\n    }\n\n    closeFinalNote() {\n        document.getElementById(\"finalNote\").style.width = \"0px\";\n    }\n}\n\n    \n\n    \n        \n\n  \n     \n    \n    \n  \n\n&times;\n  \n    Side\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n&times;\n  \n    Progress\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n&times;\n  \n    Final\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 ×      Side    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  ×      Progress    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  ×      Final    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoteNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Observation.html":{"url":"classes/Observation.html","title":"class - Observation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Observation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/observation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                grouping\n                            \n                            \n                                id\n                            \n                            \n                                referenceRange\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCode\n                            \n                            \n                                    Static\n                                getText\n                            \n                            \n                                    Static\n                                getUnits\n                            \n                            \n                                    Static\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnits(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Observation implements Associable {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\trelativeDateTime: string;\n\tcategory: Array;\n\tcode: Array;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n\n\t// This should be populated with the normal ranges, but isn't for whatever reason.\n\treferenceRange: Object;\n\tgrouping: string;\n\n\t// Get the value of an observation\n\tstatic getValue(o: Observation) {\n\t\treturn o['valueQuantity']['value'];\n\t}\n\n\t// Get the units for an observation\n\tstatic getUnits(o: Observation) {\n\t\treturn o['valueQuantity']['unit'];\n\t}\n\n\t// Get the text for an observation\n\tstatic getText(o: Observation) {\n\t\t// If the text is empty, use the display.\n\t\treturn o['code']['text'] || o['code']['coding'][0]['display'];\n\t}\n\n\tgetCode() {\n\t\treturn this['code']['coding'][0]['code'];\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursive.html":{"url":"components/ObservationRecursive.html","title":"component - ObservationRecursive","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursion/observationRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./observationRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graphData\n                            \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService, scratchpadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursion/observationRecursion.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchpadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(obs: any, event, position, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\n@Component({\n  selector: 'observationRecursion',\n  templateUrl: './observationRecursion.html'\n})\nexport class ObservationRecursive {\n  @Input() obs: any;\n  @Input() level: number;\n  graphData: Array = [];\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n              private trendsService: HistoricalTrendsService,\n              private scratchpadService: ScratchPadService) { }\n\n  // ========================================= EVENT HANDLERS ==============================\n\n  // handles whenever a checkbox is clicked\n  checked(obs: any, event, position, data) {\n    obs.isSelected = !obs.isSelected;\n\n    // shift click functionality [not tested]\n    if (event.shiftKey) {\n      let upper, lower;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.value}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.value}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursive'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursiveChart.html":{"url":"components/ObservationRecursiveChart.html","title":"component - ObservationRecursiveChart","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursiveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursionChart\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(changedObs: any, event, position: number, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changedObs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationRecursionChart',\n  templateUrl: './observationsChart.html'\n})\nexport class ObservationRecursiveChart {\n  @Input() obs: Array;\n  @Input() level: number;\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n    private trendsService: HistoricalTrendsService) { }\n\n  getData(): Array {\n    return this.obs;\n  }\n\n  getLevel(): number {\n    return this.level;\n  }\n\n  // Called when an observation is either checked or unchecked.\n  checked(changedObs: any, event, position: number, data) {\n    changedObs.isSelected = !changedObs.isSelected;\n\n    if (event.shiftKey) {\n      let upper: number, lower: number;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursiveChart'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObservationService.html":{"url":"injectables/ObservationService.html","title":"injectable - ObservationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/observation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categorizedObservations\n                            \n                            \n                                count\n                            \n                            \n                                filterSet\n                            \n                            \n                                groupMap\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                uniqueObservations\n                            \n                            \n                                uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesObservations\n                            \n                            \n                                extractNewObservations\n                            \n                            \n                                getCheckedObservations\n                            \n                            \n                                getGrouping\n                            \n                            \n                                getScratchPadObservations\n                            \n                            \n                                handleObservationBundle\n                            \n                            \n                                loadObservationsPage\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                populateCategories\n                            \n                            \n                                scaleDates\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesObservations\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractNewObservations\n                        \n                        \n                    \n                \n            \n            \n                \nextractNewObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrouping\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrouping(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:206\n                \n            \n\n\n            \n                \n                    Given a certain observation ID, returns the position mapping of that\n ID contained within the groupMap\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleObservationBundle\n                        \n                        \n                    \n                \n            \n            \n                \nhandleObservationBundle(bundle: Bundle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bundle\n                                    \n                                                Bundle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadObservationsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadObservationsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateCategories\n                        \n                        \n                    \n                \n            \n            \n                \npopulateCategories(categories: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDates\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categorizedObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as moment from 'moment';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Observation } from '../models/observation.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class ObservationService {\n  uniqueObservations: Array = [];\n  categorizedObservations: any;\n  groupMap: { [x: string]: Array };\n  count = 0;\n  observations: Array = [];\n  selected: Array = [];\n  uniqueObservationsLoadFinished = false;\n\n  filterSet = new Set();\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient,\n    private scratchPadService: ScratchPadService\n  ) {\n    // these are the codes of the observations; \n    // groupList is used to categorize where in categorizedObservations this is stored\n    this.groupMap = {\n      \"1-1\": [\"8302-2\", \"3141-9\", \"2710-2\"],\n      \"1-2\": [],\n      \"1-3\": [],\n      \"1-4\": [\"39156-5\", \"8310-5\"],\n      \"1-5\": [],\n      \"2-1\": [\"2571-8\"],\n      \"2-2-1\": [\"789-8\", \"3094-0\", \"72166-2\"],\n      \"2-2-2\": [],\n      \"2-2-3\": [\"2823-3\"]\n    };\n\n    // categories of the observations; found using groupList\n    this.categorizedObservations = {\n      \"categories\": [\n        {\n          \"display\": \"Vitals\",\n          \"id\": \"1\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Weight\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-1\"\n            },\n            {\n              \"display\": \"Blood Pressure\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-2\"\n            },\n            {\n              \"display\": \"Heart Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-3\"\n            },\n            {\n              \"display\": \"Respiration Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-4\"\n            },\n            {\n              \"display\": \"Temperature\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-5\"\n            }\n          ]\n        },\n\n        {\n          \"display\": \"Patient History / Review of Systems\",\n          \"id\": \"2\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Constitutional Symptoms\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"2-1\"\n            },\n            {\n              \"display\": \"Body Systems\",\n              \"count\": 0,\n              \"id\": \"2-2\",\n              \"child\": [\n                {\n                  \"display\": \"Eyes\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-1\"\n                },\n                {\n                  \"display\": \"Ears, Nose, Mouth and Throat (ENT)\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-2\"\n                },\n                {\n                  \"display\": \"Cardiovascular\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-3\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"display\": \"Other\",\n          \"id\": \"3\",\n          \"count\": 0,\n          \"data\": []\n        }\n      ]\n    };\n  }\n\n  loadObservationsPage(url: string): void {\n    this.http.get(url, this.fhirService.getRequestOptions())\n      .subscribe((bundle) => {\n        this.handleObservationBundle(bundle);\n      });\n  }\n\n  handleObservationBundle(bundle: Bundle): void {\n    if (bundle) {\n      let nextObservations = >bundle.entry.map(e => e.resource);\n      this.observations = this.observations.concat(nextObservations);\n      this.extractNewObservations(nextObservations);\n\n      let nextLink = bundle.link.find(link => link.relation == 'next');\n      if (nextLink) {\n        this.loadObservationsPage(nextLink.url);\n      } else {\n        this.onLoadComplete();\n      }\n    } else {\n      console.log(\"No observations for patient.\");\n      this.observations = new Array();\n    }\n  }\n\n  onLoadComplete() {\n    this.observations = this.observations.reverse();\n    console.log(\"Loaded \" + this.uniqueObservations.length + \" observations.\");\n    this.uniqueObservationsLoadFinished = true;\n\n    this.observations.sort((n1, n2) => {\n      return n1.effectiveDateTime  this.scratchPadService.checkedMapObservations.get(o));\n  }\n\n  scaleDates(): void {\n    let RECENCY_MULTIPLIER = 0.80;\n    let timeSinceObservation = new Date().getTime() - new Date(this.observations[0].effectiveDateTime).getTime();\n    let scaledTimeSinceObservation = Math.floor(RECENCY_MULTIPLIER * timeSinceObservation);\n\n    for (let ob of this.observations) {\n      let relativeDateTime = new Date(ob.effectiveDateTime).getTime() + scaledTimeSinceObservation;\n      ob.relativeDateTime = moment(relativeDateTime).toISOString();\n    }\n  }\n\n  extractNewObservations(observations: Array): void {\n    for (let observation of observations) {\n      let code: string = observation['code']['coding'][0]['code'];\n      if (!this.filterSet.has(code)) {\n        observation.grouping = this.getGrouping(code);\n        this.uniqueObservations.push(observation);\n\n        this.filterSet.add(code);\n      }\n    }\n  }\n\n  /**\n  * Given a certain observation ID, returns the position mapping of that\n   * ID contained within the groupMap\n   */\n  getGrouping(code: string): string {\n    for (let x in this.groupMap) {\n      if (this.groupMap[x].indexOf(code) !== -1) {\n        return x;\n      }\n    }\n\n    let OTHER_GROUPING = '3';\n    return OTHER_GROUPING;\n  }\n\n  populateCategories(categories: Array): number {\n    let totalCount = 0;\n    for (let i = 0; i ): Array {\n    let observationsByCategory: { [x: string]: Array } = {};\n\n    for (let observation of observations) {\n      if (observation.hasOwnProperty('valueQuantity') && observation.hasOwnProperty('category')) {\n        let observationCategory = observation.category[0].text;\n\n        if (!observationsByCategory.hasOwnProperty(observationCategory)) {\n          observationsByCategory[observationCategory] = [];\n        }\n        observationsByCategory[observationCategory].push(observation);\n      }\n    }\n\n    let reconstructedObject: Array = [];\n    for (let ctgry of Object.keys(observationsByCategory)) {\n      reconstructedObject.push({\n        category: ctgry,\n        subheadings: false,\n        subs: null,\n        data: observationsByCategory[ctgry]\n      });\n    }\n\n    return reconstructedObject;\n  }\n\n  // ====================== SCRATCH PAD FUNCTIONALITY =============================\n\n  getScratchPadObservations() {\n    return this.scratchPadService.getObservations();\n  }\n\n  // OVERRIDDEN FROM BASECOLUMN:\n  showDefault() {\n\n  }\n\n  showScratchPad() {\n    console.log(this.getScratchPadObservations());\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsComponent.html":{"url":"components/ObservationsComponent.html","title":"component - ObservationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observations/observations.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observations\n            \n\n\n\n\n            \n                templateUrl\n                ./observations.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mappings\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                test\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, observationService: ObservationService, mapService: MapService, doctorService: DoctorService, trendsService: HistoricalTrendsService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observations/observations.component.ts:60\n                \n            \n\n\n            \n                \n                    Description: This method is called whenever the patient data is passed as input to the application. Handles\nthe initial subscription to the observation service and continual loading of the data links.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ObservationService } from '../../services/observation.service';\nimport { MapService } from '../../services/map.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Observation } from '../../models/observation.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'observations',\n  templateUrl: './observations.html'\n})\nexport class ObservationsComponent extends BaseColumn{\n  selected: Observation;\n  test: Observation;\n  observations: Array = [];\n\n  @Input() patient: Patient;\n  //@Output() observationReturned: EventEmitter> = new EventEmitter();\n\n  mappings: { [key: string]: Array } = {};\n\n  // for column switching\n  subscription: Subscription;\n\n  constructor(\n    private fhirService: FhirService,\n    private observationService: ObservationService,\n    private mapService: MapService,\n    private doctorService: DoctorService,\n    private trendsService: HistoricalTrendsService,\n    private scratchPadService: ScratchPadService\n  ) {\n      super();\n      this.mappings = MapService.STATIC_MAPPINGS;\n\n      // subscribe to scratch pad service for column switching\n      this.subscription = scratchPadService.stateChange$.subscribe(\n        sPad => {\n          if (sPad)\n            this.columnState = \"scratchpad\";\n          else\n            this.columnState = \"default\";\n        }\n      );\n  }\n\n  // ===================== FOR DATA RETRIEVAL FROM OBSERVATIONS SERVICE ============\n\n  /**\n   * Description: This method is called whenever the patient data is passed as input to the application. Handles\n   * the initial subscription to the observation service and continual loading of the data links.\n   **/\n  ngOnChanges() {\n    if (this.patient) { //If the patient is loaded\n      let url = this.fhirService.getUrl() + \"/Observation?patient=\" + this.patient.id;\n      this.observationService.loadObservationsPage(url);    \n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Observations\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Observations                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsDisplay.html":{"url":"components/ObservationsDisplay.html","title":"component - ObservationsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationsDisplay/observationsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                Observation\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllObservations\n                            \n                            \n                                checkObservation\n                            \n                            \n                                expand\n                            \n                            \n                                isObservationAssociated\n                            \n                            \n                                isObservationChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectObservation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                observationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        observations\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        observationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllObservations\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllObservations(checked)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkObservation\n                        \n                        \n                    \n                \n            \n            \n                \ncheckObservation(checked: boolean, checkedObservation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationAssociated(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationChecked(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectObservation\n                        \n                        \n                    \n                \n            \n            \n                \nselectObservation(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Observation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Observation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationsDisplay',\n  templateUrl: './observationsDisplay.html'\n})\nexport class ObservationsDisplay {\n  // Trick to allow access to static methods of Observation class in pug template\n  Observation = Observation;\n\n  // The currently selected condition in the list.\n  selected: Observation;\n\n  //Whether the checkbox for checking all observations are currently checked\n  isAllChecked : boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() observations: Array;\n  @Output() observationSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private associationService: AssociationService, \n    private scratchPadService: ScratchPadService\n  ) { }\n\n  ngOnChanges() {\n    //console.log(this.observations);\n  }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n    \n    // Add options to the context menu shown when right clicking observations.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function(obs) {\n        // Add every checked observation to the scratch pad\n        this.scratchPadService.checkedMapObservations.forEach((isChecked, observation) => {\n          if (isChecked) {\n            this.scratchPadService.addObservation(observation);\n          }\n        });\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(obs) {\n        console.log(obs);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(obs) {\n        console.log(obs);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  // Whenever a line is selected\n  selectObservation(observation: Observation) {\n    this.selected = observation;\n    this.observationSelected.emit(this.selected);\n\n    for (let o of this.scratchPadService.totalObservations) {\n      o['selected'] = (o.id == this.selected.id);\n    }\n  }\n\n  // Determine whether an observation is currently checked.\n  isObservationChecked(observation: Observation) {\n    return this.scratchPadService.checkedMapObservations.get(observation) || false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkObservation(checked: boolean, checkedObservation: Observation) {\n    this.scratchPadService.checkObservation(checked, checkedObservation);\n  }\n  \n  //Check or uncheck all observations\n  checkAllObservations(checked){\n    this.isAllChecked = checked;\n    for (let c of this.observations){\n      this.scratchPadService.checkObservation(checked, c);\n    }\n  }\n\n  // Determine whether an observation is currently associated (based on associations tool)\n  isObservationAssociated(observation: Observation) {\n    return this.associationService.associatedMapObservations.get(observation) || false;\n  }\n\n  expand(parent: string) {\n    /**\n    for (let c of this.conditions) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Observation\n        Value\n        Unit\n        Onset\n      \n    \n    \n      \n        \n          \n        \n        \n          ... {{Observation.getText(o)}}\n        \n        {{Observation.getValue(o)}}\n        {{Observation.getUnits(o)}}\n        {{o.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Observation        Value        Unit        Onset                                                                ... {{Observation.getText(o)}}                {{Observation.getValue(o)}}        {{Observation.getUnits(o)}}        {{o.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Patient.html":{"url":"classes/Patient.html","title":"class - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/patient.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                address\n                            \n                            \n                                birthDate\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                identifier\n                            \n                            \n                                mrn\n                            \n                            \n                                name\n                            \n                            \n                                telecom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telecom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Patient {\n\n    active: boolean;\n    id: string;\n    birthDate: string;\n    gender: string;\n    address: Array;\n    identifier: Array;\n    name: Array;\n    telecom: Array;\n    mrn: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientComponent.html":{"url":"components/PatientComponent.html","title":"component - PatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/patient/patient.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                patient\n            \n\n\n\n\n            \n                templateUrl\n                ./patient.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                advancedSearch\n                            \n                            \n                                allergies\n                            \n                            \n                                allergy\n                            \n                            \n                                graphConfig\n                            \n                            \n                                hover\n                            \n                            \n                                hoverStyling\n                            \n                            \n                                reason\n                            \n                            \n                                selectedCondition\n                            \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                genderString\n                            \n                            \n                                    Private\n                                loadAllergies\n                            \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectCondition\n                            \n                            \n                                showAllergyHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, doctorService: DoctorService, homeComponent: HomeComponent, conditionService: ConditionService, encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        homeComponent\n                                                  \n                                                        \n                                                                        HomeComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genderString\n                        \n                        \n                    \n                \n            \n            \n                \ngenderString(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllergies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAllergyHover\n                        \n                        \n                    \n                \n            \n            \n                \nshowAllergyHover(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            advancedSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hover', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverStyling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Server\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input, Output, ViewChild } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { EncounterService } from '../../services/encounter.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { HomeComponent } from '../../components/home/home.component';\nimport { HoverBoxComponent } from '../hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\nimport { Server } from '../../models/server.model';\nimport { Condition } from '../../models/condition.model';\n\n@Injectable()\n@Component({\n  selector: 'patient',\n  templateUrl: './patient.html'\n})\nexport class PatientComponent {\n  @Input() patient: Patient;\n  server: Server;\n  selectedCondition: Condition;\n  advancedSearch = false;\n  graphConfig: any;\n\n  //allergy details\n  allergies: Array = [];\n  allergy: string = '';\n  hoverStyling: boolean = false;\n  reason: string = '';\n\n  @ViewChild('hover', { static: false }) hover: HoverBoxComponent;\n\n  constructor(\n    private cookieService: CookieService,\n    private doctorService: DoctorService,\n    private homeComponent: HomeComponent,\n    private conditionService: ConditionService,\n    private encounterService: EncounterService\n  ) {\n    this.graphConfig = JSON.parse(this.cookieService.get('graphConfig') || '{}');\n  }\n\n  genderString(patient: Patient) {\n    var s = 'Unknown';\n    switch (patient.gender) {\n      case 'female':\n        s = 'Female';\n        break;\n      case 'male':\n        s = 'Male';\n        break;\n    }\n    return s;\n  }\n\n  selectCondition(condition) {\n    this.selectedCondition = condition;\n  }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.loadAllergies();\n      this.loadEncounters();\n    }\n  }\n\n  private loadAllergies(): void {\n    this.conditionService.loadAllergies(this.patient).subscribe(allergies => {\n      if (allergies) {\n        //add allergy strings to allergies\n        this.allergies = allergies.map(allergy => allergy.code.text);\n\n        // Construct displayed allergy string\n        if (this.allergies.length == 0) {\n          this.allergy = \"None\";\n        } else if (this.allergies.length == 1) {\n          this.allergy = this.allergies[0];\n        } else {\n          this.allergy = \"Multiple...\";\n          this.hoverStyling = true;\n        }\n      }\n      else { //no allergies\n        this.allergy = \"None\";\n      }\n    });\n  }\n\n  private loadEncounters(): void {\n    // TODO: Display the reason for visit retrieved here onto the page.\n    this.encounterService.loadEncounters(this.patient).subscribe(res => {\n      // Cast the array of encounters to the proper model (Encounter).\n      let encounters = >res;\n\n      for (let enc of encounters) {\n        let reasonText = enc.getReason();\n\n        // Only print if reasonText is not null.\n        if (reasonText) {\n          this.reason = reasonText;\n        }\n      }\n    });\n  }\n\n  showAllergyHover(event) {\n    // Don't show hover box if there is only one allergy.\n    if (this.allergies.length > 1) {\n      this.hover.show(this.allergies, event);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n        \n          {{patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0]}}\n            \n               {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}}, \n            DOB: {{patient.birthDate | amDateFormat:'MM/DD/YYYY'}} ({{-1 * (patient.birthDate | amDifference:today:'years':false)}}yr)\n\t\t  \n        \n  \n  \n    \n        \n          \n            \n\t\t\t\tAllergies:\n              {{allergy}}\n            \n            Reason for Visit: {{reason}}\n          \n        \n  \n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{patient.name[0].given[0]}} {{patient.name[0].family[0]}}                           {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}},             DOB: {{patient.birthDate | amDateFormat:\\'MM/DD/YYYY\\'}} ({{-1 * (patient.birthDate | amDifference:today:\\'years\\':false)}}yr)\t\t                                                \t\t\t\tAllergies:              {{allergy}}                        Reason for Visit: {{reason}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                            \n                                    Public\n                                patientId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPatient\n                            \n                            \n                                setPatientId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPatient\n                        \n                        \n                    \n                \n            \n            \n                \nloadPatient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPatientId\n                        \n                        \n                    \n                \n            \n            \n                \nsetPatientId(patientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Patient'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { Patient } from '../models/patient.model';\n\n@Injectable()\nexport class PatientService {\n  private readonly path = '/Patient';\n\n  // The id of the currently set patient\n  public patientId: string;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  // Set the id of the patient\n  setPatientId(patientId) {\n    this.patientId = patientId;\n  }\n\n  // Retrieve the patient with the id previously set using setPatientId()\n  loadPatient(): Observable {\n    var url = this.fhirService.getUrl() + this.path + '/' + this.patientId;\n    let options = this.fhirService.getRequestOptions(true);\n\n    return this.http.get(url, options).pipe(map(res => {\n      let patient = res;\n\n      // Assign patient MRN\n      for (let id of res['identifier']) {\n        if (id.type && id.type.coding[0].code == \"MR\") {\n          patient.mrn = id.value;\n        }\n      }\n      return patient;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScratchPadUpdate.html":{"url":"components/ScratchPadUpdate.html","title":"component - ScratchPadUpdate","body":"\n                   \n\n\n\n\n\n  Components\n  ScratchPadUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/scrachpad-update.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scratchpad-update\n            \n\n\n\n\n            \n                templateUrl\n                ./scrachpad-update.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                onset\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                onRadioChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRadioChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonRadioChanged(currStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"scratchpad-update\",\n\ttemplateUrl: \"./scrachpad-update.html\"\n})\n\nexport class ScratchPadUpdate{\n\t@Input() inputData: any;\n\t\n\tdescription: string;\n\tstatus: string;\n\tonset: string;\n\t\n\tgetData(): any {\t\t\n\t\treturn {id: this.inputData.id, data: {description: this.description, status: this.status}};\n\t}\n\t\n\tonRadioChanged(currStatus: string): void {\n\t\tconsole.log(\"changing!!!\");\n\t\tthis.status = currStatus;\n\t}\n}\n    \n\n    \n        \n\n  {{inputData.data.name}} : {{inputData.data.status}}\n  \n    \n      \n    \n    \n      \n        \n          Active\n        \n        \n          Inactive\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{inputData.data.name}} : {{inputData.data.status}}                                            Active                          Inactive                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScratchPadUpdate'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectListSingle.html":{"url":"components/SelectListSingle.html","title":"component - SelectListSingle","body":"\n                   \n\n\n\n\n\n  Components\n  SelectListSingle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/select-list-single.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                select-list-single\n            \n\n\n\n\n            \n                templateUrl\n                ./select-list-single.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/select-list-single.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"select-list-single\",\n\ttemplateUrl: \"./select-list-single.html\"\n})\n\nexport class SelectListSingle{\n\t@Input() inputData: any;\n\tlistData: String;\n\t\n\tgetData(): any {\n\t\tif (this.listData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.listData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n     {{entry.description}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}            {{entry.description}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectListSingle'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Server.html":{"url":"classes/Server.html","title":"class - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/server.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/server.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Server {\n\t// name: String;\n    // url: String;\n\tconstructor(public name: string, public url: string) {\n\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartService.html":{"url":"injectables/SmartService.html","title":"injectable - SmartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SmartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aud\n                            \n                            \n                                authorizeUrl\n                            \n                            \n                                    Readonly\n                                clientId\n                            \n                            \n                                fhirBaseUrl\n                            \n                            \n                                launch\n                            \n                            \n                                    Readonly\n                                redirectUri\n                            \n                            \n                                    Readonly\n                                scope\n                            \n                            \n                                state\n                            \n                            \n                                tokenUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                findGetParameter\n                            \n                            \n                                getToken\n                            \n                            \n                                requestAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService, fhirService: FhirService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smart.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findGetParameter\n                        \n                        \n                    \n                \n            \n            \n                \nfindGetParameter(parameterName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameterName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestAuth\n                        \n                        \n                    \n                \n            \n            \n                \nrequestAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aud\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorizeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"2c304df8-711d-4de9-afbe-330c01a5ca8e\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fhirBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            launch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            redirectUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:9000\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"launch patient/*.* openid profile\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FhirService } from '../services/fhir.service';\nimport { PatientService } from '../services/patient.service';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class SmartService {\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private fhirService: FhirService,\n    private patientService: PatientService\n  ) { }\n\n  readonly clientId: string = \"2c304df8-711d-4de9-afbe-330c01a5ca8e\";\n  readonly scope: string = \"launch patient/*.* openid profile\";\n  readonly redirectUri: string = \"http://localhost:9000\";\n\n  fhirBaseUrl: string;\n  authorizeUrl: string;\n  tokenUrl: string;\n  launch: string;\n  state: string;\n  aud: string;\n\n  authenticate() {\n    this.fhirBaseUrl = this.findGetParameter(\"iss\");\n\n    if (this.fhirBaseUrl) {\n      // Occurs when arriving to the site for the first time.\n      this.aud = this.fhirBaseUrl;\n      this.launch = this.findGetParameter(\"launch\");\n\n      this.fhirService.setUrl(this.fhirBaseUrl);\n\n      const url = this.fhirService.getUrl() + '/metadata';\n      this.http.get(url, this.fhirService.getRequestOptions(false)).subscribe(data => {\n        var smartExtension = data['rest'][0].security.extension.filter(e => {\n          return (e.url === \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\");\n        });\n\n        var auth;\n        var tok;\n\n        smartExtension[0].extension.forEach(arg => {\n          if (arg.url === \"authorize\") {\n            auth = arg.valueUri;\n          } else if (arg.url === \"token\") {\n            tok = arg.valueUri;\n          }\n        });\n\n        this.tokenUrl = tok;\n        this.authorizeUrl = auth;\n\n        this.cookieService.set('tokenUrl', this.tokenUrl);\n        this.cookieService.set('fhirBaseUrl', this.fhirBaseUrl);\n\n        this.requestAuth();\n      });\n    } else {\n      // Occurs when arriving to the site after the redirect.\n      if (this.cookieService.get('state') == this.findGetParameter('state')) {\n        return this.getToken();\n      } else {\n        console.log('Stop cross-site scripting please, thanks');\n      }\n    }\n  }\n\n  getToken() {\n    var code = this.findGetParameter(\"code\");\n\n    var body = 'code=' + code\n      + '&redirect_uri=' + encodeURI(this.redirectUri)\n      + '&token_url=' + this.cookieService.get('tokenUrl');\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n\n    return this.http.post(\"https://mongo-proxy.herokuapp.com/token\",\n      body, { headers: headers });\n  }\n\n  requestAuth() {\n    //TODO Fix hashing method - not sure best way to do it\n\n    this.state = (Md5.hashStr(\"testing Hasing\")).toString();\n    this.cookieService.set('state', this.state);\n\n    var request = this.authorizeUrl + \"?response_type=code\"\n      + \"&client_id=\" + this.clientId\n      + \"&redirect_uri=\" + this.redirectUri\n      + \"&launch=\" + this.launch\n      + \"&scope=\" + this.scope\n      + \"&state=\" + this.state\n      + \"&aud=\" + this.aud;\n\n    // Comment out the below line for debugging purposes.\n    window.location.href = encodeURI(request);\n  }\n\n  findGetParameter(parameterName) {\n    let result = null;\n    let tmp = [];\n\n    location.search.substr(1).split(\"&\").forEach(item => {\n      tmp = item.split(\"=\");\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeline.html":{"url":"classes/Timeline.html","title":"class - Timeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/timeline.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Timeline {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\tcategory: Object;\n\tcode: Object;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineComponent.html":{"url":"components/TimelineComponent.html","title":"component - TimelineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline/timeline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timelines\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encounters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encounters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { EncounterService } from '../../services/encounter.service';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'timelines',\n  templateUrl: './timeline.html'\n})\nexport class TimelineComponent {\n  encounters: Array = [];\n  @Input() patient: Patient;\n\n  constructor(private encounterService: EncounterService) { }\n\n  ngOnChanges(): void {\n    this.loadEncounters();\n  }\n\n  private loadEncounters(): void {\n    if (this.patient) {\n      this.encounterService.loadEncounters(this.patient).subscribe(encounters => {\n        this.encounters = this.encounters.concat(encounters);\n        console.log('Loaded ' + this.encounters.length + ' encounters.');\n        console.log(this.encounters);\n\n        encounters.forEach(enc => enc.position = enc.getLogValue()/5 + \"%\")\n        encounters.forEach(enc =>  console.log('Log Val pos: ' + enc.getStartDate()))\n        \n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinePopupComponent.html":{"url":"components/TimelinePopupComponent.html","title":"component - TimelinePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelinePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline_popup/timeline_popup.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timeline-popup\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline_popup.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePipe\n                            \n                            \n                                hoverBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(encounter: Encounter, event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encounter\n                                    \n                                                Encounter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePipe\n\n                        \n                    \n                    \n                        \n                            Default value : new DatePipe('en-US')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hoverBox', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { HoverBoxComponent } from '../../components/hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\n\n@Component({\n  selector: 'timeline-popup',\n  templateUrl: './timeline_popup.html'\n})\n\nexport class TimelinePopupComponent {\n  @ViewChild('hoverBox', { static: false }) hoverBox: HoverBoxComponent;\n   datePipe: DatePipe = new DatePipe('en-US');\n  open(encounter: Encounter, event: MouseEvent): void {\n   \n    let details: Array = [\n      'Date: ' + this.datePipe.transform(encounter.getStartDate(),'MM-dd-yyyy').toString(),\n      'Reason: ' + (encounter.getReason() || 'None')\n    ];\n    this.hoverBox.show(details, event);\n  }\n\n  close(event: MouseEvent): void {\n    this.hoverBox.hide(event);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n        Encounter from {{condition.onsetDateTime | amTimeAgo}}\n      \n      \n        {{condition.code.coding[0].display}}\n        Code System:{{condition.code.coding[0].system}}\n        Code: {{condition.code.coding[0].code}}\n      \n      \n        Close\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×        Encounter from {{condition.onsetDateTime | amTimeAgo}}                    {{condition.code.coding[0].display}}        Code System:{{condition.code.coding[0].system}}        Code: {{condition.code.coding[0].code}}                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolBarService.html":{"url":"injectables/ToolBarService.html","title":"injectable - ToolBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToolBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toolbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftPosition\n                            \n                            \n                                topPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ToolBarService {\n  leftPosition: string;\n  topPosition: string;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/toolbar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nav2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterScratchPad\n                            \n                            \n                                resetToDefaultView\n                            \n                            \n                                runAssociationsTool\n                            \n                            \n                                switchNav\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, conditionService: ConditionService, doctorService: DoctorService, observationService: ObservationService, scratchPadService: ScratchPadService, toolbarService: ToolBarService, trendsService: HistoricalTrendsService, elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/toolbar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nfilterScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetToDefaultView\n                        \n                        \n                    \n                \n            \n            \n                \nresetToDefaultView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchNav\n                        \n                        \n                    \n                \n            \n            \n                \nswitchNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePosition\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePosition(ref: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nav2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ToolBarService } from '../../services/toolbar.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { ObservationService} from '../../services/observation.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.html'\n  // animations: [\n  // \ttrigger('fadeIn', [\n  // \t\tstate('in', style({ opacity: '1' })),\n  // \t\ttransition('void => *', [\n  // \t\t\tstyle({ opacity: '0' }),\n  // \t\t\tanimate('800ms ease-in')\n  // \t\t])\n  // \t])\n  // ]\n})\nexport class ToolbarComponent {\n  @Input() patient: Patient;\n  nav2: boolean = false;\n\n  constructor(\n    private associationService: AssociationService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private observationService: ObservationService,\n    private scratchPadService: ScratchPadService,\n    private toolbarService: ToolBarService,\n    private trendsService: HistoricalTrendsService,\n    private elRef: ElementRef\n  ) { }\n\n  switchNav() {\n    this.nav2 = !this.nav2;\n  }\n\n  runAssociationsTool() {\n    let checkedConditions = this.conditionService.getCheckedConditions();\n    let checkedObservations = this.observationService.getCheckedObservations();\n    this.associationService.runAssociationsTool(checkedConditions, checkedObservations);\n  }\n\n  // whenver the user presses the filter button\n  filterScratchPad() {\n    \n    // Call the filtering method in the service\n    this.scratchPadService.addConditionsToScratchPad();\n    this.scratchPadService.addObservationToScratchPad();\n\n    // also switch the views to the scratch pad view\n    this.scratchPadService.switchToScratchPad(true);\n  }\n\n  // reset to default (not scratchPad)\n  resetToDefaultView() {\n    this.scratchPadService.switchToScratchPad(false);\n  }\n\n  updatePosition(ref: ElementRef) {\n    let left = this.elRef.nativeElement.querySelector('div').style.left;\n    let top = this.elRef.nativeElement.querySelector('div').style.top;\n\n    this.toolbarService.leftPosition = (parseInt(left.replace(/px/, \"\")) + 150) + \"px\";\n    this.toolbarService.topPosition = (parseInt(top.replace(/px/, \"\")) + 100) + \"px\";\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n    \n    \n    \n     \n  \n  \n    \n    \n    \n     \n    \n     \n    \n     \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripleListComponent.html":{"url":"components/TripleListComponent.html","title":"component - TripleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tripleList/tripleList.component.ts\n\n\n    \n        Description\n    \n    \n        A component that displays the triple list of \nconditions, observations, and careplans. It provides \nthe patient data to these individual lists.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                triplelist\n            \n\n\n\n\n            \n                templateUrl\n                ./tripleList.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n                \n                    \n                        The patient whose data will appear in the three lists. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Patient } from '../../models/patient.model';\n\n/**\n * A component that displays the triple list of \n * conditions, observations, and careplans. It provides \n * the patient data to these individual lists.\n */\n@Component({\n  selector: 'triplelist',\n  templateUrl: './tripleList.html'\n})\n\nexport class TripleListComponent {\n  /** The patient whose data will appear in the three lists. */\n  @Input() patient: Patient;\n  \n  constructor() { }\n}\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n\tid: number;\n\tname: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            appRoutingProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/accordionRecursion/accordionRecursion.component.ts\n            \n            component\n            AccordionRecursion\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/addObservation/addObservation.component.ts\n            \n            component\n            AddObservation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/baseColumn.ts\n            \n            class\n            BaseColumn\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/carePlan/carePlan.component.ts\n            \n            component\n            CarePlanComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n            \n            component\n            CarePlanDisplay\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n            \n            component\n            ColumnStateSwitcherComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            component\n            ConditionsComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/conditionsChart/conditionsChart.component.ts\n            \n            component\n            ConditionsChartComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n            \n            component\n            ConditionsDisplay\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/contextMenu/contextMenu.component.ts\n            \n            component\n            ContextMenuComponent\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                src/app/components/form-builder/form-builder.component.ts\n            \n            component\n            FormBuilder\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/form_components/checkbox-inline.component.ts\n            \n            component\n            CheckboxInline\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-1.component.ts\n            \n            component\n            NormalBox1\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-2.component.ts\n            \n            component\n            NormalBox2\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/scrachpad-update.component.ts\n            \n            component\n            ScratchPadUpdate\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/form_components/select-list-single.component.ts\n            \n            component\n            SelectListSingle\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/historicalTrends/historicalTrends.component.ts\n            \n            component\n            HistoricalTrendsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/hoverBox/hoverBox.component.ts\n            \n            component\n            HoverBoxComponent\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/components/loadingAnimation/loadingAnimation.component.ts\n            \n            component\n            LoadingAnimation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/medications/medications.component.ts\n            \n            component\n            MedicationsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/newCondition/newCondition.component.ts\n            \n            component\n            NewCondition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/noteNavigation/noteNavigation.component.ts\n            \n            component\n            NoteNavigationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursion/observationRecursion.component.ts\n            \n            component\n            ObservationRecursive\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n            \n            component\n            ObservationRecursiveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/observations/observations.component.ts\n            \n            component\n            ObservationsComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/components/observationsDisplay/observationsDisplay.component.ts\n            \n            component\n            ObservationsDisplay\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            component\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            injectable\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/timeline_popup/timeline_popup.component.ts\n            \n            component\n            TimelinePopupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/tripleList/tripleList.component.ts\n            \n            component\n            TripleListComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/directives/auto-grow.directive.ts\n            \n            directive\n            AutoGrowDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/directives/highlight.directive.ts\n            \n            directive\n            HighlightDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/allergyIntolerance.model.ts\n            \n            class\n            AllergyIntolerance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/associable.model.ts\n            \n            interface\n            Associable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Bundle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/carePlan.model.ts\n            \n            class\n            CarePlan\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/chart.model.ts\n            \n            class\n            Chart\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/client.model.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/condition.model.ts\n            \n            class\n            Condition\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/contextMenuOption.model.ts\n            \n            class\n            ContextMenuOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/encounter.model.ts\n            \n            class\n            Encounter\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/form.model.ts\n            \n            class\n            Form\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/medication.model.ts\n            \n            class\n            Medication\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/observation.model.ts\n            \n            class\n            Observation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/patient.model.ts\n            \n            class\n            Patient\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/server.model.ts\n            \n            class\n            Server\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/timeline.model.ts\n            \n            class\n            Timeline\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pipes/humanizeBytes.pipe.ts\n            \n            pipe\n            HumanizeBytesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/carePlan.service.ts\n            \n            injectable\n            CarePlanService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/condition.service.ts\n            \n            injectable\n            ConditionService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/doctor.service.ts\n            \n            injectable\n            DoctorService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/encounter.service.ts\n            \n            injectable\n            EncounterService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/fhir.service.ts\n            \n            injectable\n            FhirService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/historicalTrends.service.ts\n            \n            injectable\n            HistoricalTrendsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/map.service.ts\n            \n            injectable\n            MapService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/observation.service.ts\n            \n            injectable\n            ObservationService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/services/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/scratchPad.service.ts\n            \n            injectable\n            ScratchPadService\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/services/smart.service.ts\n            \n            injectable\n            SmartService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/toolbar.service.ts\n            \n            injectable\n            ToolBarService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/cli : ^8.3.25\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            angular2-router-loader : ^0.3.5\n        \n            bootstrap : ^3.3.7\n        \n            concurrently : ^3.4.0\n        \n            install : ^0.8.9\n        \n            jquery : ^3.2.1\n        \n            lite-server : ^2.3.0\n        \n            moment : ^2.24.0\n        \n            ngx-contextmenu : ^5.3.0\n        \n            ngx-cookie-service : ^2.3.0\n        \n            ngx-moment : ^3.5.0\n        \n            reflect-metadata : ^0.1.10\n        \n            rxjs : ^6.5.4\n        \n            rxjs-compat : ^6.5.4\n        \n            systemjs : ^0.19.47\n        \n            ts-md5 : ^1.2.0\n        \n            tslib : ^1.9.0\n        \n            typescript : ^3.4.5\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPatient Viewer\n\nFront-end project for context-driven clinical transactions.\nPreparing the Application\nThis is an Angular 8 project using grunt as the build system, SASS for CSS, and Bootstrap for layout. npm is the package manager. \nAssuming you already have node installed via brew install node or similar, begin by running the following commands in the terminal:\ngit clone https://github.com/HII-C/patient_viewer.git\ncd patient_viewer\nnpm install -g grunt\nnpm install # to install project development dependenciesIf you do not have npm installed, do the following:\n\nMac: brew install node in Terminal\nWindows: Instructions\nLinux: Instructions\n\nThe project was tested specifically with node version 10.19.0.\nRunning the Application\nTo launch in development mode, run the following terminal command from the patient_viewer folder:\ngrunt --force # to serve the project and automatically recompile on file changesThen, do the following:\n\nVisit HSPC Sandbox, select the \"HII-C\" sandbox, choose the \"Apps\" option from the left menu, click on the \"HII-C Confidential [USE THIS]\" app, and then click \"Launch\". \nSelect the persona \"John Smith\", and patient Adams, Daniel X in the popup. This should open the Patient Viewer application.\nOnce you are done running Patient Viewer, make sure to terminate the grunt --force command in the terminal.\n\nDevelopment Guidelines\nDo's:\n\nPrefer to use let rather than var for declaring variables. The scoping for variables declared with var is unintuitive and can result in strange bugs.\nPrefer to create models (such as Encounter) rather than dealing with JSON directly. By doing so, we can take advantage of Typescript's type checking and code completion.\n\nDont's:\n\nAvoid using libraries like jQuery. Also avoid using any other approach to accessing the DOM directly (ie, document.getElementById(..)).\nAvoid leaving console.log(..) statements in the code when pushing to the repository. You can use them while developing locally but it can cause clutter in the repository.\nWrite a brief comment above each component and method that you write giving a brief overview of the functionality. If some code is particularly complex, place comments within the body of the method too.\nAvoid writing components that are very similar to one another. Instead, create a generic component that supports all use cases through an interface (examples are contextMenu.component.ts and hoverBox.component.ts).\n\nLicense\nApache 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormCreatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAddObservation\n\nAddObservation\n\nAppModule -->\n\nAddObservation->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanComponent\n\nCarePlanComponent\n\nAppModule -->\n\nCarePlanComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nNewCondition\n\nNewCondition\n\nAppModule -->\n\nNewCondition->AppModule\n\n\n\n\n\nNoteNavigationComponent\n\nNoteNavigationComponent\n\nAppModule -->\n\nNoteNavigationComponent->AppModule\n\n\n\n\n\nObservationRecursive\n\nObservationRecursive\n\nAppModule -->\n\nObservationRecursive->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../conditions.component.ts)\n                        \n                        \n                            appRoutingProviders   (src/.../app.module.ts)\n                        \n                        \n                            routing   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/conditions/conditions.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutingProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
