var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AccordionRecursion.html",[0,0.034,1,0.66]],["body/components/AccordionRecursion.html",[0,0.056,1,1.104,2,0.782,3,0.07,4,0.07,5,0.592,6,0.571,7,0.592,8,0.048,9,2.657,10,0.49,11,1.485,12,0.875,13,4.513,14,0.14,15,0.321,16,4.669,17,5.367,18,0.775,19,4.513,20,3.141,21,4.513,22,4.513,23,4.513,24,1.4,25,5.367,26,5.367,27,5.928,28,5.367,29,0.452,30,2.396,31,2.914,32,0.313,33,4.513,34,0.937,35,0.014,36,0.531,37,0.313,38,0.937,39,2.21,40,3.055,41,3.055,42,3.055,43,3.055,44,4.513,45,3.055,46,5.928,47,0.827,48,3.055,49,1.067,50,4.513,51,3.055,52,3.055,53,3.055,54,3.055,55,3.055,56,1.792,57,0.509,58,0.471,59,2.008,60,3.055,61,0.341,62,1.76,63,1.541,64,0.273,65,1.802,66,0.081,67,0.082,68,3.055,69,2.53,70,4.209,71,4.209,72,3.055,73,5.367,74,2.827,75,3.055,76,3.25,77,0.366,78,3.055,79,2.657,80,1.088,81,2.657,82,2.2,83,3.055,84,2.396,85,1.625,86,3.926,87,0.752,88,2.582,89,1.905,90,1.705,91,2.089,92,1.802,93,2.265,94,2.2,95,2.396,96,2.519,97,3.055,98,2.827,99,1.47,100,2.2,101,2.396,102,3.055,103,2.657,104,3.539,105,3.055,106,1.059,107,1.289,108,2.044,109,2.044,110,3.055,111,3.055,112,3.25,113,5.367,114,3.055,115,3.055,116,3.055,117,4.513,118,3.055,119,2.657,120,3.055,121,2.657,122,3.25,123,3.055,124,3.539,125,3.055,126,1.914,127,2.2,128,2.396,129,3.055,130,3.055,131,3.055,132,2.2,133,3.055,134,2.657,135,3.539,136,3.055,137,3.055,138,1.062,139,3.055,140,3.055,141,3.055,142,2.044,143,3.926,144,2.2,145,3.055,146,3.055,147,2.044,148,1.405,149,2.396,150,4.513,151,4.513,152,0.529,153,0.875,154,0.875,155,0.49,156,0.592,157,0.592,158,0.509,159,0.592,160,0.509,161,0.592,162,0.509,163,0.592,164,0.509,165,0.592,166,0.509,167,0.592,168,0.509,169,0.592,170,0.592,171,0.509,172,0.592,173,0.509,174,0.592,175,0.509,176,0.592,177,0.509,178,0.592,179,0.509,180,0.592,181,0.509,182,0.592,183,0.509,184,0.592,185,0.509,186,0.509,187,0.592,188,0.509,189,0.592,190,0.509,191,0.592,192,0.509,193,0.592,194,0.509,195,0.592,196,0.592,197,0.509,198,0.592,199,0.509,200,0.592,201,0.509,202,0.812,203,0.812,204,0.592,205,0.509,206,0.592,207,0.509,208,0.592,209,0.509,210,0.592,211,0.509,212,0.592,213,0.509,214,0.592,215,0.509,216,0.592,217,0.509,218,0.592,219,0.509,220,0.592,221,0.592,222,0.509,223,0.571,224,0.592,225,0.509,226,0.592,227,0.509,228,0.529,229,0.592,230,0.509,231,0.592,232,0.509,233,0.592,234,0.509,235,0.529,236,0.592,237,0.529,238,0.571,239,0.592,240,0.005,241,0.008,242,0.005]],["title/components/AccountComponent.html",[0,0.034,158,0.66]],["body/components/AccountComponent.html",[0,0.046,1,0.521,2,0.795,3,0.071,4,0.071,5,0.606,6,0.584,7,0.606,8,0.049,10,0.501,11,1.487,12,0.89,14,0.143,15,0.326,18,0.6,29,0.463,32,0.302,34,0.679,35,0.014,36,0.482,37,0.288,38,0.679,47,0.711,49,0.979,56,1.815,57,1.064,58,0.984,59,1.169,61,0.347,64,0.279,66,0.083,67,0.084,77,0.651,80,1.77,87,1.064,89,1.937,91,2.332,93,1.319,106,1.59,107,1.319,138,0.961,142,3.07,143,5.213,144,3.305,152,0.541,153,0.89,154,0.89,155,0.501,156,0.606,157,0.606,158,0.999,159,0.606,160,0.521,161,0.606,162,0.521,163,0.606,164,0.521,165,0.606,166,0.521,167,0.606,168,0.521,169,0.606,170,0.606,171,0.521,172,0.606,173,0.521,174,0.606,175,0.521,176,0.606,177,0.521,178,0.606,179,0.521,180,0.606,181,0.521,182,0.606,183,0.521,184,0.606,185,0.521,186,0.521,187,0.606,188,0.521,189,0.606,190,0.521,191,0.606,192,0.521,193,0.606,194,0.521,195,0.606,196,0.606,197,0.521,198,0.606,199,0.521,200,0.606,201,0.521,202,0.826,203,0.826,204,0.606,205,0.521,206,0.606,207,0.521,208,0.606,209,0.521,210,0.606,211,0.521,212,0.606,213,0.521,214,0.606,215,0.521,216,0.606,217,0.521,218,0.606,219,0.521,220,0.606,221,0.606,222,0.521,223,0.584,224,0.606,225,0.521,226,0.606,227,0.521,228,0.942,229,0.606,230,0.521,231,0.606,232,0.521,233,0.606,234,0.521,235,0.541,236,0.606,237,0.541,238,0.584,239,0.606,240,0.005,241,0.008,242,0.005,243,2.718,244,3.598,245,4.589,246,5.438,247,5.438,248,5.438,249,5.438,250,5.438,251,4.589,252,5.993,253,5.993,254,2.45,255,2.938,256,4.589,257,4.589,258,4.731,259,3.125,260,2.431,261,3.125,262,3.125,263,4.589,264,4.589,265,4.589,266,4.589,267,3.125,268,4.589,269,4.589,270,4.589,271,4.589,272,4.589,273,4.589,274,4.589,275,4.589,276,4.589,277,3.125,278,4.589,279,4.589,280,4.589,281,3.992,282,4.589,283,4.589,284,4.589,285,3.125,286,3.125,287,1.744,288,3.125,289,3.125,290,3.125,291,3.125,292,3.125,293,3.125,294,5.438,295,4.589,296,4.589,297,4.589,298,5.993,299,4.589,300,4.589,301,4.589,302,4.589,303,4.589,304,4.589,305,4.589,306,4.589,307,3.598,308,3.992,309,4.589,310,4.589,311,4.589,312,3.07,313,3.598,314,4.589,315,3.305,316,5.805,317,4.589,318,3.992,319,4.589,320,3.598,321,4.589,322,4.589,323,3.992,324,4.589,325,5.548,326,2.208,327,7.076,328,4.589,329,3.598,330,4.589,331,3.992]],["title/components/AddObservation.html",[0,0.034,160,0.66]],["body/components/AddObservation.html",[0,0.053,1,0.656,2,0.937,3,0.09,4,0.09,5,0.763,6,0.736,7,0.763,8,0.061,10,0.631,11,1.508,12,1.049,14,0.18,15,0.384,29,0.915,32,0.258,35,0.014,36,0.604,37,0.226,57,0.902,58,1.025,61,0.297,64,0.352,66,0.104,67,0.106,87,0.656,93,2.282,96,3.712,127,4.449,132,4.789,138,1.066,152,0.682,153,1.049,154,1.049,155,0.631,156,0.763,157,0.763,158,0.656,159,0.763,160,1.201,161,0.763,162,0.656,163,0.763,164,0.656,165,0.763,166,0.656,167,0.763,168,0.656,169,0.763,170,0.763,171,0.656,172,0.763,173,0.656,174,0.763,175,0.656,176,0.763,177,0.656,178,0.763,179,0.656,180,0.763,181,0.656,182,0.763,183,0.656,184,0.763,185,0.656,186,0.656,187,0.763,188,0.656,189,0.763,190,0.656,191,0.763,192,0.656,193,0.763,194,0.656,195,0.763,196,0.763,197,0.656,198,0.763,199,0.656,200,0.763,201,0.656,202,0.973,203,0.973,204,0.763,205,0.656,206,0.763,207,0.656,208,0.763,209,0.656,210,0.763,211,0.656,212,0.763,213,0.656,214,0.763,215,0.656,216,0.763,217,0.656,218,0.763,219,0.656,220,0.763,221,0.763,222,0.656,223,0.736,224,0.763,225,0.656,226,0.763,227,0.656,228,0.682,229,0.763,230,0.656,231,0.763,232,0.656,233,0.763,234,0.656,235,0.682,236,0.763,237,0.682,238,0.736,239,0.763,240,0.007,241,0.009,242,0.007,332,3.424,333,5.408,334,6.178,335,5.408,336,3.894,337,3.223,338,4.704,339,4.241,340,4.704,341,4.241,342,5.408,343,4.704,344,4.704,345,4.704,346,5.408,347,4.704,348,2.197,349,3.937,350,5.408,351,5.408,352,4.241,353,4.241]],["title/classes/AllergyIntolerance.html",[67,0.106,354,2.85]],["body/classes/AllergyIntolerance.html",[3,0.138,4,0.138,8,0.095,14,0.278,15,0.507,32,0.298,35,0.014,37,0.317,66,0.161,67,0.163,77,0.907,240,0.01,241,0.012,242,0.01,337,3.068,354,5.139,355,2.275,356,5.289,357,2.834,358,3.221,359,6.08,360,6.08,361,2.925]],["title/components/AppComponent.html",[0,0.034,162,0.66]],["body/components/AppComponent.html",[0,0.057,1,0.766,2,1.04,3,0.105,4,0.105,5,0.891,6,0.859,7,0.891,8,0.071,10,0.737,11,1.52,12,1.164,29,0.989,32,0.192,35,0.014,36,0.505,61,0.347,64,0.411,66,0.122,67,0.123,87,0.766,138,1.135,152,0.796,153,1.164,154,1.164,155,0.737,156,0.891,157,0.891,158,0.766,159,0.891,160,0.766,161,0.891,162,1.18,163,0.891,164,0.766,165,0.891,166,0.766,167,0.891,168,0.766,169,0.891,170,0.891,171,0.766,172,0.891,173,0.766,174,0.891,175,0.766,176,0.891,177,0.766,178,0.891,179,0.766,180,0.891,181,0.766,182,0.891,183,0.766,184,0.891,185,0.766,186,0.766,187,0.891,188,0.766,189,0.891,190,0.766,191,0.891,192,0.766,193,0.891,194,0.766,195,0.891,196,0.891,197,0.766,198,0.891,199,0.766,200,0.891,201,0.766,202,1.08,203,1.08,204,0.891,205,0.766,206,0.891,207,0.766,208,0.891,209,0.766,210,0.891,211,0.766,212,0.891,213,0.766,214,0.891,215,0.766,216,0.891,217,0.766,218,0.891,219,0.766,220,0.891,221,0.891,222,0.766,223,0.859,224,0.891,225,0.766,226,0.891,227,0.766,228,0.796,229,0.891,230,0.766,231,0.891,232,0.766,233,0.891,234,0.766,235,0.796,236,0.891,237,0.796,238,0.859,239,0.891,240,0.008,241,0.01,242,0.008,244,4.705,329,4.705,362,3.999,363,5.219,364,6,365,4.597,366,6,367,5.219,368,6,369,4.014]],["title/modules/AppModule.html",[370,2.479,371,2.85]],["body/modules/AppModule.html",[0,0.052,1,1.016,2,0.427,3,0.056,4,0.056,8,0.038,31,2.683,35,0.014,61,0.624,64,0.343,66,0.065,67,0.066,88,1.186,90,2.627,92,1.455,152,0.427,158,1.061,160,1.016,162,1.191,164,1.016,166,1.016,171,1.016,173,1.016,175,1.016,177,1.016,179,1.016,181,1.016,183,1.016,185,1.016,188,1.061,190,1.097,192,1.016,194,1.016,197,1.016,199,1.016,207,1.016,209,1.016,211,1.016,213,1.016,215,1.016,217,1.016,225,1.016,227,1.016,230,1.016,232,1.016,234,0.411,240,0.004,241,0.006,242,0.004,244,1.933,255,2.683,369,1.649,370,1.544,371,6.056,372,1.649,373,1.544,374,3.692,375,3.15,376,3.692,377,1.933,378,2.145,379,2.145,380,2.145,381,2.145,382,2.145,383,4.077,384,3.401,385,3.595,386,2.802,387,3.595,388,2.468,389,2.932,390,3.817,391,3.401,392,2.371,393,3.817,394,3.595,395,3.008,396,1.544,397,1.933,398,4.621,399,3.337,400,3.836,401,3.836,402,2.465,403,2.145,404,2.465,405,2.465,406,2.465,407,2.465,408,2.465,409,2.465,410,2.465,411,2.465,412,2.465,413,2.465,414,2.465,415,2.465,416,2.465,417,2.465,418,2.465,419,2.465,420,2.465,421,2.465,422,2.465,423,2.465,424,2.465,425,2.465,426,2.465,427,1.933,428,2.465,429,2.465,430,2.465,431,2.465,432,2.465,433,2.465,434,2.465,435,2.465,436,1.689,437,2.566,438,2.141,439,1.544,440,2.465,441,2.465,442,2.465,443,2.465,444,2.465,445,2.465,446,2.465,447,2.465,448,2.465,449,2.465,450,2.465,451,2.465,452,2.465,453,3.836,454,1.455,455,3.836,456,2.145,457,1.649,458,3.337,459,3.337,460,3.008,461,1.775,462,3.337,463,1.933,464,3.836,465,1.306,466,1.933,467,1.933,468,2.145,469,3.836,470,2.465,471,2.465,472,3.15,473,2.465,474,3.328,475,2.145,476,3.008,477,3.008,478,2.145,479,1.455,480,2.465,481,2.465]],["title/interfaces/Associable.html",[482,2.647,483,2.479]],["body/interfaces/Associable.html",[3,0.146,4,0.146,8,0.1,35,0.013,66,0.169,240,0.011,241,0.012,242,0.011,482,4.284,483,4.607,484,6.403,485,5.57]],["title/injectables/AssociationService.html",[384,2.208,486,1.025]],["body/injectables/AssociationService.html",[3,0.077,4,0.077,8,0.053,14,0.156,15,0.347,18,0.638,29,0.722,31,3.116,32,0.303,34,0.978,35,0.014,36,0.499,37,0.303,38,0.978,47,0.815,49,0.612,57,0.951,58,0.88,61,0.519,64,0.304,66,0.09,67,0.091,77,0.407,80,1.918,88,3.644,89,2.059,92,4.469,103,2.957,148,3.16,240,0.006,241,0.008,242,0.006,260,1.801,337,2.783,384,2.723,386,3.255,465,1.801,474,3.574,486,1.263,487,1.497,488,2.957,489,5.706,490,5.706,491,1.888,492,4.878,493,4.878,494,5.706,495,4.244,496,2.274,497,3.678,498,4.878,499,2.878,500,4.878,501,3.399,502,4.597,503,4.244,504,4.878,505,3.64,506,3.399,507,3.825,508,3.399,509,6.157,510,3.399,511,5.423,512,4.878,513,3.399,514,4.844,515,2.081,516,3.399,517,4.878,518,4.878,519,4.244,520,4.878,521,4.878,522,4.878,523,4.878,524,3.399,525,3.399,526,3.399,527,2.006,528,2.274,529,1.897,530,4.878,531,2.347,532,3.399,533,2.957,534,3.399,535,3.366,536,4.889,537,2.13,538,2.666,539,3.399,540,3.399,541,3.399,542,3.399,543,3.399,544,3.399,545,3.399,546,6.602,547,4.244,548,3.399,549,4.878,550,3.399,551,4.878,552,3.399,553,4.878,554,4.244,555,2.006,556,3.399,557,4.878,558,3.399,559,2.666,560,3.399,561,3.399,562,4.878,563,4.878,564,4.878,565,3.399,566,4.878,567,3.399,568,4.878,569,3.399,570,4.878,571,3.399,572,2.957,573,1.426,574,3.399,575,3.399,576,3.399,577,3.513,578,2.274,579,4.878,580,3.399,581,3.399,582,3.399,583,3.399,584,2.957,585,3.399,586,3.399]],["title/directives/AutoGrowDirective.html",[155,0.635,235,0.686]],["body/directives/AutoGrowDirective.html",[3,0.124,4,0.124,8,0.085,10,0.874,11,1.203,14,0.25,18,0.874,29,0.807,32,0.302,34,0.807,35,0.014,36,0.412,37,0.228,38,0.807,47,0.874,49,1.203,61,0.412,64,0.488,66,0.144,67,0.146,107,2.301,155,1.072,234,0.909,235,1.158,240,0.009,241,0.011,242,0.009,491,1.315,587,6.555,588,4.744,589,6.685,590,7.733,591,7.733,592,4.744,593,5.042,594,6.934,595,5.453,596,5.815,597,5.453,598,5.453,599,5.453,600,4.276,601,5.453,602,5.453,603,6.685,604,5.815,605,4.744,606,5.453,607,5.453]],["title/classes/BaseColumn.html",[67,0.106,608,2.208]],["body/classes/BaseColumn.html",[3,0.103,4,0.103,8,0.071,14,0.208,15,0.423,18,0.777,29,0.983,32,0.324,34,0.671,35,0.014,36,0.343,37,0.277,38,0.671,39,2.351,47,0.921,49,1.267,57,1.219,58,1.023,61,0.449,66,0.12,67,0.178,70,4.663,77,0.712,90,4.188,106,2.061,112,3.265,134,3.944,147,3.034,240,0.008,241,0.01,242,0.008,313,3.556,336,4.778,355,1.696,531,2.182,608,3.319,609,3.944,610,4.778,611,4.439,612,4.778,613,4.282,614,4.712,615,4.712,616,5.072,617,4.535,618,4.535,619,4.535,620,4.282,621,4.535,622,4.282,623,4.535,624,4.535,625,4.535,626,4.535,627,3.556,628,2.182,629,4.535,630,3.034,631,3.265,632,3.944,633,3.556,634,4.535,635,3.034,636,3.944,637,5.947,638,4.535,639,3.556,640,3.508,641,5.173,642,2.861,643,2.861,644,2.675,645,5.947,646,4.535,647,5.947,648,6.635,649,4.535,650,4.535,651,4.535,652,4.535,653,4.535,654,4.535,655,3.556,656,4.535,657,3.265,658,4.535,659,4.535,660,2.841,661,3.944,662,3.034,663,3.944,664,3.944,665,3.944,666,4.535,667,4.535,668,4.535,669,3.556]],["title/classes/Bundle.html",[67,0.106,670,2.208]],["body/classes/Bundle.html",[3,0.137,4,0.137,8,0.094,14,0.276,15,0.504,32,0.297,35,0.014,37,0.297,66,0.188,67,0.19,77,0.849,80,1.878,240,0.01,241,0.012,242,0.01,355,2.252,670,3.959,671,4.72,672,6.561,673,5.211,674,6.019,675,6.019,676,5.236,677,2.896]],["title/classes/CarePlan.html",[67,0.106,479,2.335]],["body/classes/CarePlan.html",[3,0.116,4,0.116,8,0.079,14,0.234,15,0.456,32,0.324,35,0.014,37,0.335,39,1.703,56,1.703,58,0.786,61,0.385,66,0.135,67,0.137,77,0.998,99,3.086,240,0.009,241,0.011,242,0.009,337,2.598,355,1.909,357,2.625,358,3.398,361,2.455,479,3.785,483,4.395,502,4.291,577,3.674,678,4.438,679,4.619,680,7.016,681,4.139,682,5.052,683,4.343,684,5.502,685,5.102,686,5.102,687,5.102,688,5.102,689,5.102,690,5.102,691,4.001,692,3.196,693,3.785,694,3.01,695,5.102,696,5.102,697,5.102,698,5.102,699,5.102,700,4.438,701,5.102,702,5.102,703,3.674]],["title/components/CarePlanComponent.html",[0,0.034,164,0.66]],["body/components/CarePlanComponent.html",[0,0.047,1,0.538,2,0.814,3,0.074,4,0.074,5,0.626,6,0.603,7,0.626,8,0.05,10,0.518,11,1.49,12,0.911,14,0.148,15,0.334,18,0.614,20,3.225,24,1.457,29,0.478,32,0.325,34,0.696,35,0.014,36,0.489,37,0.304,38,0.696,39,1.569,47,0.882,49,1.164,56,1.569,57,1.078,58,0.854,59,1.758,61,0.539,62,1.308,64,0.289,66,0.085,67,0.087,77,0.387,80,1.133,85,1.162,87,0.538,89,1.362,90,2.623,94,4.383,95,4.773,106,1.119,107,1.362,138,0.976,152,0.559,153,0.911,154,0.911,155,0.518,156,0.626,157,0.626,158,0.538,159,0.626,160,0.538,161,0.626,162,0.538,163,0.626,164,1.015,165,0.626,166,0.538,167,0.626,168,0.538,169,0.626,170,0.626,171,0.538,172,0.626,173,0.538,174,0.626,175,0.538,176,0.626,177,0.538,178,0.626,179,0.538,180,0.626,181,0.538,182,0.626,183,0.538,184,0.626,185,0.538,186,0.538,187,0.626,188,0.538,189,0.626,190,0.538,191,0.626,192,0.538,193,0.626,194,0.538,195,0.626,196,0.626,197,0.538,198,0.626,199,0.538,200,0.626,201,0.538,202,0.846,203,0.846,204,0.626,205,0.538,206,0.626,207,0.538,208,0.626,209,0.538,210,0.626,211,0.538,212,0.626,213,0.538,214,0.626,215,0.538,216,0.626,217,0.538,218,0.626,219,0.538,220,0.911,221,0.626,222,0.538,223,0.603,224,0.626,225,0.538,226,0.626,227,0.538,228,0.559,229,0.626,230,0.538,231,0.626,232,0.538,233,0.626,234,0.538,235,0.559,236,0.626,237,0.559,238,0.603,239,0.626,240,0.005,241,0.008,242,0.005,326,2.666,385,4.111,388,2.734,392,2.711,436,1.421,479,3.816,491,1.133,573,0.807,608,4.183,610,3.384,611,3.144,612,3.384,613,3.384,614,3.707,615,3.707,616,3.991,620,2.325,622,2.325,628,1.553,631,2.325,642,2.261,643,2.261,662,3.144,704,2.808,705,3.685,706,4.7,707,5.542,708,4.383,709,4.516,710,6.087,711,2.172,712,2.022,713,4.7,714,3.228,715,3.228,716,5.464,717,2.531,718,2.531,719,2.531,720,2.531,721,3.228,722,3.228,723,3.228,724,3.228,725,2.531,726,2.531,727,2.531,728,2.16,729,2.808,730,1.485,731,2.531,732,1.308,733,1.905,734,2.808,735,2.808,736,2.531,737,2.531,738,2.531,739,3.685,740,3.384,741,2.022,742,1.802,743,3.228,744,2.808,745,3.228,746,2.531,747,3.228,748,2.808,749,3.228]],["title/components/CarePlanDisplay.html",[0,0.034,166,0.66]],["body/components/CarePlanDisplay.html",[0,0.044,1,0.472,2,0.739,3,0.064,4,0.064,5,0.549,6,0.529,7,0.549,8,0.044,10,0.454,11,1.476,12,0.827,14,0.13,15,0.303,18,0.67,24,1.322,29,0.419,32,0.312,34,0.953,35,0.014,36,0.531,37,0.304,38,0.953,47,0.873,49,1.158,56,2.348,57,0.472,58,0.436,59,2.408,61,0.431,62,1.186,63,2.15,64,0.253,66,0.075,67,0.076,74,1.774,77,0.614,80,1.237,87,0.711,88,2.051,89,1.8,106,0.981,107,1.195,109,1.894,122,3.694,138,0.916,152,0.491,153,0.827,154,0.827,155,0.454,156,0.549,157,0.549,158,0.472,159,0.549,160,0.472,161,0.549,162,0.472,163,0.549,164,0.472,165,0.549,166,1.073,167,0.549,168,0.472,169,0.995,170,0.549,171,0.472,172,0.549,173,0.472,174,0.549,175,0.472,176,0.549,177,0.472,178,0.549,179,0.952,180,0.549,181,0.472,182,0.549,183,0.472,184,0.549,185,0.472,186,0.472,187,0.549,188,0.472,189,0.549,190,0.472,191,0.549,192,0.472,193,0.549,194,0.472,195,0.549,196,0.549,197,0.472,198,0.549,199,0.472,200,0.549,201,0.472,202,0.767,203,0.767,204,0.549,205,0.472,206,0.549,207,0.472,208,0.549,209,0.472,210,0.549,211,0.472,212,0.549,213,0.472,214,0.549,215,0.472,216,0.549,217,0.472,218,0.549,219,0.472,220,0.549,221,0.549,222,0.472,223,0.529,224,0.549,225,0.472,226,0.549,227,0.472,228,0.491,229,0.549,230,0.472,231,0.549,232,0.472,233,0.549,234,0.472,235,0.491,236,0.549,237,0.491,238,0.529,239,0.549,240,0.005,241,0.007,242,0.005,260,3.025,312,1.894,326,2.946,361,2.468,392,2.675,479,4.574,515,0.945,531,2.051,537,2.671,555,2.516,573,1.066,600,2.22,640,1.67,642,2.051,643,2.051,660,1.774,681,2.516,692,2.671,694,2.516,708,4.41,730,1.302,731,2.22,733,2.516,741,1.774,744,3.709,750,2.463,751,4.264,752,4.023,753,3.613,754,4.264,755,4.264,756,4.264,757,3.071,758,4.111,759,3.82,760,4.264,761,2.516,762,5.13,763,2.22,764,4.264,765,2.831,766,3.186,767,2.831,768,4.264,769,2.831,770,4.264,771,5.709,772,2.831,773,4.264,774,2.831,775,3.071,776,2.831,777,2.853,778,2.831,779,2.831,780,4.264,781,2.831,782,2.831,783,1.67,784,3.071,785,2.259,786,2.831,787,1.774,788,2.039,789,1.894,790,1.894,791,1.428,792,2.671,793,2.853,794,2.671,795,3.82,796,1.894,797,2.039,798,1.894,799,1.894,800,1.894,801,2.039,802,2.863,803,1.894,804,1.894,805,1.774,806,2.039,807,3.432,808,3.432,809,3.432,810,2.22,811,4.462,812,2.831,813,3.694,814,2.039,815,4.264,816,2.22,817,1.774,818,2.22,819,2.463,820,2.463,821,2.463,822,1.894,823,2.831,824,2.831,825,2.463,826,2.463,827,2.22,828,2.831,829,1.894,830,1.774,831,2.463,832,2.463,833,2.22,834,4.264,835,3.071,836,2.039,837,2.039,838,2.22,839,2.22,840,2.831,841,4.264,842,4.264,843,2.831]],["title/injectables/CarePlanService.html",[385,2.335,486,1.025]],["body/injectables/CarePlanService.html",[3,0.096,4,0.096,8,0.066,14,0.194,15,0.404,18,0.743,29,0.842,32,0.287,34,0.95,35,0.014,36,0.484,37,0.287,38,0.95,47,0.743,57,0.706,58,0.653,61,0.585,64,0.379,66,0.112,67,0.114,77,0.507,80,1.37,94,4.093,95,4.456,240,0.007,241,0.01,242,0.007,385,3.353,388,2.981,465,2.244,474,4.018,479,3.784,486,1.472,487,1.864,491,1.724,497,4.044,499,3.784,514,4.291,515,2.387,573,1.839,628,2.037,630,2.833,670,2.364,677,2.037,682,3.05,692,2.653,694,2.499,708,3.05,711,2.572,712,2.653,731,3.321,732,1.715,802,2.364,844,3.684,845,5.683,846,5.683,847,5.683,848,5.683,849,4.235,850,4.479,851,5.683,852,4.235,853,2.833,854,4.479,855,3.321,856,3.05,857,4.619,858,4.018,859,2.653,860,3.05,861,3.321,862,2.653,863,3.05,864,3.684,865,3.321,866,3.684,867,3.684,868,3.321,869,3.321,870,3.684,871,4.235,872,3.684,873,3.684,874,4.235,875,2.499,876,4.235,877,4.235,878,4.235,879,4.944,880,4.235,881,3.684,882,3.321,883,3.684,884,5.683,885,4.235,886,4.235,887,3.684,888,4.235,889,4.235,890,4.235,891,3.684,892,4.235,893,4.235,894,4.235]],["title/classes/Chart.html",[67,0.106,895,2.647]],["body/classes/Chart.html",[3,0.112,4,0.112,8,0.076,14,0.225,15,0.445,32,0.33,35,0.014,36,0.549,37,0.338,39,2.602,56,2.092,57,0.82,58,1.12,66,0.13,67,0.132,69,2.517,77,0.898,80,1.511,98,3.082,99,2.367,128,3.857,240,0.008,241,0.011,242,0.008,325,4.915,337,2.794,355,1.84,358,3.655,438,3.498,457,4.615,535,2.902,684,5.409,703,3.542,791,2.481,822,4.193,895,5.131,896,4.279,897,6.898,898,6.898,899,6.898,900,6.898,901,6.898,902,4.919,903,4.919,904,4.919,905,4.919,906,4.919,907,4.919,908,4.919,909,4.919,910,3.857,911,4.919,912,3.857,913,4.279,914,4.279,915,4.279,916,4.279,917,3.857,918,4.279,919,4.279,920,4.919,921,4.919,922,3.857,923,4.279,924,4.279]],["title/components/CheckboxInline.html",[0,0.034,168,0.66]],["body/components/CheckboxInline.html",[0,0.054,1,0.698,2,0.977,3,0.095,4,0.095,5,0.812,6,0.783,7,0.812,8,0.065,10,0.672,11,1.513,12,1.094,14,0.192,15,0.401,18,0.737,24,1.749,32,0.298,35,0.014,36,0.482,37,0.267,47,0.737,49,0.754,56,1.883,57,0.94,58,0.869,59,1.567,61,0.316,62,1.569,64,0.375,66,0.111,67,0.112,77,0.675,87,0.698,91,1.63,138,1.142,152,0.726,153,1.094,154,1.094,155,0.672,156,0.812,157,0.812,158,0.698,159,0.812,160,0.698,161,0.812,162,0.698,163,0.812,164,0.698,165,0.812,166,0.698,167,0.812,168,1.138,169,1.381,170,0.812,171,0.698,172,0.812,173,0.698,174,0.812,175,0.698,176,0.812,177,0.698,178,0.812,179,0.698,180,0.812,181,0.698,182,0.812,183,0.698,184,0.812,185,0.698,186,0.698,187,0.812,188,0.698,189,0.812,190,0.698,191,0.812,192,0.698,193,0.812,194,0.698,195,0.812,196,0.812,197,0.698,198,0.812,199,0.698,200,0.812,201,0.698,202,1.015,203,1.015,204,0.812,205,0.698,206,0.812,207,0.698,208,0.812,209,0.698,210,0.812,211,0.698,212,0.812,213,0.698,214,0.812,215,0.698,216,0.812,217,0.698,218,0.812,219,0.698,220,0.812,221,0.812,222,0.698,223,0.783,224,0.812,225,0.698,226,0.812,227,0.698,228,0.726,229,0.812,230,0.698,231,0.812,232,0.698,233,0.812,234,0.698,235,0.726,236,0.812,237,0.726,238,0.783,239,0.812,240,0.007,241,0.009,242,0.007,759,4.565,925,6.382,926,3.643,927,5.641,928,5.641,929,6.378,930,6.378,931,3.559,932,4.267,933,4.188,934,4.188,935,4.188,936,4.188,937,4.188,938,3.643,939,4.188,940,3.774,941,4.907]],["title/classes/Client.html",[67,0.106,942,3.103]],["body/classes/Client.html",[3,0.14,4,0.14,8,0.096,14,0.281,15,0.51,32,0.3,35,0.014,36,0.575,37,0.3,67,0.165,77,0.939,240,0.01,241,0.012,242,0.01,355,2.298,357,2.846,942,5.629,943,5.343,944,6.142,945,6.142]],["title/components/ColumnStateSwitcherComponent.html",[0,0.034,171,0.66]],["body/components/ColumnStateSwitcherComponent.html",[0,0.05,1,0.586,2,0.866,3,0.08,4,0.08,5,0.682,6,0.657,7,0.682,8,0.055,10,0.564,11,1.498,12,0.969,14,0.161,18,0.653,24,1.549,29,0.74,32,0.29,34,0.52,35,0.014,36,0.478,37,0.265,38,0.52,39,1.173,47,0.76,49,0.899,57,1.055,61,0.439,62,1.617,64,0.314,66,0.093,67,0.094,74,3.129,77,0.598,85,1.798,87,0.586,88,2.403,90,4.256,91,1.944,92,2.947,98,2.202,124,3.917,138,1.015,147,3.342,152,0.609,153,0.969,154,0.969,155,0.564,156,0.682,157,0.682,158,0.586,159,0.682,160,0.586,161,0.682,162,0.586,163,0.682,164,0.586,165,0.682,166,0.586,167,0.682,168,0.586,169,0.682,170,0.682,171,1.055,172,0.682,173,0.586,174,0.682,175,0.586,176,0.682,177,0.586,178,0.682,179,0.586,180,0.682,181,0.586,182,0.682,183,0.586,184,0.682,185,0.586,186,0.586,187,0.682,188,0.586,189,0.682,190,0.586,191,0.682,192,0.586,193,0.682,194,0.586,195,0.682,196,0.682,197,0.586,198,0.682,199,0.586,200,0.682,201,0.586,202,0.899,203,0.899,204,0.682,205,0.586,206,0.682,207,0.586,208,0.682,209,0.586,210,0.682,211,0.586,212,0.682,213,0.586,214,0.682,215,0.586,216,0.682,217,0.586,218,0.682,219,0.586,220,0.969,221,0.682,222,0.586,223,0.657,224,0.682,225,0.586,226,0.682,227,0.586,228,0.609,229,0.682,230,0.586,231,0.682,232,0.586,233,0.682,234,0.586,235,0.609,236,0.682,237,0.609,238,0.657,239,0.682,240,0.006,241,0.008,242,0.006,392,2.704,436,2.199,491,0.847,529,1.961,573,1.671,608,3.533,632,5.506,640,2.947,642,3.217,643,3.439,657,3.597,662,3.342,663,4.346,664,5.506,681,2.073,708,4.186,730,1.616,735,3.057,763,2.756,794,3.129,922,2.756,946,3.057,947,4.346,948,4.996,949,4.996,950,4.996,951,6.948,952,6.33,953,6.33,954,5.812,955,4.996,956,3.514,957,3.514,958,3.514,959,3.514,960,3.514,961,3.057,962,3.917,963,3.057,964,4.996,965,4.996,966,4.996,967,3.597,968,3.514,969,3.514,970,5.812,971,3.514,972,3.514,973,3.057,974,3.057]],["title/classes/Condition.html",[67,0.106,148,1.82]],["body/classes/Condition.html",[3,0.119,4,0.119,8,0.082,14,0.24,15,0.464,32,0.337,35,0.014,37,0.339,56,2.482,61,0.396,66,0.139,67,0.141,77,0.994,99,2.523,148,3.001,240,0.009,241,0.011,242,0.009,337,3.011,355,1.962,357,2.658,358,2.778,361,2.523,483,4.45,502,3.509,503,6.18,577,3.777,679,4.699,691,4.112,777,4.753,975,4.562,976,7.104,977,7.104,978,7.104,979,5.116,980,7.104,981,5.245,982,5.245,983,5.245,984,5.245,985,5.245,986,5.245,987,5.245,988,5.245,989,5.245]],["title/injectables/ConditionService.html",[386,1.82,486,1.025]],["body/injectables/ConditionService.html",[3,0.077,4,0.077,8,0.053,14,0.156,15,0.347,18,0.638,29,0.722,32,0.32,34,0.978,35,0.014,36,0.499,37,0.313,38,0.978,47,0.898,49,0.878,57,1.101,58,0.961,61,0.565,64,0.304,66,0.09,67,0.091,69,1.178,77,0.907,80,1.376,85,1.756,88,3.405,90,2.723,104,2.666,138,0.545,148,3.16,240,0.006,241,0.008,242,0.006,320,3.825,326,1.635,348,1.897,354,3.513,386,2.243,388,2.867,392,2.754,436,1.497,465,1.801,472,2.274,474,3.574,486,1.263,487,1.497,491,1.657,496,2.274,497,3.678,499,2.878,514,2.274,515,1.135,527,2.006,529,1.897,531,1.635,547,4.244,573,1.87,611,3.817,628,1.635,630,2.274,640,2.878,642,1.635,643,1.635,670,1.897,677,2.745,711,2.503,730,1.563,732,1.377,734,2.957,740,3.513,850,4.434,853,2.274,856,2.448,857,3.513,858,3.056,859,3.056,860,2.448,861,3.825,862,3.056,863,3.513,864,2.957,865,2.666,866,4.244,867,4.244,990,2.957,991,5.706,992,4.963,993,6.235,994,6.235,995,4.244,996,4.878,997,4.878,998,4.878,999,4.878,1000,3.399,1001,3.399,1002,4.878,1003,3.399,1004,4.878,1005,3.399,1006,4.878,1007,3.399,1008,4.878,1009,3.399,1010,4.878,1011,3.399,1012,3.399,1013,3.399,1014,3.399,1015,2.957,1016,4.244,1017,3.399,1018,2.957,1019,3.399,1020,3.399,1021,3.399,1022,3.399,1023,3.399,1024,3.399,1025,3.399,1026,3.513,1027,2.666,1028,3.399,1029,3.399,1030,3.399,1031,3.399,1032,2.666,1033,3.399,1034,3.399,1035,2.957,1036,3.825,1037,2.666,1038,2.666,1039,3.399,1040,3.399,1041,3.399,1042,3.399,1043,3.399,1044,3.399,1045,2.957,1046,3.399,1047,3.399,1048,3.399,1049,3.399,1050,3.399,1051,3.399,1052,3.399,1053,3.399]],["title/components/ConditionsChartComponent.html",[0,0.034,173,0.66]],["body/components/ConditionsChartComponent.html",[0,0.037,1,0.357,2,0.595,3,0.078,4,0.049,5,0.416,6,0.4,7,0.416,8,0.033,10,0.344,11,1.442,12,0.666,14,0.098,15,0.244,16,3.737,18,0.449,20,2.603,24,1.065,29,0.508,32,0.317,34,0.892,35,0.014,36,0.501,37,0.303,38,0.892,39,1.915,47,0.901,49,1.241,56,1.795,57,0.897,58,0.965,59,2.343,61,0.455,62,0.955,63,1.732,64,0.192,66,0.057,67,0.058,69,0.743,77,0.85,80,1.632,85,1.236,87,0.572,88,2.364,89,2.643,91,0.834,93,2.269,98,1.342,99,1.031,100,1.543,112,1.543,119,1.864,126,1.342,138,1.004,142,2.874,144,2.473,148,3.048,152,0.371,153,0.666,154,0.666,155,0.344,156,0.416,157,0.416,158,0.357,159,0.416,160,0.357,161,0.416,162,0.357,163,0.416,164,0.357,165,0.416,166,0.357,167,0.416,168,0.357,169,0.416,170,0.416,171,0.357,172,0.416,173,0.819,174,0.416,175,0.357,176,0.416,177,0.357,178,0.416,179,0.357,180,0.416,181,0.357,182,0.416,183,0.357,184,0.416,185,0.357,186,0.357,187,0.416,188,0.357,189,0.416,190,0.357,191,0.416,192,0.357,193,0.416,194,0.357,195,0.416,196,0.416,197,0.357,198,0.416,199,0.357,200,0.416,201,0.357,202,0.618,203,0.618,204,0.416,205,0.357,206,0.416,207,0.357,208,0.416,209,0.357,210,0.416,211,0.357,212,0.416,213,0.357,214,0.416,215,0.357,216,0.416,217,0.357,218,0.416,219,0.357,220,0.416,221,0.416,222,0.357,223,0.4,224,0.416,225,0.357,226,0.416,227,0.357,228,0.371,229,0.416,230,0.357,231,0.416,232,0.357,233,0.416,234,0.357,235,0.371,236,0.416,237,0.371,238,0.4,239,0.416,240,0.004,241,0.006,242,0.004,255,2.653,258,1.864,260,1.819,287,1.196,326,2.067,329,2.693,370,1.342,386,2.639,392,2.345,454,2.026,491,1.036,515,1.795,527,1.264,538,1.68,555,4.132,573,0.858,578,2.297,681,2.026,683,2.026,693,2.535,711,1.846,730,0.985,732,0.868,741,2.151,742,1.196,757,2.473,761,2.026,766,2.742,775,2.473,777,2.297,796,1.434,805,1.342,825,1.864,826,1.864,827,1.68,833,1.68,835,2.473,836,3.094,837,1.543,875,1.264,883,1.864,1054,1.864,1055,3.434,1056,3.434,1057,4.296,1058,3.737,1059,4.296,1060,4.296,1061,3.737,1062,4.914,1063,4.914,1064,3.434,1065,3.434,1066,2.693,1067,3.434,1068,3.434,1069,4.914,1070,4.914,1071,3.369,1072,2.143,1073,3.434,1074,2.143,1075,2.143,1076,2.143,1077,2.143,1078,2.143,1079,3.434,1080,4.296,1081,5.377,1082,4.296,1083,2.143,1084,2.143,1085,2.143,1086,3.434,1087,2.143,1088,2.693,1089,2.143,1090,3.434,1091,2.143,1092,3.287,1093,3.434,1094,2.143,1095,3.434,1096,2.143,1097,2.143,1098,2.143,1099,2.143,1100,2.143,1101,2.143,1102,2.143,1103,2.143,1104,2.143,1105,1.342,1106,1.864,1107,4.876,1108,2.143,1109,3.434,1110,2.143,1111,3.434,1112,2.143,1113,1.864,1114,3.434,1115,2.143,1116,2.143,1117,2.143,1118,3.434,1119,1.68,1120,1.864,1121,2.143,1122,2.143,1123,2.987,1124,2.143,1125,2.143,1126,4.677,1127,3.434,1128,2.143,1129,2.987,1130,2.143,1131,1.342,1132,3.434,1133,2.143,1134,1.543,1135,1.68,1136,2.143,1137,1.864,1138,2.143,1139,2.143,1140,2.143,1141,1.68,1142,1.864,1143,2.143,1144,2.143,1145,1.543,1146,3.434,1147,2.143,1148,3.434,1149,2.143,1150,2.143,1151,1.864,1152,1.864,1153,2.143,1154,2.143,1155,2.143,1156,1.864,1157,2.143,1158,2.143,1159,1.864,1160,4.296,1161,2.143,1162,4.296,1163,2.143,1164,3.434,1165,2.143,1166,3.434,1167,3.434,1168,3.434,1169,3.434,1170,2.143,1171,2.143,1172,1.68,1173,2.987,1174,3.434,1175,2.143,1176,2.143,1177,2.143,1178,2.143,1179,2.143,1180,2.143,1181,2.143,1182,2.143,1183,2.143,1184,2.143,1185,3.434,1186,2.143,1187,2.143,1188,1.864,1189,3.434,1190,2.473,1191,3.434,1192,2.143,1193,2.143,1194,3.434,1195,3.434,1196,2.143,1197,2.143,1198,2.143]],["title/components/ConditionsComponent.html",[0,0.034,175,0.66]],["body/components/ConditionsComponent.html",[0,0.041,1,0.421,2,0.677,3,0.058,4,0.058,5,0.49,6,0.472,7,0.49,8,0.039,10,0.405,11,1.463,12,0.758,14,0.116,15,0.278,18,0.625,20,2.852,24,1.213,29,0.579,32,0.325,34,0.579,35,0.014,36,0.44,37,0.308,38,0.579,39,1.305,47,0.867,49,1.194,56,2.055,57,1.135,58,1.022,59,2.014,61,0.525,62,1.088,63,1.972,64,0.226,66,0.067,67,0.068,77,0.303,80,1.298,85,0.91,87,0.797,88,3.406,89,2.018,90,2.182,91,0.983,100,2.816,106,1.355,124,1.982,138,0.934,148,2.952,152,0.438,153,0.758,154,0.758,155,0.405,156,0.49,157,0.49,158,0.421,159,0.49,160,0.421,161,0.49,162,0.421,163,0.49,164,0.421,165,0.49,166,0.421,167,0.49,168,0.421,169,0.49,170,0.49,171,0.421,172,0.49,173,0.421,174,0.49,175,0.897,176,0.49,177,0.421,178,0.49,179,0.421,180,0.49,181,0.421,182,0.49,183,0.421,184,0.49,185,0.421,186,0.421,187,0.49,188,0.421,189,0.49,190,0.421,191,0.49,192,0.421,193,0.49,194,0.421,195,0.49,196,0.49,197,0.421,198,0.49,199,0.421,200,0.49,201,0.421,202,0.704,203,0.704,204,0.49,205,0.421,206,0.49,207,0.421,208,0.49,209,0.421,210,0.49,211,0.421,212,0.49,213,0.421,214,0.49,215,0.421,216,0.49,217,0.421,218,0.49,219,0.421,220,0.758,221,0.49,222,0.421,223,0.472,224,0.49,225,0.421,226,0.49,227,0.421,228,0.438,229,0.49,230,0.421,231,0.49,232,0.421,233,0.49,234,0.421,235,0.438,236,0.49,237,0.438,238,0.472,239,0.49,240,0.004,241,0.007,242,0.004,255,2.826,287,1.411,308,2.198,326,2.962,386,2.952,388,2.493,392,2.581,436,1.113,454,2.307,491,1.298,515,1.943,527,1.491,531,1.216,538,1.982,573,0.977,608,3.951,610,2.816,611,2.616,612,2.816,613,2.816,614,3.2,615,3.2,616,4.623,620,1.82,622,1.82,628,1.216,631,1.82,640,1.491,642,1.216,643,1.216,657,1.82,662,1.691,705,3.066,709,4.118,711,2.065,712,1.583,716,5.034,717,1.982,718,1.982,719,1.982,720,1.982,725,1.982,726,1.982,727,1.982,728,1.691,730,1.162,732,1.024,737,1.982,738,1.982,739,3.066,740,2.816,741,1.583,742,1.411,746,1.982,748,2.198,761,2.307,766,3.004,790,1.691,791,1.274,817,1.583,829,1.691,922,1.982,938,2.198,967,1.82,979,1.82,1027,3.066,1058,4.16,1061,4.16,1071,3.75,1105,1.583,1106,2.198,1107,4.192,1119,1.982,1120,2.198,1126,2.198,1129,2.198,1145,1.82,1199,1.982,1200,3.91,1201,4.783,1202,5.355,1203,4.783,1204,5.383,1205,4.683,1206,3.91,1207,2.527,1208,2.527,1209,2.527,1210,2.527,1211,2.527,1212,2.527,1213,2.527,1214,2.527,1215,2.527,1216,2.527,1217,2.527,1218,2.527,1219,2.527,1220,2.527,1221,2.527,1222,2.198,1223,1.82,1224,1.982,1225,1.982,1226,2.527,1227,2.527,1228,2.527,1229,1.982,1230,2.527,1231,2.527,1232,2.527,1233,2.198,1234,1.691,1235,3.91,1236,2.527,1237,2.527,1238,2.527,1239,3.066,1240,2.198,1241,2.527,1242,2.198,1243,2.198,1244,2.527,1245,3.91,1246,2.527,1247,2.527,1248,2.527,1249,2.198,1250,3.91,1251,3.91,1252,2.198,1253,2.527,1254,2.527,1255,2.527,1256,2.198,1257,2.527,1258,2.198,1259,2.527,1260,2.198,1261,2.527,1262,2.527,1263,2.527,1264,2.527,1265,2.527,1266,2.527,1267,2.527,1268,2.527,1269,3.91]],["title/components/ConditionsDisplay.html",[0,0.034,177,0.66]],["body/components/ConditionsDisplay.html",[0,0.039,1,0.389,2,0.637,3,0.053,4,0.053,5,0.453,6,0.436,7,0.453,8,0.036,10,0.374,11,1.453,12,0.713,14,0.107,15,0.261,18,0.594,24,1.139,29,0.544,32,0.311,34,1.007,35,0.014,36,0.54,37,0.306,38,1.007,47,0.906,49,1.121,56,2.314,57,0.613,58,0.566,59,2.544,61,0.45,62,1.264,63,1.853,64,0.209,66,0.062,67,0.063,74,1.462,77,0.617,80,1.096,81,2.03,87,0.389,88,3.106,89,0.985,99,1.123,106,0.809,109,1.561,138,0.827,147,2.458,148,3.746,149,1.83,152,0.404,153,0.713,154,0.713,155,0.374,156,0.453,157,0.453,158,0.389,159,0.453,160,0.389,161,0.453,162,0.389,163,0.453,164,0.389,165,0.453,166,0.389,167,0.453,168,0.389,169,0.881,170,0.453,171,0.389,172,0.453,173,0.389,174,0.453,175,0.389,176,0.453,177,0.993,178,0.453,179,0.86,180,0.453,181,0.389,182,0.453,183,0.389,184,0.453,185,0.389,186,0.389,187,0.453,188,0.389,189,0.453,190,0.389,191,0.453,192,0.389,193,0.453,194,0.389,195,0.453,196,0.453,197,0.389,198,0.453,199,0.389,200,0.453,201,0.389,202,0.661,203,0.661,204,0.453,205,0.389,206,0.453,207,0.389,208,0.453,209,0.389,210,0.453,211,0.389,212,0.453,213,0.389,214,0.453,215,0.389,216,0.453,217,0.389,218,0.453,219,0.389,220,0.713,221,0.453,222,0.389,223,0.436,224,0.453,225,0.389,226,0.453,227,0.389,228,0.404,229,0.453,230,0.389,231,0.453,232,0.389,233,0.453,234,0.389,235,0.404,236,0.453,237,0.404,238,0.436,239,0.453,240,0.004,241,0.006,242,0.004,260,3.602,312,1.561,361,2.48,384,3.478,386,2.866,392,2.425,472,1.561,491,1.096,515,1.227,527,1.377,531,2.186,535,1.377,536,1.83,537,2.847,555,2.168,573,1.288,578,2.458,642,2.998,643,2.998,660,1.462,681,2.168,683,2.168,730,1.073,733,2.681,752,3.564,753,3.308,757,2.646,758,3.712,759,3.449,761,2.168,763,1.83,766,2.877,775,2.646,777,2.458,783,1.377,784,2.646,785,1.947,787,1.462,788,1.681,789,3.449,790,2.458,791,1.177,792,2.302,793,2.458,794,2.302,795,3.751,796,1.561,797,1.681,798,1.561,799,1.561,800,1.561,801,1.681,802,3.603,803,1.561,804,1.561,805,1.462,806,1.681,807,3.449,808,3.449,809,3.449,810,2.881,813,3.712,814,1.681,816,1.83,817,1.462,818,1.83,835,2.646,836,1.681,837,1.681,838,2.881,839,2.881,1018,2.03,1066,2.881,1071,3.564,1088,2.881,1105,1.462,1107,2.646,1123,3.196,1159,3.196,1270,2.03,1271,3.674,1272,3.674,1273,3.674,1274,3.674,1275,3.674,1276,3.674,1277,3.674,1278,3.674,1279,4.545,1280,3.674,1281,2.334,1282,2.334,1283,2.334,1284,3.674,1285,2.334,1286,3.674,1287,2.334,1288,3.674,1289,2.334,1290,3.674,1291,2.334,1292,3.674,1293,2.334,1294,3.674,1295,2.334,1296,3.674,1297,2.334,1298,2.334,1299,2.334,1300,3.674,1301,2.334,1302,2.334,1303,2.334,1304,1.83,1305,1.83,1306,2.334,1307,2.881,1308,2.646,1309,4.484,1310,3.674,1311,3.196,1312,2.334,1313,2.334,1314,4.545,1315,2.334,1316,4.545,1317,2.334,1318,3.674,1319,3.674,1320,1.83,1321,3.196,1322,2.334,1323,2.334,1324,2.03,1325,2.334,1326,2.03,1327,2.334,1328,2.334,1329,2.334,1330,2.334,1331,2.334,1332,2.334,1333,2.334,1334,2.334,1335,2.334,1336,2.334,1337,2.334,1338,2.334,1339,2.334,1340,2.334,1341,2.334,1342,3.196,1343,2.334]],["title/components/ContextMenuComponent.html",[0,0.034,179,0.66]],["body/components/ContextMenuComponent.html",[0,0.043,1,0.46,2,0.725,3,0.063,4,0.063,5,0.535,6,0.516,7,0.535,8,0.043,10,0.443,11,1.474,12,0.811,14,0.126,15,0.297,18,0.547,29,0.409,32,0.313,34,0.944,35,0.014,36,0.528,37,0.292,38,0.944,39,1.397,47,0.792,49,1.09,56,1.882,57,1.137,58,1.051,59,2.385,61,0.316,64,0.247,66,0.073,67,0.074,69,2.295,77,0.675,80,1.009,85,2.295,87,0.698,89,1.766,99,2.013,106,2.468,107,1.165,122,1.988,138,0.904,152,0.478,153,0.811,154,0.811,155,0.443,156,0.535,157,0.535,158,0.46,159,0.535,160,0.46,161,0.535,162,0.46,163,0.535,164,0.46,165,0.535,166,0.46,167,0.535,168,0.46,169,0.535,170,0.535,171,0.46,172,0.535,173,0.46,174,0.535,175,0.46,176,0.535,177,0.46,178,0.535,179,0.94,180,0.535,181,0.46,182,0.535,183,0.46,184,0.535,185,0.46,186,0.46,187,0.535,188,0.46,189,0.535,190,0.46,191,0.535,192,0.46,193,0.535,194,0.46,195,0.535,196,0.535,197,0.46,198,0.535,199,0.46,200,0.535,201,0.46,202,0.753,203,0.753,204,0.535,205,0.46,206,0.535,207,0.46,208,0.535,209,0.46,210,0.535,211,0.46,212,0.535,213,0.46,214,0.535,215,0.46,216,0.535,217,0.46,218,0.535,219,0.46,220,0.535,221,0.535,222,0.46,223,0.516,224,0.535,225,0.46,226,0.535,227,0.46,228,0.478,229,0.535,230,0.46,231,0.535,232,0.46,233,0.535,234,0.46,235,0.478,236,0.535,237,0.478,238,0.516,239,0.535,240,0.005,241,0.007,242,0.005,312,1.847,353,3.281,361,2.013,396,1.73,454,1.629,491,1.684,531,1.328,535,1.629,537,1.73,593,3.771,627,2.165,628,1.328,644,1.629,655,2.165,661,2.402,709,1.847,736,2.165,753,4.462,791,1.392,792,1.73,795,1.847,799,1.847,802,1.541,803,3.771,807,1.847,808,2.799,809,1.847,814,1.988,830,3.165,850,1.73,887,2.402,961,2.402,1145,1.988,1172,2.165,1229,2.165,1308,4.059,1344,2.402,1345,3.64,1346,4.184,1347,5.053,1348,5.637,1349,5.053,1350,4.059,1351,3.962,1352,4.395,1353,3.377,1354,4.184,1355,4.184,1356,4.184,1357,5.761,1358,3.962,1359,2.761,1360,4.184,1361,3.281,1362,4.184,1363,2.761,1364,4.184,1365,2.761,1366,4.184,1367,2.761,1368,3.64,1369,2.761,1370,4.184,1371,2.761,1372,2.761,1373,3.64,1374,2.761,1375,2.761,1376,4.42,1377,2.761,1378,2.761,1379,2.761,1380,2.761,1381,2.165,1382,2.402,1383,5.053,1384,4.184,1385,2.761,1386,2.761,1387,2.761,1388,4.184,1389,4.999,1390,2.402,1391,2.761,1392,2.761,1393,4.184,1394,2.761,1395,2.761,1396,2.761,1397,2.761,1398,2.621,1399,2.761,1400,2.761,1401,5.053,1402,2.761,1403,4.184,1404,2.165,1405,2.761,1406,2.761,1407,3.64,1408,2.761,1409,2.402,1410,4.184,1411,2.761,1412,2.761,1413,2.761,1414,2.402,1415,2.761,1416,2.761,1417,2.761,1418,5.053,1419,4.184,1420,5.053,1421,2.402,1422,2.761,1423,2.761,1424,2.402,1425,4.184,1426,2.761,1427,2.761,1428,2.761,1429,2.761,1430,2.761,1431,4.184]],["title/components/DoctorNoteComponent.html",[0,0.034,181,0.66]],["body/components/DoctorNoteComponent.html",[0,0.058,1,0.784,2,1.055,3,0.107,4,0.107,5,0.912,6,0.879,7,0.912,8,0.073,10,0.754,11,1.521,12,1.181,35,0.014,36,0.51,61,0.355,64,0.421,66,0.125,67,0.126,87,0.784,138,1.145,152,0.815,153,1.181,154,1.181,155,0.754,156,0.912,157,0.912,158,0.784,159,0.912,160,0.784,161,0.912,162,0.784,163,0.912,164,0.784,165,0.912,166,0.784,167,0.912,168,0.784,169,0.912,170,0.912,171,0.784,172,0.912,173,0.784,174,0.912,175,0.784,176,0.912,177,0.784,178,0.912,179,0.784,180,0.912,181,1.191,182,0.912,183,0.784,184,0.912,185,0.784,186,0.784,187,0.912,188,0.784,189,0.912,190,0.784,191,0.912,192,0.784,193,0.912,194,0.784,195,0.912,196,0.912,197,0.784,198,0.912,199,0.784,200,0.912,201,0.784,202,1.096,203,1.096,204,0.912,205,0.784,206,0.912,207,0.784,208,0.912,209,0.784,210,0.912,211,0.784,212,0.912,213,0.784,214,0.912,215,0.784,216,0.912,217,0.784,218,0.912,219,0.784,220,0.912,221,0.912,222,0.784,223,0.879,224,0.912,225,0.784,226,0.912,227,0.784,228,0.815,229,0.912,230,0.784,231,0.912,232,0.784,233,0.912,234,0.784,235,0.815,236,0.912,237,0.815,238,0.879,239,0.912,240,0.008,241,0.01,242,0.008,336,4.386,339,4.776,1432,4.092,1433,6.091,1434,6.091]],["title/injectables/DoctorService.html",[255,1.742,486,1.025]],["body/injectables/DoctorService.html",[3,0.103,4,0.103,8,0.07,14,0.207,15,0.422,18,0.776,29,0.67,32,0.314,34,0.982,35,0.014,36,0.501,37,0.314,38,0.982,47,0.776,49,0.815,56,1.983,57,1.105,58,1.085,61,0.501,62,1.653,64,0.405,66,0.12,67,0.122,69,2.059,80,1.891,87,1.251,89,2.798,91,1.762,100,4.278,101,4.658,107,1.911,112,3.261,127,4.278,135,5.199,148,2.082,240,0.008,241,0.01,242,0.008,255,2.615,337,1.834,436,2.615,437,5.018,438,2.527,439,2.836,486,1.538,487,1.993,527,2.671,555,2.671,669,3.55,785,2.399,805,2.836,875,2.671,882,3.55,947,3.939,1032,3.55,1045,3.939,1141,3.55,1223,3.261,1234,3.029,1242,3.939,1435,3.939,1436,6.63,1437,5.768,1438,5.941,1439,7.039,1440,3.939,1441,5.941,1442,4.528,1443,4.528,1444,5.941,1445,4.528,1446,4.528,1447,4.528,1448,4.528,1449,4.528,1450,4.528,1451,5.941,1452,4.528,1453,4.528,1454,4.528,1455,4.528,1456,3.939,1457,4.528,1458,4.528,1459,4.528,1460,4.528,1461,4.528,1462,4.528,1463,5.168,1464,4.528,1465,4.528,1466,3.939,1467,4.528,1468,3.939,1469,4.528,1470,3.55,1471,4.528,1472,4.528,1473,4.528]],["title/classes/Encounter.html",[67,0.106,1474,2.208]],["body/classes/Encounter.html",[3,0.106,4,0.106,8,0.073,14,0.214,15,0.431,18,0.792,32,0.333,35,0.014,37,0.33,47,0.931,66,0.124,67,0.125,77,0.975,85,2.564,108,3.123,240,0.008,241,0.01,242,0.008,337,1.891,355,1.746,357,2.518,358,3.565,361,3.551,502,3.123,515,2.023,535,2.754,573,1.972,577,4.364,682,4.846,683,4.202,692,2.924,693,4.202,694,2.754,733,2.754,875,2.754,1474,4.119,1475,4.06,1476,4.364,1477,5.447,1478,7.122,1479,7.122,1480,7.122,1481,7.122,1482,4.668,1483,4.668,1484,4.668,1485,4.668,1486,4.668,1487,4.668,1488,4.668,1489,4.668,1490,4.668,1491,4.668,1492,4.668,1493,4.668,1494,6.06,1495,3.66,1496,4.668,1497,5.271,1498,4.668,1499,6.06,1500,4.668,1501,4.668,1502,4.668]],["title/injectables/EncounterService.html",[387,2.335,486,1.025]],["body/injectables/EncounterService.html",[3,0.097,4,0.097,8,0.067,14,0.196,15,0.407,18,0.842,29,0.847,32,0.3,34,1.019,35,0.014,36,0.52,37,0.3,38,1.019,47,0.842,57,0.713,58,0.659,61,0.579,62,1.592,64,0.383,66,0.113,67,0.154,77,0.824,80,1.031,138,0.686,240,0.007,241,0.01,242,0.007,348,2.387,387,3.375,388,3.053,465,2.266,472,2.861,474,4.038,486,1.482,487,1.883,491,1.905,496,2.861,497,4.06,499,3.375,515,1.428,573,1.793,628,2.058,630,2.861,670,2.387,677,2.752,711,2.375,732,1.732,850,4.494,853,2.861,856,3.08,859,2.679,860,3.08,861,3.354,862,2.679,863,3.08,865,3.354,1015,3.721,1016,3.721,1026,3.08,1035,3.721,1036,4.486,1037,3.354,1038,3.354,1135,3.354,1152,3.721,1353,3.415,1474,4.374,1503,3.721,1504,5.721,1505,4.486,1506,5.721,1507,5.721,1508,5.721,1509,4.277,1510,5.721,1511,4.277,1512,5.721,1513,4.277,1514,3.08,1515,4.486,1516,3.721,1517,4.277,1518,4.277,1519,4.277,1520,4.277,1521,4.277,1522,3.721,1523,4.277,1524,5.721,1525,4.277,1526,4.277,1527,4.277]],["title/components/Favorites.html",[0,0.034,183,0.66]],["body/components/Favorites.html",[0,0.052,1,0.645,2,0.925,3,0.088,4,0.088,5,0.75,6,0.722,7,0.75,8,0.06,10,0.62,11,1.506,12,1.036,14,0.177,15,0.38,18,0.698,29,0.572,32,0.29,34,0.791,35,0.014,36,0.523,37,0.256,38,0.791,47,0.8,49,0.961,56,1.29,57,0.645,58,0.596,59,1.446,61,0.462,64,0.346,66,0.102,67,0.104,77,0.64,87,1.02,93,2.785,96,3.683,107,1.632,138,1.058,152,0.67,153,1.036,154,1.036,155,0.62,156,0.75,157,0.75,158,0.645,159,0.75,160,0.645,161,0.75,162,0.645,163,0.75,164,0.645,165,0.75,166,0.645,167,0.75,168,0.645,169,0.75,170,0.75,171,0.645,172,0.75,173,0.645,174,0.75,175,0.645,176,0.75,177,0.645,178,0.75,179,0.645,180,0.75,181,0.645,182,0.75,183,1.282,184,0.75,185,0.645,186,0.645,187,0.75,188,0.645,189,0.75,190,0.645,191,0.75,192,0.645,193,0.75,194,0.645,195,0.75,196,0.75,197,0.645,198,0.75,199,0.645,200,0.75,201,0.645,202,0.961,203,0.961,204,0.75,205,0.645,206,0.75,207,0.645,208,0.75,209,0.645,210,0.75,211,0.645,212,0.75,213,0.645,214,0.75,215,0.645,216,0.75,217,0.645,218,0.75,219,0.645,220,0.75,221,0.75,222,0.645,223,0.722,224,0.75,225,0.645,226,0.75,227,0.645,228,0.67,229,0.75,230,0.645,231,0.75,232,0.645,233,0.75,234,0.645,235,0.67,236,0.75,237,0.67,238,0.722,239,0.75,240,0.007,241,0.009,242,0.007,254,3.031,255,3.153,287,2.158,394,4.331,491,1.288,573,0.966,593,4.911,605,3.363,673,5.005,1361,3.031,1424,4.646,1528,3.363,1529,5.341,1530,6.119,1531,6.6,1532,4.188,1533,6.6,1534,5.323,1535,3.866,1536,3.866,1537,5.341,1538,3.866,1539,3.866,1540,5.341,1541,3.866,1542,3.363,1543,3.866,1544,3.866,1545,3.866,1546,3.866,1547,3.866,1548,5.341,1549,5.341,1550,5.341]],["title/injectables/FhirService.html",[388,1.603,486,1.025]],["body/injectables/FhirService.html",[3,0.109,4,0.109,8,0.075,14,0.22,15,0.439,18,0.807,29,1.01,32,0.324,34,1.01,35,0.014,36,0.515,37,0.319,38,1.01,47,0.941,49,1.111,56,2.277,57,0.801,58,0.74,61,0.466,64,0.429,66,0.127,67,0.129,77,0.97,89,2.605,240,0.008,241,0.01,242,0.008,358,2.544,388,2.5,465,2.544,486,1.598,487,2.114,491,1.644,515,1.603,573,1.542,677,2.969,1353,3.613,1551,4.177,1552,6.82,1553,5.348,1554,6.172,1555,7.199,1556,6.172,1557,6.172,1558,4.802,1559,6.172,1560,4.802,1561,6.172,1562,4.802,1563,6.172,1564,4.802,1565,6.172,1566,6.172,1567,4.802,1568,4.802,1569,4.802,1570,5.369,1571,6.172,1572,6.172,1573,6.477,1574,4.802,1575,4.802,1576,4.802,1577,4.802]],["title/classes/Form.html",[67,0.106,186,0.66]],["body/classes/Form.html",[3,0.137,4,0.137,8,0.094,14,0.276,15,0.505,32,0.316,35,0.014,37,0.337,39,2.371,66,0.16,67,0.162,69,2.616,77,0.85,186,1.184,240,0.01,241,0.012,242,0.01,355,2.256,357,2.824,1578,5.247,1579,6.031,1580,6.031,1581,6.031]],["title/components/FormBuilder.html",[0,0.034,185,0.66]],["body/components/FormBuilder.html",[0,0.049,1,0.566,2,1.143,3,0.077,4,0.077,5,0.658,6,0.634,7,0.658,8,0.053,10,0.544,11,1.495,12,0.945,14,0.155,15,0.346,18,0.745,24,1.512,29,0.844,32,0.323,34,0.503,35,0.014,36,0.471,37,0.317,38,0.503,47,0.862,49,1.273,57,0.566,58,0.523,61,0.368,62,1.586,63,2.458,64,0.304,66,0.09,67,0.091,69,1.177,77,0.746,87,1.039,91,1.321,106,1.177,121,2.954,138,1.058,152,0.588,153,0.945,154,0.945,155,0.544,156,0.658,157,0.658,158,0.566,159,0.658,160,0.566,161,0.658,162,0.566,163,0.658,164,0.566,165,0.658,166,0.566,167,0.658,168,0.566,169,0.658,170,0.658,171,0.566,172,0.658,173,0.566,174,0.658,175,0.566,176,0.658,177,0.566,178,0.658,179,0.566,180,0.658,181,0.566,182,0.658,183,0.566,184,0.658,185,1.039,186,1.207,187,0.658,188,0.566,189,0.658,190,0.566,191,0.658,192,0.566,193,0.658,194,0.566,195,0.658,196,0.658,197,0.566,198,0.658,199,0.566,200,0.658,201,0.566,202,0.877,203,0.877,204,0.658,205,0.566,206,0.658,207,0.566,208,0.658,209,0.566,210,0.658,211,0.566,212,0.658,213,0.566,214,0.658,215,0.566,216,0.658,217,0.566,218,0.658,219,0.566,220,0.658,221,0.658,222,0.566,223,0.634,224,0.658,225,0.566,226,0.658,227,0.566,228,0.588,229,0.658,230,0.566,231,0.658,232,0.566,233,0.658,234,0.566,235,0.588,236,0.658,237,0.588,238,0.634,239,0.658,240,0.006,241,0.008,242,0.006,352,4.471,427,6.099,436,1.495,515,1.134,759,4.169,761,2.876,766,3.478,783,2.003,830,2.127,931,3.182,1131,2.127,1141,2.663,1190,4.106,1353,3.963,1582,5.702,1583,6.766,1584,2.954,1585,4.875,1586,5.702,1587,4.96,1588,4.875,1589,5.702,1590,6.599,1591,5.702,1592,6.232,1593,4.875,1594,6.232,1595,5.702,1596,5.702,1597,5.702,1598,4.875,1599,3.396,1600,3.396,1601,3.396,1602,3.396,1603,3.396,1604,3.396,1605,3.396,1606,3.396,1607,3.396,1608,4.875,1609,3.396,1610,3.396,1611,3.396,1612,3.396,1613,3.396,1614,3.396,1615,2.445,1616,3.396,1617,2.003,1618,3.396,1619,4.875,1620,3.396,1621,3.396,1622,2.954,1623,3.396]],["title/modules/FormCreatorModule.html",[370,2.479,383,2.647]],["body/modules/FormCreatorModule.html",[3,0.109,4,0.109,8,0.075,35,0.014,61,0.593,64,0.429,66,0.127,67,0.129,87,0.799,152,0.831,168,1.35,201,1.35,203,1.11,205,1.35,219,1.35,222,1.35,240,0.008,241,0.01,242,0.008,369,3.207,370,3.003,372,3.207,373,3.003,374,5.344,375,3.207,376,3.759,377,5.344,383,5.543,395,4.835,396,3.003,398,4.17,458,5.363,459,5.363,460,3.759,461,3.452,462,5.363,463,3.759,1624,4.17,1625,4.17,1626,4.17,1627,4.794,1628,4.794,1629,4.794,1630,6.165,1631,4.794,1632,4.794,1633,4.794,1634,4.794,1635,4.794,1636,4.794]],["title/directives/HighlightDirective.html",[155,0.635,237,0.686]],["body/directives/HighlightDirective.html",[3,0.129,4,0.129,8,0.088,10,0.911,11,1.233,14,0.26,24,2.125,29,0.841,32,0.286,34,0.841,35,0.014,36,0.429,37,0.286,38,0.841,57,0.947,58,0.875,61,0.429,62,1.58,64,0.508,66,0.15,67,0.152,77,0.82,107,2.397,155,1.099,234,0.947,237,1.187,238,1.28,240,0.01,241,0.012,242,0.01,361,2.732,491,1.369,592,4.94,593,5.112,594,6.992,596,5.96,1637,4.94,1638,6.852,1639,6.852,1640,5.679,1641,5.679,1642,5.679,1643,5.679]],["title/components/HistoricalTrendsComponent.html",[0,0.034,188,0.66]],["body/components/HistoricalTrendsComponent.html",[0,0.04,1,0.417,2,0.672,3,0.057,4,0.057,5,0.485,6,0.468,7,0.485,8,0.039,10,0.401,11,1.462,12,0.752,14,0.115,15,0.276,18,0.507,29,0.575,31,2.816,32,0.307,34,0.858,35,0.014,36,0.499,37,0.276,38,0.858,39,1.787,47,0.801,49,1.103,57,0.966,58,0.893,59,1.452,61,0.499,64,0.224,65,1.476,66,0.066,67,0.067,69,1.647,70,1.962,74,1.567,85,2.542,87,0.893,88,1.867,93,2.26,96,2.165,106,1.345,109,1.674,132,2.794,138,0.859,152,0.434,153,0.752,154,0.752,155,0.401,156,0.485,157,0.485,158,0.417,159,0.485,160,0.417,161,0.485,162,0.417,163,0.485,164,0.417,165,0.485,166,0.417,167,0.485,168,0.417,169,0.485,170,0.485,171,0.417,172,0.485,173,0.417,174,0.485,175,0.417,176,0.485,177,0.417,178,0.485,179,0.893,180,0.485,181,0.417,182,0.485,183,0.417,184,0.485,185,0.417,186,0.647,187,0.485,188,0.893,189,0.485,190,0.417,191,0.485,192,0.417,193,0.485,194,0.417,195,0.485,196,0.485,197,0.417,198,0.485,199,0.417,200,0.485,201,0.417,202,0.698,203,0.698,204,0.485,205,0.417,206,0.485,207,0.417,208,0.485,209,0.417,210,0.485,211,0.417,212,0.485,213,0.417,214,0.485,215,0.417,216,0.485,217,0.417,218,0.485,219,0.417,220,0.485,221,0.485,222,0.417,223,0.468,224,0.485,225,0.417,226,0.485,227,0.417,228,0.434,229,0.485,230,0.417,231,0.485,232,0.417,233,0.485,234,0.417,235,0.434,236,0.485,237,0.434,238,0.468,239,0.485,240,0.008,241,0.007,242,0.004,281,2.177,315,2.794,316,3.375,323,3.375,326,1.204,336,1.802,352,3.043,361,1.204,389,2.576,391,3.57,392,0.974,396,1.567,454,2.289,457,4.422,491,1.79,515,1.295,519,3.375,529,1.396,573,0.625,604,2.177,627,1.962,628,1.204,635,1.674,639,3.043,644,1.476,655,1.962,660,1.567,692,2.431,693,4.092,694,2.289,703,1.802,709,1.674,711,2.126,732,1.013,742,1.396,753,3.419,758,3.856,783,1.476,784,2.794,785,2.056,787,1.567,788,1.802,791,3.092,792,2.431,793,2.596,794,2.431,795,2.596,796,1.674,797,1.802,798,1.674,799,1.674,800,1.674,801,1.802,802,2.652,804,2.596,806,1.802,807,1.674,808,1.674,809,1.674,813,1.802,830,1.567,850,1.567,858,2.431,869,3.043,875,1.476,895,2.596,910,1.962,914,4.134,915,2.177,917,4.544,963,3.375,967,1.802,973,2.177,1092,3.877,1234,1.674,1239,4.808,1243,2.177,1308,1.802,1309,2.177,1326,5.333,1398,1.567,1404,3.043,1421,2.177,1644,2.177,1645,3.88,1646,3.88,1647,4.753,1648,4.134,1649,4.134,1650,4.134,1651,4.753,1652,3.88,1653,5.354,1654,3.88,1655,3.88,1656,3.88,1657,2.502,1658,3.88,1659,2.596,1660,2.502,1661,3.88,1662,2.502,1663,2.502,1664,2.502,1665,3.88,1666,2.502,1667,3.88,1668,2.502,1669,3.88,1670,2.502,1671,6.936,1672,3.88,1673,3.375,1674,2.502,1675,2.502,1676,2.502,1677,2.502,1678,2.502,1679,2.502,1680,1.567,1681,1.962,1682,4.658,1683,2.502,1684,2.502,1685,2.177,1686,2.502,1687,2.502,1688,3.88,1689,2.177,1690,4.134,1691,4.753,1692,2.502,1693,2.177,1694,3.375,1695,3.375,1696,2.502,1697,2.502,1698,2.502,1699,2.502,1700,5.795,1701,2.502,1702,5.795,1703,2.502,1704,2.177,1705,2.177,1706,2.177,1707,2.502,1708,2.502,1709,3.88,1710,2.502,1711,2.502,1712,2.502,1713,3.88,1714,3.375,1715,3.88,1716,2.502,1717,2.502,1718,3.88,1719,2.502,1720,2.502,1721,2.177,1722,2.502,1723,3.88,1724,3.375,1725,3.88,1726,3.88,1727,3.043,1728,5.354]],["title/injectables/HistoricalTrendsService.html",[389,1.904,486,1.025]],["body/injectables/HistoricalTrendsService.html",[3,0.067,4,0.067,8,0.046,14,0.136,15,0.313,18,0.576,29,0.78,32,0.291,34,0.925,35,0.014,36,0.574,37,0.261,38,0.925,47,0.816,49,0.948,57,0.735,58,1.009,61,0.398,64,0.265,66,0.078,67,0.08,69,2.608,80,1.063,85,1.588,87,0.494,91,2.771,93,1.25,108,1.982,126,2.763,128,3.459,202,0.533,240,0.005,241,0.007,242,0.005,325,4.133,348,1.653,389,2.122,438,2.462,457,4.763,475,3.837,486,1.142,487,1.304,491,1.271,505,1.569,514,3.906,515,2.326,529,2.462,531,1.425,533,2.576,535,2.602,537,2.763,573,1.779,644,1.747,682,2.133,684,2.323,693,3.862,703,2.133,733,1.747,791,2.224,802,3.485,822,2.951,854,4.247,855,2.323,858,3.911,868,4.133,870,2.576,895,5.43,910,4.579,912,3.459,913,3.837,916,2.576,917,2.323,918,2.576,919,2.576,923,2.576,924,2.576,967,3.795,1026,2.133,1145,2.133,1188,4.585,1222,2.576,1239,2.323,1307,2.323,1353,3.945,1390,2.576,1648,4.585,1649,3.837,1693,2.576,1694,6.061,1695,6.061,1705,2.576,1706,2.576,1714,2.576,1721,5.694,1729,2.576,1730,5.27,1731,4.411,1732,4.411,1733,4.411,1734,4.411,1735,4.411,1736,4.411,1737,4.411,1738,2.962,1739,4.411,1740,2.962,1741,4.411,1742,4.411,1743,2.962,1744,4.411,1745,2.962,1746,4.411,1747,2.962,1748,2.962,1749,2.962,1750,2.962,1751,2.962,1752,4.411,1753,2.962,1754,2.576,1755,2.962,1756,5.839,1757,2.962,1758,2.962,1759,2.962,1760,2.962,1761,4.411,1762,2.962,1763,2.962,1764,2.962,1765,2.962,1766,2.962,1767,6.78,1768,2.962,1769,2.962,1770,4.411,1771,4.411,1772,4.411,1773,2.962,1774,2.962,1775,5.839,1776,2.962,1777,2.962,1778,2.962,1779,2.962,1780,2.962,1781,2.962,1782,2.962,1783,2.962,1784,4.411,1785,4.411,1786,2.962,1787,2.962,1788,2.962,1789,5.27,1790,5.27,1791,2.962,1792,2.962,1793,2.962,1794,2.962,1795,2.962,1796,2.962,1797,2.962,1798,2.962,1799,4.411,1800,4.411,1801,4.411,1802,2.962,1803,4.411,1804,2.962,1805,4.411,1806,2.962,1807,2.962,1808,2.962]],["title/components/HomeComponent.html",[0,0.034,190,0.66]],["body/components/HomeComponent.html",[0,0.052,1,0.632,2,0.913,3,0.086,4,0.086,5,0.736,6,0.709,7,0.736,8,0.059,10,0.608,11,1.505,12,1.022,14,0.174,15,0.375,18,0.689,29,0.562,32,0.253,34,0.78,35,0.014,36,0.52,37,0.22,38,0.78,47,0.496,49,0.683,57,0.632,58,0.585,61,0.552,64,0.339,66,0.1,67,0.102,85,1.897,87,0.632,107,1.601,126,2.376,138,1.05,152,0.657,153,1.022,154,1.022,155,0.608,156,0.736,157,0.736,158,0.632,159,0.736,160,0.632,161,0.736,162,0.632,163,0.736,164,0.632,165,0.736,166,0.632,167,0.736,168,0.632,169,0.736,170,0.736,171,0.632,172,0.736,173,0.632,174,0.736,175,0.632,176,0.736,177,0.632,178,0.736,179,0.632,180,0.736,181,0.632,182,0.736,183,0.632,184,0.736,185,0.632,186,0.632,187,0.736,188,0.632,189,0.736,190,1.091,191,0.736,192,0.632,193,0.736,194,0.632,195,0.736,196,0.736,197,0.632,198,0.736,199,0.632,200,0.736,201,0.632,202,0.949,203,0.949,204,0.736,205,0.632,206,0.736,207,0.632,208,0.736,209,0.632,210,0.736,211,0.632,212,0.736,213,0.632,214,0.736,215,0.632,216,0.736,217,0.632,218,0.736,219,0.632,220,0.736,221,0.736,222,0.632,223,0.985,224,0.736,225,0.632,226,0.736,227,0.632,228,0.657,229,0.736,230,0.632,231,0.736,232,0.632,233,0.736,234,0.632,235,0.657,236,0.736,237,0.657,238,0.709,239,0.736,240,0.006,241,0.009,242,0.006,326,2.914,357,1.972,367,4.585,386,3.358,388,2.884,391,4.076,393,4.575,436,1.67,437,4.886,438,2.117,439,2.376,491,1.658,711,2.29,712,2.376,728,2.537,732,1.536,741,2.376,793,3.526,857,2.731,858,2.376,1105,2.376,1553,4.133,1681,2.974,1689,3.299,1809,3.299,1810,5.271,1811,5.271,1812,7.303,1813,5.271,1814,5.271,1815,3.793,1816,3.793,1817,3.793,1818,3.793,1819,3.793,1820,3.793,1821,3.793,1822,3.793,1823,3.793,1824,3.793,1825,3.793]],["title/components/HoverBoxComponent.html",[0,0.034,192,0.66]],["body/components/HoverBoxComponent.html",[0,0.046,1,0.524,2,0.798,3,0.072,4,0.072,5,0.609,6,0.587,7,0.609,8,0.049,10,0.504,11,1.487,12,0.893,14,0.144,15,0.327,18,0.602,29,0.808,32,0.321,34,0.947,35,0.014,36,0.535,37,0.296,38,0.947,39,2.306,47,0.836,49,0.829,56,2.006,57,1.181,58,1.092,59,1.723,61,0.237,64,0.281,66,0.083,67,0.084,69,1.088,77,0.766,80,1.111,85,2.303,87,0.524,91,1.792,98,2.886,99,2.216,106,2.082,122,2.262,126,1.968,138,1.072,152,0.544,153,0.893,154,0.893,155,0.504,156,0.609,157,0.609,158,0.524,159,0.609,160,0.524,161,0.609,162,0.524,163,0.609,164,0.524,165,0.609,166,0.524,167,0.609,168,0.524,169,0.609,170,0.609,171,0.524,172,0.609,173,0.524,174,0.609,175,0.524,176,0.609,177,0.524,178,0.609,179,0.524,180,0.609,181,0.524,182,0.609,183,0.524,184,0.609,185,0.524,186,0.524,187,0.609,188,0.524,189,0.609,190,0.524,191,0.609,192,1.002,193,0.609,194,0.524,195,0.609,196,0.609,197,0.524,198,0.609,199,0.524,200,0.609,201,0.524,202,0.829,203,1.341,204,0.609,205,0.524,206,0.609,207,0.524,208,0.609,209,0.524,210,0.609,211,0.524,212,0.609,213,0.524,214,0.609,215,0.524,216,0.609,217,0.524,218,0.609,219,0.524,220,0.609,221,0.609,222,0.524,223,0.587,224,0.609,225,0.524,226,0.609,227,0.524,228,0.544,229,0.609,230,0.524,231,0.609,232,0.524,233,0.609,234,0.524,235,0.544,236,0.609,237,0.544,238,0.587,239,0.609,240,0.005,241,0.008,242,0.005,307,2.463,318,5.226,337,1.272,348,1.753,486,1.193,529,1.753,531,1.511,573,0.785,639,2.463,644,1.853,665,2.732,789,3.082,791,1.584,804,2.101,1092,3.649,1229,2.463,1350,3.928,1351,4.277,1352,5.226,1353,3.947,1357,4.007,1358,3.612,1368,2.732,1376,4.711,1381,2.463,1382,2.732,1404,2.463,1409,2.732,1414,2.732,1466,2.732,1470,2.463,1532,2.463,1673,4.007,1682,2.732,1826,2.732,1827,4.007,1828,4.606,1829,5.455,1830,6.397,1831,6.008,1832,5.455,1833,6.008,1834,4.606,1835,4.606,1836,4.606,1837,4.606,1838,3.141,1839,3.141,1840,3.141,1841,3.141,1842,3.141,1843,4.606,1844,3.141,1845,3.141,1846,3.141,1847,3.141,1848,3.141,1849,3.141,1850,3.141,1851,3.141,1852,3.141,1853,3.141,1854,3.141,1855,6.164,1856,4.606,1857,3.141,1858,3.141,1859,3.141,1860,3.141,1861,3.141,1862,3.141,1863,4.606,1864,3.141,1865,3.141,1866,3.141,1867,3.141,1868,3.141,1869,3.141,1870,3.141,1871,3.141,1872,3.141,1873,5.226,1874,6.909]],["title/pipes/HumanizeBytesPipe.html",[1875,2.85,1876,3.103]],["body/pipes/HumanizeBytesPipe.html",[3,0.126,4,0.126,8,0.086,10,0.891,18,0.726,32,0.283,34,1.001,35,0.014,36,0.573,37,0.232,38,1.001,47,0.884,58,0.856,61,0.419,64,0.497,66,0.147,67,0.149,77,0.974,93,3.076,240,0.009,241,0.011,242,0.009,573,1.689,679,3.999,1875,4.868,1876,5.301,1877,5.554,1878,4.831,1879,6.76,1880,5.554,1881,6.76,1882,5.554,1883,6.76,1884,5.554,1885,6.76,1886,7.288,1887,5.554,1888,6.76,1889,5.554,1890,5.554,1891,5.554,1892,5.554,1893,5.554,1894,5.554,1895,5.554]],["title/classes/Link.html",[67,0.106,673,2.647]],["body/classes/Link.html",[3,0.137,4,0.137,8,0.094,14,0.276,15,0.504,32,0.297,35,0.014,37,0.297,66,0.188,67,0.19,77,0.933,80,1.71,240,0.01,241,0.012,242,0.01,355,2.252,670,3.359,671,4.72,672,5.236,673,5.046,676,6.561,677,3.629,1896,6.019,1897,6.019]],["title/components/LoadingAnimation.html",[0,0.034,194,0.66]],["body/components/LoadingAnimation.html",[0,0.057,1,0.779,2,1.051,3,0.106,4,0.106,5,0.907,6,0.874,7,0.907,8,0.073,10,0.75,11,1.521,12,1.176,29,0.997,32,0.195,35,0.014,36,0.509,61,0.353,64,0.418,66,0.124,67,0.125,87,0.779,138,1.143,152,0.81,153,1.176,154,1.176,155,0.75,156,0.907,157,0.907,158,0.779,159,0.907,160,0.779,161,0.907,162,0.779,163,0.907,164,0.779,165,0.907,166,0.779,167,0.907,168,0.779,169,0.907,170,0.907,171,0.779,172,0.907,173,0.779,174,0.907,175,0.779,176,0.907,177,0.779,178,0.907,179,0.779,180,0.907,181,0.779,182,0.907,183,0.779,184,0.907,185,0.779,186,0.779,187,0.907,188,0.779,189,0.907,190,0.779,191,0.907,192,0.779,193,0.907,194,1.188,195,1.306,196,0.907,197,0.779,198,0.907,199,0.779,200,0.907,201,0.779,202,1.092,203,1.092,204,0.907,205,0.779,206,0.907,207,0.779,208,0.907,209,0.779,210,0.907,211,0.779,212,0.907,213,0.779,214,0.907,215,0.779,216,0.907,217,0.779,218,0.907,219,0.779,220,0.907,221,0.907,222,0.779,223,0.874,224,0.907,225,0.779,226,0.907,227,0.779,228,0.81,229,0.907,230,0.779,231,0.907,232,0.779,233,0.907,234,0.779,235,0.81,236,0.907,237,0.81,238,0.874,239,0.907,240,0.008,241,0.01,242,0.008,1898,4.067,1899,6.066,1900,6.066,1901,4.675]],["title/injectables/MapService.html",[390,2.479,486,1.025]],["body/injectables/MapService.html",[3,0.092,4,0.092,8,0.063,14,0.185,15,0.391,32,0.168,35,0.014,37,0.168,57,0.672,58,0.621,61,0.305,64,0.361,66,0.107,67,0.108,82,5.75,91,2.823,93,3.062,96,3.749,240,0.007,241,0.009,242,0.007,315,5.883,341,5.926,348,2.25,390,3.443,486,1.423,487,1.775,785,3.313,1353,2.136,1727,5.267,1902,3.507,1903,6.254,1904,6.718,1905,7.557,1906,7.255,1907,6.718,1908,6.718,1909,5.497,1910,5.497,1911,4.781,1912,6.718,1913,5.497,1914,6.718,1915,5.497,1916,7.255,1917,7.217,1918,5.497,1919,5.497,1920,7.557,1921,7.255,1922,7.011,1923,5.497,1924,7.557,1925,6.718,1926,5.497,1927,6.718,1928,5.497,1929,5.497,1930,4.781,1931,4.781,1932,7.255,1933,5.497,1934,5.497,1935,6.718,1936,5.497,1937,5.497,1938,6.718,1939,6.718,1940,5.497,1941,5.497,1942,5.497,1943,5.497,1944,4.781,1945,5.497,1946,5.497,1947,5.497,1948,4.031]],["title/classes/Medication.html",[67,0.106,854,2.479]],["body/classes/Medication.html",[3,0.127,4,0.127,8,0.087,14,0.256,15,0.482,29,0.827,32,0.318,34,0.827,35,0.014,36,0.598,37,0.325,38,0.827,39,1.864,66,0.148,67,0.15,77,0.98,240,0.009,241,0.011,242,0.009,355,2.089,358,2.958,692,3.498,693,4.002,694,3.295,854,4.249,873,6.355,879,6.968,891,4.858,1949,4.858,1950,5.9,1951,5.585,1952,5.585,1953,5.585,1954,5.585,1955,5.585,1956,5.585,1957,5.585]],["title/components/MedicationsComponent.html",[0,0.034,197,0.66]],["body/components/MedicationsComponent.html",[0,0.052,1,0.645,2,0.926,3,0.088,4,0.088,5,0.751,6,0.723,7,0.751,8,0.06,10,0.621,11,1.507,12,1.037,14,0.177,15,0.38,18,0.699,20,3.498,24,1.658,29,0.792,32,0.29,34,0.792,35,0.014,36,0.555,37,0.276,38,0.792,47,0.699,49,0.962,61,0.523,62,1.487,64,0.346,66,0.102,67,0.104,80,1.289,87,0.645,94,2.787,106,2.122,138,1.059,152,0.671,153,1.037,154,1.037,155,0.621,156,0.751,157,0.751,158,0.645,159,0.751,160,0.645,161,0.751,162,0.645,163,0.751,164,0.645,165,0.751,166,0.645,167,0.751,168,0.645,169,0.751,170,0.751,171,0.645,172,0.751,173,0.645,174,0.751,175,0.645,176,0.751,177,0.645,178,0.751,179,0.645,180,0.751,181,0.645,182,0.751,183,0.645,184,0.751,185,0.645,186,0.645,187,0.751,188,0.645,189,0.751,190,0.645,191,0.751,192,0.645,193,0.751,194,0.645,195,0.751,196,0.751,197,1.101,198,0.751,199,0.645,200,0.751,201,0.645,202,0.962,203,0.962,204,0.751,205,0.645,206,0.751,207,0.645,208,0.751,209,0.645,210,0.751,211,0.645,212,0.751,213,0.645,214,0.751,215,0.645,216,0.751,217,0.645,218,0.751,219,0.645,220,0.751,221,0.751,222,0.645,223,0.723,224,0.751,225,0.645,226,0.751,227,0.645,228,0.671,229,0.751,230,0.645,231,0.751,232,0.645,233,0.751,234,0.645,235,0.671,236,0.751,237,0.671,238,0.723,239,0.751,240,0.007,241,0.009,242,0.007,260,2.051,385,4.228,389,3.533,491,1.289,711,2.305,729,3.367,732,1.568,733,3.613,742,2.16,789,2.59,811,3.367,854,4.341,855,3.035,869,5.759,1320,3.035,1680,2.425,1958,3.367,1959,5.346,1960,3.871,1961,5.346,1962,5.346,1963,3.871,1964,3.871,1965,3.871,1966,3.871,1967,3.871,1968,3.367,1969,3.871,1970,3.871,1971,3.871,1972,3.871,1973,5.346]],["title/components/NewCondition.html",[0,0.034,199,0.66]],["body/components/NewCondition.html",[0,0.058,1,0.787,2,1.057,3,0.107,4,0.107,5,0.915,6,0.882,7,0.915,8,0.073,10,0.757,11,1.522,12,1.184,35,0.014,36,0.511,61,0.356,64,0.422,66,0.125,67,0.127,87,0.787,138,1.147,152,0.818,153,1.184,154,1.184,155,0.757,156,0.915,157,0.915,158,0.787,159,0.915,160,0.787,161,0.915,162,0.787,163,0.915,164,0.787,165,0.915,166,0.787,167,0.915,168,0.787,169,0.915,170,0.915,171,0.787,172,0.915,173,0.787,174,0.915,175,0.787,176,0.915,177,0.787,178,0.915,179,0.787,180,0.915,181,0.787,182,0.915,183,0.787,184,0.915,185,0.787,186,0.787,187,0.915,188,0.787,189,0.915,190,0.787,191,0.915,192,0.787,193,0.915,194,0.787,195,0.915,196,0.915,197,0.787,198,0.915,199,1.265,200,0.915,201,0.787,202,1.098,203,1.098,204,0.915,205,0.787,206,0.915,207,0.787,208,0.915,209,0.787,210,0.915,211,0.787,212,0.915,213,0.787,214,0.915,215,0.787,216,0.915,217,0.787,218,0.915,219,0.787,220,0.915,221,0.915,222,0.787,223,0.882,224,0.915,225,0.787,226,0.915,227,0.787,228,0.818,229,0.915,230,0.787,231,0.915,232,0.787,233,0.915,234,0.787,235,0.818,236,0.915,237,0.818,238,0.882,239,0.915,240,0.008,241,0.01,242,0.008,1974,4.105,1975,6.103]],["title/components/NormalBox1.html",[0,0.034,201,0.66]],["body/components/NormalBox1.html",[0,0.055,1,0.719,2,0.997,3,0.098,4,0.098,5,0.837,6,0.806,7,0.837,8,0.067,10,0.692,11,1.515,12,1.116,14,0.197,15,0.409,18,0.752,24,1.784,32,0.271,35,0.014,36,0.489,37,0.24,47,0.564,61,0.326,62,1.601,64,0.386,66,0.114,67,0.116,69,1.495,77,0.689,85,2.071,87,0.719,93,2.428,138,1.107,152,0.747,153,1.116,154,1.116,155,0.692,156,0.837,157,0.837,158,0.719,159,0.837,160,0.719,161,0.837,162,0.719,163,0.837,164,0.719,165,0.837,166,0.719,167,0.837,168,0.719,169,0.837,170,0.837,171,0.719,172,0.837,173,0.719,174,0.837,175,0.719,176,0.837,177,0.719,178,0.837,179,0.719,180,0.837,181,0.719,182,0.837,183,0.719,184,0.837,185,0.719,186,0.719,187,0.837,188,0.719,189,0.837,190,0.719,191,0.837,192,0.719,193,0.837,194,0.719,195,0.837,196,0.837,197,0.719,198,0.837,199,0.719,200,0.837,201,1.151,202,1.332,203,1.413,204,0.837,205,0.719,206,0.837,207,0.719,208,0.837,209,0.719,210,0.837,211,0.719,212,0.837,213,0.719,214,0.837,215,0.719,216,0.837,217,0.719,218,0.837,219,0.719,220,0.837,221,0.837,222,0.719,223,0.806,224,0.837,225,0.719,226,0.837,227,0.719,228,0.747,229,0.837,230,0.719,231,0.837,232,0.719,233,0.837,234,0.719,235,0.747,236,0.837,237,0.747,238,0.806,239,0.837,240,0.007,241,0.01,242,0.007,357,1.614,573,1.438,931,3.854,932,4.331,940,3.849,1976,5.415,1977,3.753,1978,5.754,1979,5.631,1980,4.314,1981,4.314,1982,4.314,1983,5.005,1984,3.107]],["title/components/NormalBox2.html",[0,0.034,205,0.66]],["body/components/NormalBox2.html",[0,0.055,1,0.719,2,0.997,3,0.098,4,0.098,5,0.837,6,0.806,7,0.837,8,0.067,10,0.692,11,1.515,12,1.116,14,0.197,15,0.409,18,0.752,24,1.784,32,0.271,35,0.014,36,0.489,37,0.24,47,0.564,61,0.326,62,1.601,64,0.386,66,0.114,67,0.116,69,1.495,77,0.689,85,2.071,87,0.719,96,3.211,138,1.107,152,0.747,153,1.116,154,1.116,155,0.692,156,0.837,157,0.837,158,0.719,159,0.837,160,0.719,161,0.837,162,0.719,163,0.837,164,0.719,165,0.837,166,0.719,167,0.837,168,0.719,169,0.837,170,0.837,171,0.719,172,0.837,173,0.719,174,0.837,175,0.719,176,0.837,177,0.719,178,0.837,179,0.719,180,0.837,181,0.719,182,0.837,183,0.719,184,0.837,185,0.719,186,0.719,187,0.837,188,0.719,189,0.837,190,0.719,191,0.837,192,0.719,193,0.837,194,0.719,195,0.837,196,0.837,197,0.719,198,0.837,199,0.719,200,0.837,201,0.719,202,1.332,203,1.413,204,0.837,205,1.151,206,0.837,207,0.719,208,0.837,209,0.719,210,0.837,211,0.719,212,0.837,213,0.719,214,0.837,215,0.719,216,0.837,217,0.719,218,0.837,219,0.719,220,0.837,221,0.837,222,0.719,223,0.806,224,0.837,225,0.719,226,0.837,227,0.719,228,0.747,229,0.837,230,0.719,231,0.837,232,0.719,233,0.837,234,0.719,235,0.747,236,0.837,237,0.747,238,0.806,239,0.837,240,0.007,241,0.01,242,0.007,357,1.614,573,1.438,931,3.854,932,4.331,940,3.849,1976,5.415,1979,5.631,1983,5.005,1984,3.107,1985,3.753,1986,5.754,1987,4.314,1988,4.314,1989,4.314]],["title/components/NoteNavigationComponent.html",[0,0.034,207,0.66]],["body/components/NoteNavigationComponent.html",[0,0.051,1,0.61,2,0.891,3,0.083,4,0.083,5,0.71,6,0.684,7,0.71,8,0.057,10,0.587,11,1.502,12,0.997,14,0.168,18,0.672,32,0.294,35,0.014,36,0.449,47,0.92,49,1.267,61,0.276,64,0.327,66,0.097,67,0.098,87,0.61,138,1.033,152,0.634,153,0.997,154,0.997,155,0.587,156,0.71,157,0.71,158,0.61,159,0.71,160,0.61,161,0.71,162,0.61,163,0.71,164,0.61,165,0.71,166,0.61,167,0.71,168,0.61,169,0.71,170,0.71,171,0.61,172,0.71,173,0.61,174,0.71,175,0.61,176,0.71,177,0.61,178,0.71,179,0.61,180,0.71,181,0.61,182,0.71,183,0.61,184,0.71,185,0.61,186,0.61,187,0.71,188,0.61,189,0.71,190,0.61,191,0.71,192,0.61,193,0.71,194,0.61,195,0.71,196,0.71,197,0.61,198,0.71,199,0.61,200,0.71,201,0.61,202,0.925,203,0.925,204,0.71,205,0.61,206,0.71,207,1.074,208,0.71,209,0.61,210,0.71,211,0.61,212,0.71,213,0.61,214,0.71,215,0.61,216,0.71,217,0.61,218,0.71,219,0.61,220,0.71,221,0.71,222,0.61,223,0.684,224,0.71,225,0.61,226,0.71,227,0.61,228,0.634,229,0.71,230,0.61,231,0.71,232,0.61,233,0.71,234,0.61,235,0.634,236,0.71,237,0.634,238,0.684,239,0.71,240,0.006,241,0.009,242,0.006,753,4.874,1376,5.788,1690,4.472,1873,7.186,1990,3.183,1991,5.14,1992,5.14,1993,6.445,1994,6.445,1995,6.445,1996,6.445,1997,6.445,1998,6.445,1999,3.659,2000,3.659,2001,3.659,2002,3.659,2003,3.659,2004,3.659,2005,6.789,2006,6.445,2007,6.789,2008,6.445,2009,5.14,2010,5.942,2011,5.14,2012,5.14]],["title/classes/Observation.html",[67,0.106,505,2.096]],["body/classes/Observation.html",[3,0.101,4,0.101,8,0.069,14,0.202,15,0.416,18,0.764,32,0.338,34,0.97,35,0.014,36,0.495,37,0.336,38,0.97,47,0.911,58,0.682,61,0.334,66,0.117,67,0.119,76,4.719,77,0.944,80,1.681,99,2.127,202,0.796,240,0.007,241,0.01,242,0.007,337,2.654,348,4.159,355,1.654,357,2.452,361,2.814,483,4.105,505,4.283,507,5.139,559,5.139,573,1.743,679,4.212,683,3.866,691,3.467,785,4.137,868,3.467,979,4.719,1223,3.184,1477,3.184,2013,3.846,2014,6.554,2015,6.554,2016,5.701,2017,5.701,2018,6.974,2019,5.849,2020,5.849,2021,5.849,2022,4.422,2023,4.422,2024,4.422,2025,4.422,2026,4.422,2027,4.422,2028,4.422,2029,4.422,2030,4.422,2031,4.422,2032,4.422,2033,5.849,2034,4.422,2035,5.849,2036,4.422,2037,5.849,2038,4.422,2039,4.422,2040,4.422,2041,4.422,2042,4.422,2043,4.422,2044,4.422,2045,4.422,2046,4.422,2047,4.422,2048,4.422]],["title/components/ObservationRecursive.html",[0,0.034,209,0.66]],["body/components/ObservationRecursive.html",[0,0.051,1,0.621,2,0.902,3,0.085,4,0.085,5,0.723,6,0.696,7,0.723,8,0.058,10,0.598,11,1.503,12,1.01,14,0.171,15,0.37,18,0.681,24,1.615,29,0.552,30,2.923,31,3.117,32,0.31,34,0.771,35,0.014,36,0.516,37,0.296,38,0.771,39,2.282,47,0.784,49,0.671,57,0.621,58,0.575,61,0.491,62,1.67,64,0.333,65,2.199,66,0.099,67,0.1,69,2.08,71,4.706,80,1.255,87,0.621,106,2.251,107,1.573,138,1.042,152,0.646,153,1.01,154,1.01,155,0.598,156,0.723,157,0.723,158,0.621,159,0.723,160,0.621,161,0.723,162,0.621,163,0.723,164,0.621,165,0.723,166,0.621,167,0.723,168,0.621,169,1.01,170,0.723,171,0.621,172,0.723,173,0.621,174,0.723,175,0.621,176,0.723,177,0.621,178,0.723,179,0.621,180,0.723,181,0.621,182,0.723,183,0.621,184,0.723,185,0.621,186,0.621,187,0.723,188,0.621,189,0.723,190,0.621,191,0.723,192,0.621,193,0.723,194,0.621,195,0.723,196,0.723,197,0.621,198,0.723,199,0.621,200,0.723,201,0.621,202,0.937,203,0.937,204,0.723,205,0.621,206,0.723,207,0.621,208,0.723,209,1.083,210,0.723,211,0.621,212,0.723,213,0.621,214,0.723,215,0.621,216,0.723,217,0.621,218,0.723,219,0.621,220,0.723,221,0.723,222,0.621,223,0.696,224,0.723,225,0.621,226,0.723,227,0.621,228,0.646,229,0.723,230,0.621,231,0.723,232,0.621,233,0.723,234,0.621,235,0.646,236,0.723,237,0.646,238,0.696,239,0.723,240,0.006,241,0.009,242,0.006,260,2.758,389,3.125,392,2.828,491,1.255,635,2.494,730,1.714,829,2.494,830,2.335,931,3.349,1389,2.923,1476,4.678,1659,4.015,1680,2.335,2049,3.242,2050,5.207,2051,5.207,2052,6.001,2053,5.22,2054,5.22,2055,5.651,2056,5.207,2057,3.727,2058,3.727,2059,5.207,2060,3.727,2061,3.727,2062,3.727,2063,3.727,2064,3.727,2065,3.242,2066,5.207,2067,3.242,2068,3.242,2069,3.242,2070,3.242,2071,3.242,2072,4.529,2073,4.529,2074,4.529,2075,5.207,2076,4.529,2077,4.083]],["title/components/ObservationRecursiveChart.html",[0,0.034,211,0.66]],["body/components/ObservationRecursiveChart.html",[0,0.052,1,0.632,2,0.913,3,0.086,4,0.086,5,0.736,6,0.709,7,0.736,8,0.059,10,0.608,11,1.505,12,1.022,14,0.174,15,0.375,18,0.689,24,1.634,29,0.562,30,2.974,31,3.135,32,0.305,34,0.78,35,0.014,36,0.52,37,0.288,38,0.78,39,2.583,47,0.792,49,0.683,61,0.494,62,1.685,64,0.339,65,2.238,66,0.1,67,0.102,69,2.099,71,4.75,80,1.578,87,0.632,106,2.099,107,1.601,138,1.05,152,0.657,153,1.022,154,1.022,155,0.608,156,0.736,157,0.736,158,0.632,159,0.736,160,0.632,161,0.736,162,0.632,163,0.736,164,0.632,165,0.736,166,0.632,167,0.736,168,0.632,169,0.736,170,0.736,171,0.632,172,0.736,173,0.632,174,0.736,175,0.632,176,0.736,177,0.632,178,0.736,179,0.632,180,0.736,181,0.632,182,0.736,183,0.632,184,0.736,185,0.632,186,0.632,187,0.736,188,0.632,189,0.736,190,0.632,191,0.736,192,0.632,193,0.736,194,0.632,195,0.736,196,0.736,197,0.632,198,0.736,199,0.632,200,0.736,201,0.632,202,0.949,203,0.949,204,0.736,205,0.632,206,0.736,207,0.632,208,0.736,209,0.632,210,0.736,211,1.091,212,0.736,213,0.632,214,0.736,215,0.632,216,0.736,217,0.632,218,0.736,219,0.632,220,0.736,221,0.736,222,0.632,223,0.709,224,0.736,225,0.632,226,0.736,227,0.632,228,0.657,229,0.736,230,0.632,231,0.736,232,0.632,233,0.736,234,0.632,235,0.657,236,0.736,237,0.657,238,0.709,239,0.736,240,0.006,241,0.009,242,0.006,260,3.209,389,3.149,491,0.914,505,2.792,528,2.537,573,1.317,931,3.653,1234,2.537,1320,2.974,1476,4.714,1659,4.052,1680,2.376,2053,5.269,2054,5.694,2055,5.269,2069,3.299,2070,3.299,2071,3.299,2072,4.585,2073,4.585,2074,4.585,2076,4.585,2077,4.133,2078,3.299,2079,5.271,2080,5.271,2081,5.271,2082,3.793,2083,3.793,2084,5.271,2085,3.793,2086,3.793,2087,3.793,2088,3.793,2089,3.793,2090,3.793,2091,5.271]],["title/injectables/ObservationService.html",[31,1.742,486,1.025]],["body/injectables/ObservationService.html",[3,0.054,4,0.054,8,0.037,14,0.108,15,0.264,18,0.486,29,0.55,31,1.636,32,0.321,34,0.928,35,0.014,36,0.473,37,0.304,38,0.928,39,1.531,47,0.949,49,1.252,57,0.999,58,0.923,59,1.716,61,0.473,64,0.212,66,0.063,67,0.064,69,2.412,76,1.704,77,0.833,79,2.059,80,1.838,82,2.675,85,0.852,86,2.059,89,0.999,91,2.929,92,4.106,93,3.177,96,4.34,98,1.483,99,3.451,132,3.741,240,0.004,241,0.006,242,0.004,326,2.206,337,1.505,338,2.059,339,1.856,340,2.059,341,1.856,343,2.059,344,2.059,345,2.059,347,2.059,357,2.795,358,1.254,388,2.427,392,2.438,454,2.192,465,1.254,486,0.962,487,1.042,491,1.106,497,3.065,499,2.706,505,2.991,515,2,528,1.583,573,1.411,584,2.059,608,1.321,614,3.476,615,3.476,635,1.583,642,1.139,643,1.139,644,2.192,660,2.873,670,3.343,677,1.139,711,1.195,712,1.483,730,1.088,746,1.856,853,1.583,856,1.704,858,2.327,862,1.483,863,1.704,979,1.704,1026,1.704,1036,2.913,1037,1.856,1038,1.856,1092,3.476,1113,2.059,1119,1.856,1134,1.704,1205,4.519,1233,2.059,1249,2.059,1252,2.059,1256,2.059,1305,2.913,1463,6.445,1476,2.675,1516,2.059,1727,4.913,1911,2.059,1922,3.232,1930,2.059,1931,2.059,1944,2.059,2092,2.059,2093,5.195,2094,4.586,2095,5.645,2096,4.586,2097,4.586,2098,3.715,2099,3.715,2100,4.586,2101,3.715,2102,5.195,2103,3.715,2104,3.715,2105,3.715,2106,5.195,2107,3.715,2108,2.367,2109,2.367,2110,3.715,2111,2.367,2112,2.367,2113,3.715,2114,2.367,2115,3.715,2116,3.715,2117,3.715,2118,2.367,2119,3.715,2120,2.367,2121,3.715,2122,2.367,2123,2.367,2124,3.715,2125,2.367,2126,4.586,2127,2.367,2128,2.367,2129,2.367,2130,2.367,2131,2.367,2132,2.367,2133,2.367,2134,2.367,2135,2.367,2136,2.367,2137,2.367,2138,3.715,2139,2.367,2140,2.367,2141,3.715,2142,2.367,2143,2.367,2144,2.367,2145,2.367,2146,2.367,2147,2.367,2148,2.367,2149,3.715,2150,2.367,2151,2.367,2152,2.367,2153,3.715,2154,2.367,2155,2.367,2156,1.856,2157,2.367,2158,2.367,2159,2.367,2160,2.367,2161,2.367,2162,2.367,2163,2.367,2164,2.367,2165,2.367,2166,2.367,2167,2.367,2168,4.519,2169,2.367,2170,2.367,2171,2.367,2172,2.367,2173,2.367,2174,2.367,2175,2.367,2176,2.367,2177,2.367,2178,2.367,2179,2.367,2180,3.715,2181,2.367,2182,3.715,2183,2.367,2184,2.367,2185,2.367,2186,2.367,2187,2.367,2188,2.367,2189,2.367,2190,2.367,2191,2.367,2192,3.715,2193,2.367,2194,2.367,2195,2.367,2196,2.367,2197,2.367,2198,2.367,2199,2.367,2200,2.367,2201,2.367,2202,3.715,2203,3.715,2204,2.367,2205,2.367,2206,2.367,2207,2.367,2208,2.367,2209,2.367]],["title/components/ObservationsComponent.html",[0,0.034,213,0.66]],["body/components/ObservationsComponent.html",[0,0.045,1,0.497,2,0.768,3,0.068,4,0.068,5,0.578,6,0.557,7,0.578,8,0.046,10,0.478,11,1.482,12,0.859,14,0.136,15,0.315,18,0.579,20,3.102,24,1.374,29,0.656,31,2.991,32,0.32,34,0.656,35,0.014,36,0.473,37,0.308,38,0.656,39,1.479,47,0.818,49,1.126,57,1.094,58,0.903,61,0.556,62,1.629,63,1.502,64,0.266,65,1.758,66,0.079,67,0.08,69,2.169,77,0.53,80,1.275,87,0.497,90,2.473,92,4.118,106,1.033,138,0.939,152,0.516,153,0.859,154,0.859,155,0.478,156,0.578,157,0.578,158,0.497,159,0.578,160,0.497,161,0.578,162,0.497,163,0.578,164,0.497,165,0.578,166,0.497,167,0.578,168,0.497,169,0.578,170,0.578,171,0.497,172,0.578,173,0.497,174,0.578,175,0.497,176,0.578,177,0.497,178,0.578,179,0.497,180,0.578,181,0.497,182,0.578,183,0.497,184,0.578,185,0.497,186,0.497,187,0.578,188,0.497,189,0.578,190,0.497,191,0.578,192,0.497,193,0.578,194,0.497,195,1.026,196,0.578,197,0.497,198,0.578,199,0.497,200,0.578,201,0.497,202,0.797,203,0.797,204,0.578,205,0.497,206,0.578,207,0.497,208,0.578,209,0.497,210,0.578,211,0.497,212,0.578,213,0.976,214,0.578,215,0.497,216,0.578,217,0.497,218,0.578,219,0.497,220,0.859,221,0.578,222,0.497,223,0.557,224,0.578,225,0.497,226,0.578,227,0.497,228,0.516,229,0.578,230,0.497,231,0.578,232,0.497,233,0.578,234,0.497,235,0.516,236,0.578,237,0.516,238,0.557,239,0.578,240,0.005,241,0.007,242,0.005,255,2.991,287,1.663,313,3.474,326,2.544,358,1.578,388,2.657,389,2.817,390,4.256,392,2.643,436,2.578,491,1.582,505,3.599,515,0.995,528,1.993,608,4.11,610,3.19,611,2.964,612,3.19,613,3.19,614,3.538,615,3.538,616,3.809,620,2.146,622,2.146,628,1.433,631,2.146,633,3.474,642,1.433,643,1.433,662,2.964,677,1.433,681,2.614,705,3.474,709,4.669,711,2.294,712,1.866,716,5.327,717,2.336,718,2.336,719,2.336,720,2.336,725,2.336,726,2.336,727,2.336,728,1.993,730,1.37,732,1.207,736,2.336,737,2.336,738,2.336,739,3.474,740,3.19,742,1.663,766,2.473,829,2.964,859,1.866,1131,2.775,1202,2.592,1234,2.964,1381,3.474,1532,4.147,1659,3.538,1680,1.866,2065,3.854,2210,2.592,2211,4.43,2212,5.289,2213,4.43,2214,2.979,2215,2.979,2216,4.43,2217,4.43,2218,2.979,2219,2.979,2220,2.979,2221,2.979,2222,2.979,2223,2.979,2224,2.979,2225,2.979,2226,2.979,2227,2.979,2228,2.979,2229,2.979,2230,2.979]],["title/components/ObservationsDisplay.html",[0,0.034,215,0.66]],["body/components/ObservationsDisplay.html",[0,0.041,1,0.433,2,0.692,3,0.059,4,0.059,5,0.775,6,0.486,7,0.504,8,0.04,10,0.417,11,1.467,12,0.775,14,0.119,15,0.284,18,0.714,20,2.894,24,1.239,29,0.592,32,0.315,34,0.96,35,0.014,36,0.529,37,0.298,38,0.96,47,0.897,49,1.167,56,1.968,57,0.666,58,0.842,59,2.426,61,0.445,62,1.112,63,2.015,64,0.232,66,0.069,67,0.107,74,1.628,77,0.583,80,1.174,87,0.666,88,1.25,89,1.097,92,3.673,106,0.901,109,1.739,138,0.876,148,1.195,149,2.038,152,0.45,153,0.775,154,0.775,155,0.417,156,0.504,157,0.504,158,0.433,159,0.504,160,0.433,161,0.504,162,0.433,163,0.504,164,0.433,165,0.504,166,0.433,167,0.504,168,0.433,169,0.944,170,0.504,171,0.433,172,0.504,173,0.433,174,0.504,175,0.433,176,0.504,177,0.433,178,0.504,179,0.911,180,0.504,181,0.433,182,0.504,183,0.433,184,0.504,185,0.433,186,0.433,187,0.504,188,0.433,189,0.504,190,0.433,191,0.504,192,0.433,193,0.504,194,0.433,195,0.504,196,0.504,197,0.433,198,0.504,199,0.433,200,0.504,201,0.433,202,0.719,203,0.719,204,0.504,205,0.433,206,0.504,207,0.433,208,0.504,209,0.433,210,0.504,211,0.433,212,0.504,213,0.433,214,0.504,215,1.038,216,0.504,217,0.433,218,0.504,219,0.433,220,0.504,221,0.504,222,0.433,223,0.486,224,0.504,225,0.433,226,0.504,227,0.433,228,0.45,229,0.504,230,0.433,231,0.504,232,0.433,233,0.504,234,0.433,235,0.45,236,0.504,237,0.45,238,0.486,239,0.504,240,0.004,241,0.007,242,0.004,260,3.298,312,1.739,326,2.837,361,2.342,384,3.475,392,2.671,491,0.963,505,4.256,515,0.868,528,1.739,531,2.628,535,1.534,536,2.038,537,3.049,555,2.872,559,2.038,573,0.998,578,2.673,600,2.038,640,1.534,642,2.342,643,2.342,660,1.628,730,1.195,733,2.357,741,1.628,752,3.817,753,3.479,757,2.877,758,3.934,759,3.655,761,2.357,766,3.049,775,2.877,777,2.673,783,1.534,784,2.877,785,2.579,787,1.628,788,1.872,789,3.256,790,1.739,791,1.311,792,2.503,793,3.256,794,2.503,795,3.655,796,1.739,797,1.872,798,1.739,799,1.739,800,1.739,801,1.872,802,3.049,803,1.739,804,1.739,805,1.628,806,1.872,807,3.256,808,3.256,809,3.256,810,2.038,813,3.505,814,1.872,816,2.038,817,1.628,818,2.038,819,2.261,820,2.261,822,1.739,827,2.038,829,2.673,830,1.628,831,2.261,832,2.261,833,2.038,835,2.877,836,1.872,837,1.872,838,2.038,839,2.038,1107,1.872,1172,2.038,1304,2.038,1311,2.261,1321,3.476,1342,3.476,2168,2.261,2231,2.261,2232,3.996,2233,3.996,2234,3.996,2235,3.996,2236,3.996,2237,3.996,2238,4.868,2239,2.261,2240,3.996,2241,2.599,2242,2.599,2243,3.996,2244,2.599,2245,3.996,2246,5.464,2247,2.599,2248,2.599,2249,3.996,2250,2.599,2251,3.996,2252,2.599,2253,2.599,2254,2.599,2255,2.599,2256,3.996,2257,2.599,2258,2.599,2259,2.599,2260,2.599,2261,2.599,2262,2.599,2263,2.599,2264,4.868,2265,2.599,2266,2.599,2267,3.996,2268,2.599,2269,2.599,2270,2.599,2271,2.599,2272,2.599,2273,3.996,2274,2.599,2275,3.996,2276,3.996,2277,3.996,2278,3.996,2279,3.996]],["title/classes/Patient.html",[67,0.106,711,1.273]],["body/classes/Patient.html",[3,0.124,4,0.124,8,0.084,14,0.249,15,0.474,32,0.339,35,0.014,36,0.545,37,0.339,56,2.227,66,0.144,67,0.146,77,0.963,80,1.939,142,4.829,240,0.009,241,0.011,242,0.009,355,2.033,357,2.7,711,2.146,2280,4.726,2281,7.218,2282,7.218,2283,7.218,2284,6.278,2285,5.66,2286,7.218,2287,5.434,2288,5.434,2289,5.434,2290,5.434,2291,5.434,2292,5.434,2293,5.434,2294,5.434,2295,5.434]],["title/components/PatientComponent.html",[0,0.034,217,0.66]],["body/components/PatientComponent.html",[0,0.042,1,0.442,2,0.703,3,0.06,4,0.06,5,0.514,6,0.495,7,0.514,8,0.041,10,0.425,11,1.469,12,0.786,14,0.121,15,0.288,18,0.53,20,2.924,29,0.6,32,0.316,34,0.817,35,0.014,36,0.493,37,0.294,38,0.817,47,0.82,49,1.175,56,1.354,57,0.992,58,0.917,59,2.347,61,0.541,62,1.128,63,1.336,64,0.237,66,0.07,67,0.071,77,0.751,80,1.188,84,2.078,85,0.954,87,0.442,89,1.118,91,1.031,93,2.329,99,1.275,106,1.405,127,1.908,138,0.954,148,2.735,152,0.459,153,0.786,154,0.786,155,0.425,156,0.514,157,0.514,158,0.442,159,0.514,160,0.442,161,0.514,162,0.442,163,0.514,164,0.442,165,0.514,166,0.442,167,0.514,168,0.442,169,0.514,170,0.514,171,0.442,172,0.514,173,0.442,174,0.514,175,0.442,176,0.514,177,0.442,178,0.514,179,0.442,180,0.514,181,0.442,182,0.514,183,0.442,184,0.514,185,0.442,186,0.442,187,0.514,188,0.442,189,0.514,190,1.123,191,0.514,192,0.92,193,0.514,194,0.442,195,0.514,196,0.514,197,0.442,198,0.514,199,0.442,200,0.514,201,0.442,202,0.73,203,0.886,204,0.514,205,0.442,206,0.514,207,0.442,208,0.514,209,0.442,210,0.514,211,0.442,212,0.514,213,0.442,214,0.514,215,0.442,216,0.514,217,0.92,218,0.514,219,0.442,220,0.514,221,0.514,222,0.442,223,0.495,224,0.514,225,0.442,226,0.514,227,0.442,228,0.459,229,0.514,230,0.442,231,0.514,232,0.442,233,0.514,234,0.442,235,0.459,236,0.514,237,0.459,238,0.495,239,0.514,240,0.004,241,0.007,242,0.004,255,2.874,287,1.479,320,5.28,386,3.002,387,3.852,436,1.166,437,4.197,438,1.479,439,1.66,486,1.05,491,1.727,527,1.563,529,1.479,573,0.662,711,2.22,732,1.073,742,1.479,783,1.563,785,2.148,787,1.66,791,1.336,802,1.479,872,2.305,875,1.563,962,2.078,992,4.285,995,4.8,1027,2.078,1066,3.18,1088,3.18,1105,1.66,1190,2.92,1358,2.078,1437,4.285,1440,2.305,1474,2.263,1477,4.849,1495,2.078,1497,2.305,1505,4.327,1514,1.908,1515,3.863,1522,2.305,1617,3.701,1855,4.8,2285,3.18,2296,2.305,2297,4.055,2298,4.926,2299,6.903,2300,4.926,2301,4.055,2302,4.055,2303,4.055,2304,4.055,2305,2.65,2306,2.65,2307,2.65,2308,2.65,2309,2.65,2310,4.055,2311,2.65,2312,2.65,2313,2.65,2314,2.65,2315,2.65,2316,4.055,2317,2.65,2318,2.65,2319,2.65,2320,2.65,2321,2.305,2322,2.65,2323,2.65,2324,2.65,2325,2.65,2326,2.65,2327,5.519,2328,2.65,2329,2.65,2330,4.055,2331,4.055,2332,4.055,2333,4.055,2334,2.65,2335,2.65,2336,2.305,2337,2.65,2338,2.305,2339,2.65,2340,2.65,2341,2.65,2342,2.65,2343,4.926,2344,5.519,2345,2.65,2346,2.65,2347,4.285,2348,2.65,2349,2.65,2350,2.65,2351,2.65,2352,2.305,2353,2.65,2354,5.519,2355,2.65,2356,2.65,2357,2.65,2358,2.65,2359,2.65,2360,4.055,2361,3.527,2362,4.055,2363,5.519,2364,2.65,2365,2.65,2366,2.65,2367,2.65,2368,2.65,2369,2.65]],["title/injectables/PatientService.html",[391,2.208,486,1.025]],["body/injectables/PatientService.html",[3,0.105,4,0.105,8,0.072,14,0.211,15,0.427,18,0.785,29,0.889,32,0.307,34,0.889,35,0.014,36,0.454,37,0.279,38,0.889,39,2.005,47,0.785,49,0.829,57,0.768,58,0.71,61,0.569,64,0.412,66,0.122,67,0.124,77,0.551,138,0.738,240,0.008,241,0.01,242,0.008,357,2.65,388,3.109,391,3.352,465,2.439,474,4.187,486,1.555,487,2.027,491,1.772,496,3.08,497,4.18,499,3.543,514,3.08,531,2.215,573,1.501,628,2.215,630,3.08,644,3.944,677,2.215,711,2.532,732,1.865,803,3.08,850,4.187,853,3.08,857,3.315,859,2.884,860,3.315,862,2.884,1134,3.315,1353,3.541,2285,3.61,2352,4.005,2361,4.005,2370,4.005,2371,5.814,2372,7.349,2373,7.085,2374,6.684,2375,6.006,2376,4.604,2377,6.006,2378,4.604,2379,4.604,2380,6.006,2381,4.604,2382,4.604,2383,4.604,2384,4.604,2385,4.604,2386,4.604,2387,4.604,2388,4.604,2389,4.604]],["title/components/ScratchPadUpdate.html",[0,0.034,219,0.66]],["body/components/ScratchPadUpdate.html",[0,0.053,1,0.677,2,0.957,3,0.092,4,0.092,5,0.787,6,0.758,7,0.787,8,0.063,10,0.651,11,1.51,12,1.071,14,0.186,15,0.392,18,0.722,24,1.712,32,0.304,34,0.601,35,0.014,36,0.509,37,0.295,38,0.601,47,0.722,49,0.994,61,0.307,62,1.536,64,0.363,66,0.107,67,0.109,69,1.406,77,0.919,87,0.677,138,1.08,142,3.694,144,3.976,152,0.703,153,1.071,154,1.071,155,0.651,156,0.787,157,0.787,158,0.677,159,0.787,160,0.677,161,0.787,162,0.677,163,0.787,164,0.677,165,0.787,166,0.677,167,0.787,168,0.677,169,0.787,170,0.787,171,0.677,172,0.787,173,0.677,174,0.787,175,0.677,176,0.787,177,0.677,178,0.787,179,0.677,180,0.787,181,0.677,182,0.787,183,0.677,184,0.787,185,0.677,186,0.677,187,0.787,188,0.677,189,0.787,190,0.677,191,0.787,192,0.677,193,0.787,194,0.677,195,0.787,196,0.787,197,0.677,198,0.787,199,0.677,200,0.787,201,0.677,202,0.994,203,0.994,204,0.787,205,0.677,206,0.787,207,0.677,208,0.787,209,0.677,210,0.787,211,0.677,212,0.787,213,0.677,214,0.787,215,0.677,216,0.787,217,0.677,218,0.787,219,1.123,220,1.217,221,0.787,222,0.677,223,0.758,224,0.787,225,0.677,226,0.787,227,0.677,228,0.703,229,0.787,230,0.677,231,0.787,232,0.677,233,0.787,234,0.677,235,0.703,236,0.787,237,0.703,238,0.758,239,0.787,240,0.007,241,0.009,242,0.007,357,1.518,573,1.014,578,4.199,657,3.976,681,3.974,683,3.974,931,3.759,932,4.199,940,3.694,1984,2.923,2390,6.469,2391,3.53,2392,5.522,2393,5.522,2394,5.522,2395,4.058,2396,4.058,2397,5.522,2398,4.058,2399,5.522,2400,4.058,2401,4.058,2402,4.058,2403,4.058,2404,5.522,2405,4.058,2406,5.522]],["title/components/SelectListSingle.html",[0,0.034,222,0.66]],["body/components/SelectListSingle.html",[0,0.055,1,0.717,2,0.995,3,0.098,4,0.098,5,0.834,6,0.804,7,0.834,8,0.067,10,0.69,11,1.515,12,1.114,14,0.197,15,0.408,18,0.751,24,1.781,32,0.27,35,0.014,36,0.488,37,0.24,47,0.562,61,0.325,62,1.598,64,0.385,66,0.114,67,0.115,69,1.491,77,0.688,85,2.067,87,1.295,138,1.106,152,0.745,153,1.114,154,1.114,155,0.69,156,0.834,157,0.834,158,0.717,159,0.834,160,0.717,161,0.834,162,0.717,163,0.834,164,0.717,165,0.834,166,0.717,167,0.834,168,0.717,169,0.834,170,0.834,171,0.717,172,0.834,173,0.717,174,0.834,175,0.717,176,0.834,177,0.717,178,0.834,179,0.717,180,0.834,181,0.717,182,0.834,183,0.717,184,0.834,185,0.717,186,0.717,187,0.834,188,0.717,189,0.834,190,0.717,191,0.834,192,0.717,193,0.834,194,0.717,195,0.834,196,0.834,197,0.717,198,0.834,199,0.717,200,0.834,201,0.717,202,1.033,203,1.033,204,0.834,205,0.717,206,0.834,207,0.717,208,0.834,209,0.717,210,0.834,211,0.717,212,0.834,213,0.717,214,0.834,215,0.717,216,0.834,217,0.717,218,0.834,219,0.717,220,0.834,221,0.834,222,1.15,223,1.343,224,0.834,225,0.717,226,0.834,227,0.717,228,0.745,229,0.834,230,0.717,231,0.834,232,0.717,233,0.834,234,0.717,235,0.745,236,0.834,237,0.745,238,0.804,239,0.834,240,0.007,241,0.01,242,0.007,357,1.609,573,1.435,931,3.85,932,4.325,940,3.842,941,4.995,1984,3.098,2407,6,2408,3.742,2409,5.743,2410,5.743,2411,6.465,2412,4.302,2413,4.302,2414,4.302,2415,5.743]],["title/classes/Server.html",[67,0.106,1617,2.335]],["body/classes/Server.html",[3,0.132,4,0.132,8,0.09,14,0.264,15,0.492,29,0.855,32,0.31,34,0.855,35,0.014,36,0.603,37,0.31,38,0.855,66,0.153,67,0.155,77,0.985,240,0.01,241,0.012,242,0.01,355,2.161,677,3.838,1353,4.163,1617,4.084,1950,5.025,2416,5.025,2417,5.777,2418,6.923,2419,5.777]],["title/injectables/SmartService.html",[393,2.479,486,1.025]],["body/injectables/SmartService.html",[3,0.074,4,0.074,8,0.05,10,0.519,14,0.148,15,0.335,18,0.616,29,0.698,32,0.323,34,0.698,35,0.014,36,0.356,37,0.313,38,0.698,47,0.797,49,0.583,57,0.926,58,0.856,61,0.511,64,0.29,66,0.086,67,0.087,77,0.946,85,1.166,101,2.54,108,2.167,138,1.084,186,0.54,240,0.01,241,0.008,242,0.005,307,2.54,337,2.249,369,2.167,388,2.825,391,3.893,393,2.951,436,1.426,437,4.666,438,1.808,439,2.029,465,1.716,466,2.54,467,2.54,468,2.817,472,3.151,486,1.22,487,1.426,491,1.47,496,2.167,497,3.597,499,2.779,515,1.081,529,1.808,573,1.523,640,3.597,677,1.558,711,1.515,728,2.167,822,2.167,859,2.029,862,2.029,1131,2.029,1260,2.817,1553,2.54,1570,4.098,1573,4.829,1681,2.54,2156,3.694,2371,6.338,2420,2.817,2421,6.096,2422,5.552,2423,5.552,2424,5.552,2425,5.879,2426,5.552,2427,6.096,2428,5.552,2429,6.096,2430,4.711,2431,6.096,2432,6.096,2433,3.239,2434,3.239,2435,4.711,2436,3.239,2437,4.711,2438,3.239,2439,3.239,2440,3.239,2441,3.239,2442,4.711,2443,4.711,2444,4.711,2445,4.711,2446,4.711,2447,3.239,2448,3.239,2449,3.239,2450,4.711,2451,3.239,2452,4.711,2453,4.711,2454,3.239,2455,3.239,2456,3.239,2457,6.096,2458,3.239,2459,4.711,2460,4.711,2461,5.552,2462,4.711,2463,4.711,2464,3.239,2465,3.239,2466,3.239,2467,3.239,2468,3.239,2469,3.239,2470,3.239,2471,3.239,2472,3.239,2473,5.552,2474,5.552,2475,3.239,2476,4.711,2477,3.239,2478,4.711,2479,4.711,2480,4.711,2481,3.239,2482,3.239,2483,3.239,2484,3.239,2485,3.239,2486,3.239,2487,3.239,2488,3.239,2489,3.239,2490,3.239,2491,3.239,2492,3.239,2493,3.239,2494,4.711,2495,3.239,2496,3.239,2497,3.239,2498,3.239,2499,3.239,2500,3.239,2501,3.239,2502,3.239,2503,3.239,2504,3.239,2505,3.239,2506,2.817,2507,3.239,2508,5.552,2509,3.239,2510,3.239,2511,3.239,2512,3.239,2513,3.239,2514,3.239,2515,3.239,2516,3.239,2517,3.239,2518,2.817,2519,3.239,2520,3.239,2521,3.239,2522,3.239,2523,4.711,2524,3.239,2525,3.239,2526,3.239,2527,3.239]],["title/classes/Timeline.html",[67,0.106,228,0.686]],["body/classes/Timeline.html",[3,0.128,4,0.128,8,0.087,14,0.257,15,0.484,32,0.335,35,0.014,37,0.335,66,0.149,67,0.151,76,5.273,77,0.949,228,1.179,240,0.009,241,0.011,242,0.009,337,2.966,348,4.516,355,2.101,357,2.74,507,5.742,683,4.32,2016,6.37,2017,6.37,2528,4.885,2529,5.616,2530,5.616,2531,5.616,2532,5.616,2533,5.616,2534,5.616,2535,5.616]],["title/components/TimelineComponent.html",[0,0.034,225,0.66]],["body/components/TimelineComponent.html",[0,0.053,1,0.659,2,0.939,3,0.09,4,0.09,5,0.766,6,0.738,7,0.766,8,0.061,10,0.634,11,1.508,12,1.052,14,0.181,15,0.385,18,0.709,20,3.529,24,1.682,29,0.585,32,0.292,34,0.585,35,0.014,36,0.503,37,0.259,38,0.585,47,0.709,49,1.199,57,0.659,58,0.609,61,0.503,62,1.509,64,0.353,66,0.105,67,0.106,80,1.307,87,0.659,107,1.668,138,1.068,152,0.685,153,1.052,154,1.052,155,0.634,156,0.766,157,0.766,158,0.659,159,0.766,160,0.659,161,0.766,162,0.659,163,0.766,164,0.659,165,0.766,166,0.659,167,0.766,168,0.659,169,0.766,170,0.766,171,0.659,172,0.766,173,0.659,174,0.766,175,0.659,176,0.766,177,0.659,178,0.766,179,0.659,180,0.766,181,0.659,182,0.766,183,0.659,184,0.766,185,0.659,186,0.659,187,0.766,188,0.659,189,0.766,190,0.659,191,0.766,192,0.659,193,0.766,194,0.659,195,0.766,196,0.766,197,0.659,198,0.766,199,0.659,200,0.766,201,0.659,202,0.976,203,0.976,204,0.766,205,0.659,206,0.766,207,0.659,208,0.766,209,0.659,210,0.766,211,0.659,212,0.766,213,0.659,214,0.766,215,0.659,216,0.766,217,0.659,218,0.766,219,0.659,220,0.766,221,0.766,222,0.659,223,0.738,224,0.766,225,1.111,226,0.766,227,0.659,228,0.685,229,0.766,230,0.659,231,0.766,232,0.659,233,0.766,234,0.659,235,0.685,236,0.766,237,0.685,238,0.738,239,0.766,240,0.007,241,0.009,242,0.007,387,4.254,491,1.492,711,2.32,732,1.601,742,2.206,1474,2.206,1505,5.224,1514,2.846,1515,5.224,1968,3.438,2321,3.438,2336,3.438,2536,3.438,2537,5.422,2538,5.422,2539,3.952,2540,5.422,2541,3.952,2542,3.952,2543,3.952,2544,3.952,2545,3.952,2546,3.952,2547,3.952,2548,3.952,2549,5.422,2550,3.952,2551,3.952,2552,3.952,2553,3.952,2554,3.952,2555,3.952]],["title/components/TimelinePopupComponent.html",[0,0.034,227,0.66]],["body/components/TimelinePopupComponent.html",[0,0.052,1,0.64,2,0.92,3,0.087,4,0.087,5,0.744,6,0.717,7,0.744,8,0.06,10,0.615,11,1.506,12,1.03,14,0.176,15,0.378,18,0.694,32,0.275,34,0.787,35,0.014,36,0.522,37,0.275,38,0.787,47,0.694,49,1.184,57,0.64,58,0.591,59,1.988,61,0.497,64,0.343,66,0.102,67,0.103,80,0.925,87,0.64,106,2.394,138,1.055,152,0.665,153,1.03,154,1.03,155,0.615,156,0.744,157,0.744,158,0.64,159,0.744,160,0.64,161,0.744,162,0.64,163,0.744,164,0.64,165,0.744,166,0.64,167,0.744,168,0.64,169,0.744,170,0.744,171,0.64,172,0.744,173,0.64,174,0.744,175,0.64,176,0.744,177,0.64,178,0.744,179,0.64,180,0.744,181,0.64,182,0.744,183,0.64,184,0.744,185,0.64,186,0.64,187,0.744,188,0.64,189,0.744,190,0.64,191,0.744,192,1.097,193,0.744,194,0.64,195,0.744,196,0.744,197,0.64,198,0.744,199,0.64,200,0.744,201,0.64,202,0.956,203,0.956,204,0.744,205,0.64,206,0.744,207,0.64,208,0.744,209,0.64,210,0.744,211,0.64,212,0.744,213,0.64,214,0.744,215,0.64,216,0.744,217,0.64,218,0.744,219,0.64,220,0.744,221,0.744,222,0.64,223,0.717,224,0.744,225,0.64,226,0.744,227,1.097,228,1.056,229,0.744,230,0.64,231,0.744,232,0.64,233,0.744,234,0.64,235,0.665,236,0.744,237,0.665,238,0.717,239,0.744,240,0.006,241,0.009,242,0.006,337,2.664,353,5.158,515,1.773,693,2.263,783,2.263,785,2.814,787,2.403,817,3.328,1190,2.763,1225,4.166,1474,4.089,1477,2.763,1495,3.008,1514,2.763,1650,6.216,1827,5.301,2077,4.166,2556,3.337,2557,5.313,2558,7.146,2559,5.313,2560,3.836,2561,5.313,2562,3.836,2563,5.313,2564,3.836,2565,5.313,2566,3.836,2567,3.337,2568,3.836,2569,3.836,2570,3.836,2571,3.836,2572,3.836,2573,3.836,2574,3.836,2575,5.313,2576,5.313,2577,5.313,2578,5.313]],["title/injectables/ToolBarService.html",[394,2.335,486,1.025]],["body/injectables/ToolBarService.html",[3,0.136,4,0.136,8,0.093,14,0.273,15,0.502,29,1.113,32,0.314,35,0.014,37,0.295,61,0.451,64,0.534,66,0.158,67,0.16,77,0.93,240,0.01,241,0.012,242,0.01,394,4.166,486,1.829,487,2.629,2579,5.195,2580,7.518,2581,7.518,2582,7.061,2583,5.972]],["title/components/ToolbarComponent.html",[0,0.034,230,0.66]],["body/components/ToolbarComponent.html",[0,0.047,1,0.54,2,0.816,3,0.074,4,0.074,5,0.628,6,0.605,7,0.628,8,0.05,10,0.519,11,1.49,12,0.914,14,0.148,15,0.335,18,0.616,24,1.461,29,0.698,31,3.071,32,0.299,34,0.698,35,0.014,36,0.489,37,0.255,38,0.698,47,0.847,49,1.166,56,1.573,57,0.785,58,0.499,59,1.762,61,0.55,62,1.311,64,0.29,65,1.911,66,0.086,67,0.087,87,0.54,91,1.26,93,1.367,135,2.54,138,0.978,152,0.561,153,0.914,154,0.914,155,0.519,156,0.628,157,0.628,158,0.54,159,0.628,160,0.54,161,0.628,162,0.54,163,0.628,164,0.54,165,0.628,166,0.54,167,0.628,168,0.54,169,0.628,170,0.628,171,0.54,172,0.628,173,0.54,174,0.628,175,0.54,176,0.628,177,0.54,178,0.628,179,0.54,180,0.628,181,0.54,182,0.628,183,0.54,184,0.628,185,0.54,186,0.54,187,0.628,188,0.54,189,0.628,190,0.54,191,0.628,192,0.54,193,0.628,194,0.54,195,0.628,196,0.628,197,0.54,198,0.628,199,0.54,200,0.628,201,0.54,202,0.848,203,0.848,204,0.628,205,0.54,206,0.628,207,0.54,208,0.628,209,0.54,210,0.628,211,0.54,212,0.628,213,0.54,214,0.628,215,0.54,216,0.628,217,0.54,218,0.628,219,0.54,220,0.914,221,0.628,222,0.54,223,0.605,224,0.628,225,0.54,226,0.628,227,0.54,228,0.561,229,0.628,230,1.016,231,0.628,232,0.54,233,0.628,234,0.54,235,0.561,236,0.628,237,0.561,238,0.605,239,0.628,240,0.005,241,0.008,242,0.005,255,3.071,287,1.808,384,3.772,386,3.207,389,2.933,392,2.714,394,4.115,396,2.029,436,1.426,491,1.723,495,5.303,509,4.098,511,2.817,572,2.817,593,4.666,642,1.558,643,1.558,711,2.174,730,1.489,732,1.312,794,2.029,821,2.817,962,2.54,1105,2.029,1131,2.029,1304,2.54,1350,2.332,1351,2.54,1361,2.54,1373,2.817,1398,2.029,1407,4.098,1534,4.829,1542,2.817,1587,4.098,1622,2.817,1659,3.714,1680,2.029,2239,2.817,2584,2.817,2585,4.711,2586,4.711,2587,5.552,2588,6.096,2589,6.096,2590,6.096,2591,4.711,2592,4.711,2593,3.239,2594,3.239,2595,3.239,2596,3.239,2597,3.239,2598,4.711,2599,3.239,2600,3.239,2601,3.239,2602,3.239,2603,4.711,2604,3.239,2605,3.239,2606,3.239,2607,4.711,2608,3.239,2609,3.239,2610,3.239,2611,3.239,2612,3.239,2613,3.239,2614,3.239,2615,3.239,2616,3.239,2617,3.239,2618,3.239,2619,3.239,2620,3.239,2621,3.239,2622,3.239,2623,3.239,2624,3.239]],["title/components/TripleListComponent.html",[0,0.034,232,0.66]],["body/components/TripleListComponent.html",[0,0.053,1,0.671,2,0.951,3,0.092,4,0.092,5,0.781,6,0.752,7,0.781,8,0.063,10,0.646,11,1.51,12,1.065,14,0.184,15,0.39,18,0.718,24,1.703,29,0.596,31,3.267,32,0.294,34,0.813,35,0.014,36,0.531,37,0.281,38,0.813,39,1.833,47,0.526,49,0.725,57,0.671,58,0.621,61,0.507,62,1.528,63,2.769,64,0.36,65,2.375,66,0.107,67,0.108,87,0.671,91,2.137,106,2.166,107,1.699,138,1.077,152,0.698,153,1.065,154,1.065,155,0.646,156,0.781,157,0.781,158,0.671,159,0.781,160,0.671,161,0.781,162,0.671,163,0.781,164,0.671,165,0.781,166,0.671,167,0.781,168,0.671,169,0.781,170,0.781,171,0.671,172,0.781,173,0.671,174,0.781,175,0.671,176,0.781,177,0.671,178,0.781,179,0.671,180,0.781,181,0.671,182,0.781,183,0.671,184,0.781,185,0.671,186,0.671,187,0.781,188,0.671,189,0.781,190,0.671,191,0.781,192,0.671,193,0.781,194,0.671,195,0.781,196,0.781,197,0.671,198,0.781,199,0.671,200,0.781,201,0.671,202,0.988,203,0.988,204,0.781,205,0.671,206,0.781,207,0.671,208,0.781,209,0.671,210,0.781,211,0.671,212,0.781,213,0.671,214,0.781,215,0.671,216,0.781,217,0.671,218,0.781,219,0.671,220,0.781,221,0.781,222,0.671,223,0.752,224,0.781,225,0.671,226,0.781,227,0.671,228,0.698,229,0.781,230,0.671,231,0.781,232,1.119,233,1.212,234,0.671,235,0.698,236,0.781,237,0.698,238,0.752,239,0.781,240,0.007,241,0.009,242,0.007,254,3.157,255,3.192,287,2.247,491,0.971,515,1.344,711,2.333,732,1.631,761,3.24,766,3.747,2625,3.502,2626,5.492,2627,6.25,2628,5.492,2629,6.25,2630,5.492,2631,4.026,2632,4.026,2633,5.492,2634,4.026,2635,4.026,2636,4.026,2637,4.026]],["title/classes/User.html",[67,0.106,1398,2.479]],["body/classes/User.html",[3,0.14,4,0.14,8,0.095,14,0.281,15,0.51,32,0.3,35,0.014,36,0.574,37,0.3,39,2.393,66,0.162,67,0.165,77,0.859,240,0.01,241,0.012,242,0.01,355,2.293,357,2.843,1398,4.491,2638,5.332,2639,6.13,2640,6.13]],["title/coverage.html",[2641,4.721]],["body/coverage.html",[0,0.07,1,0.548,8,0.051,9,2.857,31,1.446,35,0.014,37,0.137,67,0.21,82,2.365,87,0.548,91,3.284,148,1.51,155,0.763,158,0.548,160,0.548,162,0.548,164,0.548,166,0.548,168,0.548,171,0.548,173,0.548,175,0.548,177,0.548,179,0.548,181,0.548,183,0.548,185,0.548,186,0.548,188,0.548,190,0.548,192,0.793,194,0.548,197,0.548,199,0.548,201,0.548,203,0.856,205,0.548,207,0.548,209,0.548,211,0.548,213,0.548,215,0.548,217,0.793,219,0.548,222,0.548,225,0.548,227,0.548,228,0.569,230,0.548,232,0.548,235,0.569,237,0.569,240,0.006,241,0.008,242,0.006,243,2.857,255,1.446,315,2.365,332,2.857,354,2.365,356,2.857,362,2.857,384,1.833,385,1.938,386,1.51,387,1.938,388,1.33,389,1.58,390,2.058,391,1.833,392,1.278,393,2.058,394,1.938,397,3.732,427,2.576,476,2.576,477,2.576,479,1.938,482,2.197,483,2.058,485,2.857,486,2.017,488,2.857,505,1.74,515,1.096,587,2.857,588,2.857,608,1.833,609,2.857,670,1.833,671,3.732,673,2.197,678,2.857,704,2.857,711,1.057,750,2.857,844,2.857,854,2.058,895,2.197,896,2.857,925,2.857,926,2.857,942,2.576,943,2.857,946,2.857,975,2.857,990,2.857,1054,2.857,1173,2.857,1199,3.732,1270,2.857,1344,2.857,1398,2.058,1432,2.857,1435,2.857,1474,1.833,1475,2.857,1503,2.857,1528,2.857,1551,2.857,1578,2.857,1583,2.857,1584,2.857,1617,1.938,1637,2.857,1644,2.857,1729,2.857,1809,2.857,1826,4.14,1875,2.365,1876,2.576,1878,2.857,1898,2.857,1902,2.857,1949,2.857,1958,2.857,1974,2.857,1976,3.732,1977,2.857,1985,2.857,1990,2.857,2013,2.857,2049,2.857,2078,2.857,2092,2.857,2210,2.857,2231,2.857,2280,2.857,2284,2.857,2296,4.14,2370,2.857,2390,2.857,2391,2.857,2407,2.857,2408,2.857,2416,2.857,2420,2.857,2528,2.857,2536,2.857,2556,2.857,2579,2.857,2584,2.857,2625,2.857,2638,2.857,2641,2.857,2642,3.285,2643,2.857,2644,5.597,2645,7.005,2646,4.759,2647,5.597,2648,7.312,2649,5.597,2650,6.792,2651,3.285,2652,4.759,2653,3.285,2654,3.285,2655,4.759,2656,3.285,2657,6.792,2658,7.005,2659,6.136,2660,5.597,2661,3.285,2662,5.597,2663,5.597,2664,6.792,2665,3.285,2666,3.285,2667,3.285,2668,3.285,2669,3.285]],["title/dependencies.html",[373,2.986,2670,2.863]],["body/dependencies.html",[10,0.86,35,0.014,64,0.48,240,0.009,241,0.011,242,0.009,373,3.361,375,3.59,403,4.668,436,2.362,438,4.006,439,3.361,454,3.905,456,4.668,457,3.59,460,5.19,461,4.766,463,4.208,466,4.208,467,4.208,628,3.184,636,4.668,1137,4.668,1224,4.208,1345,4.668,1617,3.166,2567,4.668,2671,5.366,2672,8.024,2673,5.366,2674,5.366,2675,5.366,2676,5.366,2677,5.366,2678,5.366,2679,5.366,2680,5.366,2681,5.366,2682,5.366,2683,5.366,2684,5.366,2685,4.668,2686,5.366,2687,5.366,2688,5.366,2689,6.619,2690,5.366,2691,5.366,2692,5.366,2693,5.366,2694,5.366,2695,6.619,2696,5.366,2697,5.366,2698,5.366,2699,5.366,2700,5.366,2701,5.366,2702,4.668,2703,5.366,2704,5.366,2705,5.366]],["title/index.html",[14,0.151,2706,3.292,2707,3.292]],["body/index.html",[0,0.045,2,0.653,6,0.704,8,0.059,35,0.013,37,0.158,84,2.956,104,2.956,108,2.522,126,3.287,138,0.842,147,2.522,223,0.981,240,0.009,241,0.009,242,0.006,331,3.279,337,2.445,363,3.279,373,2.361,375,2.522,482,2.522,502,2.522,554,3.279,555,3.096,633,4.734,635,2.522,641,3.279,669,2.956,694,2.224,700,3.279,711,2.1,753,2.224,790,2.522,792,2.361,798,2.522,800,2.522,805,2.361,817,3.287,875,2.224,881,5.252,882,4.115,912,2.956,974,3.279,1032,2.956,1092,2.522,1131,3.287,1134,4.701,1135,2.956,1142,4.565,1151,3.279,1156,4.565,1223,4.701,1224,2.956,1225,2.956,1240,3.279,1258,3.279,1305,2.956,1307,2.956,1308,2.714,1324,3.279,1350,2.714,1389,4.115,1456,3.279,1468,3.279,1470,2.956,1474,2.104,1615,4.348,1617,2.224,1685,3.279,1704,3.279,1724,3.279,1754,5.679,1917,3.279,2067,3.279,2068,3.279,2156,2.956,2338,3.279,2347,3.279,2425,4.565,2506,3.279,2518,3.279,2643,3.279,2670,4.565,2685,6.468,2702,3.279,2708,6.037,2709,3.769,2710,6.863,2711,3.769,2712,3.769,2713,3.769,2714,3.769,2715,3.769,2716,7.106,2717,7.106,2718,3.769,2719,3.769,2720,3.769,2721,6.528,2722,5.248,2723,6.528,2724,6.037,2725,3.769,2726,6.037,2727,5.248,2728,3.769,2729,6.037,2730,6.037,2731,3.769,2732,6.037,2733,3.769,2734,3.769,2735,3.769,2736,3.769,2737,3.769,2738,5.248,2739,3.769,2740,5.248,2741,6.037,2742,3.769,2743,3.769,2744,3.769,2745,3.769,2746,3.769,2747,3.769,2748,3.769,2749,5.248,2750,3.769,2751,3.769,2752,3.769,2753,3.769,2754,3.769,2755,3.769,2756,5.248,2757,3.769,2758,3.769,2759,3.769,2760,3.769,2761,3.769,2762,3.769,2763,3.769,2764,3.769,2765,3.769,2766,3.769,2767,3.769,2768,3.769,2769,3.769,2770,5.248,2771,3.769,2772,3.769,2773,3.769,2774,3.769,2775,5.248,2776,5.248,2777,3.769,2778,2.956,2779,3.769,2780,3.769,2781,3.769,2782,3.769,2783,3.769,2784,3.769,2785,3.769,2786,3.769,2787,3.769,2788,3.769,2789,3.769,2790,3.769,2791,3.769,2792,5.248,2793,3.769,2794,5.248,2795,3.769,2796,3.769,2797,3.769,2798,5.248,2799,3.769,2800,5.248,2801,5.248,2802,3.769,2803,3.769,2804,3.769,2805,3.769,2806,5.248,2807,3.769,2808,3.769,2809,5.248,2810,5.248,2811,5.248,2812,3.769,2813,3.769,2814,5.248,2815,3.769,2816,3.769,2817,3.769,2818,6.037,2819,3.769,2820,3.769,2821,3.769,2822,3.769,2823,3.769,2824,3.769,2825,3.769,2826,3.769,2827,3.769,2828,3.769,2829,5.248,2830,5.248,2831,3.769,2832,3.769,2833,3.769,2834,3.769,2835,3.769,2836,3.769,2837,3.769,2838,3.769,2839,5.248,2840,3.769,2841,3.769,2842,3.769,2843,3.769,2844,3.769,2845,3.769,2846,3.769,2847,3.769,2848,3.769,2849,3.769,2850,3.769,2851,3.769,2852,3.769,2853,3.769,2854,3.769,2855,3.769,2856,3.769,2857,3.769]],["title/modules.html",[372,3.631]],["body/modules.html",[35,0.012,240,0.011,241,0.012,242,0.011,371,4.611,372,4.284,383,4.284,461,5.295,2858,7.354,2859,7.354,2860,7.354]],["title/overview.html",[2778,4.256]],["body/overview.html",[1,0.989,2,0.632,31,2.613,35,0.014,93,2.166,96,2.864,152,0.632,158,0.989,160,0.989,162,1.205,164,0.989,166,0.989,168,1.205,171,0.989,173,0.989,175,0.989,177,0.989,179,0.989,181,0.989,183,0.989,185,0.989,188,0.989,190,0.989,192,0.989,194,0.989,197,0.989,199,0.989,201,1.205,205,1.205,207,0.989,209,0.989,211,0.989,213,0.989,215,0.989,217,0.989,219,1.205,222,1.205,225,0.989,227,0.989,230,0.989,232,0.989,234,0.609,240,0.006,241,0.009,242,0.006,255,2.613,355,1.366,369,2.442,370,2.287,371,6.127,372,2.442,373,2.287,374,2.863,375,2.442,376,2.863,377,2.863,378,3.175,379,3.175,380,3.175,381,3.175,382,3.175,383,5.37,384,3.312,385,3.501,386,2.729,387,3.501,388,2.404,389,2.855,390,3.717,391,3.312,392,2.309,393,3.717,394,3.501,395,4.024,396,2.287,482,2.442,487,1.607,1624,3.175,1625,3.175,1626,3.175,1875,2.629,2778,2.863,2861,3.651,2862,3.651,2863,3.651]],["title/miscellaneous/variables.html",[1615,3.432,2864,2.863]],["body/miscellaneous/variables.html",[14,0.282,35,0.014,37,0.318,57,1.2,58,1.109,240,0.01,241,0.012,242,0.01,397,4.836,399,5.365,476,5.642,477,5.642,478,5.365,1199,4.836,1615,4.441,2864,5.365,2865,6.167,2866,7.196]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":91,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["0.1.10",{"_index":2694,"title":{},"body":{"dependencies.html":{}}}],["0.19.47",{"_index":2698,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1779,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["0.3.5",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":1245,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["0.8.9",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["0.80",{"_index":2179,"title":{},"body":{"injectables/ObservationService.html":{}}}],["0.9.1",{"_index":2705,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2657,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2662,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":2668,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2660,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1376,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["1",{"_index":93,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/ConditionsChartComponent.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"components/NormalBox1.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["1'},{'name",{"_index":204,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["1.2.0",{"_index":2699,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":2701,"title":{},"body":{"dependencies.html":{}}}],["1.component",{"_index":1631,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["1.component.ts",{"_index":1977,"title":{},"body":{"components/NormalBox1.html":{},"coverage.html":{}}}],["1.component.ts:10",{"_index":1982,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:12",{"_index":1981,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:9",{"_index":1980,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.html",{"_index":1978,"title":{},"body":{"components/NormalBox1.html":{}}}],["1/16",{"_index":2661,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2654,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":519,"title":{},"body":{"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{}}}],["10.19.0",{"_index":2746,"title":{},"body":{"index.html":{}}}],["100",{"_index":1373,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{}}}],["100px",{"_index":1540,"title":{},"body":{"components/Favorites.html":{}}}],["102588006",{"_index":1940,"title":{},"body":{"injectables/MapService.html":{}}}],["10839",{"_index":1914,"title":{},"body":{"injectables/MapService.html":{}}}],["10px",{"_index":302,"title":{},"body":{"components/AccountComponent.html":{}}}],["12",{"_index":317,"title":{},"body":{"components/AccountComponent.html":{}}}],["120px",{"_index":607,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["13.0.2",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["13969",{"_index":1925,"title":{},"body":{"injectables/MapService.html":{}}}],["14",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2862,"title":{},"body":{"overview.html":{}}}],["150",{"_index":2622,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["16",{"_index":2863,"title":{},"body":{"overview.html":{}}}],["17861",{"_index":1923,"title":{},"body":{"injectables/MapService.html":{}}}],["18",{"_index":318,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{}}}],["180",{"_index":620,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["181.us",{"_index":521,"title":{},"body":{"injectables/AssociationService.html":{}}}],["185903001",{"_index":1915,"title":{},"body":{"injectables/MapService.html":{}}}],["2",{"_index":96,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"overview.html":{}}}],["2'},{'name",{"_index":206,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["2.0",{"_index":2857,"title":{},"body":{"index.html":{}}}],["2.24.0",{"_index":2690,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2689,"title":{},"body":{"dependencies.html":{}}}],["2.component",{"_index":1632,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["2.component.ts",{"_index":1985,"title":{},"body":{"components/NormalBox2.html":{},"coverage.html":{}}}],["2.component.ts:10",{"_index":1989,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:12",{"_index":1988,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:9",{"_index":1987,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.compute.amazonaws.com/get_items",{"_index":523,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2.html",{"_index":1986,"title":{},"body":{"components/NormalBox2.html":{}}}],["200",{"_index":1673,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["200px",{"_index":605,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/Favorites.html":{}}}],["2075",{"_index":1909,"title":{},"body":{"injectables/MapService.html":{}}}],["2157",{"_index":1933,"title":{},"body":{"injectables/MapService.html":{}}}],["2160",{"_index":1937,"title":{},"body":{"injectables/MapService.html":{}}}],["220px",{"_index":666,"title":{},"body":{"classes/BaseColumn.html":{}}}],["2345",{"_index":1920,"title":{},"body":{"injectables/MapService.html":{}}}],["249288007",{"_index":1910,"title":{},"body":{"injectables/MapService.html":{}}}],["25",{"_index":1725,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["2571",{"_index":2142,"title":{},"body":{"injectables/ObservationService.html":{}}}],["26450",{"_index":1932,"title":{},"body":{"injectables/MapService.html":{}}}],["26464",{"_index":1924,"title":{},"body":{"injectables/MapService.html":{}}}],["26478",{"_index":1921,"title":{},"body":{"injectables/MapService.html":{}}}],["26511",{"_index":1912,"title":{},"body":{"injectables/MapService.html":{}}}],["26515",{"_index":1927,"title":{},"body":{"injectables/MapService.html":{}}}],["266998003",{"_index":1941,"title":{},"body":{"injectables/MapService.html":{}}}],["267432004",{"_index":1936,"title":{},"body":{"injectables/MapService.html":{}}}],["2710",{"_index":343,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["2823",{"_index":1931,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["28542",{"_index":1913,"title":{},"body":{"injectables/MapService.html":{}}}],["29",{"_index":520,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2951",{"_index":1928,"title":{},"body":{"injectables/MapService.html":{}}}],["29857009",{"_index":1943,"title":{},"body":{"injectables/MapService.html":{}}}],["2c304df8",{"_index":2442,"title":{},"body":{"injectables/SmartService.html":{}}}],["3",{"_index":1727,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3.2.1",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["3.4.5",{"_index":2703,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":2692,"title":{},"body":{"dependencies.html":{}}}],["30385",{"_index":1918,"title":{},"body":{"injectables/MapService.html":{}}}],["30428",{"_index":1939,"title":{},"body":{"injectables/MapService.html":{}}}],["3094",{"_index":1944,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3141",{"_index":340,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["32398004",{"_index":1929,"title":{},"body":{"injectables/MapService.html":{}}}],["32623",{"_index":1946,"title":{},"body":{"injectables/MapService.html":{}}}],["33",{"_index":2006,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["330c01a5ca8e",{"_index":2446,"title":{},"body":{"injectables/SmartService.html":{}}}],["34",{"_index":2009,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["35",{"_index":2861,"title":{},"body":{"overview.html":{}}}],["38341003",{"_index":1942,"title":{},"body":{"injectables/MapService.html":{}}}],["39156",{"_index":347,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["4",{"_index":82,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["44054006",{"_index":1907,"title":{},"body":{"injectables/MapService.html":{}}}],["442311008",{"_index":1945,"title":{},"body":{"injectables/MapService.html":{}}}],["4de9",{"_index":2444,"title":{},"body":{"injectables/SmartService.html":{}}}],["5",{"_index":132,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{}}}],["5.3.0",{"_index":2691,"title":{},"body":{"dependencies.html":{}}}],["52",{"_index":518,"title":{},"body":{"injectables/AssociationService.html":{}}}],["54150009",{"_index":1919,"title":{},"body":{"injectables/MapService.html":{}}}],["55284",{"_index":1906,"title":{},"body":{"injectables/MapService.html":{}}}],["6",{"_index":315,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"coverage.html":{}}}],["6.5.4",{"_index":2695,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1917,"title":{},"body":{"injectables/MapService.html":{},"index.html":{}}}],["711d",{"_index":2443,"title":{},"body":{"injectables/SmartService.html":{}}}],["718",{"_index":1916,"title":{},"body":{"injectables/MapService.html":{}}}],["72166",{"_index":1911,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["777",{"_index":1947,"title":{},"body":{"injectables/MapService.html":{}}}],["785",{"_index":1935,"title":{},"body":{"injectables/MapService.html":{}}}],["786",{"_index":1938,"title":{},"body":{"injectables/MapService.html":{}}}],["789",{"_index":1930,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["8",{"_index":1922,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["8.2.14",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["8.3.25",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["800",{"_index":1672,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["80394007",{"_index":1926,"title":{},"body":{"injectables/MapService.html":{}}}],["8302",{"_index":338,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["8310",{"_index":345,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["8462",{"_index":1908,"title":{},"body":{"injectables/MapService.html":{}}}],["8480",{"_index":1905,"title":{},"body":{"injectables/MapService.html":{}}}],["89765005",{"_index":1934,"title":{},"body":{"injectables/MapService.html":{}}}],["9",{"_index":341,"title":{},"body":{"components/AddObservation.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["9000:80",{"_index":2841,"title":{},"body":{"index.html":{}}}],["90708001",{"_index":1904,"title":{},"body":{"injectables/MapService.html":{}}}],["a['code",{"_index":557,"title":{},"body":{"injectables/AssociationService.html":{}}}],["abnormal",{"_index":324,"title":{},"body":{"components/AccountComponent.html":{}}}],["above",{"_index":104,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ConditionService.html":{},"index.html":{}}}],["access",{"_index":793,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["accessing",{"_index":2765,"title":{},"body":{"index.html":{}}}],["according",{"_index":103,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{}}}],["accordion",{"_index":72,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["accordionrecursion",{"_index":1,"title":{"components/AccordionRecursion.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordionrecursion'},{'name",{"_index":157,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["accordionrecursion.html",{"_index":13,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["account",{"_index":244,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["account'},{'name",{"_index":159,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["account.html",{"_index":245,"title":{},"body":{"components/AccountComponent.html":{}}}],["accountcomponent",{"_index":158,"title":{"components/AccountComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["achieved",{"_index":1031,"title":{},"body":{"injectables/ConditionService.html":{}}}],["actions",{"_index":1424,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/Favorites.html":{}}}],["active",{"_index":142,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"classes/Patient.html":{},"components/ScratchPadUpdate.html":{}}}],["active/inactive",{"_index":136,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["activities",{"_index":321,"title":{},"body":{"components/AccountComponent.html":{}}}],["activity",{"_index":680,"title":{},"body":{"classes/CarePlan.html":{}}}],["actual_component",{"_index":239,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["actually",{"_index":833,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["adams",{"_index":2804,"title":{},"body":{"index.html":{}}}],["add",{"_index":802,"title":{},"body":{"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["addcategoriesconditions",{"_index":19,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesconditions(arrdata",{"_index":44,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesobservations",{"_index":2098,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addcategoriesobservations(observations",{"_index":2108,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addgraphconfig",{"_index":1438,"title":{},"body":{"injectables/DoctorService.html":{}}}],["addgraphconfig(list",{"_index":1442,"title":{},"body":{"injectables/DoctorService.html":{}}}],["adding",{"_index":1182,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["addmedicationchart",{"_index":1731,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addmedicationchart(medication",{"_index":1737,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservation",{"_index":160,"title":{"components/AddObservation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addobservation'},{'name",{"_index":161,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["addobservation.html",{"_index":333,"title":{},"body":{"components/AddObservation.html":{}}}],["addobservationchart",{"_index":1732,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservationchart(chartname",{"_index":1739,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addoption",{"_index":1354,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["addoption(option",{"_index":1362,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["address",{"_index":2281,"title":{},"body":{"classes/Patient.html":{}}}],["addsetting",{"_index":251,"title":{},"body":{"components/AccountComponent.html":{}}}],["addsetting(checked",{"_index":257,"title":{},"body":{"components/AccountComponent.html":{}}}],["advancedsearch",{"_index":2298,"title":{},"body":{"components/PatientComponent.html":{}}}],["advantage",{"_index":2759,"title":{},"body":{"index.html":{}}}],["afbe",{"_index":2445,"title":{},"body":{"injectables/SmartService.html":{}}}],["again",{"_index":1862,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["albumin",{"_index":283,"title":{},"body":{"components/AccountComponent.html":{}}}],["allergies",{"_index":320,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["allergies.map(allergy",{"_index":2340,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergies/precautions",{"_index":145,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["allergy",{"_index":2299,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergy.code.text",{"_index":2341,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergyintolerance",{"_index":354,"title":{"classes/AllergyIntolerance.html":{}},"body":{"classes/AllergyIntolerance.html":{},"injectables/ConditionService.html":{},"coverage.html":{}}}],["allow",{"_index":1172,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["allows",{"_index":947,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"injectables/DoctorService.html":{}}}],["already",{"_index":126,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["alt",{"_index":281,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["amdateformat:'mm/dd/yyyy",{"_index":2364,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdateformat:\\'mm/dd/yyyy",{"_index":2368,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:'years':false)}}yr",{"_index":2365,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:\\'years\\':false)}}yr",{"_index":2369,"title":{},"body":{"components/PatientComponent.html":{}}}],["amtimeago",{"_index":2077,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelinePopupComponent.html":{}}}],["amtimeago:true",{"_index":1342,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ana",{"_index":276,"title":{},"body":{"components/AccountComponent.html":{}}}],["angular",{"_index":2715,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2567,"title":{},"body":{"components/TimelinePopupComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["angular/compiler",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":1137,"title":{},"body":{"components/ConditionsChartComponent.html":{},"dependencies.html":{}}}],["animate('800ms",{"_index":2605,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["animation",{"_index":1899,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["animation'},{'name",{"_index":196,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["animations",{"_index":2600,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["another",{"_index":2785,"title":{},"body":{"index.html":{}}}],["apache",{"_index":2856,"title":{},"body":{"index.html":{}}}],["api",{"_index":547,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{}}}],["app",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":163,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["app.html",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["app/components/accordionrecursion/accordionrecursion.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/account/account.component",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/addobservation/addobservation.component",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/app/app.component",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplan/careplan.component",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplandisplay/careplandisplay.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/columnstateswitcher/columnstateswitcher.component",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditions/conditions.component",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionschart/conditionschart.component",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionsdisplay/conditionsdisplay.component",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/contextmenu/contextmenu.component",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/doctornote/doctornote.component",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/favorites/favorites.component",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/form",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/historicaltrends/historicaltrends.component",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/home/home.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/hoverbox/hoverbox.component",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loadinganimation/loadinganimation.component",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/medications/medications.component",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/newcondition/newcondition.component",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/notenavigation/notenavigation.component",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursion/observationrecursion.component",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursionchart/observationrecursionchart.component",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observations/observations.component",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationsdisplay/observationsdisplay.component",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/patient/patient.component",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline/timeline.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline_popup/timeline_popup.component",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/toolbar/toolbar.component",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/triplelist/triplelist.component",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/form.module",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/association.service",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/careplan.service",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/condition.service",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/doctor.service",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/encounter.service",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/fhir.service",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/historicaltrends.service",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/map.service",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/observation.service",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/patient.service",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/scratchpad.service",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/smart.service",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/toolbar.service",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1241,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["appears",{"_index":1860,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["application",{"_index":633,"title":{},"body":{"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{},"index.html":{}}}],["application/json",{"_index":1575,"title":{},"body":{"injectables/FhirService.html":{}}}],["application/x",{"_index":2499,"title":{},"body":{"injectables/SmartService.html":{}}}],["appmodule",{"_index":371,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":2764,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingproviders",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approximate",{"_index":667,"title":{},"body":{"classes/BaseColumn.html":{}}}],["apps",{"_index":2802,"title":{},"body":{"index.html":{}}}],["april",{"_index":1330,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["arbitrary",{"_index":1246,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["arg.url",{"_index":2476,"title":{},"body":{"injectables/SmartService.html":{}}}],["arg.valueuri",{"_index":2478,"title":{},"body":{"injectables/SmartService.html":{}}}],["args",{"_index":1886,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["array",{"_index":80,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/Bundle.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["array.from(medicationmap.values",{"_index":894,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["array.from(this.chartsmap.values",{"_index":1790,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["arrayofkeyvalues",{"_index":334,"title":{},"body":{"components/AddObservation.html":{}}}],["arrdata",{"_index":46,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["arriving",{"_index":2460,"title":{},"body":{"injectables/SmartService.html":{}}}],["asc",{"_index":1109,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["assign",{"_index":2384,"title":{},"body":{"injectables/PatientService.html":{}}}],["assignvisible",{"_index":1439,"title":{},"body":{"injectables/DoctorService.html":{}}}],["assignvisible(list",{"_index":1444,"title":{},"body":{"injectables/DoctorService.html":{}}}],["associable",{"_index":483,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{},"coverage.html":{}}}],["associable.model",{"_index":691,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{}}}],["associated",{"_index":535,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Chart.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["associatedconditions",{"_index":549,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapconditions",{"_index":489,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapobservations",{"_index":490,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedobservations",{"_index":551,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association",{"_index":818,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associations",{"_index":536,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associationservice",{"_index":384,"title":{"injectables/AssociationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":1142,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["ast",{"_index":282,"title":{},"body":{"components/AccountComponent.html":{}}}],["aud",{"_index":2421,"title":{},"body":{"injectables/SmartService.html":{}}}],["august",{"_index":1333,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["auth",{"_index":2473,"title":{},"body":{"injectables/SmartService.html":{}}}],["authenticate",{"_index":2429,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorize",{"_index":2477,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorizeurl",{"_index":2422,"title":{},"body":{"injectables/SmartService.html":{}}}],["autogrow",{"_index":589,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["autogrow]'},{'name",{"_index":236,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["autogrowdirective",{"_index":235,"title":{"directives/AutoGrowDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":2796,"title":{},"body":{"index.html":{}}}],["available",{"_index":1820,"title":{},"body":{"components/HomeComponent.html":{}}}],["avoid",{"_index":1754,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"index.html":{}}}],["away",{"_index":1866,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["awesomeness",{"_index":2819,"title":{},"body":{"index.html":{}}}],["axis",{"_index":917,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["back",{"_index":963,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["bar",{"_index":1691,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["base",{"_index":1552,"title":{},"body":{"injectables/FhirService.html":{}}}],["basecolumn",{"_index":608,"title":{"classes/BaseColumn.html":{}},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{}}}],["basecolumn:23",{"_index":717,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:28",{"_index":718,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:29",{"_index":719,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:30",{"_index":720,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:33",{"_index":725,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:36",{"_index":727,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:39",{"_index":726,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["based",{"_index":149,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["basic",{"_index":1132,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["bearer",{"_index":1577,"title":{},"body":{"injectables/FhirService.html":{}}}],["before",{"_index":1859,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["begin",{"_index":2728,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":799,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["being",{"_index":1145,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["below",{"_index":2519,"title":{},"body":{"injectables/SmartService.html":{}}}],["best",{"_index":2507,"title":{},"body":{"injectables/SmartService.html":{}}}],["better",{"_index":1259,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["between",{"_index":663,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["bilirubin",{"_index":284,"title":{},"body":{"components/AccountComponent.html":{}}}],["bind(this",{"_index":813,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["birthdate",{"_index":2282,"title":{},"body":{"classes/Patient.html":{}}}],["blood",{"_index":2146,"title":{},"body":{"injectables/ObservationService.html":{}}}],["blur",{"_index":601,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["bmi",{"_index":346,"title":{},"body":{"components/AddObservation.html":{}}}],["body",{"_index":2156,"title":{},"body":{"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"index.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["bootstrap",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":298,"title":{},"body":{"components/AccountComponent.html":{}}}],["bound",{"_index":797,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["box",{"_index":203,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["boxdata",{"_index":1979,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["break",{"_index":2332,"title":{},"body":{"components/PatientComponent.html":{}}}],["brew",{"_index":2726,"title":{},"body":{"index.html":{}}}],["brief",{"_index":2776,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2860,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["buffer",{"_index":1775,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["bugs",{"_index":2753,"title":{},"body":{"index.html":{}}}],["build",{"_index":2717,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1585,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder'},{'name",{"_index":187,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["builder.component",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["builder.component.ts",{"_index":1584,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["builder.component.ts:13",{"_index":1610,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:14",{"_index":1609,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:16",{"_index":1611,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:17",{"_index":1607,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:19",{"_index":1599,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:20",{"_index":1600,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:22",{"_index":1598,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:27",{"_index":1603,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:32",{"_index":1602,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:39",{"_index":1606,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:55",{"_index":1605,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:59",{"_index":1601,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.html",{"_index":1588,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder/form",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/FormBuilder.html":{},"coverage.html":{}}}],["building",{"_index":2808,"title":{},"body":{"index.html":{}}}],["bun",{"_index":280,"title":{},"body":{"components/AccountComponent.html":{}}}],["bundle",{"_index":670,"title":{"classes/Bundle.html":{}},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["bundle.entry",{"_index":865,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["bundle.entry.map(e",{"_index":1516,"title":{},"body":{"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["bundle.entry.map(r",{"_index":866,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["bundle.link.find(link",{"_index":1037,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["button",{"_index":1622,"title":{},"body":{"components/FormBuilder.html":{},"components/ToolbarComponent.html":{}}}],["c",{"_index":555,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["c.clinicalstatus",{"_index":1159,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.id",{"_index":826,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c.isparent",{"_index":837,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.isvisible",{"_index":836,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.parent",{"_index":835,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.relativedatetime",{"_index":1123,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.sort((n1",{"_index":1112,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["c/patient_viewer.git",{"_index":2736,"title":{},"body":{"index.html":{}}}],["c2",{"_index":1237,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c2.onsetdatetime.localecompare(c1.onsetdatetime",{"_index":1238,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c['code']['text",{"_index":1341,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c['selected",{"_index":825,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c[\\'code\\'][\\'text",{"_index":1343,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c[element",{"_index":1177,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cache",{"_index":1048,"title":{},"body":{"injectables/ConditionService.html":{}}}],["calcium",{"_index":272,"title":{},"body":{"components/AccountComponent.html":{}}}],["call",{"_index":572,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["called",{"_index":1234,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["calls",{"_index":1049,"title":{},"body":{"injectables/ConditionService.html":{}}}],["cardiovascular",{"_index":2163,"title":{},"body":{"injectables/ObservationService.html":{}}}],["care",{"_index":94,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/MedicationsComponent.html":{}}}],["careplan",{"_index":479,"title":{"classes/CarePlan.html":{}},"body":{"modules/AppModule.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"coverage.html":{}}}],["careplan'},{'name",{"_index":165,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplan.html",{"_index":706,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplancomponent",{"_index":164,"title":{"components/CarePlanComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay",{"_index":166,"title":{"components/CarePlanDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay'},{'name",{"_index":167,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplandisplay.html",{"_index":751,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanloadfinished",{"_index":707,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplans",{"_index":708,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["careplans.length",{"_index":747,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["careplanselected",{"_index":762,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanservice",{"_index":385,"title":{"injectables/CarePlanService.html":{}},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/MedicationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":2330,"title":{},"body":{"components/PatientComponent.html":{}}}],["cases",{"_index":2788,"title":{},"body":{"index.html":{}}}],["cast",{"_index":1522,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{}}}],["casted",{"_index":1523,"title":{},"body":{"injectables/EncounterService.html":{}}}],["cat.category",{"_index":150,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.count",{"_index":2073,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["cat.data?.length",{"_index":151,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.display",{"_index":2072,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["catch",{"_index":1178,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["categories",{"_index":2126,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorize",{"_index":2139,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorizedobservations",{"_index":2093,"title":{},"body":{"injectables/ObservationService.html":{}}}],["category",{"_index":76,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Timeline.html":{}}}],["cause",{"_index":2773,"title":{},"body":{"index.html":{}}}],["causes",{"_index":1317,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["cd",{"_index":2737,"title":{},"body":{"index.html":{}}}],["certain",{"_index":2115,"title":{},"body":{"injectables/ObservationService.html":{}}}],["chain",{"_index":1021,"title":{},"body":{"injectables/ConditionService.html":{}}}],["change",{"_index":1448,"title":{},"body":{"injectables/DoctorService.html":{}}}],["changed",{"_index":1047,"title":{},"body":{"injectables/ConditionService.html":{}}}],["changedobs",{"_index":2086,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changedobs.isselected",{"_index":2091,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changesthen",{"_index":2798,"title":{},"body":{"index.html":{}}}],["chart",{"_index":895,"title":{"classes/Chart.html":{}},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["chart.data",{"_index":1767,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.length",{"_index":1800,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.push",{"_index":1763,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.sort((p1",{"_index":1768,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].name",{"_index":1805,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].value",{"_index":1801,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.linechartdata",{"_index":1772,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.normalvalues",{"_index":1783,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.title",{"_index":1756,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemax",{"_index":1781,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemin",{"_index":1780,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chartevent",{"_index":1663,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmaxdate",{"_index":1709,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate",{"_index":1708,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate.gettime",{"_index":1711,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartname",{"_index":1741,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["charts",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"dependencies.html":{}}}],["chartsize",{"_index":1647,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartsmap",{"_index":1730,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["check",{"_index":733,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["check(medication",{"_index":1962,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["checkallcareplans",{"_index":754,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallcareplans(checked",{"_index":768,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallconditions",{"_index":1272,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallconditions(checked",{"_index":1284,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallobservations",{"_index":2233,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkallobservations(checked",{"_index":2243,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkbox",{"_index":169,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["checkboxdata",{"_index":929,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxes",{"_index":939,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxinline",{"_index":168,"title":{"components/CheckboxInline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcareplan",{"_index":755,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcareplan(checked",{"_index":770,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked",{"_index":756,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked(careplan",{"_index":773,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcondition",{"_index":1273,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkcondition(checkedcondition",{"_index":1286,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checked",{"_index":260,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["checked(changedobs",{"_index":2084,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["checked(obs",{"_index":2059,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["checkedcareplan",{"_index":771,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkedcondition",{"_index":1288,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkedconditions",{"_index":511,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedconditions.map(this.extractconditioninfo",{"_index":565,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedconditionsinfo",{"_index":564,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservation",{"_index":2246,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkedobservations",{"_index":509,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedobservations.map(this.extractobservationinfo",{"_index":567,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservationsinfo",{"_index":566,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checking",{"_index":790,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["checkobservation",{"_index":2234,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkobservation(checked",{"_index":2245,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["chief",{"_index":140,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["child",{"_index":660,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["chloride",{"_index":270,"title":{},"body":{"components/AccountComponent.html":{}}}],["cholesteralbattery",{"_index":246,"title":{},"body":{"components/AccountComponent.html":{}}}],["choose",{"_index":1704,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["class",{"_index":67,"title":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":355,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{},"overview.html":{}}}],["clean",{"_index":1456,"title":{},"body":{"injectables/DoctorService.html":{},"index.html":{}}}],["clear",{"_index":542,"title":{},"body":{"injectables/AssociationService.html":{}}}],["click",{"_index":1389,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ObservationRecursive.html":{},"index.html":{}}}],["clicked",{"_index":830,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsDisplay.html":{}}}],["clickedset",{"_index":1095,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["clicking",{"_index":806,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["clicks",{"_index":1384,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clicksubscription",{"_index":1347,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["client",{"_index":942,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"coverage.html":{}}}],["client_id",{"_index":2514,"title":{},"body":{"injectables/SmartService.html":{}}}],["clientid",{"_index":2423,"title":{},"body":{"injectables/SmartService.html":{}}}],["clinical",{"_index":2712,"title":{},"body":{"index.html":{}}}],["clinicalstatus",{"_index":976,"title":{},"body":{"classes/Condition.html":{}}}],["clone",{"_index":2734,"title":{},"body":{"index.html":{}}}],["close",{"_index":353,"title":{},"body":{"components/AddObservation.html":{},"components/ContextMenuComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["close(event",{"_index":2559,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["closeable",{"_index":1348,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closeable_delay",{"_index":1349,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closed",{"_index":1411,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closefinalnote",{"_index":1993,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["closeprogressnote",{"_index":1994,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["closesidenote",{"_index":1995,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["cluster_appmodule",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule",{"_index":1624,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_declarations",{"_index":1625,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_exports",{"_index":1626,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["clutter",{"_index":2774,"title":{},"body":{"index.html":{}}}],["cnum",{"_index":1164,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cnum.tostring",{"_index":1168,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["co2",{"_index":271,"title":{},"body":{"components/AccountComponent.html":{}}}],["code",{"_index":337,"title":{},"body":{"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["codes",{"_index":2137,"title":{},"body":{"injectables/ObservationService.html":{}}}],["coding",{"_index":577,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{}}}],["collapse",{"_index":299,"title":{},"body":{"components/AccountComponent.html":{}}}],["collapsequeue",{"_index":1057,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["column",{"_index":90,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnheight",{"_index":610,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnnum",{"_index":25,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["columns",{"_index":134,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{}}}],["columnstate",{"_index":611,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnstateswitcher",{"_index":949,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitcher'},{'name",{"_index":172,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["columnstateswitcher.html",{"_index":950,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitchercomponent",{"_index":171,"title":{"components/ColumnStateSwitcherComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["columntype",{"_index":954,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["combdata",{"_index":1589,"title":{},"body":{"components/FormBuilder.html":{}}}],["combineddata",{"_index":930,"title":{},"body":{"components/CheckboxInline.html":{}}}],["command",{"_index":2792,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2731,"title":{},"body":{"index.html":{}}}],["comment",{"_index":2518,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["comments",{"_index":2782,"title":{},"body":{"index.html":{}}}],["compat",{"_index":2696,"title":{},"body":{"dependencies.html":{}}}],["compiled",{"_index":2812,"title":{},"body":{"index.html":{}}}],["compiler",{"_index":1812,"title":{},"body":{"components/HomeComponent.html":{}}}],["complaint",{"_index":141,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["completed",{"_index":1550,"title":{},"body":{"components/Favorites.html":{}}}],["completion",{"_index":2761,"title":{},"body":{"index.html":{}}}],["complex",{"_index":2780,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":156,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/form_components/checkbox",{"_index":1628,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/normal",{"_index":1630,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/scrachpad",{"_index":1635,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/select",{"_index":1633,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/home/home.component",{"_index":2322,"title":{},"body":{"components/PatientComponent.html":{}}}],["components/hoverbox/hoverbox.component",{"_index":2568,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["concat",{"_index":1015,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concat(of(conditions",{"_index":1039,"title":{},"body":{"injectables/ConditionService.html":{}}}],["concat(of(encounters",{"_index":1518,"title":{},"body":{"injectables/EncounterService.html":{}}}],["concatmap",{"_index":1016,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concurrently",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":148,"title":{"classes/Condition.html":{}},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["condition.code.coding[0].code",{"_index":2578,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.code.coding[0].display",{"_index":2576,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.isvisible",{"_index":1253,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.onsetdatetime",{"_index":2575,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.relativedatetime",{"_index":1255,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.service",{"_index":525,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['code",{"_index":580,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['system",{"_index":581,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['onsetdatetime",{"_index":582,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionally",{"_index":1023,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditiongrouping",{"_index":1058,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["conditiongroupingname",{"_index":1059,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditiongroupingname[conditiongrouping.indexof(c",{"_index":1191,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditions",{"_index":88,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["conditions'},{'name",{"_index":176,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditions.component.ts",{"_index":1451,"title":{},"body":{"injectables/DoctorService.html":{}}}],["conditions.html",{"_index":1200,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["conditions.map(this.extractconditioninfo",{"_index":569,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionscache",{"_index":991,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditionschart",{"_index":1055,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschart'},{'name",{"_index":174,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionschart.html",{"_index":1056,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschartcomponent",{"_index":173,"title":{"components/ConditionsChartComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionscomponent",{"_index":175,"title":{"components/ConditionsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay",{"_index":177,"title":{"components/ConditionsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay'},{'name",{"_index":178,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionsdisplay.html",{"_index":1271,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["conditionselected",{"_index":1071,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{}}}],["conditionservice",{"_index":386,"title":{"injectables/ConditionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsinfo",{"_index":568,"title":{},"body":{"injectables/AssociationService.html":{}}}],["confidential",{"_index":2803,"title":{},"body":{"index.html":{}}}],["config",{"_index":330,"title":{},"body":{"components/AccountComponent.html":{}}}],["configmode",{"_index":1436,"title":{},"body":{"injectables/DoctorService.html":{}}}],["configuration",{"_index":2849,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":2768,"title":{},"body":{"index.html":{}}}],["console.log(\"add",{"_index":1692,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["console.log(\"changing",{"_index":2405,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["console.log(\"hi",{"_index":1547,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(\"highlighting",{"_index":1641,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["console.log(\"loaded",{"_index":746,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["console.log(\"no",{"_index":2172,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(\"normal",{"_index":1543,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(\"saved",{"_index":293,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"this",{"_index":1187,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(\"total",{"_index":2636,"title":{},"body":{"components/TripleListComponent.html":{}}}],["console.log('blur",{"_index":606,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('focus",{"_index":602,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('loaded",{"_index":1968,"title":{},"body":{"components/MedicationsComponent.html":{},"components/TimelineComponent.html":{}}}],["console.log('log",{"_index":2552,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('stop",{"_index":2488,"title":{},"body":{"injectables/SmartService.html":{}}}],["console.log('that",{"_index":1180,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(condition",{"_index":1314,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["console.log(data",{"_index":1395,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["console.log(forms",{"_index":1620,"title":{},"body":{"components/FormBuilder.html":{}}}],["console.log(fullpath",{"_index":1184,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(obs",{"_index":2267,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["console.log(plan",{"_index":815,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["console.log(this.elref",{"_index":1544,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(this.elref.nativeelement.queryselector('div').style.left",{"_index":1545,"title":{},"body":{"components/Favorites.html":{}}}],["console.log(this.encounters",{"_index":2548,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log(this.getscratchpadobservations",{"_index":2209,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(this.observations",{"_index":2263,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["const",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{},"injectables/EncounterService.html":{},"injectables/SmartService.html":{}}}],["constitutional",{"_index":2154,"title":{},"body":{"injectables/ObservationService.html":{}}}],["construct",{"_index":2342,"title":{},"body":{"components/PatientComponent.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(associationservice",{"_index":2239,"title":{},"body":{"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["constructor(careplanservice",{"_index":1960,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["constructor(conditionservice",{"_index":1072,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["constructor(cookieservice",{"_index":1440,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["constructor(doctorservice",{"_index":254,"title":{},"body":{"components/AccountComponent.html":{},"components/Favorites.html":{},"components/TripleListComponent.html":{}}}],["constructor(el",{"_index":592,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["constructor(encounterservice",{"_index":2539,"title":{},"body":{"components/TimelineComponent.html":{}}}],["constructor(fhirservice",{"_index":712,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["constructor(http",{"_index":496,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["constructor(name",{"_index":1950,"title":{},"body":{"classes/Medication.html":{},"classes/Server.html":{}}}],["constructor(observationservice",{"_index":30,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelineComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(public",{"_index":2419,"title":{},"body":{"classes/Server.html":{}}}],["constructor(ref",{"_index":1359,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["constructor(scratchpadservice",{"_index":763,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{}}}],["constructor(trendsservice",{"_index":1657,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["contained",{"_index":2117,"title":{},"body":{"injectables/ObservationService.html":{}}}],["container",{"_index":2825,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1143,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["content",{"_index":2498,"title":{},"body":{"injectables/SmartService.html":{}}}],["context",{"_index":792,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["contextmenu",{"_index":1345,"title":{},"body":{"components/ContextMenuComponent.html":{},"dependencies.html":{}}}],["contextmenu'},{'name",{"_index":180,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["contextmenu.component.ts",{"_index":2790,"title":{},"body":{"index.html":{}}}],["contextmenu.html",{"_index":1346,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["contextmenu/contextmenu.component",{"_index":788,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["contextmenucomponent",{"_index":179,"title":{"components/ContextMenuComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contexts",{"_index":1387,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["continual",{"_index":2216,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["continually",{"_index":1025,"title":{},"body":{"injectables/ConditionService.html":{}}}],["continue",{"_index":1762,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["cookie",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["copy",{"_index":2815,"title":{},"body":{"index.html":{}}}],["correct",{"_index":124,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{}}}],["count",{"_index":1463,"title":{},"body":{"injectables/DoctorService.html":{},"injectables/ObservationService.html":{}}}],["coverage",{"_index":2641,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":878,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.code",{"_index":880,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.value",{"_index":892,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.period.end",{"_index":842,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp.period.start",{"_index":841,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp['title",{"_index":840,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp[\\'title",{"_index":843,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["create",{"_index":882,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["created",{"_index":1787,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creating",{"_index":1755,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creatinine",{"_index":278,"title":{},"body":{"components/AccountComponent.html":{}}}],["cross",{"_index":2489,"title":{},"body":{"injectables/SmartService.html":{}}}],["css",{"_index":2719,"title":{},"body":{"index.html":{}}}],["csub.clinicalstatus",{"_index":1194,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub.relativedatetime",{"_index":1195,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['coding'][0]['code",{"_index":1193,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['text",{"_index":1192,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'coding\\'][0][\\'code",{"_index":1198,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'text",{"_index":1197,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ctgry",{"_index":2203,"title":{},"body":{"injectables/ObservationService.html":{}}}],["current",{"_index":70,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{}}}],["currently",{"_index":531,"title":{},"body":{"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["currstatus",{"_index":2399,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["d",{"_index":1324,"title":{},"body":{"components/ConditionsDisplay.html":{},"index.html":{}}}],["d.getdate",{"_index":1339,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getfullyear",{"_index":1340,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["dailyamount",{"_index":696,"title":{},"body":{"classes/CarePlan.html":{}}}],["daniel",{"_index":2805,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1723,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["dashedlines",{"_index":897,"title":{},"body":{"classes/Chart.html":{}}}],["data",{"_index":69,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["data.length",{"_index":1753,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["data['rest'][0].security.extension.filter(e",{"_index":2468,"title":{},"body":{"injectables/SmartService.html":{}}}],["data[0].code['text",{"_index":1757,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["datafilter",{"_index":139,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["datalocation",{"_index":1080,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["datalocation.foreach(element",{"_index":1175,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date",{"_index":693,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Medication.html":{},"components/TimelinePopupComponent.html":{}}}],["date().gettime",{"_index":1119,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["date(c.onsetdatetime",{"_index":1325,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["date(c.onsetdatetime).gettime",{"_index":1122,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(condition.onsetdatetime).gettime",{"_index":1254,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["date(cp.period.end",{"_index":890,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(cp.period.start",{"_index":889,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(form.maxdate",{"_index":1703,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(form.mindate",{"_index":1701,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(newdate).todatestring",{"_index":1124,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(ob.effectivedatetime).gettime",{"_index":2184,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(point.relativedatetime",{"_index":1764,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["date(this.conditions[0].onsetdatetime).gettime",{"_index":1120,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["date(this.observations[0].effectivedatetime).gettime",{"_index":2181,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(this.period.end",{"_index":1501,"title":{},"body":{"classes/Encounter.html":{}}}],["date(this.period.start",{"_index":1500,"title":{},"body":{"classes/Encounter.html":{}}}],["datepipe",{"_index":2558,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["datepipe('en",{"_index":2563,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dates",{"_index":1239,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["datetime",{"_index":579,"title":{},"body":{"injectables/AssociationService.html":{}}}],["dd",{"_index":2570,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dealing",{"_index":2755,"title":{},"body":{"index.html":{}}}],["debounce",{"_index":652,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debouncetime",{"_index":629,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debugging",{"_index":2520,"title":{},"body":{"injectables/SmartService.html":{}}}],["december",{"_index":1337,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["declarations",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["declarationsif",{"_index":2742,"title":{},"body":{"index.html":{}}}],["declare",{"_index":1220,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["declared",{"_index":2751,"title":{},"body":{"index.html":{}}}],["declaring",{"_index":2750,"title":{},"body":{"index.html":{}}}],["decodeuricomponent(tmp[1",{"_index":2527,"title":{},"body":{"injectables/SmartService.html":{}}}],["decorators",{"_index":783,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":1391,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["delete",{"_index":1150,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["demos",{"_index":1244,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["dependencies",{"_index":373,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":1467,"title":{},"body":{"injectables/DoctorService.html":{}}}],["deployment",{"_index":2834,"title":{},"body":{"index.html":{}}}],["desc",{"_index":1110,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["described",{"_index":129,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["description",{"_index":681,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["deserialize",{"_index":1504,"title":{},"body":{"injectables/EncounterService.html":{}}}],["deserialize(input",{"_index":1508,"title":{},"body":{"injectables/EncounterService.html":{}}}],["detail",{"_index":695,"title":{},"body":{"classes/CarePlan.html":{}}}],["details",{"_index":1495,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["determine",{"_index":1321,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["developing",{"_index":2771,"title":{},"body":{"index.html":{}}}],["development",{"_index":2741,"title":{},"body":{"index.html":{}}}],["diff",{"_index":1118,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["different",{"_index":133,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["directive",{"_index":155,"title":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["directives",{"_index":234,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["directly",{"_index":2756,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1416,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["discussed",{"_index":1034,"title":{},"body":{"injectables/ConditionService.html":{}}}],["display",{"_index":99,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{}}}],["display_delay",{"_index":1829,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["displayed",{"_index":791,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["displaying",{"_index":1751,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["div",{"_index":1492,"title":{},"body":{"classes/Encounter.html":{}}}],["do's",{"_index":2748,"title":{},"body":{"index.html":{}}}],["dob",{"_index":2362,"title":{},"body":{"components/PatientComponent.html":{}}}],["docker",{"_index":2818,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":2827,"title":{},"body":{"index.html":{}}}],["dockerized",{"_index":2837,"title":{},"body":{"index.html":{}}}],["doctornote",{"_index":1433,"title":{},"body":{"components/DoctorNoteComponent.html":{}}}],["doctornote'},{'name",{"_index":182,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["doctornotecomponent",{"_index":181,"title":{"components/DoctorNoteComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["doctorservice",{"_index":255,"title":{"injectables/DoctorService.html":{}},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["document",{"_index":1383,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["document.getelementbyid",{"_index":2766,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"cg",{"_index":1167,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["document.getelementbyid(\"finalnote\").style.width",{"_index":2008,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["document.getelementbyid(\"progressnote\").style.width",{"_index":2007,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["document.getelementbyid(\"sidenote\").style.width",{"_index":2005,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["documentation",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":2757,"title":{},"body":{"index.html":{}}}],["doit",{"_index":1880,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["doit(n",{"_index":1881,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["don't",{"_index":2357,"title":{},"body":{"components/PatientComponent.html":{}}}],["done",{"_index":2806,"title":{},"body":{"index.html":{}}}],["dont's",{"_index":2762,"title":{},"body":{"index.html":{}}}],["dosage",{"_index":891,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["dosageunits",{"_index":879,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["doubles/triples",{"_index":1458,"title":{},"body":{"injectables/DoctorService.html":{}}}],["driven",{"_index":2711,"title":{},"body":{"index.html":{}}}],["due",{"_index":322,"title":{},"body":{"components/AccountComponent.html":{}}}],["duration",{"_index":1052,"title":{},"body":{"injectables/ConditionService.html":{}}}],["dynamic",{"_index":636,"title":{},"body":{"classes/BaseColumn.html":{},"dependencies.html":{}}}],["e.resource",{"_index":2167,"title":{},"body":{"injectables/ObservationService.html":{}}}],["e.url",{"_index":2469,"title":{},"body":{"injectables/SmartService.html":{}}}],["each",{"_index":147,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"index.html":{}}}],["earliest",{"_index":1705,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["ears",{"_index":2158,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ease",{"_index":2606,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["easy",{"_index":2836,"title":{},"body":{"index.html":{}}}],["edge",{"_index":1867,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["effective",{"_index":583,"title":{},"body":{"injectables/AssociationService.html":{}}}],["effectivedatetime",{"_index":507,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["el",{"_index":596,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["elapsed",{"_index":1413,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["electrolytes",{"_index":247,"title":{},"body":{"components/AccountComponent.html":{}}}],["element",{"_index":154,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["elementref",{"_index":593,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"directives/HighlightDirective.html":{},"components/ToolbarComponent.html":{}}}],["elements",{"_index":922,"title":{},"body":{"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{}}}],["ellipsestoggle",{"_index":1062,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["elref",{"_index":1534,"title":{},"body":{"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["empty",{"_index":868,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{}}}],["emsp",{"_index":1874,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["enableprodmode",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["enc",{"_index":2353,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getlogvalue()/5",{"_index":2551,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.getreason",{"_index":2355,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getstartdate",{"_index":2555,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.position",{"_index":2550,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encodeuri(request",{"_index":2522,"title":{},"body":{"injectables/SmartService.html":{}}}],["encodeuri(this.redirecturi",{"_index":2495,"title":{},"body":{"injectables/SmartService.html":{}}}],["encounter",{"_index":1474,"title":{"classes/Encounter.html":{}},"body":{"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{},"index.html":{}}}],["encounter.getreason",{"_index":2572,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["encounters",{"_index":1515,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["encounters.foreach(enc",{"_index":2549,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encounterservice",{"_index":387,"title":{"injectables/EncounterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["end",{"_index":694,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{},"index.html":{}}}],["endpoint",{"_index":530,"title":{},"body":{"injectables/AssociationService.html":{}}}],["ent",{"_index":2162,"title":{},"body":{"injectables/ObservationService.html":{}}}],["entry",{"_index":672,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["entry.description",{"_index":941,"title":{},"body":{"components/CheckboxInline.html":{},"components/SelectListSingle.html":{}}}],["enumerated",{"_index":1460,"title":{},"body":{"injectables/DoctorService.html":{}}}],["environment",{"_index":2839,"title":{},"body":{"index.html":{}}}],["error",{"_index":1179,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["errors",{"_index":1154,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["etc",{"_index":2852,"title":{},"body":{"index.html":{}}}],["even",{"_index":1230,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["event",{"_index":106,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{},"components/TripleListComponent.html":{}}}],["event.pagex",{"_index":1409,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["event.pagey",{"_index":1406,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.preventdefault",{"_index":1418,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.shiftkey",{"_index":2069,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["event.target.checked",{"_index":1970,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["event.target.innerheight",{"_index":658,"title":{},"body":{"classes/BaseColumn.html":{}}}],["eventemitter",{"_index":766,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/TripleListComponent.html":{}}}],["events",{"_index":1419,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["example",{"_index":961,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ContextMenuComponent.html":{}}}],["examples",{"_index":2789,"title":{},"body":{"index.html":{}}}],["excessive",{"_index":654,"title":{},"body":{"classes/BaseColumn.html":{}}}],["excludes",{"_index":1464,"title":{},"body":{"injectables/DoctorService.html":{}}}],["exec",{"_index":795,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["execute",{"_index":1393,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["executing",{"_index":1423,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["exist",{"_index":883,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{}}}],["existing",{"_index":881,"title":{},"body":{"injectables/CarePlanService.html":{},"index.html":{}}}],["exists",{"_index":1188,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["exp",{"_index":1891,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["expand",{"_index":757,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expand(parent",{"_index":775,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expected",{"_index":912,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"index.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["extends",{"_index":705,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["extra",{"_index":1776,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["extract",{"_index":546,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo",{"_index":492,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo(condition",{"_index":500,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractnewobservations",{"_index":2099,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractnewobservations(observations",{"_index":2110,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractobservationinfo",{"_index":493,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractobservationinfo(observation",{"_index":504,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extremely",{"_index":2835,"title":{},"body":{"index.html":{}}}],["eyes",{"_index":2157,"title":{},"body":{"injectables/ObservationService.html":{}}}],["false",{"_index":59,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["familiar",{"_index":2817,"title":{},"body":{"index.html":{}}}],["fast",{"_index":2822,"title":{},"body":{"index.html":{}}}],["favorites",{"_index":183,"title":{"components/Favorites.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["favorites'},{'name",{"_index":184,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["favorites.html",{"_index":1529,"title":{},"body":{"components/Favorites.html":{}}}],["february",{"_index":1328,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["female",{"_index":2331,"title":{},"body":{"components/PatientComponent.html":{}}}],["fhir.service",{"_index":853,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["fhirbaseurl",{"_index":2424,"title":{},"body":{"injectables/SmartService.html":{}}}],["fhirservice",{"_index":388,"title":{"injectables/FhirService.html":{}},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["field",{"_index":1181,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["fields",{"_index":563,"title":{},"body":{"injectables/AssociationService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2813,"title":{},"body":{"index.html":{}}}],["filter",{"_index":135,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"components/ToolbarComponent.html":{}}}],["filtering",{"_index":2612,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterscratchpad",{"_index":2588,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterset",{"_index":2094,"title":{},"body":{"injectables/ObservationService.html":{}}}],["final",{"_index":2012,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["find",{"_index":1869,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["findgetparameter",{"_index":2430,"title":{},"body":{"injectables/SmartService.html":{}}}],["findgetparameter(parametername",{"_index":2435,"title":{},"body":{"injectables/SmartService.html":{}}}],["finding",{"_index":350,"title":{},"body":{"components/AddObservation.html":{}}}],["findings",{"_index":323,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["finished",{"_index":735,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["first",{"_index":108,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/SmartService.html":{},"index.html":{}}}],["firstiteration",{"_index":26,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["fit",{"_index":1724,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["fix",{"_index":2504,"title":{},"body":{"injectables/SmartService.html":{}}}],["fixed",{"_index":1524,"title":{},"body":{"injectables/EncounterService.html":{}}}],["fixed[prop",{"_index":1526,"title":{},"body":{"injectables/EncounterService.html":{}}}],["focus",{"_index":600,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["folder",{"_index":2793,"title":{},"body":{"index.html":{}}}],["follow",{"_index":2743,"title":{},"body":{"index.html":{}}}],["following",{"_index":2730,"title":{},"body":{"index.html":{}}}],["follows",{"_index":75,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["foo",{"_index":1643,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["force",{"_index":2794,"title":{},"body":{"index.html":{}}}],["form",{"_index":186,"title":{"classes/Form.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["format",{"_index":128,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["formbuilder",{"_index":185,"title":{"components/FormBuilder.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcreatormodule",{"_index":383,"title":{"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["forminput",{"_index":1595,"title":{},"body":{"components/FormBuilder.html":{}}}],["forms",{"_index":1590,"title":{},"body":{"components/FormBuilder.html":{}}}],["formsmodule",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["found",{"_index":2143,"title":{},"body":{"injectables/ObservationService.html":{}}}],["fromevent",{"_index":627,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(document",{"_index":1421,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(window",{"_index":650,"title":{},"body":{"classes/BaseColumn.html":{}}}],["front",{"_index":2709,"title":{},"body":{"index.html":{}}}],["fullpath",{"_index":1174,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["function",{"_index":122,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["function(condition",{"_index":1309,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["function(data",{"_index":1392,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["function(obs",{"_index":2264,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["functionality",{"_index":635,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["functions",{"_index":796,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["further",{"_index":2848,"title":{},"body":{"index.html":{}}}],["g",{"_index":2739,"title":{},"body":{"index.html":{}}}],["gender",{"_index":2283,"title":{},"body":{"classes/Patient.html":{}}}],["genderstring",{"_index":2301,"title":{},"body":{"components/PatientComponent.html":{}}}],["genderstring(patient",{"_index":2304,"title":{},"body":{"components/PatientComponent.html":{}}}],["generalchange",{"_index":305,"title":{},"body":{"components/AccountComponent.html":{}}}],["generally",{"_index":920,"title":{},"body":{"classes/Chart.html":{}}}],["generate",{"_index":1459,"title":{},"body":{"injectables/DoctorService.html":{}}}],["generic",{"_index":2786,"title":{},"body":{"index.html":{}}}],["getassociations",{"_index":494,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations(checkedconditions",{"_index":508,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcheckedconditions",{"_index":993,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getcheckedobservations",{"_index":2100,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getcode",{"_index":2018,"title":{},"body":{"classes/Observation.html":{}}}],["getcolumnstate",{"_index":994,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getdata",{"_index":931,"title":{},"body":{"components/CheckboxInline.html":{},"components/FormBuilder.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["getdaterange",{"_index":1733,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdaterange(chart",{"_index":1742,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdatestring",{"_index":1274,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getdatestring(c",{"_index":1290,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getenddate",{"_index":1478,"title":{},"body":{"classes/Encounter.html":{}}}],["getforms",{"_index":1592,"title":{},"body":{"components/FormBuilder.html":{}}}],["getgrouping",{"_index":2101,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getgrouping(code",{"_index":2113,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getlevel",{"_index":2054,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["getlogvalue",{"_index":1479,"title":{},"body":{"classes/Encounter.html":{}}}],["getreason",{"_index":1480,"title":{},"body":{"classes/Encounter.html":{}}}],["getrequestoptions",{"_index":1554,"title":{},"body":{"injectables/FhirService.html":{}}}],["getrequestoptions(withauth",{"_index":1559,"title":{},"body":{"injectables/FhirService.html":{}}}],["gets",{"_index":1045,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{}}}],["getscratchpadcareplans",{"_index":710,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["getscratchpadconditions",{"_index":1204,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["getscratchpadcount",{"_index":951,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["getscratchpadobservations",{"_index":2102,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getstartdate",{"_index":1481,"title":{},"body":{"classes/Encounter.html":{}}}],["getters",{"_index":1265,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["gettext",{"_index":2019,"title":{},"body":{"classes/Observation.html":{}}}],["gettext(o",{"_index":2033,"title":{},"body":{"classes/Observation.html":{}}}],["getting",{"_index":2706,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":2431,"title":{},"body":{"injectables/SmartService.html":{}}}],["getunits",{"_index":2020,"title":{},"body":{"classes/Observation.html":{}}}],["getunits(o",{"_index":2035,"title":{},"body":{"classes/Observation.html":{}}}],["geturl",{"_index":1555,"title":{},"body":{"injectables/FhirService.html":{}}}],["getvalue",{"_index":2021,"title":{},"body":{"classes/Observation.html":{}}}],["getvalue(o",{"_index":2037,"title":{},"body":{"classes/Observation.html":{}}}],["getvaluerange",{"_index":1734,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getvaluerange(chart",{"_index":1744,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["gfr",{"_index":279,"title":{},"body":{"components/AccountComponent.html":{}}}],["git",{"_index":2733,"title":{},"body":{"index.html":{}}}],["given",{"_index":858,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{}}}],["giving",{"_index":2777,"title":{},"body":{"index.html":{}}}],["glitch",{"_index":1386,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["global",{"_index":1614,"title":{},"body":{"components/FormBuilder.html":{}}}],["glu",{"_index":275,"title":{},"body":{"components/AccountComponent.html":{}}}],["glyphicon",{"_index":809,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["graphconfig",{"_index":1437,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["graphdata",{"_index":2052,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["groupconditions",{"_index":1063,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouping",{"_index":2014,"title":{},"body":{"classes/Observation.html":{}}}],["groupingcount",{"_index":1082,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouplist",{"_index":2138,"title":{},"body":{"injectables/ObservationService.html":{}}}],["groupmap",{"_index":2095,"title":{},"body":{"injectables/ObservationService.html":{}}}],["grow.directive.ts",{"_index":588,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["grow.directive.ts:10",{"_index":595,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:15",{"_index":598,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:19",{"_index":597,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grunt",{"_index":2716,"title":{},"body":{"index.html":{}}}],["guaranteed",{"_index":131,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["guidelines",{"_index":2747,"title":{},"body":{"index.html":{}}}],["handle",{"_index":661,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{}}}],["handledocclick",{"_index":1355,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handledocclick(event",{"_index":1364,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleobservationbundle",{"_index":2103,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleobservationbundle(bundle",{"_index":2119,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleoptionclick",{"_index":1356,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleoptionclick(option",{"_index":1366,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleresize",{"_index":613,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handleresize(event",{"_index":622,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handlers",{"_index":2064,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["handles",{"_index":2065,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationsComponent.html":{}}}],["hardcode",{"_index":1868,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hardcoded",{"_index":1785,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["hashing",{"_index":2505,"title":{},"body":{"injectables/SmartService.html":{}}}],["hasing\")).tostring",{"_index":2510,"title":{},"body":{"injectables/SmartService.html":{}}}],["hba1c",{"_index":274,"title":{},"body":{"components/AccountComponent.html":{}}}],["hdl",{"_index":265,"title":{},"body":{"components/AccountComponent.html":{}}}],["headers",{"_index":1573,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["headers.append('authorization",{"_index":1576,"title":{},"body":{"injectables/FhirService.html":{}}}],["headings",{"_index":83,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["heart",{"_index":2148,"title":{},"body":{"injectables/ObservationService.html":{}}}],["height",{"_index":336,"title":{},"body":{"components/AddObservation.html":{},"classes/BaseColumn.html":{},"components/DoctorNoteComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["height_offset",{"_index":612,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["here",{"_index":84,"title":{},"body":{"components/AccordionRecursion.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["hide",{"_index":1357,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hide(event",{"_index":1368,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["high",{"_index":924,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["highlight",{"_index":238,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["highlightdirective",{"_index":237,"title":{"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["highlighted",{"_index":1018,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{}}}],["highlighttext",{"_index":1638,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["hii",{"_index":2801,"title":{},"body":{"index.html":{}}}],["historical",{"_index":311,"title":{},"body":{"components/AccountComponent.html":{}}}],["historicaltrends",{"_index":1645,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrends'},{'name",{"_index":189,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["historicaltrends.html",{"_index":1646,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrendscomponent",{"_index":188,"title":{"components/HistoricalTrendsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["historicaltrendsservice",{"_index":389,"title":{"injectables/HistoricalTrendsService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["history",{"_index":2151,"title":{},"body":{"injectables/ObservationService.html":{}}}],["home",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":191,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["home.html",{"_index":1810,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":190,"title":{"components/HomeComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["horizontal",{"_index":918,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["host",{"_index":599,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["hosting",{"_index":2838,"title":{},"body":{"index.html":{}}}],["hover",{"_index":1855,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["hoverbox",{"_index":1827,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["hoverbox'},{'name",{"_index":193,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["hoverbox.component.ts",{"_index":2791,"title":{},"body":{"index.html":{}}}],["hoverbox.html",{"_index":1828,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hoverbox/hoverbox.component",{"_index":2323,"title":{},"body":{"components/PatientComponent.html":{}}}],["hoverboxcomponent",{"_index":192,"title":{"components/HoverBoxComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hoverstyling",{"_index":2300,"title":{},"body":{"components/PatientComponent.html":{}}}],["hspc",{"_index":2799,"title":{},"body":{"index.html":{}}}],["html",{"_index":153,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["http",{"_index":499,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["http://ec2",{"_index":517,"title":{},"body":{"injectables/AssociationService.html":{}}}],["http://fhir",{"_index":2470,"title":{},"body":{"injectables/SmartService.html":{}}}],["http://localhost:9000",{"_index":2450,"title":{},"body":{"injectables/SmartService.html":{}}}],["httpclient",{"_index":497,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["httpclientmodule",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1570,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["httpheaders({'accept",{"_index":1574,"title":{},"body":{"injectables/FhirService.html":{}}}],["https://github.com/hii",{"_index":2735,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/45594609/which",{"_index":1019,"title":{},"body":{"injectables/ConditionService.html":{}}}],["humanizebytes",{"_index":1879,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["humanizebytespipe",{"_index":1876,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["icon",{"_index":808,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["id",{"_index":357,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"components/HomeComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Patient.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"classes/User.html":{}}}],["id.type",{"_index":2386,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.type.coding[0].code",{"_index":2387,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.value",{"_index":2389,"title":{},"body":{"injectables/PatientService.html":{}}}],["id=\"tableparentele",{"_index":1196,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["identifier",{"_index":2284,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["ie",{"_index":641,"title":{},"body":{"classes/BaseColumn.html":{},"index.html":{}}}],["implement",{"_index":973,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["implemented",{"_index":1231,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["implements",{"_index":679,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Observation.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["imports",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["inactive",{"_index":144,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["including",{"_index":2826,"title":{},"body":{"index.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1316,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["information",{"_index":1870,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["inherited",{"_index":716,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["initial",{"_index":313,"title":{},"body":{"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{}}}],["initialize",{"_index":938,"title":{},"body":{"components/CheckboxInline.html":{},"components/ConditionsComponent.html":{}}}],["initialized",{"_index":109,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["injectable",{"_index":486,"title":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"coverage.html":{}}}],["injectables",{"_index":487,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"overview.html":{}}}],["inline",{"_index":927,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline'},{'name",{"_index":170,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["inline.component",{"_index":1629,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["inline.component.ts",{"_index":926,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["inline.component.ts:10",{"_index":936,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:11",{"_index":937,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:13",{"_index":935,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:20",{"_index":934,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:9",{"_index":933,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.html",{"_index":928,"title":{},"body":{"components/CheckboxInline.html":{}}}],["input",{"_index":62,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["input('highlighttext",{"_index":1640,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["input[prop",{"_index":1527,"title":{},"body":{"injectables/EncounterService.html":{}}}],["inputdata",{"_index":932,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.name",{"_index":940,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.status",{"_index":2406,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["install",{"_index":2685,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["installations",{"_index":2853,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2724,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1151,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["instructions",{"_index":2744,"title":{},"body":{"index.html":{}}}],["interface",{"_index":482,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":484,"title":{},"body":{"interfaces/Associable.html":{}}}],["internal",{"_index":1136,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["interval",{"_index":1412,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["invalid",{"_index":1697,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["isallchecked",{"_index":752,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ischecked",{"_index":1311,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["isconditionassociated",{"_index":1275,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionassociated(condition",{"_index":1292,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked",{"_index":1276,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked(condition",{"_index":1294,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected",{"_index":1277,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected(condition",{"_index":1296,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isdate",{"_index":1834,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isdate(x",{"_index":1839,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth",{"_index":1835,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth(x",{"_index":1841,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isn't",{"_index":2041,"title":{},"body":{"classes/Observation.html":{}}}],["isobservationassociated",{"_index":2235,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationassociated(observation",{"_index":2249,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked",{"_index":2236,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked(observation",{"_index":2251,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isparent",{"_index":977,"title":{},"body":{"classes/Condition.html":{}}}],["isvisible",{"_index":978,"title":{},"body":{"classes/Condition.html":{}}}],["it's",{"_index":1183,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["item",{"_index":1873,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["item.split",{"_index":2525,"title":{},"body":{"injectables/SmartService.html":{}}}],["items",{"_index":1830,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["iteration",{"_index":1462,"title":{},"body":{"injectables/DoctorService.html":{}}}],["itself",{"_index":1750,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["january",{"_index":1327,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["jedi's",{"_index":2850,"title":{},"body":{"index.html":{}}}],["john",{"_index":303,"title":{},"body":{"components/AccountComponent.html":{}}}],["jquery",{"_index":1224,"title":{},"body":{"components/ConditionsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":1135,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{},"index.html":{}}}],["json.parse(json.stringify(this.conditions",{"_index":1128,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["json.parse(this.cookieservice.get('graphconfig",{"_index":2326,"title":{},"body":{"components/PatientComponent.html":{}}}],["json.stringify(this.graphconfig",{"_index":1473,"title":{},"body":{"injectables/DoctorService.html":{}}}],["july",{"_index":1332,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["june",{"_index":1331,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["justcreated",{"_index":1201,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["keep",{"_index":1684,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["keeps",{"_index":638,"title":{},"body":{"classes/BaseColumn.html":{}}}],["key",{"_index":2224,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["kidneyfunction",{"_index":248,"title":{},"body":{"components/AccountComponent.html":{}}}],["know",{"_index":1046,"title":{},"body":{"injectables/ConditionService.html":{}}}],["known",{"_index":1548,"title":{},"body":{"components/Favorites.html":{}}}],["kubernetes",{"_index":2851,"title":{},"body":{"index.html":{}}}],["lab",{"_index":327,"title":{},"body":{"components/AccountComponent.html":{}}}],["largest",{"_index":1798,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["last",{"_index":1051,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lastindex",{"_index":2053,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["latest",{"_index":1706,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["launch",{"_index":2425,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["layout",{"_index":2720,"title":{},"body":{"index.html":{}}}],["ldl",{"_index":264,"title":{},"body":{"components/AccountComponent.html":{}}}],["leave",{"_index":1469,"title":{},"body":{"injectables/DoctorService.html":{}}}],["leaving",{"_index":2767,"title":{},"body":{"index.html":{}}}],["left",{"_index":1350,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["leftoffset",{"_index":1831,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["leftposition",{"_index":2580,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["legend",{"_index":152,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["level",{"_index":71,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["leveldata",{"_index":27,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["levelnum",{"_index":28,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["libraries",{"_index":2763,"title":{},"body":{"index.html":{}}}],["license",{"_index":2855,"title":{},"body":{"index.html":{}}}],["line",{"_index":822,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["linear",{"_index":309,"title":{},"body":{"components/AccountComponent.html":{}}}],["linechartdata",{"_index":898,"title":{},"body":{"classes/Chart.html":{}}}],["lines",{"_index":919,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["link",{"_index":673,"title":{"classes/Link.html":{}},"body":{"classes/Bundle.html":{},"components/Favorites.html":{},"classes/Link.html":{},"coverage.html":{}}}],["link.relation",{"_index":1038,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["links",{"_index":2217,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["list",{"_index":87,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["listdata",{"_index":2411,"title":{},"body":{"components/SelectListSingle.html":{}}}],["lists",{"_index":1453,"title":{},"body":{"injectables/DoctorService.html":{}}}],["lite",{"_index":2688,"title":{},"body":{"dependencies.html":{}}}],["literal",{"_index":358,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"injectables/FhirService.html":{},"classes/Medication.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["liverfunction",{"_index":249,"title":{},"body":{"components/AccountComponent.html":{}}}],["load",{"_index":734,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{}}}],["loadallergies",{"_index":995,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["loadallergies(patient",{"_index":1002,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadcareplans",{"_index":845,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadcareplans(patient",{"_index":848,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadconditions",{"_index":996,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditions(patient",{"_index":1004,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage",{"_index":997,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage(url",{"_index":1006,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loaded",{"_index":1202,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["loadencounters",{"_index":1505,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["loadencounters(patient",{"_index":1510,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage",{"_index":1506,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage(url",{"_index":1512,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loader",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["loadfinished",{"_index":16,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["loading",{"_index":195,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["loadinganimation",{"_index":194,"title":{"components/LoadingAnimation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadinganimation.html",{"_index":1900,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["loadmedications",{"_index":846,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadmedications(patient",{"_index":851,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadobservationspage",{"_index":2104,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadobservationspage(url",{"_index":2121,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadpatient",{"_index":2373,"title":{},"body":{"injectables/PatientService.html":{}}}],["local",{"_index":2814,"title":{},"body":{"index.html":{}}}],["locally",{"_index":2772,"title":{},"body":{"index.html":{}}}],["location",{"_index":1404,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["location.search.substr(1).split(\"&\").foreach(item",{"_index":2524,"title":{},"body":{"injectables/SmartService.html":{}}}],["logarithmic",{"_index":310,"title":{},"body":{"components/AccountComponent.html":{}}}],["logic",{"_index":1141,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{}}}],["long",{"_index":1155,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["losing",{"_index":820,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["low",{"_index":923,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["lower",{"_index":2071,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["m.name",{"_index":1973,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["magnesium",{"_index":273,"title":{},"body":{"components/AccountComponent.html":{}}}],["main_list",{"_index":1586,"title":{},"body":{"components/FormBuilder.html":{}}}],["maintaining",{"_index":819,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["make",{"_index":1240,"title":{},"body":{"components/ConditionsComponent.html":{},"index.html":{}}}],["male",{"_index":2333,"title":{},"body":{"components/PatientComponent.html":{}}}],["manager",{"_index":2722,"title":{},"body":{"index.html":{}}}],["map",{"_index":514,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/PatientService.html":{}}}],["mapping",{"_index":2116,"title":{},"body":{"injectables/ObservationService.html":{}}}],["mappings",{"_index":2212,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["maps",{"_index":533,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mapservice",{"_index":390,"title":{"injectables/MapService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapservice.static_mappings",{"_index":2226,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["march",{"_index":1329,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["mark",{"_index":553,"title":{},"body":{"injectables/AssociationService.html":{}}}],["matching",{"_index":241,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(recency_multiplier",{"_index":1252,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["math.log(this.getstartdate().gettime",{"_index":1502,"title":{},"body":{"classes/Encounter.html":{}}}],["math.max(max",{"_index":1804,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.min(min",{"_index":1802,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.pow(1024",{"_index":1890,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["max",{"_index":1695,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate",{"_index":1648,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate.gettime",{"_index":1807,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["maximum",{"_index":915,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["md5",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["md5.hashstr(\"testing",{"_index":2509,"title":{},"body":{"injectables/SmartService.html":{}}}],["md5/dist/md5",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{}}}],["med",{"_index":884,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["med.periods.push",{"_index":888,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication",{"_index":854,"title":{"classes/Medication.html":{}},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"coverage.html":{}}}],["medication(cp.title",{"_index":886,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication.dosageunits",{"_index":1793,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.name",{"_index":1792,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.periods[i",{"_index":1794,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medicationmap",{"_index":877,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.get(cp.title",{"_index":885,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.set(cp.title",{"_index":893,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medications",{"_index":869,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{}}}],["medications'},{'name",{"_index":198,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["medications.html",{"_index":1959,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["medicationscomponent",{"_index":197,"title":{"components/MedicationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menu",{"_index":753,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["merged",{"_index":874,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["method",{"_index":1131,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["methods",{"_index":18,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["min",{"_index":1694,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mindate",{"_index":1649,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["minimum",{"_index":914,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["miscellaneous",{"_index":2864,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":331,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["model",{"_index":127,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AddObservation.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["model.code",{"_index":351,"title":{},"body":{"components/AddObservation.html":{}}}],["models",{"_index":2754,"title":{},"body":{"index.html":{}}}],["models/allergyintolerance.model",{"_index":1017,"title":{},"body":{"injectables/ConditionService.html":{}}}],["models/bundle.model",{"_index":856,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["models/careplan.model",{"_index":731,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{}}}],["models/chart.model",{"_index":1749,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["models/condition.model",{"_index":527,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["models/encounter.model",{"_index":1514,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["models/form.model",{"_index":1613,"title":{},"body":{"components/FormBuilder.html":{}}}],["models/medication.model",{"_index":855,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{}}}],["models/observation.model",{"_index":528,"title":{},"body":{"injectables/AssociationService.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["models/patient.model",{"_index":732,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["models/server.model",{"_index":2324,"title":{},"body":{"components/PatientComponent.html":{}}}],["modified",{"_index":1144,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["modifiers",{"_index":1450,"title":{},"body":{"injectables/DoctorService.html":{}}}],["module",{"_index":370,"title":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["modules",{"_index":372,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"dependencies.html":{}}}],["moment().subtract(months",{"_index":1719,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().subtract(years",{"_index":1716,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().todate",{"_index":1718,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.maxdate).isvalid",{"_index":1699,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.mindate).isvalid",{"_index":1698,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(newdate).toisostring",{"_index":1125,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["moment(relativedatetime).toisostring",{"_index":1256,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["momentmodule",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":316,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["months",{"_index":1326,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["months').todate",{"_index":1720,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["months[d.getmonth",{"_index":1338,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["more",{"_index":1242,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["mouse",{"_index":1682,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["mouseevent",{"_index":1650,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["mousemove",{"_index":1687,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mousesubscription",{"_index":1651,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mouth",{"_index":2160,"title":{},"body":{"injectables/ObservationService.html":{}}}],["movements",{"_index":1683,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moving",{"_index":1865,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["mr",{"_index":2388,"title":{},"body":{"injectables/PatientService.html":{}}}],["mrn",{"_index":2285,"title":{},"body":{"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["ms",{"_index":1858,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["multiple",{"_index":872,"title":{},"body":{"injectables/CarePlanService.html":{},"components/PatientComponent.html":{}}}],["n",{"_index":1883,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["n1.code['coding'][0]['code",{"_index":1114,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n1.effectivedatetime",{"_index":2177,"title":{},"body":{"injectables/ObservationService.html":{}}}],["n1.onsetdatetime",{"_index":1116,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2",{"_index":1113,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{}}}],["n2.code['coding'][0]['code",{"_index":1115,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2.onsetdatetime",{"_index":1117,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["nav2",{"_index":2587,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["navigation",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1221,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["need",{"_index":1470,"title":{},"body":{"injectables/DoctorService.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["needed",{"_index":1685,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["needs",{"_index":1455,"title":{},"body":{"injectables/DoctorService.html":{}}}],["new",{"_index":515,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{},"components/TimelinePopupComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["newcolumnstate",{"_index":1010,"title":{},"body":{"injectables/ConditionService.html":{}}}],["newcondition",{"_index":199,"title":{"components/NewCondition.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["newcondition'},{'name",{"_index":200,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["newcondition.html",{"_index":1975,"title":{},"body":{"components/NewCondition.html":{}}}],["newdate",{"_index":1121,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newly",{"_index":1786,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["newtable",{"_index":1064,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtable(tablename",{"_index":1079,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtest",{"_index":1530,"title":{},"body":{"components/Favorites.html":{}}}],["newtoken",{"_index":1565,"title":{},"body":{"injectables/FhirService.html":{}}}],["next",{"_index":1026,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["nextlink",{"_index":1036,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["nextobservations",{"_index":2166,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ngafterviewinit",{"_index":758,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["nginx",{"_index":2823,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["ngonchanges",{"_index":20,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["ngoninit",{"_index":759,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{}}}],["ngx",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"injectables/DoctorService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":2723,"title":{},"body":{"index.html":{}}}],["none",{"_index":1190,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["normal",{"_index":202,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["normalbox1",{"_index":201,"title":{"components/NormalBox1.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalbox2",{"_index":205,"title":{"components/NormalBox2.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalvalues",{"_index":899,"title":{},"body":{"classes/Chart.html":{}}}],["nose",{"_index":2159,"title":{},"body":{"injectables/ObservationService.html":{}}}],["note",{"_index":74,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["notenavigation",{"_index":1991,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["notenavigation'},{'name",{"_index":208,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["notenavigation.html",{"_index":1992,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["notenavigationcomponent",{"_index":207,"title":{"components/NoteNavigationComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notes.html",{"_index":1434,"title":{},"body":{"components/DoctorNoteComponent.html":{}}}],["nothing",{"_index":1696,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["november",{"_index":1336,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["now",{"_index":112,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{}}}],["npm",{"_index":2721,"title":{},"body":{"index.html":{}}}],["null",{"_index":85,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["number",{"_index":39,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["numeric",{"_index":1759,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["o",{"_index":559,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["o.date",{"_index":2076,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["o.id",{"_index":2271,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.name",{"_index":2074,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["o.relativedatetime",{"_index":2279,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.value",{"_index":2075,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["o['code']['coding'][0]['display",{"_index":2047,"title":{},"body":{"classes/Observation.html":{}}}],["o['code']['text",{"_index":2046,"title":{},"body":{"classes/Observation.html":{}}}],["o['selected",{"_index":2270,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o['valuequantity']['unit",{"_index":2045,"title":{},"body":{"classes/Observation.html":{}}}],["o['valuequantity']['value",{"_index":2043,"title":{},"body":{"classes/Observation.html":{}}}],["ob",{"_index":2183,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ob.relativedatetime",{"_index":2185,"title":{},"body":{"injectables/ObservationService.html":{}}}],["object",{"_index":348,"title":{},"body":{"components/AddObservation.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["object.keys(observationsbycategory",{"_index":2204,"title":{},"body":{"injectables/ObservationService.html":{}}}],["obs",{"_index":2055,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["obs.isselected",{"_index":2066,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["obscount",{"_index":2627,"title":{},"body":{"components/TripleListComponent.html":{}}}],["observable",{"_index":850,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/PatientService.html":{}}}],["observable.concat",{"_index":1033,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observables",{"_index":1022,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observation",{"_index":505,"title":{"classes/Observation.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["observation.category[0].text",{"_index":2198,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.gettext(o",{"_index":2276,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getunits(o",{"_index":2278,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getvalue(o",{"_index":2277,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.grouping",{"_index":2187,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('category",{"_index":2196,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('valuequantity",{"_index":2195,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.service",{"_index":526,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation?patient",{"_index":2228,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observation['code']['coding'][0]['code",{"_index":584,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ObservationService.html":{}}}],["observation['code']['coding'][0]['system",{"_index":585,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation['effectivedatetime",{"_index":586,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationcategory",{"_index":2197,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationrecursion",{"_index":2050,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observationrecursion'},{'name",{"_index":210,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursion.html",{"_index":2051,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["observationrecursionchart",{"_index":2079,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationrecursionchart'},{'name",{"_index":212,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursive",{"_index":209,"title":{"components/ObservationRecursive.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationrecursivechart",{"_index":211,"title":{"components/ObservationRecursiveChart.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationreturned",{"_index":2223,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations",{"_index":92,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["observations'},{'name",{"_index":214,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observations.html",{"_index":2211,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations.map(this.extractobservationinfo",{"_index":571,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationsbycategory",{"_index":2194,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory.hasownproperty(observationcategory",{"_index":2199,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[ctgry",{"_index":2206,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory",{"_index":2200,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory].push(observation",{"_index":2201,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationschart.html",{"_index":2080,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationscomponent",{"_index":213,"title":{"components/ObservationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay",{"_index":215,"title":{"components/ObservationsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay'},{'name",{"_index":216,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationsdisplay.html",{"_index":2232,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationselected",{"_index":2238,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationservice",{"_index":31,"title":{"injectables/ObservationService.html":{}},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsinfo",{"_index":570,"title":{},"body":{"injectables/AssociationService.html":{}}}],["occurrence",{"_index":1766,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["occurs",{"_index":2459,"title":{},"body":{"injectables/SmartService.html":{}}}],["october",{"_index":1335,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["of(conditions",{"_index":1041,"title":{},"body":{"injectables/ConditionService.html":{}}}],["of(encounters",{"_index":1520,"title":{},"body":{"injectables/EncounterService.html":{}}}],["official",{"_index":2845,"title":{},"body":{"index.html":{}}}],["onblur",{"_index":590,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["once",{"_index":974,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"index.html":{}}}],["onchanges",{"_index":1138,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ondatapointselect",{"_index":1652,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["ondatapointselect(chartevent",{"_index":1661,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["one",{"_index":875,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["onfocus",{"_index":591,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["onloadcomplete",{"_index":1205,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["onradiochanged",{"_index":2394,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onradiochanged(currstatus",{"_index":2397,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onrightclick",{"_index":1531,"title":{},"body":{"components/Favorites.html":{}}}],["onset",{"_index":578,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{}}}],["onsetdatetime",{"_index":503,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Condition.html":{}}}],["onsubmitclick",{"_index":1597,"title":{},"body":{"components/FormBuilder.html":{}}}],["onto",{"_index":2349,"title":{},"body":{"components/PatientComponent.html":{}}}],["opacity",{"_index":2603,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["open",{"_index":817,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["open(encounter",{"_index":2561,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["opened",{"_index":1388,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["openid",{"_index":2452,"title":{},"body":{"injectables/SmartService.html":{}}}],["operator",{"_index":1020,"title":{},"body":{"injectables/ConditionService.html":{}}}],["option",{"_index":1308,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["option.exec",{"_index":1426,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.exec(this.data",{"_index":1427,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.text",{"_index":1431,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["options",{"_index":803,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["options).pipe(map(res",{"_index":2383,"title":{},"body":{"injectables/PatientService.html":{}}}],["order",{"_index":1222,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["other_grouping",{"_index":2192,"title":{},"body":{"injectables/ObservationService.html":{}}}],["otherwise",{"_index":1496,"title":{},"body":{"classes/Encounter.html":{}}}],["out",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"injectables/SmartService.html":{},"overview.html":{}}}],["output",{"_index":63,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TripleListComponent.html":{}}}],["outputs",{"_index":761,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{},"components/TripleListComponent.html":{}}}],["outside",{"_index":1399,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["over",{"_index":871,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["overridden",{"_index":2208,"title":{},"body":{"injectables/ObservationService.html":{}}}],["overriden",{"_index":659,"title":{},"body":{"classes/BaseColumn.html":{}}}],["overview",{"_index":2778,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oxygen_saturation",{"_index":342,"title":{},"body":{"components/AddObservation.html":{}}}],["p",{"_index":2840,"title":{},"body":{"index.html":{}}}],["p1.name",{"_index":1770,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2",{"_index":1769,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2.name",{"_index":1771,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p3000/healthcreek",{"_index":2829,"title":{},"body":{"index.html":{}}}],["package",{"_index":2670,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":643,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["paddedtable",{"_index":297,"title":{},"body":{"components/AccountComponent.html":{}}}],["paddedtd",{"_index":295,"title":{},"body":{"components/AccountComponent.html":{}}}],["padding:10px",{"_index":296,"title":{},"body":{"components/AccountComponent.html":{}}}],["page",{"_index":1027,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/PatientComponent.html":{}}}],["pages",{"_index":1029,"title":{},"body":{"injectables/ConditionService.html":{}}}],["paginated",{"_index":1024,"title":{},"body":{"injectables/ConditionService.html":{}}}],["parametername",{"_index":2437,"title":{},"body":{"injectables/SmartService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["parent",{"_index":777,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["parsed",{"_index":102,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseddata",{"_index":17,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseint(left.replace(/px",{"_index":2621,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["parseint(top.replace(/px",{"_index":2624,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["particularly",{"_index":2779,"title":{},"body":{"index.html":{}}}],["pass",{"_index":1461,"title":{},"body":{"injectables/DoctorService.html":{}}}],["passed",{"_index":1381,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["passthrough",{"_index":2629,"title":{},"body":{"components/TripleListComponent.html":{}}}],["password",{"_index":306,"title":{},"body":{"components/AccountComponent.html":{}}}],["path",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["patient",{"_index":711,"title":{"classes/Patient.html":{}},"body":{"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["patient'},{'name",{"_index":218,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["patient.birthdate",{"_index":2363,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender",{"_index":2329,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender.charat(0).touppercase",{"_index":2360,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.html",{"_index":2297,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.id",{"_index":861,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["patient.mrn",{"_index":2361,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["patient.name[0].family[0",{"_index":2367,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0",{"_index":2366,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0",{"_index":2359,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient_viewer",{"_index":2738,"title":{},"body":{"index.html":{}}}],["patientcomponent",{"_index":217,"title":{"components/PatientComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["patientid",{"_index":2372,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientservice",{"_index":391,"title":{"injectables/PatientService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["pencil",{"_index":810,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["period",{"_index":682,"title":{},"body":{"classes/CarePlan.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{}}}],["periods",{"_index":873,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["pipe",{"_index":1875,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(concatmap(bundle",{"_index":1035,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["pipe(debouncetime(100",{"_index":651,"title":{},"body":{"classes/BaseColumn.html":{}}}],["pipe(map(bundle",{"_index":864,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["pipes",{"_index":1877,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pipetransform",{"_index":1888,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pixel",{"_index":1871,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["pixels",{"_index":665,"title":{},"body":{"classes/BaseColumn.html":{},"components/HoverBoxComponent.html":{}}}],["place",{"_index":2781,"title":{},"body":{"index.html":{}}}],["plan",{"_index":811,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/MedicationsComponent.html":{}}}],["plans",{"_index":95,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{}}}],["please",{"_index":2491,"title":{},"body":{"injectables/SmartService.html":{}}}],["plop",{"_index":2820,"title":{},"body":{"index.html":{}}}],["point",{"_index":1721,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["point.name",{"_index":1808,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.name.gettime",{"_index":1806,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.value",{"_index":1803,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity",{"_index":1760,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity['value",{"_index":1761,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["points",{"_index":910,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["popover",{"_index":1269,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["populatecategories",{"_index":2105,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populatecategories(categories",{"_index":2124,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populated",{"_index":2039,"title":{},"body":{"classes/Observation.html":{}}}],["popup",{"_index":1225,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["popup'},{'name",{"_index":229,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["pos",{"_index":2554,"title":{},"body":{"components/TimelineComponent.html":{}}}],["position",{"_index":1476,"title":{},"body":{"classes/Encounter.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{}}}],["position:string",{"_index":1493,"title":{},"body":{"classes/Encounter.html":{}}}],["possible",{"_index":948,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["potassium",{"_index":269,"title":{},"body":{"components/AccountComponent.html":{}}}],["practice",{"_index":125,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prefer",{"_index":2749,"title":{},"body":{"index.html":{}}}],["preparing",{"_index":2714,"title":{},"body":{"index.html":{}}}],["presses",{"_index":2611,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["pressure",{"_index":2147,"title":{},"body":{"injectables/ObservationService.html":{}}}],["prevent",{"_index":653,"title":{},"body":{"classes/BaseColumn.html":{}}}],["preventions/exposures",{"_index":146,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prevents",{"_index":1385,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["previously",{"_index":2381,"title":{},"body":{"injectables/PatientService.html":{}}}],["print",{"_index":2356,"title":{},"body":{"components/PatientComponent.html":{}}}],["printmsg",{"_index":1278,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["printmsg(condition",{"_index":1300,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["prior",{"_index":543,"title":{},"body":{"injectables/AssociationService.html":{}}}],["private",{"_index":491,"title":{},"body":{"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["probably",{"_index":1258,"title":{},"body":{"components/ConditionsComponent.html":{},"index.html":{}}}],["problem",{"_index":319,"title":{},"body":{"components/AccountComponent.html":{}}}],["problems",{"_index":143,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{}}}],["produces",{"_index":1247,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["product",{"_index":697,"title":{},"body":{"classes/CarePlan.html":{}}}],["productcodableconcept",{"_index":698,"title":{},"body":{"classes/CarePlan.html":{}}}],["production",{"_index":2809,"title":{},"body":{"index.html":{}}}],["productreference",{"_index":702,"title":{},"body":{"classes/CarePlan.html":{}}}],["profile",{"_index":2453,"title":{},"body":{"injectables/SmartService.html":{}}}],["progress",{"_index":2011,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["project",{"_index":2710,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1525,"title":{},"body":{"injectables/EncounterService.html":{}}}],["proper",{"_index":2351,"title":{},"body":{"components/PatientComponent.html":{}}}],["properties",{"_index":15,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["provided",{"_index":1799,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["providers",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["provides",{"_index":634,"title":{},"body":{"classes/BaseColumn.html":{}}}],["providing",{"_index":1773,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["proxy.herokuapp.com/token",{"_index":2503,"title":{},"body":{"injectables/SmartService.html":{}}}],["public",{"_index":1353,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/PatientService.html":{},"classes/Server.html":{}}}],["pug",{"_index":2262,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["purposes",{"_index":101,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"injectables/SmartService.html":{}}}],["push",{"_index":1457,"title":{},"body":{"injectables/DoctorService.html":{}}}],["pushing",{"_index":2769,"title":{},"body":{"index.html":{}}}],["px",{"_index":1407,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{}}}],["quality",{"_index":1081,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["queued",{"_index":1861,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["r",{"_index":1498,"title":{},"body":{"classes/Encounter.html":{}}}],["r.resource",{"_index":867,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["r.text",{"_index":1499,"title":{},"body":{"classes/Encounter.html":{}}}],["random",{"_index":816,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["range",{"_index":1782,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["ranges",{"_index":2040,"title":{},"body":{"classes/Observation.html":{}}}],["rate",{"_index":2149,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reactivity",{"_index":1140,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["readable",{"_index":1894,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["readonly",{"_index":2371,"title":{},"body":{"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["realistic",{"_index":1248,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["reason",{"_index":1477,"title":{},"body":{"classes/Encounter.html":{},"classes/Observation.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["reasons",{"_index":1494,"title":{},"body":{"classes/Encounter.html":{}}}],["reasontext",{"_index":2354,"title":{},"body":{"components/PatientComponent.html":{}}}],["rebuild",{"_index":123,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["recency_multiplier",{"_index":1249,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["recent",{"_index":1243,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["recently",{"_index":1549,"title":{},"body":{"components/Favorites.html":{}}}],["recompile",{"_index":2797,"title":{},"body":{"index.html":{}}}],["reconstruct",{"_index":111,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions",{"_index":21,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions(arrdata",{"_index":50,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings",{"_index":22,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings(arrdata",{"_index":52,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations",{"_index":23,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations(arrdata",{"_index":54,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructedobject",{"_index":2202,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reconstructedobject.push",{"_index":2205,"title":{},"body":{"injectables/ObservationService.html":{}}}],["recursion",{"_index":97,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["redirect",{"_index":2484,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirect_uri",{"_index":2494,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirecturi",{"_index":2426,"title":{},"body":{"injectables/SmartService.html":{}}}],["ref",{"_index":1361,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["reference",{"_index":703,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["referencerange",{"_index":2015,"title":{},"body":{"classes/Observation.html":{}}}],["reflect",{"_index":2693,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":832,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["registry.smarthealthit.org/structuredefinition/oauth",{"_index":2471,"title":{},"body":{"injectables/SmartService.html":{}}}],["relation",{"_index":676,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["relativedatetime",{"_index":979,"title":{},"body":{"classes/Condition.html":{},"components/ConditionsComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{}}}],["relevant",{"_index":562,"title":{},"body":{"injectables/AssociationService.html":{}}}],["remain",{"_index":1030,"title":{},"body":{"injectables/ConditionService.html":{}}}],["remove",{"_index":1307,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/HistoricalTrendsService.html":{},"index.html":{}}}],["removechart",{"_index":1735,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["removechart(chartname",{"_index":1746,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["renderer",{"_index":594,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["rendering",{"_index":1257,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["repo",{"_index":2832,"title":{},"body":{"index.html":{}}}],["repository",{"_index":2770,"title":{},"body":{"index.html":{}}}],["request",{"_index":2512,"title":{},"body":{"injectables/SmartService.html":{}}}],["requestauth",{"_index":2432,"title":{},"body":{"injectables/SmartService.html":{}}}],["res",{"_index":2352,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["res['identifier",{"_index":2385,"title":{},"body":{"injectables/PatientService.html":{}}}],["res['selectedconditions",{"_index":550,"title":{},"body":{"injectables/AssociationService.html":{}}}],["res['selectedobservations",{"_index":552,"title":{},"body":{"injectables/AssociationService.html":{}}}],["reset",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetdaterange",{"_index":1653,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["resettodefaultview",{"_index":2589,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resize",{"_index":648,"title":{},"body":{"classes/BaseColumn.html":{}}}],["resizing",{"_index":637,"title":{},"body":{"classes/BaseColumn.html":{}}}],["respiration",{"_index":2150,"title":{},"body":{"injectables/ObservationService.html":{}}}],["response",{"_index":548,"title":{},"body":{"injectables/AssociationService.html":{}}}],["response_type=code",{"_index":2513,"title":{},"body":{"injectables/SmartService.html":{}}}],["restart",{"_index":2842,"title":{},"body":{"index.html":{}}}],["result",{"_index":240,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.tofixed(0",{"_index":1893,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["result.tofixed(2",{"_index":1892,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["results",{"_index":242,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":2227,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["retrieve",{"_index":857,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{}}}],["retrieved",{"_index":2348,"title":{},"body":{"components/PatientComponent.html":{}}}],["retrieves",{"_index":1267,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["return",{"_index":573,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["review",{"_index":2152,"title":{},"body":{"injectables/ObservationService.html":{}}}],["right",{"_index":805,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["root",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["routermodule",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["routing",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1156,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["runassociationstool",{"_index":495,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["runassociationstool(checkedconditions",{"_index":512,"title":{},"body":{"injectables/AssociationService.html":{}}}],["running",{"_index":2729,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":628,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":630,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["s",{"_index":2327,"title":{},"body":{"components/PatientComponent.html":{}}}],["same",{"_index":81,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{}}}],["sandbox",{"_index":2800,"title":{},"body":{"index.html":{}}}],["sass",{"_index":2718,"title":{},"body":{"index.html":{}}}],["save",{"_index":328,"title":{},"body":{"components/AccountComponent.html":{}}}],["savesettings",{"_index":252,"title":{},"body":{"components/AccountComponent.html":{}}}],["scale",{"_index":308,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsComponent.html":{}}}],["scaledates",{"_index":2106,"title":{},"body":{"injectables/ObservationService.html":{}}}],["scaledtimesinceconditiononset",{"_index":1251,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scaledtimesinceobservation",{"_index":2182,"title":{},"body":{"injectables/ObservationService.html":{}}}],["schema",{"_index":105,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["scope",{"_index":2427,"title":{},"body":{"injectables/SmartService.html":{}}}],["scoping",{"_index":800,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["scrachpad",{"_index":2392,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["scratch",{"_index":642,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["scratchpad",{"_index":220,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["scratchpadcheckboxes",{"_index":1065,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadcheckboxes(checked",{"_index":1086,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadconditions",{"_index":1203,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scratchpadmode",{"_index":1279,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["scratchpadservice",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scratchpadservice.statechange$.subscribe",{"_index":738,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["scratchpadupdate",{"_index":219,"title":{"components/ScratchPadUpdate.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screen",{"_index":1856,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["scripting",{"_index":2490,"title":{},"body":{"injectables/SmartService.html":{}}}],["see",{"_index":2854,"title":{},"body":{"index.html":{}}}],["seems",{"_index":668,"title":{},"body":{"classes/BaseColumn.html":{}}}],["select",{"_index":223,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["selectcareplan",{"_index":760,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcareplan(careplan",{"_index":780,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcondition",{"_index":1066,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selectcondition(condition",{"_index":1088,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selected",{"_index":326,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["selectedcondition",{"_index":992,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["selectedconditions",{"_index":575,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectedobservations",{"_index":576,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectlistsingle",{"_index":222,"title":{"components/SelectListSingle.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectobservation",{"_index":2237,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selectobservation(observation",{"_index":2256,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["selectpatientbyid",{"_index":1811,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectpatientbyid(id",{"_index":1814,"title":{},"body":{"components/HomeComponent.html":{}}}],["selects",{"_index":1315,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["separate",{"_index":300,"title":{},"body":{"components/AccountComponent.html":{}}}],["september",{"_index":1334,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["series",{"_index":913,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["serve",{"_index":2795,"title":{},"body":{"index.html":{}}}],["server",{"_index":1617,"title":{"classes/Server.html":{}},"body":{"components/FormBuilder.html":{},"components/PatientComponent.html":{},"classes/Server.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["services",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["services/association.service",{"_index":1304,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/careplan.service",{"_index":729,"title":{},"body":{"components/CarePlanComponent.html":{},"components/MedicationsComponent.html":{}}}],["services/condition.service",{"_index":1105,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/doctor.service",{"_index":287,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/Favorites.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["services/encounter.service",{"_index":2321,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["services/fhir.service",{"_index":728,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{}}}],["services/historicaltrends.service",{"_index":1680,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/map.service",{"_index":2222,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["services/observation.service",{"_index":65,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["services/patient.service",{"_index":1681,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["services/scratchpad.service",{"_index":730,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/smart.service",{"_index":1816,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/toolbar.service",{"_index":1542,"title":{},"body":{"components/Favorites.html":{},"components/ToolbarComponent.html":{}}}],["session",{"_index":1053,"title":{},"body":{"injectables/ConditionService.html":{}}}],["set",{"_index":644,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["setcolumnstate",{"_index":998,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setcolumnstate(newcolumnstate",{"_index":1008,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setdaterange",{"_index":1654,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterange(form",{"_index":1665,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths",{"_index":1655,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths(months",{"_index":1667,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears",{"_index":1656,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears(years",{"_index":1669,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setpatientid",{"_index":2374,"title":{},"body":{"injectables/PatientService.html":{}}}],["setpatientid(patientid",{"_index":2377,"title":{},"body":{"injectables/PatientService.html":{}}}],["sets",{"_index":1715,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setters",{"_index":1266,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["settimeout",{"_index":1414,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["setting",{"_index":258,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["settings",{"_index":250,"title":{},"body":{"components/AccountComponent.html":{}}}],["settoken",{"_index":1556,"title":{},"body":{"injectables/FhirService.html":{}}}],["settoken(newtoken",{"_index":1563,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl",{"_index":1557,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl(url",{"_index":1566,"title":{},"body":{"injectables/FhirService.html":{}}}],["shift",{"_index":2067,"title":{},"body":{"components/ObservationRecursive.html":{},"index.html":{}}}],["shouldn't",{"_index":1784,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["show",{"_index":1358,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["show(data",{"_index":1370,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["show(items",{"_index":1843,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["showallergyhover",{"_index":2302,"title":{},"body":{"components/PatientComponent.html":{}}}],["showallergyhover(event",{"_index":2310,"title":{},"body":{"components/PatientComponent.html":{}}}],["showdefault",{"_index":614,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["shown",{"_index":804,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{}}}],["showscratchpad",{"_index":615,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["si[exp",{"_index":1895,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["side",{"_index":1690,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/NoteNavigationComponent.html":{}}}],["sieve",{"_index":137,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["sign",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":2727,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1152,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{}}}],["single",{"_index":2409,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single'},{'name",{"_index":224,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["single.component",{"_index":1634,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["single.component.ts",{"_index":2408,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["single.component.ts:10",{"_index":2414,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:12",{"_index":2413,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:9",{"_index":2412,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.html",{"_index":2410,"title":{},"body":{"components/SelectListSingle.html":{}}}],["site",{"_index":2461,"title":{},"body":{"injectables/SmartService.html":{}}}],["skip",{"_index":1758,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["small",{"_index":1774,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smallest",{"_index":1797,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smartextension",{"_index":2467,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartextension[0].extension.foreach(arg",{"_index":2475,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartservice",{"_index":393,"title":{"injectables/SmartService.html":{}},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["smith",{"_index":304,"title":{},"body":{"components/AccountComponent.html":{}}}],["sodium",{"_index":268,"title":{},"body":{"components/AccountComponent.html":{}}}],["sort",{"_index":1765,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["sortcondition",{"_index":1067,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["sortcondition(x",{"_index":1090,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["space",{"_index":1777,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["spacing",{"_index":301,"title":{},"body":{"components/AccountComponent.html":{}}}],["spad",{"_index":739,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["specific",{"_index":1693,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["specifically",{"_index":2745,"title":{},"body":{"index.html":{}}}],["specify",{"_index":1728,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/.../app.module.ts",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../conditions.component.ts",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts",{"_index":9,"title":{},"body":{"components/AccordionRecursion.html":{},"coverage.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:120",{"_index":55,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:128",{"_index":53,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:26",{"_index":42,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:29",{"_index":40,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:32",{"_index":43,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:35",{"_index":41,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:38",{"_index":60,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:39",{"_index":33,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:48",{"_index":48,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:71",{"_index":51,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:75",{"_index":45,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/account/account.component.ts",{"_index":243,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/components/account/account.component.ts:10",{"_index":286,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:11",{"_index":277,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:12",{"_index":267,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:13",{"_index":285,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:14",{"_index":256,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:18",{"_index":259,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:27",{"_index":261,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:33",{"_index":262,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/addobservation/addobservation.component.ts",{"_index":332,"title":{},"body":{"components/AddObservation.html":{},"coverage.html":{}}}],["src/app/components/addobservation/addobservation.component.ts:8",{"_index":349,"title":{},"body":{"components/AddObservation.html":{}}}],["src/app/components/addobservation/addobservation.component.ts:9",{"_index":335,"title":{},"body":{"components/AddObservation.html":{}}}],["src/app/components/app/app.component.ts",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/app/app.component.ts:7",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/basecolumn.ts",{"_index":609,"title":{},"body":{"classes/BaseColumn.html":{},"coverage.html":{}}}],["src/app/components/basecolumn.ts:23",{"_index":623,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:28",{"_index":624,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:29",{"_index":625,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:30",{"_index":626,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:33",{"_index":618,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:36",{"_index":621,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:39",{"_index":619,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:9",{"_index":617,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/careplan/careplan.component.ts",{"_index":704,"title":{},"body":{"components/CarePlanComponent.html":{},"coverage.html":{}}}],["src/app/components/careplan/careplan.component.ts:18",{"_index":723,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:19",{"_index":722,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:22",{"_index":721,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:25",{"_index":724,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:27",{"_index":713,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:43",{"_index":715,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplan/careplan.component.ts:56",{"_index":714,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts",{"_index":750,"title":{},"body":{"components/CarePlanDisplay.html":{},"coverage.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:111",{"_index":769,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:21",{"_index":786,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:24",{"_index":782,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:27",{"_index":765,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:28",{"_index":767,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:30",{"_index":764,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:39",{"_index":779,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:44",{"_index":778,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:77",{"_index":781,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:85",{"_index":774,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:94",{"_index":772,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:98",{"_index":776,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts",{"_index":946,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"coverage.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:15",{"_index":956,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:18",{"_index":955,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:23",{"_index":958,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:32",{"_index":959,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:41",{"_index":957,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts",{"_index":1199,"title":{},"body":{"components/ConditionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/conditions/conditions.component.ts:122",{"_index":1211,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:131",{"_index":1208,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:30",{"_index":1217,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:33",{"_index":1213,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:34",{"_index":1216,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:37",{"_index":1215,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:39",{"_index":1219,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:40",{"_index":1212,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:41",{"_index":1214,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:44",{"_index":1218,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:46",{"_index":1207,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:47",{"_index":1206,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:73",{"_index":1209,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:87",{"_index":1210,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts",{"_index":1054,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:111",{"_index":1075,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:121",{"_index":1096,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:129",{"_index":1087,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:145",{"_index":1097,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:149",{"_index":1076,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:159",{"_index":1077,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:16",{"_index":1102,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:17",{"_index":1101,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:18",{"_index":1104,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:181",{"_index":1094,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:19",{"_index":1098,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:195",{"_index":1083,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:20",{"_index":1099,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:21",{"_index":1100,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:22",{"_index":1103,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:24",{"_index":1074,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:26",{"_index":1073,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:34",{"_index":1085,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:45",{"_index":1089,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:53",{"_index":1091,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:82",{"_index":1078,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts",{"_index":1270,"title":{},"body":{"components/ConditionsDisplay.html":{},"coverage.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:104",{"_index":1302,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:109",{"_index":1287,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:116",{"_index":1297,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:121",{"_index":1295,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:126",{"_index":1293,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:131",{"_index":1285,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:138",{"_index":1289,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:147",{"_index":1301,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:151",{"_index":1291,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:23",{"_index":1303,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:26",{"_index":1281,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:27",{"_index":1283,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:30",{"_index":1282,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:32",{"_index":1280,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:45",{"_index":1299,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:50",{"_index":1298,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts",{"_index":1344,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:10",{"_index":1378,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:13",{"_index":1375,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:15",{"_index":1380,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:16",{"_index":1379,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:17",{"_index":1377,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:20",{"_index":1372,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:25",{"_index":1374,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:26",{"_index":1360,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:41",{"_index":1363,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:45",{"_index":1365,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:56",{"_index":1371,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:80",{"_index":1367,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:95",{"_index":1369,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/doctornote/doctornote.component.ts",{"_index":1432,"title":{},"body":{"components/DoctorNoteComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts",{"_index":1528,"title":{},"body":{"components/Favorites.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:10",{"_index":1535,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:13",{"_index":1541,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:15",{"_index":1536,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:19",{"_index":1538,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/favorites/favorites.component.ts:26",{"_index":1539,"title":{},"body":{"components/Favorites.html":{}}}],["src/app/components/form",{"_index":1583,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["src/app/components/form_components/checkbox",{"_index":925,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["src/app/components/form_components/normal",{"_index":1976,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"coverage.html":{}}}],["src/app/components/form_components/scrachpad",{"_index":2390,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["src/app/components/form_components/select",{"_index":2407,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts",{"_index":1644,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:101",{"_index":1670,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:108",{"_index":1668,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:114",{"_index":1662,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:20",{"_index":1674,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:23",{"_index":1677,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:24",{"_index":1675,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:27",{"_index":1679,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:29",{"_index":1676,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:32",{"_index":1678,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:35",{"_index":1658,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:54",{"_index":1660,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:70",{"_index":1666,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:81",{"_index":1664,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1809,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:16",{"_index":1813,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:41",{"_index":1815,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts",{"_index":1826,"title":{},"body":{"components/HoverBoxComponent.html":{},"coverage.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:13",{"_index":1848,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:16",{"_index":1854,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:19",{"_index":1852,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:20",{"_index":1849,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:21",{"_index":1853,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:22",{"_index":1850,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:25",{"_index":1851,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:28",{"_index":1837,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:32",{"_index":1844,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:63",{"_index":1838,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:79",{"_index":1846,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:83",{"_index":1840,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:87",{"_index":1842,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts",{"_index":1898,"title":{},"body":{"components/LoadingAnimation.html":{},"coverage.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts:7",{"_index":1901,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["src/app/components/medications/medications.component.ts",{"_index":1958,"title":{},"body":{"components/MedicationsComponent.html":{},"coverage.html":{}}}],["src/app/components/medications/medications.component.ts:14",{"_index":1965,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:15",{"_index":1961,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:22",{"_index":1964,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:31",{"_index":1963,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/newcondition/newcondition.component.ts",{"_index":1974,"title":{},"body":{"components/NewCondition.html":{},"coverage.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts",{"_index":1990,"title":{},"body":{"components/NoteNavigationComponent.html":{},"coverage.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:10",{"_index":2004,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:14",{"_index":2001,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:24",{"_index":2003,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:29",{"_index":2000,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:37",{"_index":2002,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/notenavigation/notenavigation.component.ts:43",{"_index":1999,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts",{"_index":2049,"title":{},"body":{"components/ObservationRecursive.html":{},"coverage.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:12",{"_index":2058,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:13",{"_index":2057,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:14",{"_index":2063,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:15",{"_index":2056,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:24",{"_index":2060,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:61",{"_index":2061,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursion/observationrecursion.component.ts:65",{"_index":2062,"title":{},"body":{"components/ObservationRecursive.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts",{"_index":2078,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"coverage.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:13",{"_index":2083,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:14",{"_index":2082,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:15",{"_index":2081,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:20",{"_index":2087,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:24",{"_index":2088,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:29",{"_index":2085,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observations/observations.component.ts",{"_index":2210,"title":{},"body":{"components/ObservationsComponent.html":{},"coverage.html":{}}}],["src/app/components/observations/observations.component.ts:20",{"_index":2220,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:21",{"_index":2221,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:22",{"_index":2219,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:24",{"_index":2214,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:27",{"_index":2218,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:30",{"_index":2213,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:60",{"_index":2215,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts",{"_index":2231,"title":{},"body":{"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:102",{"_index":2252,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:107",{"_index":2247,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:112",{"_index":2244,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:120",{"_index":2250,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:124",{"_index":2248,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:22",{"_index":2259,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:25",{"_index":2260,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:28",{"_index":2258,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:31",{"_index":2241,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:32",{"_index":2242,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:34",{"_index":2240,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:45",{"_index":2254,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:49",{"_index":2255,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:54",{"_index":2253,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:92",{"_index":2257,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/patient/patient.component.ts",{"_index":2296,"title":{},"body":{"components/PatientComponent.html":{},"coverage.html":{}}}],["src/app/components/patient/patient.component.ts:109",{"_index":2311,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:23",{"_index":2320,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:24",{"_index":2319,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:25",{"_index":2312,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:26",{"_index":2315,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:29",{"_index":2313,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:30",{"_index":2314,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:31",{"_index":2317,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:32",{"_index":2318,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:34",{"_index":2303,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:46",{"_index":2305,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:59",{"_index":2309,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:63",{"_index":2308,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:70",{"_index":2306,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:92",{"_index":2307,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts",{"_index":2536,"title":{},"body":{"components/TimelineComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline/timeline.component.ts:13",{"_index":2543,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:14",{"_index":2540,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:18",{"_index":2542,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:22",{"_index":2541,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts",{"_index":2556,"title":{},"body":{"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:14",{"_index":2566,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:15",{"_index":2564,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:16",{"_index":2562,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:25",{"_index":2560,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts",{"_index":2584,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:27",{"_index":2593,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:28",{"_index":2592,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:41",{"_index":2597,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:45",{"_index":2596,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:52",{"_index":2594,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:63",{"_index":2595,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:67",{"_index":2599,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts",{"_index":2625,"title":{},"body":{"components/TripleListComponent.html":{},"coverage.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:14",{"_index":2631,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:15",{"_index":2632,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:16",{"_index":2630,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:22",{"_index":2634,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/directives/auto",{"_index":587,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts",{"_index":1637,"title":{},"body":{"directives/HighlightDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts:8",{"_index":1639,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["src/app/models/allergyintolerance.model.ts",{"_index":356,"title":{},"body":{"classes/AllergyIntolerance.html":{},"coverage.html":{}}}],["src/app/models/allergyintolerance.model.ts:2",{"_index":360,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/allergyintolerance.model.ts:3",{"_index":359,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/associable.model.ts",{"_index":485,"title":{},"body":{"interfaces/Associable.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts",{"_index":671,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts:3",{"_index":674,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:4",{"_index":675,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:8",{"_index":1896,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/bundle.model.ts:9",{"_index":1897,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/careplan.model.ts",{"_index":678,"title":{},"body":{"classes/CarePlan.html":{},"coverage.html":{}}}],["src/app/models/careplan.model.ts:10",{"_index":688,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:15",{"_index":685,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:4",{"_index":687,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:5",{"_index":690,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:6",{"_index":689,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:7",{"_index":686,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/chart.model.ts",{"_index":896,"title":{},"body":{"classes/Chart.html":{},"coverage.html":{}}}],["src/app/models/chart.model.ts:14",{"_index":905,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:23",{"_index":909,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:24",{"_index":908,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:28",{"_index":906,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:3",{"_index":907,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:4",{"_index":902,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:5",{"_index":903,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:8",{"_index":904,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/client.model.ts",{"_index":943,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/app/models/client.model.ts:2",{"_index":944,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/client.model.ts:3",{"_index":945,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/condition.model.ts",{"_index":975,"title":{},"body":{"classes/Condition.html":{},"coverage.html":{}}}],["src/app/models/condition.model.ts:10",{"_index":984,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:11",{"_index":987,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:12",{"_index":982,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:4",{"_index":983,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:5",{"_index":986,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:6",{"_index":988,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:7",{"_index":989,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:8",{"_index":981,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:9",{"_index":985,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/encounter.model.ts",{"_index":1475,"title":{},"body":{"classes/Encounter.html":{},"coverage.html":{}}}],["src/app/models/encounter.model.ts:11",{"_index":1487,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:16",{"_index":1484,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:18",{"_index":1485,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:29",{"_index":1490,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:3",{"_index":1482,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:4",{"_index":1486,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:44",{"_index":1491,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:45",{"_index":1488,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:47",{"_index":1489,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:6",{"_index":1483,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/form.model.ts",{"_index":1578,"title":{},"body":{"classes/Form.html":{},"coverage.html":{}}}],["src/app/models/form.model.ts:2",{"_index":1580,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:3",{"_index":1581,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:4",{"_index":1579,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/medication.model.ts",{"_index":1949,"title":{},"body":{"classes/Medication.html":{},"coverage.html":{}}}],["src/app/models/medication.model.ts:10",{"_index":1951,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:3",{"_index":1953,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:4",{"_index":1952,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:6",{"_index":1954,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/observation.model.ts",{"_index":2013,"title":{},"body":{"classes/Observation.html":{},"coverage.html":{}}}],["src/app/models/observation.model.ts:10",{"_index":2031,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:11",{"_index":2030,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:14",{"_index":2027,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:15",{"_index":2025,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:18",{"_index":2038,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:23",{"_index":2036,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:28",{"_index":2034,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:33",{"_index":2032,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:4",{"_index":2026,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:5",{"_index":2029,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:6",{"_index":2024,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:7",{"_index":2028,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:8",{"_index":2022,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:9",{"_index":2023,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/patient.model.ts",{"_index":2280,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["src/app/models/patient.model.ts:10",{"_index":2295,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:11",{"_index":2293,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:3",{"_index":2287,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:4",{"_index":2291,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:5",{"_index":2289,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:6",{"_index":2290,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:7",{"_index":2288,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:8",{"_index":2292,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:9",{"_index":2294,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/server.model.ts",{"_index":2416,"title":{},"body":{"classes/Server.html":{},"coverage.html":{}}}],["src/app/models/server.model.ts:1",{"_index":2417,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/server.model.ts:4",{"_index":2418,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/timeline.model.ts",{"_index":2528,"title":{},"body":{"classes/Timeline.html":{},"coverage.html":{}}}],["src/app/models/timeline.model.ts:2",{"_index":2532,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:3",{"_index":2533,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:4",{"_index":2531,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:5",{"_index":2529,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:6",{"_index":2530,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:7",{"_index":2535,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:8",{"_index":2534,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/user.model.ts",{"_index":2638,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:3",{"_index":2639,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":2640,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/form.module.ts",{"_index":1627,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts",{"_index":1878,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:12",{"_index":1882,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:8",{"_index":1887,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/services/association.service.ts",{"_index":488,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{}}}],["src/app/services/association.service.ts:13",{"_index":524,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:17",{"_index":516,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:18",{"_index":498,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:26",{"_index":513,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:64",{"_index":510,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:88",{"_index":501,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:97",{"_index":506,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/careplan.service.ts",{"_index":844,"title":{},"body":{"injectables/CarePlanService.html":{},"coverage.html":{}}}],["src/app/services/careplan.service.ts:16",{"_index":847,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:24",{"_index":849,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:40",{"_index":852,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/condition.service.ts",{"_index":990,"title":{},"body":{"injectables/ConditionService.html":{},"coverage.html":{}}}],["src/app/services/condition.service.ts:17",{"_index":1013,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:19",{"_index":1011,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:21",{"_index":1014,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:23",{"_index":1012,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:24",{"_index":999,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:36",{"_index":1007,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:51",{"_index":1005,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:56",{"_index":1000,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:63",{"_index":1003,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:77",{"_index":1001,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:82",{"_index":1009,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/doctor.service.ts",{"_index":1435,"title":{},"body":{"injectables/DoctorService.html":{},"coverage.html":{}}}],["src/app/services/doctor.service.ts:10",{"_index":1441,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:15",{"_index":1445,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:46",{"_index":1443,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:8",{"_index":1447,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:9",{"_index":1446,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/encounter.service.ts",{"_index":1503,"title":{},"body":{"injectables/EncounterService.html":{},"coverage.html":{}}}],["src/app/services/encounter.service.ts:15",{"_index":1507,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:22",{"_index":1513,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:39",{"_index":1511,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:46",{"_index":1509,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/fhir.service.ts",{"_index":1551,"title":{},"body":{"injectables/FhirService.html":{},"coverage.html":{}}}],["src/app/services/fhir.service.ts:10",{"_index":1569,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:12",{"_index":1562,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:16",{"_index":1567,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:20",{"_index":1564,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:24",{"_index":1560,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:5",{"_index":1558,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:9",{"_index":1568,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/historicaltrends.service.ts",{"_index":1729,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["src/app/services/historicaltrends.service.ts:12",{"_index":1736,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:138",{"_index":1747,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:147",{"_index":1745,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:165",{"_index":1743,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:17",{"_index":1740,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:80",{"_index":1738,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:9",{"_index":1748,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/map.service.ts",{"_index":1902,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/services/map.service.ts:5",{"_index":1948,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/services/observation.service.ts",{"_index":2092,"title":{},"body":{"injectables/ObservationService.html":{},"coverage.html":{}}}],["src/app/services/observation.service.ts:132",{"_index":2122,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:139",{"_index":2120,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:14",{"_index":2135,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:15",{"_index":2130,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:157",{"_index":2123,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:16",{"_index":2132,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:17",{"_index":2131,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:175",{"_index":2112,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:179",{"_index":2127,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:18",{"_index":2133,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:19",{"_index":2134,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:190",{"_index":2111,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:20",{"_index":2136,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:206",{"_index":2114,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:217",{"_index":2125,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:22",{"_index":2107,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:255",{"_index":2109,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:284",{"_index":2118,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:289",{"_index":2128,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:293",{"_index":2129,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/patient.service.ts",{"_index":2370,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/app/services/patient.service.ts:12",{"_index":2379,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:15",{"_index":2375,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:23",{"_index":2378,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:28",{"_index":2376,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/scratchpad.service.ts",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["src/app/services/smart.service.ts",{"_index":2420,"title":{},"body":{"injectables/SmartService.html":{},"coverage.html":{}}}],["src/app/services/smart.service.ts:106",{"_index":2436,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:17",{"_index":2447,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:18",{"_index":2454,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:19",{"_index":2451,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:21",{"_index":2448,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:22",{"_index":2441,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:23",{"_index":2456,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:24",{"_index":2449,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:25",{"_index":2455,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:26",{"_index":2440,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:28",{"_index":2434,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:73",{"_index":2438,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:88",{"_index":2439,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:9",{"_index":2433,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/toolbar.service.ts",{"_index":2579,"title":{},"body":{"injectables/ToolBarService.html":{},"coverage.html":{}}}],["src/app/services/toolbar.service.ts:5",{"_index":2583,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["src/app/services/toolbar.service.ts:6",{"_index":2582,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["standard",{"_index":1417,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["start",{"_index":692,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{}}}],["started",{"_index":2707,"title":{"index.html":{}},"body":{}}],["state",{"_index":640,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["state('in",{"_index":2602,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["statements",{"_index":2643,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["states",{"_index":664,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["static",{"_index":785,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["static_mappings",{"_index":1903,"title":{},"body":{"injectables/MapService.html":{}}}],["stats",{"_index":814,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["status",{"_index":683,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"classes/Observation.html":{},"components/ScratchPadUpdate.html":{},"classes/Timeline.html":{}}}],["stopped",{"_index":2844,"title":{},"body":{"index.html":{}}}],["store",{"_index":967,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["stored",{"_index":2140,"title":{},"body":{"injectables/ObservationService.html":{}}}],["storedata",{"_index":1593,"title":{},"body":{"components/FormBuilder.html":{}}}],["storedata(data",{"_index":1604,"title":{},"body":{"components/FormBuilder.html":{}}}],["stores",{"_index":911,"title":{},"body":{"classes/Chart.html":{}}}],["strange",{"_index":798,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"classes/Medication.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"injectables/ToolBarService.html":{},"classes/User.html":{}}}],["strings",{"_index":2338,"title":{},"body":{"components/PatientComponent.html":{},"index.html":{}}}],["structure",{"_index":73,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["structures",{"_index":1050,"title":{},"body":{"injectables/ConditionService.html":{}}}],["stuff",{"_index":748,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{}}}],["style",{"_index":1587,"title":{},"body":{"components/FormBuilder.html":{},"components/ToolbarComponent.html":{}}}],["styles",{"_index":1582,"title":{},"body":{"components/FormBuilder.html":{}}}],["subheading",{"_index":78,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["subheadings",{"_index":86,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["submit",{"_index":352,"title":{},"body":{"components/AddObservation.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{}}}],["submitclick",{"_index":1594,"title":{},"body":{"components/FormBuilder.html":{}}}],["subs",{"_index":79,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["subscribe",{"_index":736,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsComponent.html":{}}}],["subscribe((bundle",{"_index":2164,"title":{},"body":{"injectables/ObservationService.html":{}}}],["subscribe((event",{"_index":655,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["subscribe(res",{"_index":541,"title":{},"body":{"injectables/AssociationService.html":{}}}],["subscribe){data",{"_index":1454,"title":{},"body":{"injectables/DoctorService.html":{}}}],["subscription",{"_index":709,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["subtracts",{"_index":1713,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["such",{"_index":554,"title":{},"body":{"injectables/AssociationService.html":{},"index.html":{}}}],["super",{"_index":631,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["support",{"_index":2858,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":2787,"title":{},"body":{"index.html":{}}}],["sure",{"_index":2506,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["svg",{"_index":2859,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":962,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["switcher",{"_index":960,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switching",{"_index":662,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["switchnav",{"_index":2590,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["switchtodefault",{"_index":952,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switchtoscratchpad",{"_index":953,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["symbol",{"_index":1847,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["symptoms",{"_index":2155,"title":{},"body":{"injectables/ObservationService.html":{}}}],["system",{"_index":502,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"index.html":{}}}],["system:{{condition.code.coding[0].system",{"_index":2577,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["systemjs",{"_index":2697,"title":{},"body":{"dependencies.html":{}}}],["systems",{"_index":2153,"title":{},"body":{"injectables/ObservationService.html":{}}}],["t",{"_index":2828,"title":{},"body":{"index.html":{}}}],["table",{"_index":1173,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["tablename",{"_index":1084,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation",{"_index":1068,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation(clickedset",{"_index":1093,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2833,"title":{},"body":{"index.html":{}}}],["tagand",{"_index":2846,"title":{},"body":{"index.html":{}}}],["take",{"_index":2758,"title":{},"body":{"index.html":{}}}],["taken",{"_index":870,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["takes",{"_index":68,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["team",{"_index":2811,"title":{},"body":{"index.html":{}}}],["tech",{"_index":2810,"title":{},"body":{"index.html":{}}}],["telecom",{"_index":2286,"title":{},"body":{"classes/Patient.html":{}}}],["temp",{"_index":1148,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temperature",{"_index":344,"title":{},"body":{"components/AddObservation.html":{},"injectables/ObservationService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["templateurl",{"_index":12,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["temptablevar",{"_index":1166,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temptablevar.hidden",{"_index":1169,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["terminal",{"_index":2732,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":2807,"title":{},"body":{"index.html":{}}}],["test",{"_index":1532,"title":{},"body":{"components/Favorites.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["test(ref",{"_index":1537,"title":{},"body":{"components/Favorites.html":{}}}],["test2",{"_index":1533,"title":{},"body":{"components/Favorites.html":{}}}],["tested",{"_index":2068,"title":{},"body":{"components/ObservationRecursive.html":{},"index.html":{}}}],["testing",{"_index":100,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["text",{"_index":361,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["textinputforedit",{"_index":1060,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["thanks",{"_index":2492,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.addcategoriesconditions(arrdata",{"_index":130,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.allergies",{"_index":2339,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies.length",{"_index":2343,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies[0",{"_index":2345,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergy",{"_index":2344,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.associatedmapconditions.clear",{"_index":544,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapconditions.set(c",{"_index":558,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.clear",{"_index":545,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.set(o",{"_index":561,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.associatedmapconditions.get(condition",{"_index":1323,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.associationservice.associatedmapobservations.get(observation",{"_index":2274,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.associationservice.runassociationstool(checkedconditions",{"_index":2610,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.aud",{"_index":2462,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.authorizeurl",{"_index":2480,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.base",{"_index":1571,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.boxdata",{"_index":1983,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["this.careplanloadfinished",{"_index":745,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.careplans",{"_index":744,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{}}}],["this.careplanselected.emit(this.selected",{"_index":823,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.careplanservice.loadcareplans(this.patient).subscribe(careplans",{"_index":743,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.careplanservice.loadmedications(this.patient).subscribe(medications",{"_index":1966,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.categorizedobservations",{"_index":2144,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.charts",{"_index":1789,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.delete(chartname",{"_index":1796,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(chartname",{"_index":1752,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(medication.name",{"_index":1791,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(chartname",{"_index":1788,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(medication.name",{"_index":1795,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.clicksubscription",{"_index":1420,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clicksubscription.unsubscribe",{"_index":1430,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clientid",{"_index":2515,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.closeable",{"_index":1401,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.closeable_delay",{"_index":1415,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.column",{"_index":964,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.columnstate",{"_index":965,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showdefault",{"_index":968,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showscratchpad",{"_index":969,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.updateservice",{"_index":966,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.columnheight",{"_index":645,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.columnnum",{"_index":113,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.columnstate",{"_index":740,"title":{},"body":{"components/CarePlanComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.columntype",{"_index":970,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.compiler.clearcache",{"_index":1817,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.conditiongrouping",{"_index":1111,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping.indexof(c",{"_index":1165,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0",{"_index":1160,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0].push(c",{"_index":1161,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1",{"_index":1162,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1].push(c",{"_index":1163,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount",{"_index":1185,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount].push(c",{"_index":1186,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.indexof(tablename",{"_index":1170,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.push(tablename",{"_index":1171,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditions",{"_index":1107,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.conditions.concat(conditions",{"_index":1232,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.filter(c",{"_index":1043,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.conditions.length",{"_index":1235,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.sort((c1",{"_index":1236,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions[value].isselected",{"_index":1146,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionselected.emit(this.selected",{"_index":1108,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionservice.conditions",{"_index":538,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.getcheckedconditions",{"_index":2608,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.conditionservice.getcolumnstate",{"_index":1306,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.loadallergies(this.patient).subscribe(allergies",{"_index":2337,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.conditionservice.loadconditions(this.patient).subscribe(conditions",{"_index":1106,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.selectedcondition",{"_index":1318,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.setcolumnstate(this.columnstate",{"_index":1264,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.cookieservice.get('state",{"_index":2485,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.get('tokenurl",{"_index":2497,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('fhirbaseurl",{"_index":2482,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('graphconfig",{"_index":1472,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.cookieservice.set('state",{"_index":2511,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('tokenurl",{"_index":2481,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.data",{"_index":1403,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.datepipe.transform(encounter.getstartdate(),'mm",{"_index":2569,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.description",{"_index":2403,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.deserialize(e['resource",{"_index":1517,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.doctorservice.addgraphconfig(this.settings",{"_index":292,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.assignvisible(this.conditions",{"_index":1129,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.doctorservice.configmode",{"_index":294,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.filter",{"_index":290,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doit(parseint(value",{"_index":1889,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["this.dosageunits",{"_index":1957,"title":{},"body":{"classes/Medication.html":{}}}],["this.el.nativeelement.textcontent",{"_index":1642,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["this.elref.nativeelement.queryselector('div').style.left",{"_index":2618,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elref.nativeelement.queryselector('div').style.top",{"_index":2619,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.encounters",{"_index":2545,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.concat(encounters",{"_index":2546,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.length",{"_index":2547,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(encounters",{"_index":2544,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(res",{"_index":2350,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.extractconditioninfo(c)['code",{"_index":556,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.extractnewobservations(nextobservations",{"_index":2170,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.extractobservationinfo(o)['code",{"_index":560,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.fhirbaseurl",{"_index":2457,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions",{"_index":863,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["this.fhirservice.getrequestoptions(false)).subscribe(data",{"_index":2466,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions(true",{"_index":2382,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.fhirservice.geturl",{"_index":859,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.fhirservice.settoken(data['access_token",{"_index":1823,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.cookieservice.get('fhirbaseurl",{"_index":1818,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.fhirbaseurl",{"_index":2465,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.token",{"_index":1819,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterset.add(code",{"_index":2190,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.filterset.has(code",{"_index":2186,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.findgetparameter(\"code",{"_index":2493,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"iss",{"_index":2458,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"launch",{"_index":2464,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter('state",{"_index":2486,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.firstiteration",{"_index":110,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.formbuilderservice.gettemplate().then(forms",{"_index":1618,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forminput",{"_index":1621,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forms",{"_index":1619,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getassociations",{"_index":540,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.getforms",{"_index":1616,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getgrouping(code",{"_index":2188,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.getscratchpadconditions",{"_index":1228,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.gettoken",{"_index":2487,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.getvaluerange(chart",{"_index":1778,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.graphconfig",{"_index":2325,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.graphconfig.push(list",{"_index":1471,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.groupconditions",{"_index":1130,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.groupmap",{"_index":2141,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.groupmap[x].indexof(code",{"_index":2191,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handledocclick(event",{"_index":1422,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.handleobservationbundle(bundle",{"_index":2165,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handleresize(event",{"_index":656,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.height_offset",{"_index":647,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.hide(event",{"_index":1428,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.hide(null",{"_index":1402,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.historicaltrendsservice.addmedicationchart(medication",{"_index":1971,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.historicaltrendsservice.removechart(medication.name",{"_index":1972,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.hover.show(this.allergies",{"_index":2358,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.hoverbox.hide(event",{"_index":2574,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverbox.show(details",{"_index":2573,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverstyling",{"_index":2346,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.http.get(url",{"_index":862,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.http.post(\"https://mongo",{"_index":2502,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.http.post(this.path",{"_index":574,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.inputdata.id",{"_index":1984,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["this.isallchecked",{"_index":839,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.items",{"_index":1864,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.justcreated",{"_index":1226,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.launch",{"_index":2463,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.left",{"_index":1408,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.level",{"_index":2090,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.leveldata",{"_index":118,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.listdata",{"_index":2415,"title":{},"body":{"components/SelectListSingle.html":{}}}],["this.loadallergies",{"_index":2335,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.loadcareplans(patient).pipe(map(careplans",{"_index":876,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["this.loadconditionspage(nextlink.url",{"_index":1040,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loadconditionspage(url",{"_index":1042,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loaded",{"_index":1261,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.loadencounters",{"_index":2336,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.loadencounterspage(nextlink.url",{"_index":1519,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadencounterspage(url",{"_index":1521,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadfinished",{"_index":119,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["this.loadobservationspage(nextlink.url",{"_index":2171,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.mappings",{"_index":2225,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.maxdate",{"_index":1702,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.maxdate.gettime",{"_index":1712,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.medications",{"_index":1967,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.medications.length",{"_index":1969,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.menu.addoption",{"_index":807,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.menu.show(null",{"_index":1722,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mindate",{"_index":1700,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mouseevent",{"_index":1688,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mousesubscription",{"_index":1686,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.name",{"_index":1956,"title":{},"body":{"classes/Medication.html":{}}}],["this.nav2",{"_index":2607,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.newtest",{"_index":1546,"title":{},"body":{"components/Favorites.html":{}}}],["this.obs",{"_index":2089,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.obscount",{"_index":2637,"title":{},"body":{"components/TripleListComponent.html":{}}}],["this.observations",{"_index":2168,"title":{},"body":{"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["this.observations.concat(nextobservations",{"_index":2169,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.reverse",{"_index":2173,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.sort((n1",{"_index":2176,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observationselected.emit(this.selected",{"_index":2268,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.observationservice.getcheckedobservations",{"_index":2609,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.observationservice.loadobservationspage(url",{"_index":2230,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.observationservice.observations",{"_index":539,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.onloadcomplete",{"_index":1233,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["this.options",{"_index":1396,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.options.concat(option",{"_index":1397,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.parseddata",{"_index":117,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.passthrough.emit(this.patient",{"_index":2635,"title":{},"body":{"components/TripleListComponent.html":{}}}],["this.path",{"_index":860,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["this.patient",{"_index":742,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.patient.id",{"_index":2229,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.patientid",{"_index":2380,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.loadpatient().subscribe(patient",{"_index":1689,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{}}}],["this.patientservice.setpatientid(id",{"_index":1825,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.periods",{"_index":1955,"title":{},"body":{"classes/Medication.html":{}}}],["this.reason",{"_index":1497,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{}}}],["this.reconstructdataconditions(this.leveldata",{"_index":114,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdatafindings(this.leveldata",{"_index":116,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdataobservations(this.leveldata",{"_index":115,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.redirecturi",{"_index":2516,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.ref.nativeelement.contains(event.target",{"_index":1400,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.renderer.setelementstyle(this.el.nativeelement",{"_index":603,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["this.requestauth",{"_index":2483,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scope",{"_index":2517,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scratchpadconditions",{"_index":1227,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.addcareplan(plan",{"_index":812,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.addcondition(condition",{"_index":1313,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.addconditionstoscratchpad",{"_index":2613,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.addobservation(observation",{"_index":2266,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.addobservationtoscratchpad",{"_index":2614,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.buttonclicked(true",{"_index":1158,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.checkcareplan(checked",{"_index":834,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkcondition(checked",{"_index":1319,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapcareplans.get(careplan",{"_index":828,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.foreach((ischecked",{"_index":1310,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(c",{"_index":1044,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(condition",{"_index":1322,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.foreach((ischecked",{"_index":2265,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(o",{"_index":2178,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(observation",{"_index":2272,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkobservation(checked",{"_index":2273,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.conditions.length",{"_index":971,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.getcareplans",{"_index":749,"title":{},"body":{"components/CarePlanComponent.html":{}}}],["this.scratchpadservice.getconditions",{"_index":1268,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.getobservations",{"_index":2207,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.initconditions(this.conditions",{"_index":1263,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.observations.length",{"_index":972,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.removecondition(condition",{"_index":1312,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.switchtoscratchpad(false",{"_index":2617,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.switchtoscratchpad(true",{"_index":2616,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.indexof(this.conditions[value",{"_index":1149,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.push(this.conditions[value",{"_index":1147,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.splice(temp",{"_index":1157,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.totalcareplans",{"_index":824,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.totalobservations",{"_index":2269,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.selected",{"_index":741,"title":{},"body":{"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selected.id",{"_index":827,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selectedcondition",{"_index":2334,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectpatientbyid(data['patient",{"_index":1824,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectpatientbyid(this.patientservice.patientid",{"_index":1821,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.settings",{"_index":291,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.push(setting",{"_index":288,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.splice(this.settings.indexof(setting",{"_index":289,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.smartservice.authenticate().subscribe(data",{"_index":1822,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.state",{"_index":2508,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.status",{"_index":2404,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.subscription",{"_index":737,"title":{},"body":{"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.timeouthandle",{"_index":1863,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.token",{"_index":1572,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.tokenurl",{"_index":2479,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.toolbarservice.leftposition",{"_index":2620,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.toolbarservice.topposition",{"_index":2623,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.top",{"_index":1405,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.totaldata",{"_index":1623,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.trendsservice.charts",{"_index":1707,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.trendsservice.getdaterange(chart",{"_index":1710,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.uniqueobservations.length",{"_index":2174,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservations.push(observation",{"_index":2189,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservationsloadfinished",{"_index":2175,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.viewconditionlist",{"_index":1127,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.viewtoggle",{"_index":1126,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.visible",{"_index":1410,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this['code']['coding'][0]['code",{"_index":2048,"title":{},"body":{"classes/Observation.html":{}}}],["thismodel",{"_index":1465,"title":{},"body":{"injectables/DoctorService.html":{}}}],["though",{"_index":2831,"title":{},"body":{"index.html":{}}}],["three",{"_index":632,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{}}}],["throat",{"_index":2161,"title":{},"body":{"injectables/ObservationService.html":{}}}],["through",{"_index":1032,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["throw",{"_index":1153,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tied",{"_index":1425,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["time",{"_index":307,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/SmartService.html":{}}}],["timeframe",{"_index":314,"title":{},"body":{"components/AccountComponent.html":{}}}],["timeline",{"_index":228,"title":{"classes/Timeline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["timeline.html",{"_index":2538,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timeline_popup.html",{"_index":2557,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["timelinecomponent",{"_index":225,"title":{"components/TimelineComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinepopupcomponent",{"_index":227,"title":{"components/TimelinePopupComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelines",{"_index":2537,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timelines'},{'name",{"_index":226,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["timeouthandle",{"_index":1832,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["times",{"_index":2010,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["timesinceconditiononset",{"_index":1250,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["timesinceobservation",{"_index":2180,"title":{},"body":{"injectables/ObservationService.html":{}}}],["title",{"_index":684,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["tmp",{"_index":2523,"title":{},"body":{"injectables/SmartService.html":{}}}],["tmp[0",{"_index":2526,"title":{},"body":{"injectables/SmartService.html":{}}}],["today's",{"_index":1714,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["todo",{"_index":529,"title":{},"body":{"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["toggle",{"_index":329,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["toggleconfigmode",{"_index":253,"title":{},"body":{"components/AccountComponent.html":{}}}],["toggleexpansion",{"_index":1069,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["togglefinalnote",{"_index":1996,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["toggleprogressnote",{"_index":1997,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["togglesidenote",{"_index":1998,"title":{},"body":{"components/NoteNavigationComponent.html":{}}}],["toggling",{"_index":1133,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tok",{"_index":2474,"title":{},"body":{"injectables/SmartService.html":{}}}],["token",{"_index":1553,"title":{},"body":{"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["token_url",{"_index":2496,"title":{},"body":{"injectables/SmartService.html":{}}}],["tokenurl",{"_index":2428,"title":{},"body":{"injectables/SmartService.html":{}}}],["tool",{"_index":537,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["toolbar",{"_index":2585,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":231,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["toolbar.html",{"_index":2586,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":230,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolbarservice",{"_index":394,"title":{"injectables/ToolBarService.html":{}},"body":{"modules/AppModule.html":{},"components/Favorites.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":1189,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["top",{"_index":1351,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{}}}],["topoffset",{"_index":1833,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["topposition",{"_index":2581,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["total",{"_index":263,"title":{},"body":{"components/AccountComponent.html":{}}}],["totalconditions",{"_index":1262,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["totalcount",{"_index":2193,"title":{},"body":{"injectables/ObservationService.html":{}}}],["totaldata",{"_index":1591,"title":{},"body":{"components/FormBuilder.html":{}}}],["track",{"_index":639,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["tracking",{"_index":534,"title":{},"body":{"injectables/AssociationService.html":{}}}],["transactions",{"_index":2713,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1884,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transform(value",{"_index":1885,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transition('void",{"_index":2604,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["trend",{"_index":312,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["trends",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"injectables/HistoricalTrendsService.html":{}}}],["trendsservice",{"_index":1659,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["trick",{"_index":2261,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["trigger('fadein",{"_index":2601,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["triggered",{"_index":1229,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["triglycerides",{"_index":266,"title":{},"body":{"components/AccountComponent.html":{}}}],["triplelist",{"_index":233,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist.html",{"_index":2626,"title":{},"body":{"components/TripleListComponent.html":{}}}],["triplelistcomponent",{"_index":232,"title":{"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":89,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["try",{"_index":1176,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ts",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["tslib",{"_index":2700,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":921,"title":{},"body":{"classes/Chart.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1836,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["typeof(x",{"_index":1845,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["typescript",{"_index":2702,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["typescript's",{"_index":2760,"title":{},"body":{"index.html":{}}}],["typescript/javascript",{"_index":801,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["typings",{"_index":2740,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1139,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ui:latest",{"_index":2830,"title":{},"body":{"index.html":{}}}],["unavailable",{"_index":532,"title":{},"body":{"injectables/AssociationService.html":{}}}],["uncheck",{"_index":838,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["unchecked",{"_index":1320,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{}}}],["unclicked",{"_index":831,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["undefined",{"_index":1466,"title":{},"body":{"injectables/DoctorService.html":{},"components/HoverBoxComponent.html":{}}}],["unintuitive",{"_index":2752,"title":{},"body":{"index.html":{}}}],["uniqueobservations",{"_index":2096,"title":{},"body":{"injectables/ObservationService.html":{}}}],["uniqueobservationsloadfinished",{"_index":2097,"title":{},"body":{"injectables/ObservationService.html":{}}}],["unit",{"_index":2275,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["units",{"_index":2044,"title":{},"body":{"classes/Observation.html":{}}}],["unknown",{"_index":2328,"title":{},"body":{"components/PatientComponent.html":{}}}],["unless",{"_index":2843,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":1429,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["until",{"_index":1028,"title":{},"body":{"injectables/ConditionService.html":{}}}],["update",{"_index":657,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["update'},{'name",{"_index":221,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["update.component",{"_index":1636,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["update.component.ts",{"_index":2391,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["update.component.ts:11",{"_index":2400,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:12",{"_index":2402,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:13",{"_index":2401,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:15",{"_index":2396,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:19",{"_index":2398,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:9",{"_index":2395,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.html",{"_index":2393,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["updateposition",{"_index":2591,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updateposition(ref",{"_index":2598,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updatescratchpad",{"_index":1070,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["updateservice",{"_index":616,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["updatetotal",{"_index":2628,"title":{},"body":{"components/TripleListComponent.html":{}}}],["updatetotal(event",{"_index":2633,"title":{},"body":{"components/TripleListComponent.html":{}}}],["upon",{"_index":1394,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["upper",{"_index":2070,"title":{},"body":{"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{}}}],["uri",{"_index":699,"title":{},"body":{"classes/CarePlan.html":{}}}],["uris",{"_index":2472,"title":{},"body":{"injectables/SmartService.html":{}}}],["url",{"_index":677,"title":{},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{}}}],["urlencoded",{"_index":2501,"title":{},"body":{"injectables/SmartService.html":{}}}],["usage",{"_index":887,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ContextMenuComponent.html":{}}}],["use",{"_index":1223,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"classes/Observation.html":{},"index.html":{}}}],["used",{"_index":98,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{}}}],["user",{"_index":1398,"title":{"classes/User.html":{}},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["userid",{"_index":1596,"title":{},"body":{"components/FormBuilder.html":{}}}],["userselected",{"_index":701,"title":{},"body":{"classes/CarePlan.html":{}}}],["uses",{"_index":121,"title":{},"body":{"components/AccordionRecursion.html":{},"components/FormBuilder.html":{}}}],["using",{"_index":1134,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"index.html":{}}}],["utility",{"_index":120,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["val",{"_index":2553,"title":{},"body":{"components/TimelineComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationRecursive.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/variables.html":{}}}],["valuecodeableconcept",{"_index":2016,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["valuequantity",{"_index":2017,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["values",{"_index":325,"title":{},"body":{"components/AccountComponent.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["var",{"_index":138,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AddObservation.html":{},"components/AppComponent.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/DoctorNoteComponent.html":{},"injectables/EncounterService.html":{},"components/Favorites.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NewCondition.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["variable",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1615,"title":{"miscellaneous/variables.html":{}},"body":{"components/FormBuilder.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verificationstatus",{"_index":980,"title":{},"body":{"classes/Condition.html":{}}}],["version",{"_index":700,"title":{},"body":{"classes/CarePlan.html":{},"index.html":{}}}],["very",{"_index":2784,"title":{},"body":{"index.html":{}}}],["via",{"_index":2725,"title":{},"body":{"index.html":{}}}],["view",{"_index":794,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["viewchild",{"_index":787,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["viewchild('hover",{"_index":2316,"title":{},"body":{"components/PatientComponent.html":{}}}],["viewchild('hoverbox",{"_index":2565,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["viewchild('menu",{"_index":784,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["viewchildren",{"_index":1612,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewchildren('form",{"_index":1608,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewer",{"_index":2708,"title":{},"body":{"index.html":{}}}],["views",{"_index":2615,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewtoggle",{"_index":1061,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["visible",{"_index":1352,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["visiblities",{"_index":1449,"title":{},"body":{"injectables/DoctorService.html":{}}}],["visit",{"_index":2347,"title":{},"body":{"components/PatientComponent.html":{},"index.html":{}}}],["vitals",{"_index":2145,"title":{},"body":{"injectables/ObservationService.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanComponent.html":{},"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/Favorites.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/NoteNavigationComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["waiting",{"_index":1857,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["want",{"_index":1468,"title":{},"body":{"injectables/DoctorService.html":{},"index.html":{}}}],["way",{"_index":1260,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/SmartService.html":{}}}],["web",{"_index":2824,"title":{},"body":{"index.html":{}}}],["weight",{"_index":339,"title":{},"body":{"components/AddObservation.html":{},"components/DoctorNoteComponent.html":{},"injectables/ObservationService.html":{}}}],["west",{"_index":522,"title":{},"body":{"injectables/AssociationService.html":{}}}],["whatever",{"_index":2042,"title":{},"body":{"classes/Observation.html":{}}}],["whenever",{"_index":829,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ObservationRecursive.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["whenver",{"_index":821,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ToolbarComponent.html":{}}}],["wherever",{"_index":1382,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["whether",{"_index":789,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["wicked",{"_index":2821,"title":{},"body":{"index.html":{}}}],["width",{"_index":604,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/HistoricalTrendsComponent.html":{}}}],["window",{"_index":649,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerheight",{"_index":646,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerwidth",{"_index":1872,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["window.location.href",{"_index":2521,"title":{},"body":{"injectables/SmartService.html":{}}}],["wipes",{"_index":1452,"title":{},"body":{"injectables/DoctorService.html":{}}}],["withauth",{"_index":1561,"title":{},"body":{"injectables/FhirService.html":{}}}],["within",{"_index":1305,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["without",{"_index":1390,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["work",{"_index":669,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["write",{"_index":2775,"title":{},"body":{"index.html":{}}}],["writing",{"_index":2783,"title":{},"body":{"index.html":{}}}],["www",{"_index":2500,"title":{},"body":{"injectables/SmartService.html":{}}}],["x",{"_index":1092,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["y",{"_index":916,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["year",{"_index":1726,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years",{"_index":1671,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years').todate",{"_index":1717,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["you're",{"_index":2847,"title":{},"body":{"index.html":{}}}],["you've",{"_index":2816,"title":{},"body":{"index.html":{}}}],["yscalemax",{"_index":900,"title":{},"body":{"classes/Chart.html":{}}}],["yscalemin",{"_index":901,"title":{},"body":{"classes/Chart.html":{}}}],["yyyy').tostring",{"_index":2571,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["zone.js",{"_index":2704,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccordionRecursion.html":{"url":"components/AccordionRecursion.html","title":"component - AccordionRecursion","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionRecursion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/accordionRecursion/accordionRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                accordionRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./accordionRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFinished\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                reconstructDataConditions\n                            \n                            \n                                reconstructDataFindings\n                            \n                            \n                                reconstructDataObservations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnNum\n                            \n                            \n                                firstIteration\n                            \n                            \n                                levelData\n                            \n                            \n                                levelNum\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstIteration\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesConditions\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataConditions\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataFindings\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataFindings(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataObservations\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataObservations(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output } from '@angular/core';\nimport { ObservationService } from '../../services/observation.service';\n\n@Component({\n    selector: 'accordionRecursion',\n    templateUrl: './accordionRecursion.html'\n})\nexport class AccordionRecursion {\n\n    /* This component takes in the data at the current level of the accordion structure:\n    Note that the structure of the data should be as follows:\n        {[\n            category: string,\n            subheading: boolean,\n            subs: [array of the same 4 headings here] // null if subheadings is false\n            data: [array of the list of conditions for that level] // null if subheadings is true\n        ]}\n    */\n    @Input() levelData: any;\n\n    // This is the type of the column (conditions: 0, observations: 1, or care plans: 2)\n    @Input() columnNum: number;\n\n    // This is the current level of recursion (used for the display)\n    @Input() levelNum: number;\n\n    // for testing purposes\n    @Input() firstIteration: number;\n\n    // Parsed data according to the above data schema \n    parsedData: any;\n    loadFinished: boolean = false;\n\n    // ===============================================================================================================================================\n    // ================================================================== EVENT METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    constructor(private observationService: ObservationService) { }\n\n    // When the component is first initialized\n    ngOnChanges() {\n        if (this.firstIteration == 1) {\n            // reconstruct the data for now\n            if (this.columnNum == 0)\n                this.reconstructDataConditions(this.levelData);\n            else if (this.columnNum == 1) {\n                this.reconstructDataObservations(this.levelData);\n            }\n            else if (this.columnNum == 2)\n                this.reconstructDataFindings(this.levelData);\n        } else {\n            this.parsedData = this.levelData;\n        }\n\n        this.loadFinished = true;\n    }\n\n    // ===============================================================================================================================================\n    // ================================================================== UTILITY METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    // NOTE: The current component uses this function to rebuild the data into correct structure, but in practice, this function should not be used\n    // since the data should already in the correct model format (described above levelData)\n    reconstructDataConditions(arrData: any) {\n        this.parsedData = this.addCategoriesConditions(arrData);\n    }\n\n    addCategoriesConditions(arrData: any) {\n        // For conditions, there are guaranteed to be 5 different columns; for now, just filter by active/inactive\n\n        // data sieve\n        var dataFilter =\n        {\n            'Chief Complaint': [],\n            'Active Problems': [],\n            'Inactive Problems': [],\n            'Allergies/Precautions': [],\n            'Preventions/Exposures': []\n        };\n\n        // Filter each condition into a category based on the data\n        for (var i = 0; i \n    \n\n    \n        \n\n  \n    \n        {{cat.category}} ({{cat.data?.length}})\n    \n    \n      \n        \n          \n        \n        \n          \n        \n            \n          \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{cat.category}} ({{cat.data?.length}})                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionRecursion'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/account.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                account\n            \n\n\n\n\n            \n                templateUrl\n                ./account.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cholesteralBattery\n                            \n                            \n                                electrolytes\n                            \n                            \n                                kidneyFunction\n                            \n                            \n                                liverFunction\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSetting\n                            \n                            \n                                saveSettings\n                            \n                            \n                                toggleConfigMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSetting\n                        \n                        \n                    \n                \n            \n            \n                \naddSetting(checked: boolean, setting: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveSettings\n                        \n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleConfigMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleConfigMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cholesteralBattery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            electrolytes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kidneyFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Creatinine\", \"GFR\", \"BUN\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            liverFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\n\n@Component({\n  selector: 'account',\n  templateUrl: './account.html',\n})\nexport class AccountComponent {\n  settings: Array = [];\n  electrolytes: Array = [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"];\n  cholesteralBattery: Array = [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"];\n  liverFunction: Array = [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"];\n  kidneyFunction: Array = [\"Creatinine\", \"GFR\", \"BUN\"];\n\n  constructor(private doctorService: DoctorService) { }\n\n  addSetting(checked: boolean, setting: string) {\n    if (checked) {\n      this.settings.push(setting);\n    }\n    else {\n      this.settings.splice(this.settings.indexOf(setting), 1);\n    }\n  }\n\n  saveSettings() {\n    this.doctorService.filter = this.settings;\n    this.doctorService.addGraphConfig(this.settings);\n    console.log(\"saved\");\n  }\n\n  toggleConfigMode() {\n    if (this.doctorService.configMode == true) {\n      this.doctorService.configMode = false;\n    }\n    else {\n      this.doctorService.configMode = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  .paddedtd {\n    padding:10px 0;\n  }\n  .paddedtable {\n    border-collapse: separate;\n    border-spacing: 10px 0;\n  }\n\n\n  \n    \n      \n         John Smith\n        \n          GeneralChange password\n          Event Timeline\n          Time Scale:\n            Linear\n            Logarithmic\n          \n          Historical Trend\n          Initial Timeframe:\n          \n            6 month\n            12 month\n            18 month\n          \n          Problem List\n          \n            \n              \n                \n              \n              Active Problems\n              \n                \n              \n              Allergies\n            \n            \n              \n                \n              \n              Inactive Problems\n              \n                \n              \n              Activities Due\n            \n          \n          Findings List\n          \n            \n              \n                \n              \n              Abnormal Values\n              \n                \n              \n              All Values\n            \n            \n              \n                \n              \n              No Values\n              \n                \n              \n              Selected Values\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n                \n              \n            \n          \n          Save\n          Toggle Config Mode\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .paddedtd {    padding:10px 0;  }  .paddedtable {    border-collapse: separate;    border-spacing: 10px 0;  }                     John Smith                  GeneralChange password          Event Timeline          Time Scale:            Linear            Logarithmic                    Historical Trend          Initial Timeframe:                      6 month            12 month            18 month                    Problem List                                                                                Active Problems                                                          Allergies                                                                                  Inactive Problems                                                          Activities Due                                Findings List                                                                                Abnormal Values                                                          All Values                                                                                  No Values                                                          Selected Values                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                              Save          Toggle Config Mode                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddObservation.html":{"url":"components/AddObservation.html","title":"component - AddObservation","body":"\n                   \n\n\n\n\n\n  Components\n  AddObservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/addObservation/addObservation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                addObservation\n            \n\n\n\n\n            \n                templateUrl\n                ./addObservation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrayOfKeyValues\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/addObservation/addObservation.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arrayOfKeyValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{ name: 'height', code: '8302-2' }, { name: 'weight', code: '3141-9' }, { name: 'oxygen_saturation', code: '2710-2' }, { name: 'temperature', code: '8310-5' }, { name: 'bmi', code: '39156-5' }]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/addObservation/addObservation.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { name: '', code: \"1\" }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/addObservation/addObservation.component.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'addObservation',\n  templateUrl: './addObservation.html'\n})\nexport class AddObservation {\n  model = { name: '', code: \"1\" };\n  arrayOfKeyValues: any[] = [{ name: 'height', code: '8302-2' }, { name: 'weight', code: '3141-9' }, { name: 'oxygen_saturation', code: '2710-2' }, { name: 'temperature', code: '8310-5' }, { name: 'bmi', code: '39156-5' }];\n\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n      \n      \n        Finding:\n          \n        \n        code: {{model.code}}\n        Value:\n          \n        \n        submit\n      \n      \n        Close\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×                    Finding:                          code: {{model.code}}        Value:                          submit                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddObservation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllergyIntolerance.html":{"url":"classes/AllergyIntolerance.html","title":"class - AllergyIntolerance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllergyIntolerance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/allergyIntolerance.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AllergyIntolerance {\n    id: string;\n    code: {\n        text: string;\n    };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app/app.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app',\n  templateUrl: './app.html'\n})\nexport class AppComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      Toggle navigation   \n    \n    \n      \n         Home\n         Account\n         Sign Out\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Toggle navigation                          Home         Account         Sign Out            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAddObservation\n\nAddObservation\n\nAppModule -->\n\nAddObservation->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanComponent\n\nCarePlanComponent\n\nAppModule -->\n\nCarePlanComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nDoctorNoteComponent\n\nDoctorNoteComponent\n\nAppModule -->\n\nDoctorNoteComponent->AppModule\n\n\n\n\n\nFavorites\n\nFavorites\n\nAppModule -->\n\nFavorites->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nNewCondition\n\nNewCondition\n\nAppModule -->\n\nNewCondition->AppModule\n\n\n\n\n\nNoteNavigationComponent\n\nNoteNavigationComponent\n\nAppModule -->\n\nNoteNavigationComponent->AppModule\n\n\n\n\n\nObservationRecursive\n\nObservationRecursive\n\nAppModule -->\n\nObservationRecursive->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionRecursion\n                        \n                        \n                            AccountComponent\n                        \n                        \n                            AddObservation\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CarePlanComponent\n                        \n                        \n                            CarePlanDisplay\n                        \n                        \n                            ColumnStateSwitcherComponent\n                        \n                        \n                            ConditionsChartComponent\n                        \n                        \n                            ConditionsComponent\n                        \n                        \n                            ConditionsDisplay\n                        \n                        \n                            ContextMenuComponent\n                        \n                        \n                            DoctorNoteComponent\n                        \n                        \n                            Favorites\n                        \n                        \n                            FormBuilder\n                        \n                        \n                            HistoricalTrendsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HoverBoxComponent\n                        \n                        \n                            LoadingAnimation\n                        \n                        \n                            MedicationsComponent\n                        \n                        \n                            NewCondition\n                        \n                        \n                            NoteNavigationComponent\n                        \n                        \n                            ObservationRecursive\n                        \n                        \n                            ObservationRecursiveChart\n                        \n                        \n                            ObservationsComponent\n                        \n                        \n                            ObservationsDisplay\n                        \n                        \n                            PatientComponent\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelinePopupComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TripleListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AssociationService\n                        \n                        \n                            CarePlanService\n                        \n                        \n                            ConditionService\n                        \n                        \n                            DoctorService\n                        \n                        \n                            EncounterService\n                        \n                        \n                            FhirService\n                        \n                        \n                            HistoricalTrendsService\n                        \n                        \n                            MapService\n                        \n                        \n                            ObservationService\n                        \n                        \n                            PatientService\n                        \n                        \n                            ScratchPadService\n                        \n                        \n                            SmartService\n                        \n                        \n                            ToolBarService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormCreatorModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, enableProdMode } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// COMPONENT IMPORTS\nimport { AppComponent } from './app/components/app/app.component';\nimport { HomeComponent } from './app/components/home/home.component';\nimport { PatientComponent } from './app/components/patient/patient.component';\nimport { ConditionsComponent } from './app/components/conditions/conditions.component';\nimport { TimelineComponent } from './app/components/timeline/timeline.component';\nimport { TimelinePopupComponent } from './app/components/timeline_popup/timeline_popup.component';\nimport { ObservationsComponent } from './app/components/observations/observations.component';\nimport { CarePlanComponent } from './app/components/carePlan/carePlan.component';\nimport { HoverBoxComponent } from \"./app/components/hoverBox/hoverBox.component\";\nimport { LoadingAnimation } from './app/components/loadingAnimation/loadingAnimation.component';\nimport { DoctorNoteComponent } from './app/components/doctorNote/doctorNote.component';\nimport { AccountComponent } from './app/components/account/account.component';\nimport { ToolbarComponent } from './app/components/toolbar/toolbar.component';\nimport { TripleListComponent } from './app/components/tripleList/tripleList.component';\nimport { ObservationRecursive } from './app/components/observationRecursion/observationRecursion.component';\nimport { AddObservation } from './app/components/addObservation/addObservation.component';\nimport { Favorites } from './app/components/favorites/favorites.component';\nimport { ObservationRecursiveChart } from './app/components/observationRecursionChart/observationRecursionChart.component';\nimport { MedicationsComponent } from './app/components/medications/medications.component';\nimport { ConditionsChartComponent } from './app/components/conditionsChart/conditionsChart.component';\nimport { ColumnStateSwitcherComponent } from './app/components/columnStateSwitcher/columnStateSwitcher.component';\nimport { NewCondition } from './app/components/newCondition/newCondition.component';\nimport { FormBuilder } from './app/components/form-builder/form-builder.component'\nimport { ContextMenuComponent } from './app/components/contextMenu/contextMenu.component';\nimport { CarePlanDisplay } from './app/components/carePlanDisplay/carePlanDisplay.component';\nimport { NoteNavigationComponent } from './app/components/noteNavigation/noteNavigation.component';\nimport { AccordionRecursion } from './app/components/accordionRecursion/accordionRecursion.component';\nimport { ConditionsDisplay } from './app/components/conditionsDisplay/conditionsDisplay.component';\nimport { HistoricalTrendsComponent } from './app/components/historicalTrends/historicalTrends.component';\nimport { ObservationsDisplay } from './app/components/observationsDisplay/observationsDisplay.component';\n\n// SERVICE IMPORTS\nimport { CookieService } from 'ngx-cookie-service';\nimport { EncounterService } from './app/services/encounter.service';\nimport { FhirService } from './app/services/fhir.service';\nimport { PatientService } from './app/services/patient.service';\nimport { ConditionService } from './app/services/condition.service';\nimport { CarePlanService } from './app/services/carePlan.service';\nimport { ObservationService } from './app/services/observation.service';\nimport { MapService } from './app/services/map.service';\nimport { DoctorService } from './app/services/doctor.service';\nimport { SmartService } from './app/services/smart.service';\nimport { HistoricalTrendsService } from './app/services/historicalTrends.service';\nimport { ScratchPadService } from './app/services/scratchPad.service';\nimport { ToolBarService } from './app/services/toolbar.service';\nimport { AssociationService } from './app/services/association.service';\n\nimport { MomentModule } from 'ngx-moment';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n\nenableProdMode();\n\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormCreatorModule } from './app/modules/form.module';\n\nconst appRoutes: Routes = [\n  { path: 'account', component: AccountComponent },\n  { path: 'trends', component: HistoricalTrendsComponent },\n  { path: '', component: HomeComponent },\n  { path: '**', component: HomeComponent }\n]\nconst appRoutingProviders: any[] = [];\nconst routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n@NgModule({\n  imports: [\n    FormCreatorModule,\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    MomentModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  declarations: [ // Components and Directives\n    AppComponent,\n    HomeComponent,\n    PatientComponent,\n    AccordionRecursion,\n\n    // OBSERVATIONS COLUMN\n    ObservationsComponent,\n    ObservationsDisplay,\n\n    // CONDITIONS COLUMN\n    ConditionsComponent,\n    ConditionsDisplay,\n\n    // CAREPLAN COLUMN\n    CarePlanComponent,\n    CarePlanDisplay,\n    MedicationsComponent,\n\n    TimelineComponent,\n    TimelinePopupComponent,\n    LoadingAnimation,\n    FormBuilder,\n    AccountComponent,\n    DoctorNoteComponent,\n    ToolbarComponent,\n    TripleListComponent,\n    ObservationRecursive,\n    AddObservation,\n    Favorites,\n    ObservationRecursiveChart,\n    ConditionsChartComponent,\n    ColumnStateSwitcherComponent,\n    NewCondition,\n    ContextMenuComponent,\n    NoteNavigationComponent,\n    HoverBoxComponent,\n    HistoricalTrendsComponent,\n  ],\n  providers: [ // Services\n    appRoutingProviders,\n    CookieService,\n    EncounterService,\n    FhirService,\n    PatientService,\n    ObservationService,\n    ConditionService,\n    MapService,\n    DoctorService,\n    SmartService,\n    CarePlanService,\n    HistoricalTrendsService,\n    ScratchPadService,\n    ToolBarService,\n    AssociationService,\n  ],\n  bootstrap: [AppComponent] // Root Component\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Associable.html":{"url":"interfaces/Associable.html","title":"interface - Associable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Associable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/associable.model.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface Associable {\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associatedMapConditions\n                            \n                            \n                                associatedMapObservations\n                            \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractConditionInfo\n                            \n                            \n                                    Private\n                                extractObservationInfo\n                            \n                            \n                                    Private\n                                getAssociations\n                            \n                            \n                                runAssociationsTool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, conditionService: ConditionService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractConditionInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractConditionInfo(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; onsetDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractObservationInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractObservationInfo(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; effectiveDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAssociations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssociations(checkedConditions: Array, checkedObservations: Array, conditions: Array, observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool(checkedConditions: Array, checkedObservations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConditionService } from './condition.service';\nimport { ObservationService } from './observation.service';\n\nimport { Condition } from '../models/condition.model';\nimport { Observation } from '../models/observation.model';\n\n@Injectable()\nexport class AssociationService {\n    // TODO: This endpoint is currently unavailable\n    private path = 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items';\n\n    // Maps for tracking which conditions and observations\n    // are currently associated (according to the associations tool)\n    associatedMapConditions: Map = new Map();\n    associatedMapObservations: Map = new Map();\n\n    constructor(\n        private http: HttpClient,\n        private conditionService: ConditionService,\n        private observationService: ObservationService\n    ) { }\n\n    runAssociationsTool(checkedConditions: Array, checkedObservations: Array) {\n        let conditions = this.conditionService.conditions;\n        let observations = this.observationService.observations;\n\n        this.getAssociations(\n            checkedConditions,\n            checkedObservations,\n            conditions,\n            observations\n        ).subscribe(res => {\n            // Clear prior associations\n            this.associatedMapConditions.clear();\n            this.associatedMapObservations.clear();\n\n            // Extract associations API response\n            let associatedConditions = res['selectedConditions'];\n            let associatedObservations = res['selectedObservations'];\n\n            // Mark associated conditions as such\n            for (let a of associatedConditions) {\n                for (let c of conditions) {\n                    if (this.extractConditionInfo(c)['code'] == a['code']) {\n                        this.associatedMapConditions.set(c, true);\n                    }\n                }\n            }\n\n            // Mark associated observations as such\n            for (let a of associatedObservations) {\n                for (let o of observations) {\n                    if (this.extractObservationInfo(o)['code'] == a['code']) {\n                        this.associatedMapObservations.set(o, true);\n                    }\n                }\n            }\n        });\n    }\n\n    private getAssociations(\n        checkedConditions: Array,\n        checkedObservations: Array,\n        conditions: Array,\n        observations: Array,\n    ) {\n        // Extract relevant fields from checked conditions and observations\n        let checkedConditionsInfo = checkedConditions.map(this.extractConditionInfo);\n        let checkedObservationsInfo = checkedObservations.map(this.extractObservationInfo);\n\n        // Extract relevant fields from all conditions and observations\n        let conditionsInfo = conditions.map(this.extractConditionInfo);\n        let observationsInfo = observations.map(this.extractObservationInfo);\n\n        // Call associations API endpoint\n        return this.http.post(this.path, {\n            selectedConditions: checkedConditionsInfo,\n            selectedObservations: checkedObservationsInfo,\n            conditions: conditionsInfo,\n            observations: observationsInfo,\n        });\n    }\n\n    // Extract the code, coding system, and onset datetime from a condition\n    private extractConditionInfo(condition: Condition) {\n        return {\n            code: condition['code']['coding'][0]['code'],\n            system: condition['code']['coding'][0]['system'],\n            onsetDateTime: condition['onsetDateTime'],\n        }\n    }\n\n    // Extract the code, coding system, and effective datetime from an observation\n    private extractObservationInfo(observation: Observation) {\n        return {\n            code: observation['code']['coding'][0]['code'],\n            system: observation['code']['coding'][0]['system'],\n            effectiveDateTime: observation['effectiveDateTime'],\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutoGrowDirective.html":{"url":"directives/AutoGrowDirective.html","title":"directive - AutoGrowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AutoGrowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/auto-grow.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [autoGrow]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/auto-grow.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFocus\n                        \n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer} from '@angular/core';\n\n@Directive({\n\tselector: '[autoGrow]',\n\thost: {\n\t\t'(focus)': 'onFocus()',\n\t\t'(blur)': 'onBlur()'\n\t}\n})\nexport class AutoGrowDirective {\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t}\n\n\tonFocus() {\n\t\t// console.log('focus!');\n\t\tthis.renderer.setElementStyle(this.el.nativeElement, 'width', '200px');\n\t}\n\t onBlur() {\n\t\t//  console.log('blur');\n\t\t this.renderer.setElementStyle(this.el.nativeElement, 'width', '120px');\n\t }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseColumn.html":{"url":"classes/BaseColumn.html","title":"class - BaseColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/baseColumn.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/baseColumn.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:36\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/*\nSuper class of all three columns in the application. Provides\nfunctionality for dynamic resizing, and keeps track of which\nstate the column is currently in (ie, scratch pad or default).\n*/\nexport class BaseColumn {\n  constructor() {\n    // Set the initial height of the column.\n    this.columnHeight = window.innerHeight - this.HEIGHT_OFFSET;\n\n    // Resize the column on each window resize event.\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(100)) // Debounce to prevent excessive resizing.\n      .subscribe((event) => {\n        this.handleResize(event);\n    });\n  }\n\n  // Update the height of the column.\n  handleResize(event) {\n    this.columnHeight = event.target.innerHeight - this.HEIGHT_OFFSET;\n  }\n\n  // Can be overriden in the child class to handle switching between states.\n  showDefault() { }\n  showScratchPad() { }\n  updateService() { }\n\n  // The current height (in pixels) of the column.\n  columnHeight: number;\n\n  // 220px is an approximate value that seems to work for now.\n  HEIGHT_OFFSET: number = 180;\n\n  // The current state (ie, scratch pad) of the column.\n  columnState: string = \"default\";\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bundle.html":{"url":"classes/Bundle.html","title":"class - Bundle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bundle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                link\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CarePlan.html":{"url":"classes/CarePlan.html","title":"class - CarePlan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CarePlan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/carePlan.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class CarePlan implements Associable {\n    id: string;\n    title: string;\n    status: string;\n    description: string;\n\n\n    period: {\n        start: Date;\n        end: Date;\n    }\n\n    activity: {\n        detail: {\n            status: string;\n            dailyAmount: {\n                value: number;\n                system: string;\n                code: string;\n            }\n            product: {\n                productCodableConcept: {\n                    coding: {\n                        // URI\n                        system: string;\n                        version: string;\n                        code: string;\n                        display: string;\n                        userSelected: boolean;\n                    }[],\n                    text: string;\n                }\n                productReference: {\n                    reference: string;\n                    type: string;\n                    display: string;\n                }\n            }\n        }\n    }[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanComponent.html":{"url":"components/CarePlanComponent.html","title":"component - CarePlanComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlan/carePlan.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                carePlan\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlan.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carePlanLoadFinished\n                            \n                            \n                                carePlans\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCarePlans\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, carePlanService: CarePlanService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlan/carePlan.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCarePlans()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlan/carePlan.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlan/carePlan.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlanLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlans\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlan/carePlan.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { CarePlan } from '../../models/carePlan.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'carePlan',\n  templateUrl: './carePlan.html'\n})\nexport class CarePlanComponent extends BaseColumn {\n\n  selected: CarePlan;\n  carePlans: Array;\n  \n  // check for load finished\n  carePlanLoadFinished: boolean = false;\n\n  // for column switching\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n\n  constructor(private fhirService: FhirService, private carePlanService: CarePlanService, private scratchPadService: ScratchPadService) {\n    super();\n\n    // subscribe to scratch pad service for column switching\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.carePlanService.loadCarePlans(this.patient).subscribe(carePlans => {\n        this.carePlans = carePlans;\n        this.carePlanLoadFinished = true;\n        console.log(\"Loaded \" + carePlans.length + \" care plans.\");\n      });\n    }\n  }\n\n  // get the scratch pad stuff for care plans\n  getScratchPadCarePlans() {\n    return this.scratchPadService.getCarePlans();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Care Plans\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Care Plans                                                                                            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanDisplay.html":{"url":"components/CarePlanDisplay.html","title":"component - CarePlanDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                careplanDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlanDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllCarePlans\n                            \n                            \n                                checkCarePlan\n                            \n                            \n                                checkClicked\n                            \n                            \n                                expand\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectCarePlan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                carePlans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                careplanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        carePlans\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        careplanSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllCarePlans(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCarePlan(checked: boolean, checkedCarePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedCarePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncheckClicked(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \nselectCarePlan(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { CarePlan } from '../../models/carePlan.model';\n\n@Component({\n  selector: 'careplanDisplay',\n  templateUrl: './carePlanDisplay.html'\n})\nexport class CarePlanDisplay {\n  // The currently selected careplan in the list.\n  selected: CarePlan;\n\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of careplans to be displayed\n  @Input() carePlans: Array;\n  @Output() careplanSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu !: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(private scratchPadService: ScratchPadService) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking careplans.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function (plan) {\n        this.scratchPadService.addCarePlan(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  //whenver a line is selected\n  selectCarePlan(carePlan: CarePlan) {\n    this.selected = carePlan;\n    this.careplanSelected.emit(this.selected);\n    for (let c of this.scratchPadService.totalCareplans) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  checkClicked(carePlan: CarePlan) {\n    if (this.scratchPadService.checkedMapCareplans.get(carePlan)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkCarePlan(checked: boolean, checkedCarePlan: CarePlan) {\n    this.scratchPadService.checkCarePlan(checked, checkedCarePlan);\n  }\n\n  expand(parent: string) {\n    /*\n    for (let c of this.carePlans) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n\n  // Check or uncheck all conditions.\n  checkAllCarePlans(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let carePlan of this.carePlans) {\n      this.scratchPadService.checkCarePlan(checked, carePlan);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      Description\n      Start\n      End\n    \n  \n  \n     \n      \n        \n      \n      {{cP['title']}}\n      {{cP.period.start}}\n      {{cP.period.end}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Description      Start      End                                       {{cP[\\'title\\']}}      {{cP.period.start}}      {{cP.period.end}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarePlanService.html":{"url":"injectables/CarePlanService.html","title":"injectable - CarePlanService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CarePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/carePlan.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCarePlans\n                            \n                            \n                                loadMedications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \nloadCarePlans(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMedications\n                        \n                        \n                    \n                \n            \n            \n                \nloadMedications(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/CarePlan'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Patient } from '../models/patient.model';\nimport { CarePlan } from '../models/carePlan.model';\nimport { Medication } from '../models/medication.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class CarePlanService {\n  private path = '/CarePlan';\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient\n  ) { }\n\n  // Retrieve care plans for a given patient\n  loadCarePlans(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no care plans, so return an empty array\n          return new Array();\n        }\n      }));\n  }\n\n  // Retrieve medications for a given patient.\n  // If a given medication is taken over multiple periods, it is merged into one.\n  loadMedications(patient: Patient): Observable> {\n    return this.loadCarePlans(patient).pipe(map(carePlans => {\n      let medicationMap: Map = new Map();\n\n      for (let cp of carePlans) {\n        let dosageUnits = cp.activity[0].detail.dailyAmount.code;\n\n        // Retrieve the existing medication, or create it if it does not yet exist.\n        let med: Medication = medicationMap.get(cp.title) || new Medication(cp.title, dosageUnits);\n\n        // Add a period of usage to the medication.\n        med.periods.push({\n          start: new Date(cp.period.start),\n          end: new Date(cp.period.end),\n          dosage: cp.activity[0].detail.dailyAmount.value\n        });\n\n        medicationMap.set(cp.title, med);\n      }\n\n      return Array.from(medicationMap.values());\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chart.html":{"url":"classes/Chart.html","title":"class - Chart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chart.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                dashedLines\n                            \n                            \n                                data\n                            \n                            \n                                lineChartData\n                            \n                            \n                                normalValues\n                            \n                            \n                                title\n                            \n                            \n                                yScaleMax\n                            \n                            \n                                yScaleMin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashedLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Chart {\n  title: string;\n  code: string;\n  dashedLines: boolean;\n\n  // An array of data points associated with the chart.\n  data: {\n    value: number;\n    name: any;\n  }[] = [];\n\n  // Stores the chart in the format expected for line charts by NGX-Charts.\n  lineChartData: {\n    name: any;\n    series: {\n      value: number;\n      name: any;\n    }[];\n  }[];\n\n  // The minimum and maximum Y-axis values to be displayed on the chart.\n  yScaleMin: number;\n  yScaleMax: number;\n\n  // Used to display horizontal \"reference\" lines in the NGX-Charts line chart.\n  // Generally an array of two elements (the low and high values).\n  normalValues: {\n    name: string;\n    value: number;\n  }[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxInline.html":{"url":"components/CheckboxInline.html","title":"component - CheckboxInline","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxInline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/checkbox-inline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                checkbox-inline\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-inline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxData\n                            \n                            \n                                combinedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkboxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"checkbox-inline\",\n\ttemplateUrl: \"./checkbox-inline.html\"\n})\n\nexport class CheckboxInline{\n\t@Input() inputData: any;\n\tcheckboxData : boolean[] = [];\n\tcombinedData: String[] = [];\n\t\n\tngOnInit(){\n\t\t// initialize the checkboxes all to false\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n      \n       {{entry.description}} \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}                    {{entry.description}}           '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxInline'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/client.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class Client {\n\tid: string;\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColumnStateSwitcherComponent.html":{"url":"components/ColumnStateSwitcherComponent.html","title":"component - ColumnStateSwitcherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColumnStateSwitcherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n\n\n    \n        Description\n    \n    \n        Allows for switching between the three states of each column.\nThe three possible states are: Default, Note Pad, and Scratch Pad.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                columnStateSwitcher\n            \n\n\n\n\n            \n                templateUrl\n                ./columnStateSwitcher.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCount\n                            \n                            \n                                switchToDefault\n                            \n                            \n                                switchToScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                columnType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         BaseColumn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToDefault\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { BaseColumn } from '../baseColumn';\n\n/**\n * Allows for switching between the three states of each column.\n * The three possible states are: Default, Note Pad, and Scratch Pad.\n */\n@Component({\n  selector: 'columnStateSwitcher',\n  templateUrl: './columnStateSwitcher.html'\n})\nexport class ColumnStateSwitcherComponent {\n  @Input() column: BaseColumn;\n  // The type of the column in which the switcher is used.\n  // For example, 'conditions', 'observations', or 'careplans'.\n  @Input() columnType: string;\n\n  constructor (private scratchPadService: ScratchPadService) { }\n\n  // Switch back to the default view of the column.\n  switchToDefault() {\n    if (this.column != null) {\n      this.column.columnState = 'default';\n      this.column.updateService(); // Update the service to store correct column state\n      this.column.showDefault();\n    }\n  }\n\n  // Switch to the scratch pad view of the column.\n  switchToScratchPad() {\n    if (this.column != null) {\n      this.column.columnState = 'scratchpad';\n      this.column.updateService(); // Update the service to store correct column state\n      this.column.showScratchPad();\n    }\n  }\n\n  // Return the number of elements in the scratch pad of the column.\n  getScratchPadCount() {\n    if (this.columnType == 'conditions') {\n      return this.scratchPadService.conditions.length;\n    } else if (this.columnType == 'observations') {\n      return this.scratchPadService.observations.length;\n    } else if (this.columnType == 'careplans') {\n      // TODO: Implement once scratch pad is finished for careplans.\n      return 0;\n    }\n\n    return 0;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ getScratchPadCount() }}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ getScratchPadCount() }}  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColumnStateSwitcherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condition.html":{"url":"classes/Condition.html","title":"class - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/condition.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clinicalStatus\n                            \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                isParent\n                            \n                            \n                                isVisible\n                            \n                            \n                                onsetDateTime\n                            \n                            \n                                parent\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                verificationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clinicalStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onsetDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verificationStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Condition implements Associable {\n    id: string;\n    onsetDateTime: string;\n    relativeDateTime: string;\n    verificationStatus: string;\n    clinicalStatus: string;\n    isVisible: boolean;\n    isParent: boolean;\n    parent: string;\n\tcode: {\n        coding: [{code: string, display: string, system: string}],\n        text: string\n    };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConditionService.html":{"url":"injectables/ConditionService.html","title":"injectable - ConditionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConditionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/condition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnState\n                            \n                            \n                                conditions\n                            \n                            \n                                conditionsCache\n                            \n                            \n                                    Private\n                                path\n                            \n                            \n                                selectedCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCheckedConditions\n                            \n                            \n                                getColumnState\n                            \n                            \n                                loadAllergies\n                            \n                            \n                                loadConditions\n                            \n                            \n                                loadConditionsPage\n                            \n                            \n                                setColumnState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnState\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         String\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \nloadAllergies(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditions\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditions(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditionsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditionsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setColumnState\n                        \n                        \n                    \n                \n            \n            \n                \nsetColumnState(newColumnState: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newColumnState\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionsCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Condition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of, concat } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Condition } from '../models/condition.model';\nimport { AllergyIntolerance } from '../models/allergyIntolerance.model';\n\n@Injectable()\nexport class ConditionService {\n  private path = '/Condition';\n\n  conditions: Array = [];\n  // The currently selected (highlighted) condition \n  selectedCondition: Condition = null;\n\n  conditionsCache = {};\n  columnState: String;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  // https://stackoverflow.com/questions/45594609/which-operator-to-chain-observables-conditionally\n  // Because the conditions are paginated in the API, we must continually\n  // load the next page until no pages remain. This is achieved through\n  // concatMap and Observable.concat, as discussed above.\n  loadConditionsPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        const conditions = >bundle.entry.map(r => r.resource);\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(conditions), this.loadConditionsPage(nextLink.url));\n        } else {\n          return of(conditions);\n        }\n      }));\n  }\n\n  // Retrieve conditions for a given patient\n  loadConditions(patient: Patient): Observable> {\n    var url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadConditionsPage(url);\n  }\n\n  getCheckedConditions() {\n    return this.conditions.filter(c => {\n      return this.scratchPadService.checkedMapConditions.get(c);\n    });\n  }\n\n  // Retrieve allergies for a given patient\n  loadAllergies(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + \"/AllergyIntolerance\" + \"?patient=\" + patient.id;\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no allergies\n          return new Array();\n        }\n      }));\n  }\n\n  // Gets the state of the conditions column (default or scratch pad)\n  getColumnState(): String {\n    return this.columnState;\n  }\n\n  // Let the service know that the column state has changed\n  setColumnState(newColumnState: String): void {\n    this.columnState = newColumnState;\n  }\n\n  // TODO: Cache API calls into data structures that last for the duration of a session \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsChartComponent.html":{"url":"components/ConditionsChartComponent.html","title":"component - ConditionsChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsChart/conditionsChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsChart\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collapseQueue\n                            \n                            \n                                conditionGrouping\n                            \n                            \n                                conditionGroupingName\n                            \n                            \n                                conditions\n                            \n                            \n                                selected\n                            \n                            \n                                textInputForEdit\n                            \n                            \n                                viewToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ellipsesToggle\n                            \n                            \n                                expand\n                            \n                            \n                                groupConditions\n                            \n                            \n                                loadFinished\n                            \n                            \n                                newTable\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                scratchPadCheckBoxes\n                            \n                            \n                                selectCondition\n                            \n                            \n                                sortCondition\n                            \n                            \n                                tableNavigation\n                            \n                            \n                                toggleExpansion\n                            \n                            \n                                updateScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ellipsesToggle\n                        \n                        \n                    \n                \n            \n            \n                \nellipsesToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            groupConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngroupConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadFinished\n                        \n                        \n                    \n                \n            \n            \n                \nloadFinished()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newTable\n                        \n                        \n                    \n                \n            \n            \n                \nnewTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLocation\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scratchPadCheckBoxes\n                        \n                        \n                    \n                \n            \n            \n                \nscratchPadCheckBoxes(checked: boolean, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsortCondition(x: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tableNavigation\n                        \n                        \n                    \n                \n            \n            \n                \ntableNavigation(clickedSet: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clickedSet\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleExpansion\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapseQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGroupingName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Active\", \"Inactive\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInputForEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'conditionsChart',\n  templateUrl: './conditionsChart.html'\n})\nexport class ConditionsChartComponent {\n  selected: Condition;\n  conditions: Array = [];\n  viewToggle: boolean = false;\n  collapseQueue: Array = [];\n  conditionGrouping: Array = [];\n  conditionGroupingName: Array = [\"Active\", \"Inactive\"];\n  textInputForEdit: String;\n\n  @Input() patient: Patient;\n\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  constructor(\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = conditions;\n        this.loadFinished();\n      });\n    }\n  }\n\n  selectCondition(condition: Condition) {\n    this.selected = condition;\n    this.conditionSelected.emit(this.selected);\n    for (let c of this.conditions) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  sortCondition(x: string) {\n    if (x == \"date-asc\" || x == \"date-desc\") {\n      var a = 1;\n      if (x == \"date-asc\") {\n        a = -a;\n      }\n\n      for (let c of this.conditionGrouping) {\n        c.sort((n1, n2) => {\n          if (n1.code['coding'][0]['code'] > n2.code['coding'][0]['code']) {\n            return a;\n          }\n          if (n1.code['coding'][0]['code']  {\n      if (n1.onsetDateTime  n2.onsetDateTime) {\n        return -1;\n      }\n    })\n    var diff = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n\n    for (let c of this.conditions) {\n      c.isVisible = true;\n      var newDate = new Date(c.onsetDateTime).getTime() + diff;\n      c.relativeDateTime = new Date(newDate).toDateString();\n      c.relativeDateTime = moment(newDate).toISOString();\n    }\n    if (this.viewToggle == false) {\n      //this.viewConditionList = JSON.parse(JSON.stringify(this.conditions));\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n    this.conditionService.conditions = this.conditions;\n    this.groupConditions();\n  }\n\n  // Method for basic toggling, using JSON functions to toggle internal Angular2 module OnChanges for UI reactivity\n  ellipsesToggle() {\n    // Basic logic for toggle, assuming this.conditions contains all info, and this.viewConditionList is the modified list being used to display data\n    if (this.viewToggle == false) {\n      for (let c of this.conditions) {\n        c.isVisible = true;\n      }\n      this.viewToggle = true;\n    }\n  }\n\n  toggleExpansion() {\n\n    if (this.viewToggle == true) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n      this.viewToggle = false;\n    }\n  }\n\n  scratchPadCheckBoxes(checked: boolean, value) {\n\n    if (checked) {\n      // this.conditions[value].isSelected = true;\n      this.scratchPadService.toAddToCondSpArray.push(this.conditions[value]);\n    }\n    else {\n      // this.conditions[value].isSelected = false;\n      let temp = this.scratchPadService.toAddToCondSpArray.indexOf(this.conditions[value]);\n      if (temp > -1) {\n        // This will actually delete instead of simply setting to null, which will throw errors in the long run\n        this.scratchPadService.toAddToCondSpArray.splice(temp, 1);\n      }\n    }\n  }\n\n  updateScratchPad() {\n    //this.scratchPadService.buttonClicked(true);\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n\n  groupConditions() {\n    for (let c of this.conditions) {\n      if (c.clinicalStatus == \"active\") {\n        if (!this.conditionGrouping[0]) {\n          this.conditionGrouping[0] = [c];\n        }\n        else {\n          this.conditionGrouping[0].push(c);\n        }\n      }\n      else {\n        if (!this.conditionGrouping[1]) {\n          this.conditionGrouping[1] = [c];\n        }\n        else {\n          this.conditionGrouping[1].push(c);\n        }\n      }\n    }\n    // this.conditionGrouping[1] = this.conditionGrouping[0];\n  }\n\n  tableNavigation(clickedSet: number) {\n    for (let c of this.conditionGrouping) {\n      let cNum = this.conditionGrouping.indexOf(c);\n      if (cNum != clickedSet) {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = true;\n      }\n      else {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = false;\n      }\n    }\n  }\n\n  newTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number) {\n    if (this.conditionGroupingName.indexOf(tableName) == -1) {\n      this.conditionGroupingName.push(tableName);\n      for (let c of this.conditions) {\n        // Right now this will only allow for a table with one quality!\n        var fullPath = c;\n        dataLocation.forEach(element => {\n          try {\n            fullPath = c[element];\n          }\n          catch (error) {\n            console.log('That field does not exist on this Condition' + c);\n          }\n        });\n        // Testing condition and adding if it's true\n        if (quality) {\n          console.log(fullPath);\n          if (!this.conditionGrouping[groupingCount]) {\n            this.conditionGrouping[groupingCount] = [c];\n          }\n          else {\n            this.conditionGrouping[groupingCount].push(c);\n\n          }\n        }\n      }\n    }\n    else {\n      console.log(\"This table already exists\");\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Tools\n    \n      \n      \n    \n  \n  (none)\n  \n    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}\n    \n    \n      \n        \n          \n          Description\n          Status\n          Onset\n           \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              ... {{cSub['code']['text']}} {{cSub['code']['coding'][0]['code']}}\n            \n            {{cSub.clinicalStatus}}\n            {{cSub.relativeDateTime}}\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tools                        (none)   0\" id=\"tableParentEle\">    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}                                          Description          Status          Onset                                                                                                                 ... {{cSub[\\'code\\'][\\'text\\']}} {{cSub[\\'code\\'][\\'coding\\'][0][\\'code\\']}}                        {{cSub.clinicalStatus}}            {{cSub.relativeDateTime}}                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsComponent.html":{"url":"components/ConditionsComponent.html","title":"component - ConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditions/conditions.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditions\n            \n\n\n\n\n            \n                templateUrl\n                ./conditions.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conditionGrouping\n                            \n                            \n                                conditions\n                            \n                            \n                                justCreated\n                            \n                            \n                                loaded\n                            \n                            \n                                scratchPadConditions\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                viewToggle\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                updateService\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            justCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scratchPadConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\ndeclare var $: any; //Necessary in order to use jQuery to open popup.\n\n@Component({\n  selector: 'conditions',\n  templateUrl: './conditions.html'\n})\nexport class ConditionsComponent extends BaseColumn {\n  // The currently selected condition in the list.\n  selected: Condition;\n\n  // The list of conditions being displayed.\n  conditions: Array = [];\n  scratchPadConditions: any = [];\n\n  // for checking whenever the page is loaded\n  loaded: boolean = false;\n\n  viewToggle: boolean = false;\n  conditionGrouping: Array = [];\n  justCreated: boolean;\n\n  // for column switching\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private fhirService: FhirService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService\n  ) {\n    super();\n    this.justCreated = true;\n    this.scratchPadConditions = this.getScratchPadConditions();\n\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    // Triggered if a new patient is selected (not even implemented yet).\n    this.selected = null;\n    this.conditions = [];\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = this.conditions.concat(conditions);\n        this.onLoadComplete();\n      });\n    }\n  }\n\n  // Called when all conditions have been loaded.\n  onLoadComplete() {\n    console.log(\"Loaded \" + this.conditions.length + \" conditions.\");\n\n    this.conditions.sort((c1, c2) => {\n      return c2.onsetDateTime.localeCompare(c1.onsetDateTime);\n    });\n\n    // Scale dates to make them appear more recent for demos.\n    // 0.8 is an arbitrary value that produces realistic dates.\n    if (this.conditions.length > 0) {\n      let RECENCY_MULTIPLIER = 0.8;\n      let timeSinceConditionOnset = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n      let scaledTimeSinceConditionOnset = Math.floor(RECENCY_MULTIPLIER * timeSinceConditionOnset);\n\n      for (let condition of this.conditions) {\n        condition.isVisible = true;\n        let relativeDateTime = new Date(condition.onsetDateTime).getTime() + scaledTimeSinceConditionOnset;\n        condition.relativeDateTime = moment(relativeDateTime).toISOString();\n      }\n    }\n\n    if (!this.viewToggle) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n\n    this.conditionService.conditions = this.conditions;\n\n    // for rendering elements only after page is loaded (there probably is a better way)\n    this.loaded = true;\n\n    // initialize the scratchPadService totalConditions with all the stuff\n    this.scratchPadService.initConditions(this.conditions);\n  }\n\n  // Update the service to store correct column state\n  updateService(): void {\n    this.conditionService.setColumnState(this.columnState);\n  }\n\n  // ===============================================================================================================================================\n  // ======================================================== GETTERS AND SETTERS===================================================================\n  // ===============================================================================================================================================\n\n  // retrieves the selected conditions from the scratch pad\n  getScratchPadConditions() {\n    return this.scratchPadService.getConditions();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Conditions\n      \n        \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Testing condition popover\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Conditions                                                                          Testing condition popover  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsDisplay.html":{"url":"components/ConditionsDisplay.html","title":"component - ConditionsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllConditions\n                            \n                            \n                                checkCondition\n                            \n                            \n                                expand\n                            \n                            \n                                getDateString\n                            \n                            \n                                isConditionAssociated\n                            \n                            \n                                isConditionChecked\n                            \n                            \n                                isConditionSelected\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printmsg\n                            \n                            \n                                selectCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditions\n                            \n                            \n                                scratchPadMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService, conditionService: ConditionService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditions\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scratchPadMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllConditions\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllConditions(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCondition\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCondition(checkedCondition: Condition, checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedCondition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateString\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateString(c: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionAssociated(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionChecked(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionSelected(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printmsg\n                        \n                        \n                    \n                \n            \n            \n                \nprintmsg(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Condition } from '../../models/condition.model';\n\n@Component({\n  selector: 'conditionsDisplay',\n  templateUrl: './conditionsDisplay.html'\n})\nexport class ConditionsDisplay {\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() conditions: Array;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // Whether this display of conditions is within the scratch pad.\n  @Input() scratchPadMode: boolean = false;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private scratchPadService: ScratchPadService,\n    private conditionService: ConditionService,\n    private associationService: AssociationService\n  ) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking conditions.\n    if (this.conditionService.getColumnState() === \"scratchpad\") {\n      // Add 'Remove from Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Remove from Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.removeCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    } else {\n      // Add 'Add to Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Add to Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.addCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    }\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n  }\n\n  // Selects an individual condition (which causes it to be highlighted).\n  // This is NOT the same as checking a condition.\n  selectCondition(condition: Condition) {\n    this.conditionService.selectedCondition = condition;\n  }\n\n  // Check or uncheck an individual condition\n  checkCondition(checkedCondition: Condition, checked: boolean) {\n    this.scratchPadService.checkCondition(checked, checkedCondition);\n  \n    // When an individual condition is checked, the \"check all\" checkbox should be unchecked.\n    this.isAllChecked = false;\n  }\n\n  isConditionSelected(condition: Condition) {\n    return condition == this.conditionService.selectedCondition;\n  }\n\n  // Determine whether a condition is currently checked.\n  isConditionChecked(condition: Condition) {\n    return this.scratchPadService.checkedMapConditions.get(condition) || false;\n  }\n\n  // Determine whether a condition is currently associated (based on associations tool)\n  isConditionAssociated(condition: Condition) {\n    return this.associationService.associatedMapConditions.get(condition) || false;\n  }\n\n  // Check or uncheck all conditions.\n  checkAllConditions(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let condition of this.conditions) {\n        this.scratchPadService.checkCondition(checked, condition);\n    }\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n  printmsg(condition: Condition) {\n      console.log(condition);\n  }\n\n  getDateString(c: Condition) {\n    let d = new Date(c.onsetDateTime);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Description\n        Status\n        Onset\n      \n    \n    \n       \n        \n          \n        \n        \n          ... {{c['code']['text']}} \n        \n        {{c.clinicalStatus}}\n        {{c.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Description        Status        Onset                                                                 ... {{c[\\'code\\'][\\'text\\']}}                 {{c.clinicalStatus}}        {{c.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContextMenuComponent.html":{"url":"components/ContextMenuComponent.html","title":"component - ContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contextMenu/contextMenu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                contextMenu\n            \n\n\n\n\n            \n                templateUrl\n                ./contextMenu.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickSubscription\n                            \n                            \n                                closeable\n                            \n                            \n                                CLOSEABLE_DELAY\n                            \n                            \n                                data\n                            \n                            \n                                left\n                            \n                            \n                                options\n                            \n                            \n                                top\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addOption\n                            \n                            \n                                    Private\n                                handleDocClick\n                            \n                            \n                                    Private\n                                handleOptionClick\n                            \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contextMenu/contextMenu.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addOption\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOption(option)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleDocClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDocClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleOptionClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleOptionClick(option, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(data, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLOSEABLE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\n@Component({\n  selector: 'contextMenu',\n  templateUrl: './contextMenu.html'\n})\nexport class ContextMenuComponent {\n  // The list of options displayed in the menu.\n  options: Array = [];\n\n  // The data passed into the menu from wherever it was triggered.\n  data: any = null;\n\n  visible: boolean = false;\n  top: string = '0px';\n  left: string = '0px';\n\n  // Observable subscription to document clicks.\n  clickSubscription: any = null;\n\n  // Prevents a glitch in contexts where the menu is opened by a left click.\n  // Without this delay on being able to close the menu, the menu would close\n  // the moment it opened.\n  CLOSEABLE_DELAY: number = 100;\n  closeable: boolean = false;\n\n  constructor(private ref: ElementRef) { }\n\n  /*\n  Example Usage:\n\n  this.menu.addOption({\n    'icon': 'glyphicon-stats', // icon to display\n    'text': 'Add to Trend Tool', // text to display\n    'exec': function(data) { // what to execute upon click\n      console.log(data);\n    }\n  });\n  */\n  public addOption(option) {\n    this.options = this.options.concat(option);\n  }\n\n  private handleDocClick(event) {\n    // Hide the menu if the user clicks outside of it.\n    if (!this.ref.nativeElement.contains(event.target)) {\n      // Only hide the menu if it is currently closeable.\n      if (this.closeable) {\n          this.hide(null);\n      }\n    }\n  }\n\n  // Show the menu.\n  public show(data, event) {\n    this.data = data;\n\n    // Set the location of the menu to where the user clicked.\n    this.top = event.pageY + 'px';\n    this.left = event.pageX + 'px';\n\n    this.visible = true;\n    this.closeable = false;\n\n    // Allow the menu to be closed only after an interval has elapsed.\n    setTimeout(() => { this.closeable = true; }, this.CLOSEABLE_DELAY);\n\n    // Disable the standard click behavior.\n    event.preventDefault();\n\n    // Subscribe to document click events.\n    this.clickSubscription = fromEvent(document, 'click')\n      .subscribe((event) => {\n        this.handleDocClick(event);\n    });\n  }\n\n  // Handle executing actions tied to a clicked menu option.\n  private handleOptionClick(option, event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (option.exec) {\n      // Execute the function tied to the clicked menu option.\n      option.exec(this.data);\n    }\n\n    // Hide the context menu.\n    this.hide(event);\n  }\n\n  // Hide the menu.\n  private hide(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    // Unsubscribe from document click events.\n    if (this.clickSubscription) {\n      this.clickSubscription.unsubscribe();\n      this.clickSubscription = null;\n    }\n\n    // Hide the menu and reset the associated data.\n    this.visible = false;\n    this.data = null;\n  }\n}\n\n    \n\n    \n        \n\n  {{ option.text }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ option.text }}'\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoctorNoteComponent.html":{"url":"components/DoctorNoteComponent.html","title":"component - DoctorNoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DoctorNoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/doctorNote/doctorNote.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                doctorNote\n            \n\n\n\n\n            \n                templateUrl\n                ./notes.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'doctorNote',\n  templateUrl: './notes.html'\n})\nexport class DoctorNoteComponent { }\n\n    \n\n    \n        \n\n  \n    \n    \n  \n  Weight:\n    \n  \n  Height:\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Weight:        Height:      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'DoctorNoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DoctorService.html":{"url":"injectables/DoctorService.html","title":"injectable - DoctorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DoctorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/doctor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configMode\n                            \n                            \n                                filter\n                            \n                            \n                                graphConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGraphConfig\n                            \n                            \n                                assignVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGraphConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddGraphConfig(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assignVisible\n                        \n                        \n                    \n                \n            \n            \n                \nassignVisible(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { Condition } from '../models/condition.model';\n\n@Injectable()\nexport class DoctorService {\n  filter: Array = [];\n  configMode: boolean = true;\n  graphConfig: Array> = [];\n\n  constructor(private cookieService: CookieService) { }\n\n  // The change to visiblities modifiers for the list should be an input to assignVisible(), and input through conditions.component.ts\n  assignVisible(list: Array) {\n    // Wipes the lists, as assignVisible() gets called on subscribe){data == true} for conditions.component.ts\n    // Needs to have a clean list, or it will push doubles/triples, or more\n\n    // Use \"let of\" to generate enumerated list, allows for pass by value iteration\n    let count = 0;\n    for (let c of list) {\n      // Right now the logic only excludes one code, for testing purposes\n      // thisModel is a undefined data model, depending on if we want to leave the service with the data we need to create a static model, but\n      // it should work for testing purposes\n\n      if (count ) {\n    this.graphConfig.push(list);\n    this.cookieService.set('graphConfig', JSON.stringify(this.graphConfig));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encounter.html":{"url":"classes/Encounter.html","title":"class - Encounter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encounter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/encounter.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                position\n                            \n                            \n                                reason\n                            \n                            \n                                status\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEndDate\n                            \n                            \n                                getLogValue\n                            \n                            \n                                getReason\n                            \n                            \n                                getStartDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEndDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetEndDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReason\n                        \n                        \n                    \n                \n            \n            \n                \ngetReason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStartDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetStartDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Encounter {\n  \n  id: string;\n  status: string;\n\n  period: {\n    start: string;\n    end: string;\n  };\n\n  text: {\n    status: string;\n    div: string;\n  }\n\n  position:string;\n  // Reasons for the encounter.\n  reason: {\n    text: string;\n\n    // Coding details for the encounter reason.\n    coding: {\n      system: string;\n      code: string;\n    }[];\n  }[];\n\n  // Get the first reason for the encounter (if there is one). Otherwise, return null.\n  getReason(): string {\n    // Check if there are any reasons. If not, return null.\n    if (!this.reason) {\n      return null;\n    }\n\n    for (let r of this.reason) {\n      if (r.text) {\n        // Return the text associated with the reason.\n        return r.text;\n      }\n    }\n\n    return null;\n  }\n  getStartDate(): Date { return new Date(this.period.start)}\n  getEndDate(): Date { return new Date(this.period.end)}\n\n  getLogValue(): any {\n    return Math.log(this.getStartDate().getTime())\n  }\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncounterService.html":{"url":"injectables/EncounterService.html","title":"injectable - EncounterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EncounterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encounter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                    Public\n                                loadEncounters\n                            \n                            \n                                    Private\n                                loadEncountersPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/encounter.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Encounter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncountersPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncountersPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Encounter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/encounter.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, concat } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Encounter } from '../models/encounter.model';\n\n\n@Injectable()\nexport class EncounterService {\n  private path = '/Encounter';\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  private loadEncountersPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        let encounters: Array = [];\n        if (bundle.entry) {\n          encounters = bundle.entry.map(e => this.deserialize(e['resource']));\n        }\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(encounters), this.loadEncountersPage(nextLink.url));\n        } else {\n          return of(encounters);\n        }\n      }));\n  }\n\n  public loadEncounters(patient: Patient): Observable> {\n    const url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadEncountersPage(url);\n  }\n\n  // We cannot simply cast the JSON object to an Encounter, because this casted\n  // Encounter will not have the methods of the Encounter class.\n  private deserialize(input: any): Encounter {\n    var fixed: Encounter = new Encounter();\n\n    for (let prop in input) {\n      fixed[prop] = input[prop];\n    }\n\n    return fixed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Favorites.html":{"url":"components/Favorites.html","title":"component - Favorites","body":"\n                   \n\n\n\n\n\n  Components\n  Favorites\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                favorites\n            \n\n\n\n\n            \n                templateUrl\n                ./favorites.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newTest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onRightClick\n                            \n                            \n                                test\n                            \n                            \n                                test2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService, elRef: ElementRef, toolbarService: ToolBarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRightClick\n                        \n                        \n                    \n                \n            \n            \n                \nonRightClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            test\n                        \n                        \n                    \n                \n            \n            \n                \ntest(ref: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            test2\n                        \n                        \n                    \n                \n            \n            \n                \ntest2()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/favorites/favorites.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"100px\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ToolBarService } from '../../services/toolbar.service';\n\n@Component({\n  selector: 'favorites',\n  templateUrl: './favorites.html'\n})\nexport class Favorites {\n  constructor(private doctorService: DoctorService, private elRef: ElementRef, private toolbarService: ToolBarService) { }\n\n  newTest: string = \"100px\";\n\n  onRightClick() {\n    return false;\n  }\n\n  test(ref: ElementRef) {\n    /*console.log(\"normal\");\n    console.log(this.elRef);\n    console.log(this.elRef.nativeElement.querySelector('div').style.left);*/\n    this.newTest = \"200px\";\n  }\n\n  test2() {\n    console.log(\"hi\");\n  }\n}\n\n    \n\n    \n        \n\n  \n    Favorites List\n    Known Favorites\n    \n      Link 1\n      Link 2\n    \n    Recently Completed Actions\n    \n      Link 1\n      Link 2\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Favorites List    Known Favorites          Link 1      Link 2        Recently Completed Actions          Link 1      Link 2      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'Favorites'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FhirService.html":{"url":"injectables/FhirService.html","title":"injectable - FhirService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FhirService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/fhir.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                base\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequestOptions\n                            \n                            \n                                getUrl\n                            \n                            \n                                setToken\n                            \n                            \n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/fhir.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestOptions(withAuth: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withAuth\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetToken(newToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class FhirService {\n\n  constructor() { }\n\n  private base: string;\n  public token: string;\n\n  getUrl(): string {\n    return this.base;\n  }\n\n  setUrl(url: string) {\n    this.base = url;\n  }\n\n  setToken(newToken: string) {\n    this.token = newToken;\n  }\n\n  getRequestOptions(withAuth: boolean = true): { headers: HttpHeaders } {\n    let headers = new HttpHeaders({'Accept': 'application/json'});\n    if (withAuth) {\n      headers = headers.append('Authorization', 'Bearer ' + this.token);\n    }\n    return { headers: headers };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/form.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Form {\n\tid: number;\n\ttype: string;\n\tdata : any;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormBuilder.html":{"url":"components/FormBuilder.html","title":"component - FormBuilder","body":"\n                   \n\n\n\n\n\n  Components\n  FormBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-builder/form-builder.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                form-builder\n            \n\n\n            \n                styles\n                #main_list {list-style-type: none;}\n            \n\n\n            \n                templateUrl\n                ./form-builder.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                combData\n                            \n                            \n                                components\n                            \n                            \n                                    Public\n                                forms\n                            \n                            \n                                totalData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getData\n                            \n                            \n                                getForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                storeData\n                            \n                            \n                                    Public\n                                submitClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formInput\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmitClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formInput\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSubmitClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForms\n                        \n                        \n                    \n                \n            \n            \n                \ngetForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('form')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Form[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Form } from '../../models/form.model';\n\n@Component({\n  selector: 'form-builder',\n  templateUrl: './form-builder.html',\n  styles: [\"#main_list {list-style-type: none;}\"]\n})\n\nexport class FormBuilder  {\n\t// GLOBAL VARIABLES\n\tpublic forms: Form[];\n\t@ViewChildren('form') components: any;\n\t\n\ttotalData: String[] = [];\n\tcombData: any;\n\t\n\t@Input() formInput: any[];\n\t@Input() userId: String; \n\t\n\t@Output() onSubmitClick: EventEmitter = new EventEmitter();\n\t\n\t// ============================== EVENT METHODS ==================================\n\tconstructor(){}\n\t\n\tngOnInit(): void {\n\t\tthis.getForms();\n\t}\n\t\t\n\t// method that uses service to get the forms from the server\n\tgetForms(): void {\n\t\t//this.formBuilderService.getTemplate().then(forms => {this.forms = forms; console.log(forms);});\n\t\tthis.forms = this.formInput;\n\t}\n\t\n\t// ===================== LOGIC WHEN SUBMIT BUTTON CLICKED ========================\n\t\n\tpublic submitClick(): void {\n\t\tthis.totalData = [];\n\t\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n  \n    \n    \n       \n    \n    \n       \n    \n    \n       \n    \n    \n      \n    \n    \n      \n    \n  \n   Submit \n\n    \n\n    \n            #main_list {list-style-type: none;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Submit '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormBuilder'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormCreatorModule.html":{"url":"modules/FormCreatorModule.html","title":"module - FormCreatorModule","body":"\n                   \n\n\n\n\n    Modules\n    FormCreatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { CheckboxInline } from '../components/form_components/checkbox-inline.component';\nimport { NormalBox1 } from '../components/form_components/normal-box-1.component';\nimport { NormalBox2 } from '../components/form_components/normal-box-2.component';\nimport { SelectListSingle } from '../components/form_components/select-list-single.component';\nimport { ScratchPadUpdate } from '../components/form_components/scrachpad-update.component';\n\n@NgModule({\n\timports: [\n\t\tFormsModule,\n\t\tBrowserModule\n\t],\n\tdeclarations: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t], exports: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t]\n})\n\nexport class FormCreatorModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HighlightDirective.html":{"url":"directives/HighlightDirective.html","title":"directive - HighlightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  HighlightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/highlight.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [highlight]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlightText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlightText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer, Input} from '@angular/core';\n\n@Directive({\n\tselector: '[highlight]'\n})\nexport class HighlightDirective {\n\n\t@Input('highlightText') text: string = '';\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t\tconsole.log(\"Highlighting!\");\n\t\tthis.el.nativeElement.textContent = 'foo';\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoricalTrendsComponent.html":{"url":"components/HistoricalTrendsComponent.html","title":"component - HistoricalTrendsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoricalTrendsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/historicalTrends/historicalTrends.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                historicalTrends\n            \n\n\n\n\n            \n                templateUrl\n                ./historicalTrends.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartSize\n                            \n                            \n                                    Private\n                                maxDate\n                            \n                            \n                                menu\n                            \n                            \n                                    Private\n                                minDate\n                            \n                            \n                                mouseEvent\n                            \n                            \n                                mouseSubscription\n                            \n                            \n                                    Private\n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onDataPointSelect\n                            \n                            \n                                resetDateRange\n                            \n                            \n                                setDateRange\n                            \n                            \n                                setDateRangeMonths\n                            \n                            \n                                setDateRangeYears\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trendsService: HistoricalTrendsService, observationService: ObservationService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDataPointSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonDataPointSelect(chartEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartEvent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nresetDateRange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRange(form)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeMonths\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeMonths(months)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    months\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeYears\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeYears(years)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    years\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [800, 200]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            patient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\nimport * as moment from 'moment';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { PatientService } from '../../services/patient.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'historicalTrends',\n  templateUrl: './historicalTrends.html'\n})\nexport class HistoricalTrendsComponent {\n  // Width and height of displayed charts.\n  private chartSize: number[] = [800, 200];\n\n  // The minimum and maximum dates for the x-axis of the displayed charts.\n  private minDate: Date = null;\n  private maxDate: Date = null;\n\n  // Reference to the current patient.\n  private patient: Patient;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // Observable subscription to mouse movements.\n  mouseSubscription: any = null;\n\n  // Store the most recent mouse event to keep track of the mouse location.\n  mouseEvent: any = null;\n\n  constructor(\n    private trendsService: HistoricalTrendsService,\n    private observationService: ObservationService,\n    private patientService: PatientService\n  ) {\n      // Track the location of the mouse (needed for context menu).\n      this.mouseSubscription = fromEvent(document, 'mousemove')\n        .subscribe((event) => {\n          this.mouseEvent = event;\n      });\n\n      this.patientService.loadPatient().subscribe(patient => {\n        this.patient = patient;\n      })\n    }\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add option to the context menu shown when clicking data points.\n    this.menu.addOption({\n      'icon': 'glyphicon-list-alt',\n      'text': 'Add to Side Bar',\n      'exec': function(condition) {\n        console.log(\"Add to Side Bar\");\n        // TODO: Implement Add to Side Bar functionality.\n      }.bind(this)\n    });\n  }\n\n  // Set specific (user selected) min and max dates for the x-axis of displayed charts.\n  setDateRange(form) {\n    // Do nothing if one of the dates is invalid.\n    if (!moment(form.minDate).isValid() || !moment(form.maxDate).isValid()) {\n      return;\n    }\n\n    this.minDate = new Date(form.minDate);\n    this.maxDate = new Date(form.maxDate);\n  }\n\n  // Reset the min and max dates for the x-axis of displayed charts (so all data is shown).\n  resetDateRange() {\n    this.minDate = null;\n    this.maxDate = null;\n\n    // Choose the earliest date of all charts, and the latest date of all charts.\n    for (let chart of this.trendsService.charts) {\n      let [chartMinDate, chartMaxDate] = this.trendsService.getDateRange(chart);\n\n      if (this.minDate == null || chartMinDate.getTime()  this.maxDate.getTime()) {\n        this.maxDate = chartMaxDate;\n      }\n    }\n  }\n\n  // Subtracts the given number of years from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeYears(years) {\n    this.minDate = moment().subtract(years, 'years').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Subtracts the given number of months from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeMonths(months) {\n    this.minDate = moment().subtract(months, 'months').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Called when a data point is clicked on a chart.\n  onDataPointSelect(chartEvent) {\n    this.menu.show(null, this.mouseEvent);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n       Dashboard\n      Back\n    \n    \n      \n        \n          Conditions\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Findings List\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Medications\n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Fit All\n    25 Years\n    10 Years\n    5 Years\n    2 Years\n    1 Year\n    6 Months\n    3 Months\n    1 Month\n    \n       Specify\n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n      Specify start and end dates\n        ×\n      \n      \n        \n          \n          \n          Submit\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Dashboard      Back                                Conditions                                                                                                                Findings List                                                                                                                Medications                                                                                                    Fit All    25 Years    10 Years    5 Years    2 Years    1 Year    6 Months    3 Months    1 Month           Specify                                Specify start and end dates        ×                                                  Submit                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HistoricalTrendsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoricalTrendsService.html":{"url":"injectables/HistoricalTrendsService.html","title":"injectable - HistoricalTrendsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoricalTrendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/historicalTrends.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charts\n                            \n                            \n                                chartsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMedicationChart\n                            \n                            \n                                    Public\n                                addObservationChart\n                            \n                            \n                                    Public\n                                getDateRange\n                            \n                            \n                                    Private\n                                getValueRange\n                            \n                            \n                                    Public\n                                removeChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMedicationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMedicationChart(medication: Medication)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addObservationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addObservationChart(chartName, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDateRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDateRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChart(chartName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            charts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Chart } from '../models/chart.model';\nimport { Medication } from '../models/medication.model';\n\n@Injectable()\nexport class HistoricalTrendsService {\n  // Maps the name of a chart to the chart object itself.\n  chartsMap: Map = new Map();\n  \n  // Store all the charts currently being displayed.\n  charts: Array = [];\n\n  constructor() { }\n\n  // Add a new chart displaying a specific observation in the trends tool.\n  public addObservationChart(chartName, data) {\n    // A chart already exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      return;\n    }\n\n    if (data == null || data.length == 0) {\n      // Avoid creating an empty chart.\n      return;\n    }\n\n    let chart = new Chart();\n\n    // Get the title associated with the data point.\n    chart.title = data[0].code['text'];\n\n    for (let point of data) {\n      // Skip data points without a numeric value.\n      if (!point.valueQuantity || !point.valueQuantity['value']) {\n        continue;\n      }\n\n      // Add the data point to the chart.\n      chart.data.push({\n        name: new Date(point.relativeDateTime),\n        value: point.valueQuantity['value']\n      });\n    }\n\n    // Sort data points in order of date of occurrence.\n    chart.data = chart.data.sort((p1, p2) => p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    // Set the min and max y-axis values for the chart, providing a small buffer\n    // of extra space.\n    let [min, max] = this.getValueRange(chart);\n    let buffer = (max - min) * 0.2;\n\n    chart.yScaleMin = min - buffer;\n    chart.yScaleMax = max + buffer;\n\n    // Add the normal range values for the chart (displayed as horizontal \"reference\" lines).\n    chart.normalValues = [\n      {\n        name: \"Low\",\n        value: min // TODO: These shouldn't be hardcoded.\n      },\n      {\n        name: \"High\",\n        value: max // TODO: These shouldn't be hardcoded.\n      }\n    ];\n\n    // Add the newly created chart to the list of charts.\n    this.chartsMap.set(chartName, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  public addMedicationChart(medication: Medication) {\n    // A chart already exists for the given medication.\n    if (this.chartsMap.has(medication.name)) {\n      return;\n    }\n\n    let chart = new Chart();\n    chart.title = medication.name + ' (' + medication.dosageUnits + ')';\n\n    // Add every period the medication was taken to the chart.\n    for (let i = 0; i  0 ? medication.periods[i - 1] : null;\n      let next = i  p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    this.chartsMap.set(medication.name, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  // Remove the chart with the given name from the trends tool.\n  public removeChart(chartName) {\n    // First check if a chart exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      this.chartsMap.delete(chartName);\n      this.charts = Array.from(this.chartsMap.values());\n    }\n  }\n\n  // Get the smallest and largest values from a given chart.\n  private getValueRange(chart: Chart) {\n    // If the data provided is empty, return [0, 0].\n    if (!chart.data || chart.data.length == 0) {\n      return [0, 0];\n    }\n\n    let min = chart.data[0].value;\n    let max = chart.data[0].value;\n\n    for (let point of chart.data) {\n      min = Math.min(min, point.value);\n      max = Math.max(max, point.value);\n    }\n\n    return [min, max];\n  }\n\n  // Get the earliest and latest dates associated with any point in a chart.\n  public getDateRange(chart: Chart) {\n    // If the data provided is empty, return today's date.\n    if (!chart.data || chart.data.length == 0) {\n      return [new Date(), new Date()];\n    }\n    \n    let minDate: Date = chart.data[0].name;\n    let maxDate: Date = chart.data[0].name;\n\n    for (let point of chart.data) {\n      if (point.name.getTime()  maxDate.getTime()) {\n        maxDate = point.name;\n      }\n    }\n\n    return [minDate, maxDate];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectPatientById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, patientService: PatientService, cookieService: CookieService, smartService: SmartService, conditionService: ConditionService, compiler: Compiler)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartService\n                                                  \n                                                        \n                                                                        SmartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compiler\n                                                  \n                                                        \n                                                                        Compiler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectPatientById\n                        \n                        \n                    \n                \n            \n            \n                \nselectPatientById(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Compiler } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { PatientService } from '../../services/patient.service';\nimport { SmartService } from '../../services/smart.service';\nimport { FhirService } from '../../services/fhir.service';\nimport { ConditionService } from '../../services/condition.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n    selector: 'home',\n    templateUrl: './home.html'\n})\nexport class HomeComponent {\n    selected: Patient = null;\n\n    constructor(private fhirService: FhirService,\n        private patientService: PatientService,\n        private cookieService: CookieService,\n        private smartService: SmartService,\n        private conditionService: ConditionService,\n        private compiler: Compiler) {\n\n        this.compiler.clearCache();\n        this.fhirService.setUrl(this.cookieService.get('fhirBaseUrl'));\n\n        if (this.fhirService.token) {\n            // Access token is already available.\n            this.selectPatientById(this.patientService.patientId);\n        } else {\n            // Retrieve the access token and patient.\n            this.smartService.authenticate().subscribe(data => {\n                this.fhirService.setToken(data['access_token']);\n                this.selectPatientById(data['patient']);\n            });\n        }\n    }\n\n    // Select a patient with the given ID\n    selectPatientById(id) {\n        this.patientService.setPatientId(id);\n        this.patientService.loadPatient().subscribe(patient => {\n            this.selected = patient;\n        });\n    }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoverBoxComponent.html":{"url":"components/HoverBoxComponent.html","title":"component - HoverBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HoverBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hoverBox/hoverBox.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hoverBox\n            \n\n\n\n\n            \n                templateUrl\n                ./hoverBox.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DISPLAY_DELAY\n                            \n                            \n                                items\n                            \n                            \n                                left\n                            \n                            \n                                leftOffset\n                            \n                            \n                                timeoutHandle\n                            \n                            \n                                top\n                            \n                            \n                                topOffset\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                isDate\n                            \n                            \n                                    Public\n                                isMonth\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                typeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hoverBox/hoverBox.component.ts:28\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDate(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMonth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMonth(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(items, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            typeOf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    typeOf(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"string\" | \"number\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISPLAY_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeoutHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable } from '@angular/core';\n\n\n@Component({\n  selector: 'hoverBox',\n  templateUrl: './hoverBox.html'\n})\n\n@Injectable()\n\nexport class HoverBoxComponent {\n  // The data passed into the hover box from wherever it was triggered.\n  items: Array = null;\n\n  // Whether the hover box is currently visible.\n  visible: boolean = false;\n\n  // Where the hover box is displayed on the screen.\n  top: string = '0px';\n  left: string = '0px';\n  topOffset: number = 18;\n  leftOffset: number = 18;\n\n  // Used to track whether the hover box is waiting to be shown.\n  timeoutHandle: any = null;\n\n  // Time (in ms) before the hover box appears.\n  DISPLAY_DELAY: number = 200;\n\n  constructor() { }\n\n  public show(items, event) {\n    // The hover box is already queued to display, no need to display again.\n    if (this.timeoutHandle != null) {\n      return;\n    }\n\n    \n    this.timeoutHandle = setTimeout(() => {\n      this.items = items;\n\n      // Set the location of the hover box to where the mouse is.\n      var topOffset = 0;\n      var leftOffset = 0;\n      // Code used to test moving the hover box away from the edge of the screen. \n      // TODO: do not hardcode pixels, find information of the pixel box\n       \n      if (window.innerWidth - event.pageX \n    \n\n    \n        \n\n   \n        {{item}}\n        &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;\n      {{item}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{item}}                           {{item}}'\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HoverBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HumanizeBytesPipe.html":{"url":"pipes/HumanizeBytesPipe.html","title":"pipe - HumanizeBytesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HumanizeBytesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/humanizeBytes.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        humanizeBytes\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doIt\n                        \n                        \n                    \n                \n            \n            \n                \ndoIt(n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, args: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'humanizeBytes'\n})\nexport class HumanizeBytesPipe implements PipeTransform {\n\n    transform(value: string, args: string[]) {\n        return this.doIt(parseInt(value));\n    }\n\n    doIt(n): string {\n        if (n  (1 / Math.pow(1024, exp - 1))) ? result.toFixed(2) : result.toFixed(0);\n        return readable + si[exp - 1];\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingAnimation.html":{"url":"components/LoadingAnimation.html","title":"component - LoadingAnimation","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loadingAnimation/loadingAnimation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loading-animation\n            \n\n\n\n\n            \n                templateUrl\n                ./loadingAnimation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loadingAnimation/loadingAnimation.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'loading-animation',\n  templateUrl: './loadingAnimation.html'\n})\nexport class LoadingAnimation {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingAnimation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/map.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                STATIC_MAPPINGS\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            STATIC_MAPPINGS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapService {\n    public static STATIC_MAPPINGS = {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medication.html":{"url":"classes/Medication.html","title":"class - Medication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/medication.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dosageUnits\n                            \n                            \n                                name\n                            \n                            \n                                periods\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, dosageUnits: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/medication.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dosageUnits\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dosageUnits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Medication {\n    name: string;\n    dosageUnits: string;\n\n    periods: {\n        start: Date;\n        end: Date;\n        dosage: number;\n    }[];\n    \n    constructor(name: string, dosageUnits: string) {\n        this.periods = [];\n        this.name = name;\n        this.dosageUnits = dosageUnits;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MedicationsComponent.html":{"url":"components/MedicationsComponent.html","title":"component - MedicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MedicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/medications/medications.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                medications\n            \n\n\n\n\n            \n                templateUrl\n                ./medications.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                medications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carePlanService: CarePlanService, historicalTrendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historicalTrendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck(medication: Medication, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Medication } from '../../models/medication.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'medications',\n  templateUrl: './medications.html'\n})\nexport class MedicationsComponent {\n  medications: Array;\n  @Input() patient: Patient;\n\n  constructor(\n    private carePlanService: CarePlanService,\n    private historicalTrendsService: HistoricalTrendsService\n  ) { }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.carePlanService.loadMedications(this.patient).subscribe(medications => {\n        this.medications = medications;\n        console.log('Loaded ' + this.medications.length + ' medications.');\n      })\n    }\n  }\n\n  check(medication: Medication, event: any) {\n    // Check whether care plan was checked or unchecked.\n    if (event.target.checked) {\n      this.historicalTrendsService.addMedicationChart(medication);\n    } else {\n      this.historicalTrendsService.removeChart(medication.name);\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    \n      \n      Name\n    \n  \n  \n     \n      \n        \n      \n      {{m.name}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Name                                       {{m.name}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'MedicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewCondition.html":{"url":"components/NewCondition.html","title":"component - NewCondition","body":"\n                   \n\n\n\n\n\n  Components\n  NewCondition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/newCondition/newCondition.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                newCondition\n            \n\n\n\n\n            \n                templateUrl\n                ./newCondition.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'newCondition',\n  templateUrl: './newCondition.html'\n})\nexport class NewCondition { }\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n      \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×                  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NewCondition'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox1.html":{"url":"components/NormalBox1.html","title":"component - NormalBox1","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-1.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-1\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-1.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-1.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-1\",\n\ttemplateUrl: \"./normal-box-1.html\"\n})\n\nexport class NormalBox1{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox2.html":{"url":"components/NormalBox2.html","title":"component - NormalBox2","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-2.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-2\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-2.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-2.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-2\",\n\ttemplateUrl: \"./normal-box-2.html\"\n})\n\nexport class NormalBox2{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteNavigationComponent.html":{"url":"components/NoteNavigationComponent.html","title":"component - NoteNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoteNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/noteNavigation/noteNavigation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                noteNavigation\n            \n\n\n\n\n            \n                templateUrl\n                ./noteNavigation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeFinalNote\n                            \n                            \n                                closeProgressNote\n                            \n                            \n                                closeSideNote\n                            \n                            \n                                toggleFinalNote\n                            \n                            \n                                toggleProgressNote\n                            \n                            \n                                toggleSideNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeFinalNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseFinalNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeProgressNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseProgressNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeSideNote\n                        \n                        \n                    \n                \n            \n            \n                \ncloseSideNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleFinalNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleFinalNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleProgressNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleProgressNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSideNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSideNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/noteNavigation/noteNavigation.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'noteNavigation',\n  templateUrl: './noteNavigation.html',\n})\n\nexport class NoteNavigationComponent {\n\n    toggleSideNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n    }\n\n    closeSideNote() {\n        document.getElementById(\"sideNote\").style.width = \"0px\";\n        if (document.getElementById(\"sideNote\").style.width == \"0px\")\n        {\n            document.getElementById(\"progressNote\").style.width = \"0px\";\n            document.getElementById(\"finalNote\").style.width = \"0px\";\n        }\n\n    }\n\n    toggleProgressNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n        document.getElementById(\"progressNote\").style.width = \"34%\";\n    }\n\n    closeProgressNote() {\n        document.getElementById(\"progressNote\").style.width = \"0px\";\n        if (document.getElementById(\"progressNote\").style.width == \"0px\")\n        {\n            document.getElementById(\"finalNote\").style.width = \"0px\";\n        }\n    }\n\n    toggleFinalNote() {\n        document.getElementById(\"sideNote\").style.width = \"33%\";\n        document.getElementById(\"progressNote\").style.width = \"34%\";\n        document.getElementById(\"finalNote\").style.width = \"33%\";\n    }\n\n    closeFinalNote() {\n        document.getElementById(\"finalNote\").style.width = \"0px\";\n    }\n}\n\n    \n\n    \n        \n\n  \n     \n    \n    \n  \n\n&times;\n  \n    Side\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n&times;\n  \n    Progress\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n&times;\n  \n    Final\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n    Menu Item\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 ×      Side    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  ×      Progress    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  ×      Final    Menu Item    Menu Item    Menu Item    Menu Item    Menu Item  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoteNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Observation.html":{"url":"classes/Observation.html","title":"class - Observation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Observation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/observation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                grouping\n                            \n                            \n                                id\n                            \n                            \n                                referenceRange\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCode\n                            \n                            \n                                    Static\n                                getText\n                            \n                            \n                                    Static\n                                getUnits\n                            \n                            \n                                    Static\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnits(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Observation implements Associable {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\trelativeDateTime: string;\n\tcategory: Array;\n\tcode: Array;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n\n\t// This should be populated with the normal ranges, but isn't for whatever reason.\n\treferenceRange: Object;\n\tgrouping: string;\n\n\t// Get the value of an observation\n\tstatic getValue(o: Observation) {\n\t\treturn o['valueQuantity']['value'];\n\t}\n\n\t// Get the units for an observation\n\tstatic getUnits(o: Observation) {\n\t\treturn o['valueQuantity']['unit'];\n\t}\n\n\t// Get the text for an observation\n\tstatic getText(o: Observation) {\n\t\t// If the text is empty, use the display.\n\t\treturn o['code']['text'] || o['code']['coding'][0]['display'];\n\t}\n\n\tgetCode() {\n\t\treturn this['code']['coding'][0]['code'];\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursive.html":{"url":"components/ObservationRecursive.html","title":"component - ObservationRecursive","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursion/observationRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./observationRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graphData\n                            \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService, scratchpadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursion/observationRecursion.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchpadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(obs: any, event, position, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursion/observationRecursion.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\n@Component({\n  selector: 'observationRecursion',\n  templateUrl: './observationRecursion.html'\n})\nexport class ObservationRecursive {\n  @Input() obs: any;\n  @Input() level: number;\n  graphData: Array = [];\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n              private trendsService: HistoricalTrendsService,\n              private scratchpadService: ScratchPadService) { }\n\n  // ========================================= EVENT HANDLERS ==============================\n\n  // handles whenever a checkbox is clicked\n  checked(obs: any, event, position, data) {\n    obs.isSelected = !obs.isSelected;\n\n    // shift click functionality [not tested]\n    if (event.shiftKey) {\n      let upper, lower;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.value}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.value}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursive'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursiveChart.html":{"url":"components/ObservationRecursiveChart.html","title":"component - ObservationRecursiveChart","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursiveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursionChart\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(changedObs: any, event, position: number, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changedObs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationRecursionChart',\n  templateUrl: './observationsChart.html'\n})\nexport class ObservationRecursiveChart {\n  @Input() obs: Array;\n  @Input() level: number;\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n    private trendsService: HistoricalTrendsService) { }\n\n  getData(): Array {\n    return this.obs;\n  }\n\n  getLevel(): number {\n    return this.level;\n  }\n\n  // Called when an observation is either checked or unchecked.\n  checked(changedObs: any, event, position: number, data) {\n    changedObs.isSelected = !changedObs.isSelected;\n\n    if (event.shiftKey) {\n      let upper: number, lower: number;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursiveChart'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObservationService.html":{"url":"injectables/ObservationService.html","title":"injectable - ObservationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/observation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categorizedObservations\n                            \n                            \n                                count\n                            \n                            \n                                filterSet\n                            \n                            \n                                groupMap\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                uniqueObservations\n                            \n                            \n                                uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesObservations\n                            \n                            \n                                extractNewObservations\n                            \n                            \n                                getCheckedObservations\n                            \n                            \n                                getGrouping\n                            \n                            \n                                getScratchPadObservations\n                            \n                            \n                                handleObservationBundle\n                            \n                            \n                                loadObservationsPage\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                populateCategories\n                            \n                            \n                                scaleDates\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesObservations\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractNewObservations\n                        \n                        \n                    \n                \n            \n            \n                \nextractNewObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrouping\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrouping(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:206\n                \n            \n\n\n            \n                \n                    Given a certain observation ID, returns the position mapping of that\n ID contained within the groupMap\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleObservationBundle\n                        \n                        \n                    \n                \n            \n            \n                \nhandleObservationBundle(bundle: Bundle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bundle\n                                    \n                                                Bundle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadObservationsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadObservationsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateCategories\n                        \n                        \n                    \n                \n            \n            \n                \npopulateCategories(categories: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDates\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categorizedObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as moment from 'moment';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Observation } from '../models/observation.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class ObservationService {\n  uniqueObservations: Array = [];\n  categorizedObservations: any;\n  groupMap: { [x: string]: Array };\n  count = 0;\n  observations: Array = [];\n  selected: Array = [];\n  uniqueObservationsLoadFinished = false;\n\n  filterSet = new Set();\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient,\n    private scratchPadService: ScratchPadService\n  ) {\n    // these are the codes of the observations; \n    // groupList is used to categorize where in categorizedObservations this is stored\n    this.groupMap = {\n      \"1-1\": [\"8302-2\", \"3141-9\", \"2710-2\"],\n      \"1-2\": [],\n      \"1-3\": [],\n      \"1-4\": [\"39156-5\", \"8310-5\"],\n      \"1-5\": [],\n      \"2-1\": [\"2571-8\"],\n      \"2-2-1\": [\"789-8\", \"3094-0\", \"72166-2\"],\n      \"2-2-2\": [],\n      \"2-2-3\": [\"2823-3\"]\n    };\n\n    // categories of the observations; found using groupList\n    this.categorizedObservations = {\n      \"categories\": [\n        {\n          \"display\": \"Vitals\",\n          \"id\": \"1\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Weight\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-1\"\n            },\n            {\n              \"display\": \"Blood Pressure\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-2\"\n            },\n            {\n              \"display\": \"Heart Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-3\"\n            },\n            {\n              \"display\": \"Respiration Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-4\"\n            },\n            {\n              \"display\": \"Temperature\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-5\"\n            }\n          ]\n        },\n\n        {\n          \"display\": \"Patient History / Review of Systems\",\n          \"id\": \"2\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Constitutional Symptoms\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"2-1\"\n            },\n            {\n              \"display\": \"Body Systems\",\n              \"count\": 0,\n              \"id\": \"2-2\",\n              \"child\": [\n                {\n                  \"display\": \"Eyes\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-1\"\n                },\n                {\n                  \"display\": \"Ears, Nose, Mouth and Throat (ENT)\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-2\"\n                },\n                {\n                  \"display\": \"Cardiovascular\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-3\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"display\": \"Other\",\n          \"id\": \"3\",\n          \"count\": 0,\n          \"data\": []\n        }\n      ]\n    };\n  }\n\n  loadObservationsPage(url: string): void {\n    this.http.get(url, this.fhirService.getRequestOptions())\n      .subscribe((bundle) => {\n        this.handleObservationBundle(bundle);\n      });\n  }\n\n  handleObservationBundle(bundle: Bundle): void {\n    if (bundle) {\n      let nextObservations = >bundle.entry.map(e => e.resource);\n      this.observations = this.observations.concat(nextObservations);\n      this.extractNewObservations(nextObservations);\n\n      let nextLink = bundle.link.find(link => link.relation == 'next');\n      if (nextLink) {\n        this.loadObservationsPage(nextLink.url);\n      } else {\n        this.onLoadComplete();\n      }\n    } else {\n      console.log(\"No observations for patient.\");\n      this.observations = new Array();\n    }\n  }\n\n  onLoadComplete() {\n    this.observations = this.observations.reverse();\n    console.log(\"Loaded \" + this.uniqueObservations.length + \" observations.\");\n    this.uniqueObservationsLoadFinished = true;\n\n    this.observations.sort((n1, n2) => {\n      return n1.effectiveDateTime  this.scratchPadService.checkedMapObservations.get(o));\n  }\n\n  scaleDates(): void {\n    let RECENCY_MULTIPLIER = 0.80;\n    let timeSinceObservation = new Date().getTime() - new Date(this.observations[0].effectiveDateTime).getTime();\n    let scaledTimeSinceObservation = Math.floor(RECENCY_MULTIPLIER * timeSinceObservation);\n\n    for (let ob of this.observations) {\n      let relativeDateTime = new Date(ob.effectiveDateTime).getTime() + scaledTimeSinceObservation;\n      ob.relativeDateTime = moment(relativeDateTime).toISOString();\n    }\n  }\n\n  extractNewObservations(observations: Array): void {\n    for (let observation of observations) {\n      let code: string = observation['code']['coding'][0]['code'];\n      if (!this.filterSet.has(code)) {\n        observation.grouping = this.getGrouping(code);\n        this.uniqueObservations.push(observation);\n\n        this.filterSet.add(code);\n      }\n    }\n  }\n\n  /**\n  * Given a certain observation ID, returns the position mapping of that\n   * ID contained within the groupMap\n   */\n  getGrouping(code: string): string {\n    for (let x in this.groupMap) {\n      if (this.groupMap[x].indexOf(code) !== -1) {\n        return x;\n      }\n    }\n\n    let OTHER_GROUPING = '3';\n    return OTHER_GROUPING;\n  }\n\n  populateCategories(categories: Array): number {\n    let totalCount = 0;\n    for (let i = 0; i ): Array {\n    let observationsByCategory: { [x: string]: Array } = {};\n\n    for (let observation of observations) {\n      if (observation.hasOwnProperty('valueQuantity') && observation.hasOwnProperty('category')) {\n        let observationCategory = observation.category[0].text;\n\n        if (!observationsByCategory.hasOwnProperty(observationCategory)) {\n          observationsByCategory[observationCategory] = [];\n        }\n        observationsByCategory[observationCategory].push(observation);\n      }\n    }\n\n    let reconstructedObject: Array = [];\n    for (let ctgry of Object.keys(observationsByCategory)) {\n      reconstructedObject.push({\n        category: ctgry,\n        subheadings: false,\n        subs: null,\n        data: observationsByCategory[ctgry]\n      });\n    }\n\n    return reconstructedObject;\n  }\n\n  // ====================== SCRATCH PAD FUNCTIONALITY =============================\n\n  getScratchPadObservations() {\n    return this.scratchPadService.getObservations();\n  }\n\n  // OVERRIDDEN FROM BASECOLUMN:\n  showDefault() {\n\n  }\n\n  showScratchPad() {\n    console.log(this.getScratchPadObservations());\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsComponent.html":{"url":"components/ObservationsComponent.html","title":"component - ObservationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observations/observations.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observations\n            \n\n\n\n\n            \n                templateUrl\n                ./observations.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mappings\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                test\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, observationService: ObservationService, mapService: MapService, doctorService: DoctorService, trendsService: HistoricalTrendsService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observations/observations.component.ts:60\n                \n            \n\n\n            \n                \n                    Description: This method is called whenever the patient data is passed as input to the application. Handles\nthe initial subscription to the observation service and continual loading of the data links.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:36\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ObservationService } from '../../services/observation.service';\nimport { MapService } from '../../services/map.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Observation } from '../../models/observation.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'observations',\n  templateUrl: './observations.html'\n})\nexport class ObservationsComponent extends BaseColumn{\n  selected: Observation;\n  test: Observation;\n  observations: Array = [];\n\n  @Input() patient: Patient;\n  //@Output() observationReturned: EventEmitter> = new EventEmitter();\n\n  mappings: { [key: string]: Array } = {};\n\n  // for column switching\n  subscription: Subscription;\n\n  constructor(\n    private fhirService: FhirService,\n    private observationService: ObservationService,\n    private mapService: MapService,\n    private doctorService: DoctorService,\n    private trendsService: HistoricalTrendsService,\n    private scratchPadService: ScratchPadService\n  ) {\n      super();\n      this.mappings = MapService.STATIC_MAPPINGS;\n\n      // subscribe to scratch pad service for column switching\n      this.subscription = scratchPadService.stateChange$.subscribe(\n        sPad => {\n          if (sPad)\n            this.columnState = \"scratchpad\";\n          else\n            this.columnState = \"default\";\n        }\n      );\n  }\n\n  // ===================== FOR DATA RETRIEVAL FROM OBSERVATIONS SERVICE ============\n\n  /**\n   * Description: This method is called whenever the patient data is passed as input to the application. Handles\n   * the initial subscription to the observation service and continual loading of the data links.\n   **/\n  ngOnChanges() {\n    if (this.patient) { //If the patient is loaded\n      let url = this.fhirService.getUrl() + \"/Observation?patient=\" + this.patient.id;\n      this.observationService.loadObservationsPage(url);    \n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Observations\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Observations                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsDisplay.html":{"url":"components/ObservationsDisplay.html","title":"component - ObservationsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationsDisplay/observationsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                Observation\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllObservations\n                            \n                            \n                                checkObservation\n                            \n                            \n                                expand\n                            \n                            \n                                isObservationAssociated\n                            \n                            \n                                isObservationChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectObservation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                observationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        observations\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        observationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllObservations\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllObservations(checked)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkObservation\n                        \n                        \n                    \n                \n            \n            \n                \ncheckObservation(checked: boolean, checkedObservation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationAssociated(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationChecked(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectObservation\n                        \n                        \n                    \n                \n            \n            \n                \nselectObservation(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Observation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Observation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationsDisplay',\n  templateUrl: './observationsDisplay.html'\n})\nexport class ObservationsDisplay {\n  // Trick to allow access to static methods of Observation class in pug template\n  Observation = Observation;\n\n  // The currently selected condition in the list.\n  selected: Observation;\n\n  //Whether the checkbox for checking all observations are currently checked\n  isAllChecked : boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() observations: Array;\n  @Output() observationSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private associationService: AssociationService, \n    private scratchPadService: ScratchPadService\n  ) { }\n\n  ngOnChanges() {\n    //console.log(this.observations);\n  }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n    \n    // Add options to the context menu shown when right clicking observations.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function(obs) {\n        // Add every checked observation to the scratch pad\n        this.scratchPadService.checkedMapObservations.forEach((isChecked, observation) => {\n          if (isChecked) {\n            this.scratchPadService.addObservation(observation);\n          }\n        });\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(obs) {\n        console.log(obs);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(obs) {\n        console.log(obs);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  // Whenever a line is selected\n  selectObservation(observation: Observation) {\n    this.selected = observation;\n    this.observationSelected.emit(this.selected);\n\n    for (let o of this.scratchPadService.totalObservations) {\n      o['selected'] = (o.id == this.selected.id);\n    }\n  }\n\n  // Determine whether an observation is currently checked.\n  isObservationChecked(observation: Observation) {\n    return this.scratchPadService.checkedMapObservations.get(observation) || false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkObservation(checked: boolean, checkedObservation: Observation) {\n    this.scratchPadService.checkObservation(checked, checkedObservation);\n  }\n  \n  //Check or uncheck all observations\n  checkAllObservations(checked){\n    this.isAllChecked = checked;\n    for (let c of this.observations){\n      this.scratchPadService.checkObservation(checked, c);\n    }\n  }\n\n  // Determine whether an observation is currently associated (based on associations tool)\n  isObservationAssociated(observation: Observation) {\n    return this.associationService.associatedMapObservations.get(observation) || false;\n  }\n\n  expand(parent: string) {\n    /**\n    for (let c of this.conditions) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Observation\n        Value\n        Unit\n        Onset\n      \n    \n    \n      \n        \n          \n        \n        \n          ... {{Observation.getText(o)}}\n        \n        {{Observation.getValue(o)}}\n        {{Observation.getUnits(o)}}\n        {{o.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Observation        Value        Unit        Onset                                                                ... {{Observation.getText(o)}}                {{Observation.getValue(o)}}        {{Observation.getUnits(o)}}        {{o.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Patient.html":{"url":"classes/Patient.html","title":"class - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/patient.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                address\n                            \n                            \n                                birthDate\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                identifier\n                            \n                            \n                                mrn\n                            \n                            \n                                name\n                            \n                            \n                                telecom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telecom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Patient {\n\n    active: boolean;\n    id: string;\n    birthDate: string;\n    gender: string;\n    address: Array;\n    identifier: Array;\n    name: Array;\n    telecom: Array;\n    mrn: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientComponent.html":{"url":"components/PatientComponent.html","title":"component - PatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/patient/patient.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                patient\n            \n\n\n\n\n            \n                templateUrl\n                ./patient.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                advancedSearch\n                            \n                            \n                                allergies\n                            \n                            \n                                allergy\n                            \n                            \n                                graphConfig\n                            \n                            \n                                hover\n                            \n                            \n                                hoverStyling\n                            \n                            \n                                reason\n                            \n                            \n                                selectedCondition\n                            \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                genderString\n                            \n                            \n                                    Private\n                                loadAllergies\n                            \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectCondition\n                            \n                            \n                                showAllergyHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, doctorService: DoctorService, homeComponent: HomeComponent, conditionService: ConditionService, encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        homeComponent\n                                                  \n                                                        \n                                                                        HomeComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genderString\n                        \n                        \n                    \n                \n            \n            \n                \ngenderString(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllergies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAllergyHover\n                        \n                        \n                    \n                \n            \n            \n                \nshowAllergyHover(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            advancedSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hover', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverStyling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Server\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input, Output, ViewChild } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { EncounterService } from '../../services/encounter.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { HomeComponent } from '../../components/home/home.component';\nimport { HoverBoxComponent } from '../hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\nimport { Server } from '../../models/server.model';\nimport { Condition } from '../../models/condition.model';\n\n@Injectable()\n@Component({\n  selector: 'patient',\n  templateUrl: './patient.html'\n})\nexport class PatientComponent {\n  @Input() patient: Patient;\n  server: Server;\n  selectedCondition: Condition;\n  advancedSearch = false;\n  graphConfig: any;\n\n  //allergy details\n  allergies: Array = [];\n  allergy: string = '';\n  hoverStyling: boolean = false;\n  reason: string = '';\n\n  @ViewChild('hover', { static: false }) hover: HoverBoxComponent;\n\n  constructor(\n    private cookieService: CookieService,\n    private doctorService: DoctorService,\n    private homeComponent: HomeComponent,\n    private conditionService: ConditionService,\n    private encounterService: EncounterService\n  ) {\n    this.graphConfig = JSON.parse(this.cookieService.get('graphConfig') || '{}');\n  }\n\n  genderString(patient: Patient) {\n    var s = 'Unknown';\n    switch (patient.gender) {\n      case 'female':\n        s = 'Female';\n        break;\n      case 'male':\n        s = 'Male';\n        break;\n    }\n    return s;\n  }\n\n  selectCondition(condition) {\n    this.selectedCondition = condition;\n  }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.loadAllergies();\n      this.loadEncounters();\n    }\n  }\n\n  private loadAllergies(): void {\n    this.conditionService.loadAllergies(this.patient).subscribe(allergies => {\n      if (allergies) {\n        //add allergy strings to allergies\n        this.allergies = allergies.map(allergy => allergy.code.text);\n\n        // Construct displayed allergy string\n        if (this.allergies.length == 0) {\n          this.allergy = \"None\";\n        } else if (this.allergies.length == 1) {\n          this.allergy = this.allergies[0];\n        } else {\n          this.allergy = \"Multiple...\";\n          this.hoverStyling = true;\n        }\n      }\n      else { //no allergies\n        this.allergy = \"None\";\n      }\n    });\n  }\n\n  private loadEncounters(): void {\n    // TODO: Display the reason for visit retrieved here onto the page.\n    this.encounterService.loadEncounters(this.patient).subscribe(res => {\n      // Cast the array of encounters to the proper model (Encounter).\n      let encounters = >res;\n\n      for (let enc of encounters) {\n        let reasonText = enc.getReason();\n\n        // Only print if reasonText is not null.\n        if (reasonText) {\n          this.reason = reasonText;\n        }\n      }\n    });\n  }\n\n  showAllergyHover(event) {\n    // Don't show hover box if there is only one allergy.\n    if (this.allergies.length > 1) {\n      this.hover.show(this.allergies, event);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n        \n          {{patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0]}}\n            \n               {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}}, \n            DOB: {{patient.birthDate | amDateFormat:'MM/DD/YYYY'}} ({{-1 * (patient.birthDate | amDifference:today:'years':false)}}yr)\n\t\t  \n        \n  \n  \n    \n        \n          \n            \n\t\t\t\tAllergies:\n              {{allergy}}\n            \n            Reason for Visit: {{reason}}\n          \n        \n  \n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{patient.name[0].given[0]}} {{patient.name[0].family[0]}}                           {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}},             DOB: {{patient.birthDate | amDateFormat:\\'MM/DD/YYYY\\'}} ({{-1 * (patient.birthDate | amDifference:today:\\'years\\':false)}}yr)\t\t                                                \t\t\t\tAllergies:              {{allergy}}                        Reason for Visit: {{reason}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                            \n                                    Public\n                                patientId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPatient\n                            \n                            \n                                setPatientId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPatient\n                        \n                        \n                    \n                \n            \n            \n                \nloadPatient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPatientId\n                        \n                        \n                    \n                \n            \n            \n                \nsetPatientId(patientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Patient'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { Patient } from '../models/patient.model';\n\n@Injectable()\nexport class PatientService {\n  private readonly path = '/Patient';\n\n  // The id of the currently set patient\n  public patientId: number;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  // Set the id of the patient\n  setPatientId(patientId) {\n    this.patientId = patientId;\n  }\n\n  // Retrieve the patient with the id previously set using setPatientId()\n  loadPatient(): Observable {\n    var url = this.fhirService.getUrl() + this.path + '/' + this.patientId;\n    let options = this.fhirService.getRequestOptions(true);\n\n    return this.http.get(url, options).pipe(map(res => {\n      let patient = res;\n\n      // Assign patient MRN\n      for (let id of res['identifier']) {\n        if (id.type && id.type.coding[0].code == \"MR\") {\n          patient.mrn = id.value;\n        }\n      }\n      return patient;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScratchPadUpdate.html":{"url":"components/ScratchPadUpdate.html","title":"component - ScratchPadUpdate","body":"\n                   \n\n\n\n\n\n  Components\n  ScratchPadUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/scrachpad-update.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scratchpad-update\n            \n\n\n\n\n            \n                templateUrl\n                ./scrachpad-update.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                onset\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                onRadioChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRadioChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonRadioChanged(currStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"scratchpad-update\",\n\ttemplateUrl: \"./scrachpad-update.html\"\n})\n\nexport class ScratchPadUpdate{\n\t@Input() inputData: any;\n\t\n\tdescription: string;\n\tstatus: string;\n\tonset: string;\n\t\n\tgetData(): any {\t\t\n\t\treturn {id: this.inputData.id, data: {description: this.description, status: this.status}};\n\t}\n\t\n\tonRadioChanged(currStatus: string): void {\n\t\tconsole.log(\"changing!!!\");\n\t\tthis.status = currStatus;\n\t}\n}\n    \n\n    \n        \n\n  {{inputData.data.name}} : {{inputData.data.status}}\n  \n    \n      \n    \n    \n      \n        \n          Active\n        \n        \n          Inactive\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{inputData.data.name}} : {{inputData.data.status}}                                            Active                          Inactive                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScratchPadUpdate'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectListSingle.html":{"url":"components/SelectListSingle.html","title":"component - SelectListSingle","body":"\n                   \n\n\n\n\n\n  Components\n  SelectListSingle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/select-list-single.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                select-list-single\n            \n\n\n\n\n            \n                templateUrl\n                ./select-list-single.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/select-list-single.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"select-list-single\",\n\ttemplateUrl: \"./select-list-single.html\"\n})\n\nexport class SelectListSingle{\n\t@Input() inputData: any;\n\tlistData: String;\n\t\n\tgetData(): any {\n\t\tif (this.listData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.listData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n     {{entry.description}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}            {{entry.description}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectListSingle'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Server.html":{"url":"classes/Server.html","title":"class - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/server.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/server.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Server {\n\t// name: String;\n    // url: String;\n\tconstructor(public name: string, public url: string) {\n\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartService.html":{"url":"injectables/SmartService.html","title":"injectable - SmartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SmartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aud\n                            \n                            \n                                authorizeUrl\n                            \n                            \n                                    Readonly\n                                clientId\n                            \n                            \n                                fhirBaseUrl\n                            \n                            \n                                launch\n                            \n                            \n                                    Readonly\n                                redirectUri\n                            \n                            \n                                    Readonly\n                                scope\n                            \n                            \n                                state\n                            \n                            \n                                tokenUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                findGetParameter\n                            \n                            \n                                getToken\n                            \n                            \n                                requestAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService, fhirService: FhirService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smart.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findGetParameter\n                        \n                        \n                    \n                \n            \n            \n                \nfindGetParameter(parameterName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameterName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestAuth\n                        \n                        \n                    \n                \n            \n            \n                \nrequestAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aud\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorizeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"2c304df8-711d-4de9-afbe-330c01a5ca8e\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fhirBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            launch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            redirectUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:9000\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"launch patient/*.* openid profile\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FhirService } from '../services/fhir.service';\nimport { PatientService } from '../services/patient.service';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class SmartService {\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private fhirService: FhirService,\n    private patientService: PatientService\n  ) { }\n\n  readonly clientId: string = \"2c304df8-711d-4de9-afbe-330c01a5ca8e\";\n  readonly scope: string = \"launch patient/*.* openid profile\";\n  readonly redirectUri: string = \"http://localhost:9000\";\n\n  fhirBaseUrl: string;\n  authorizeUrl: string;\n  tokenUrl: string;\n  launch: string;\n  state: string;\n  aud: string;\n\n  authenticate() {\n    this.fhirBaseUrl = this.findGetParameter(\"iss\");\n\n    if (this.fhirBaseUrl) {\n      // Occurs when arriving to the site for the first time.\n      this.aud = this.fhirBaseUrl;\n      this.launch = this.findGetParameter(\"launch\");\n\n      this.fhirService.setUrl(this.fhirBaseUrl);\n\n      const url = this.fhirService.getUrl() + '/metadata';\n      this.http.get(url, this.fhirService.getRequestOptions(false)).subscribe(data => {\n        var smartExtension = data['rest'][0].security.extension.filter(e => {\n          return (e.url === \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\");\n        });\n\n        var auth;\n        var tok;\n\n        smartExtension[0].extension.forEach(arg => {\n          if (arg.url === \"authorize\") {\n            auth = arg.valueUri;\n          } else if (arg.url === \"token\") {\n            tok = arg.valueUri;\n          }\n        });\n\n        this.tokenUrl = tok;\n        this.authorizeUrl = auth;\n\n        this.cookieService.set('tokenUrl', this.tokenUrl);\n        this.cookieService.set('fhirBaseUrl', this.fhirBaseUrl);\n\n        this.requestAuth();\n      });\n    } else {\n      // Occurs when arriving to the site after the redirect.\n      if (this.cookieService.get('state') == this.findGetParameter('state')) {\n        return this.getToken();\n      } else {\n        console.log('Stop cross-site scripting please, thanks');\n      }\n    }\n  }\n\n  getToken() {\n    var code = this.findGetParameter(\"code\");\n\n    var body = 'code=' + code\n      + '&redirect_uri=' + encodeURI(this.redirectUri)\n      + '&token_url=' + this.cookieService.get('tokenUrl');\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n\n    return this.http.post(\"https://mongo-proxy.herokuapp.com/token\",\n      body, { headers: headers });\n  }\n\n  requestAuth() {\n    //TODO Fix hashing method - not sure best way to do it\n\n    this.state = (Md5.hashStr(\"testing Hasing\")).toString();\n    this.cookieService.set('state', this.state);\n\n    var request = this.authorizeUrl + \"?response_type=code\"\n      + \"&client_id=\" + this.clientId\n      + \"&redirect_uri=\" + this.redirectUri\n      + \"&launch=\" + this.launch\n      + \"&scope=\" + this.scope\n      + \"&state=\" + this.state\n      + \"&aud=\" + this.aud;\n\n    // Comment out the below line for debugging purposes.\n    window.location.href = encodeURI(request);\n  }\n\n  findGetParameter(parameterName) {\n    let result = null;\n    let tmp = [];\n\n    location.search.substr(1).split(\"&\").forEach(item => {\n      tmp = item.split(\"=\");\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeline.html":{"url":"classes/Timeline.html","title":"class - Timeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/timeline.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Timeline {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\tcategory: Object;\n\tcode: Object;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineComponent.html":{"url":"components/TimelineComponent.html","title":"component - TimelineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline/timeline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timelines\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encounters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encounters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { EncounterService } from '../../services/encounter.service';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'timelines',\n  templateUrl: './timeline.html'\n})\nexport class TimelineComponent {\n  encounters: Array = [];\n  @Input() patient: Patient;\n\n  constructor(private encounterService: EncounterService) { }\n\n  ngOnChanges(): void {\n    this.loadEncounters();\n  }\n\n  private loadEncounters(): void {\n    if (this.patient) {\n      this.encounterService.loadEncounters(this.patient).subscribe(encounters => {\n        this.encounters = this.encounters.concat(encounters);\n        console.log('Loaded ' + this.encounters.length + ' encounters.');\n        console.log(this.encounters);\n\n        encounters.forEach(enc => enc.position = enc.getLogValue()/5 + \"%\")\n        encounters.forEach(enc =>  console.log('Log Val pos: ' + enc.getStartDate()))\n        \n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinePopupComponent.html":{"url":"components/TimelinePopupComponent.html","title":"component - TimelinePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelinePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline_popup/timeline_popup.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timeline-popup\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline_popup.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePipe\n                            \n                            \n                                hoverBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(encounter: Encounter, event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encounter\n                                    \n                                                Encounter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePipe\n\n                        \n                    \n                    \n                        \n                            Default value : new DatePipe('en-US')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hoverBox', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { HoverBoxComponent } from '../../components/hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\n\n@Component({\n  selector: 'timeline-popup',\n  templateUrl: './timeline_popup.html'\n})\n\nexport class TimelinePopupComponent {\n  @ViewChild('hoverBox', { static: false }) hoverBox: HoverBoxComponent;\n   datePipe: DatePipe = new DatePipe('en-US');\n  open(encounter: Encounter, event: MouseEvent): void {\n   \n    let details: Array = [\n      'Date: ' + this.datePipe.transform(encounter.getStartDate(),'MM-dd-yyyy').toString(),\n      'Reason: ' + (encounter.getReason() || 'None')\n    ];\n    this.hoverBox.show(details, event);\n  }\n\n  close(event: MouseEvent): void {\n    this.hoverBox.hide(event);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n        Encounter from {{condition.onsetDateTime | amTimeAgo}}\n      \n      \n        {{condition.code.coding[0].display}}\n        Code System:{{condition.code.coding[0].system}}\n        Code: {{condition.code.coding[0].code}}\n      \n      \n        Close\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×        Encounter from {{condition.onsetDateTime | amTimeAgo}}                    {{condition.code.coding[0].display}}        Code System:{{condition.code.coding[0].system}}        Code: {{condition.code.coding[0].code}}                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolBarService.html":{"url":"injectables/ToolBarService.html","title":"injectable - ToolBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToolBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toolbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftPosition\n                            \n                            \n                                topPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ToolBarService {\n  leftPosition: string;\n  topPosition: string;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/toolbar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nav2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterScratchPad\n                            \n                            \n                                resetToDefaultView\n                            \n                            \n                                runAssociationsTool\n                            \n                            \n                                switchNav\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, conditionService: ConditionService, doctorService: DoctorService, observationService: ObservationService, scratchPadService: ScratchPadService, toolbarService: ToolBarService, trendsService: HistoricalTrendsService, elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/toolbar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nfilterScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetToDefaultView\n                        \n                        \n                    \n                \n            \n            \n                \nresetToDefaultView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchNav\n                        \n                        \n                    \n                \n            \n            \n                \nswitchNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePosition\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePosition(ref: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ref\n                                    \n                                                ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nav2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ToolBarService } from '../../services/toolbar.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { ObservationService} from '../../services/observation.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.html'\n  // animations: [\n  // \ttrigger('fadeIn', [\n  // \t\tstate('in', style({ opacity: '1' })),\n  // \t\ttransition('void => *', [\n  // \t\t\tstyle({ opacity: '0' }),\n  // \t\t\tanimate('800ms ease-in')\n  // \t\t])\n  // \t])\n  // ]\n})\nexport class ToolbarComponent {\n  @Input() patient: Patient;\n  nav2: boolean = false;\n\n  constructor(\n    private associationService: AssociationService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private observationService: ObservationService,\n    private scratchPadService: ScratchPadService,\n    private toolbarService: ToolBarService,\n    private trendsService: HistoricalTrendsService,\n    private elRef: ElementRef\n  ) { }\n\n  switchNav() {\n    this.nav2 = !this.nav2;\n  }\n\n  runAssociationsTool() {\n    let checkedConditions = this.conditionService.getCheckedConditions();\n    let checkedObservations = this.observationService.getCheckedObservations();\n    this.associationService.runAssociationsTool(checkedConditions, checkedObservations);\n  }\n\n  // whenver the user presses the filter button\n  filterScratchPad() {\n    \n    // Call the filtering method in the service\n    this.scratchPadService.addConditionsToScratchPad();\n    this.scratchPadService.addObservationToScratchPad();\n\n    // also switch the views to the scratch pad view\n    this.scratchPadService.switchToScratchPad(true);\n  }\n\n  // reset to default (not scratchPad)\n  resetToDefaultView() {\n    this.scratchPadService.switchToScratchPad(false);\n  }\n\n  updatePosition(ref: ElementRef) {\n    let left = this.elRef.nativeElement.querySelector('div').style.left;\n    let top = this.elRef.nativeElement.querySelector('div').style.top;\n\n    this.toolbarService.leftPosition = (parseInt(left.replace(/px/, \"\")) + 150) + \"px\";\n    this.toolbarService.topPosition = (parseInt(top.replace(/px/, \"\")) + 100) + \"px\";\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n    \n    \n    \n    \n     \n  \n  \n    \n    \n    \n     \n    \n     \n    \n     \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripleListComponent.html":{"url":"components/TripleListComponent.html","title":"component - TripleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tripleList/tripleList.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                triplelist\n            \n\n\n\n\n            \n                templateUrl\n                ./tripleList.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                obsCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateTotal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                passThrough\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        passThrough\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTotal\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTotal(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tripleList/tripleList.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            obsCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { DoctorService } from '../../services/doctor.service';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'triplelist',\n  templateUrl: './tripleList.html'\n})\n\nexport class TripleListComponent {\n  @Input() patient: Patient;\n  @Output() passThrough: EventEmitter = new EventEmitter();\n  obsCount: number = 0;\n\n  constructor(private doctorService: DoctorService, private observationService: ObservationService) {\n    this.passThrough.emit(this.patient);\n  }\n\n  updateTotal(event) {\n    console.log(\"total:\" + event);\n    this.obsCount = event;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AddObservation', 'selector': 'addObservation'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanComponent', 'selector': 'carePlan'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'DoctorNoteComponent', 'selector': 'doctorNote'},{'name': 'Favorites', 'selector': 'favorites'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loading-animation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NewCondition', 'selector': 'newCondition'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'NoteNavigationComponent', 'selector': 'noteNavigation'},{'name': 'ObservationRecursive', 'selector': 'observationRecursion'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n\tid: number;\n\tname: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            appRoutingProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/accordionRecursion/accordionRecursion.component.ts\n            \n            component\n            AccordionRecursion\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/addObservation/addObservation.component.ts\n            \n            component\n            AddObservation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/baseColumn.ts\n            \n            class\n            BaseColumn\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/carePlan/carePlan.component.ts\n            \n            component\n            CarePlanComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n            \n            component\n            CarePlanDisplay\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n            \n            component\n            ColumnStateSwitcherComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            component\n            ConditionsComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/conditionsChart/conditionsChart.component.ts\n            \n            component\n            ConditionsChartComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n            \n            component\n            ConditionsDisplay\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/contextMenu/contextMenu.component.ts\n            \n            component\n            ContextMenuComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/doctorNote/doctorNote.component.ts\n            \n            component\n            DoctorNoteComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            component\n            Favorites\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form-builder/form-builder.component.ts\n            \n            component\n            FormBuilder\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/form_components/checkbox-inline.component.ts\n            \n            component\n            CheckboxInline\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-1.component.ts\n            \n            component\n            NormalBox1\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-2.component.ts\n            \n            component\n            NormalBox2\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/scrachpad-update.component.ts\n            \n            component\n            ScratchPadUpdate\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/form_components/select-list-single.component.ts\n            \n            component\n            SelectListSingle\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/historicalTrends/historicalTrends.component.ts\n            \n            component\n            HistoricalTrendsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/hoverBox/hoverBox.component.ts\n            \n            component\n            HoverBoxComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/hoverBox/hoverBox.component.ts\n            \n            injectable\n            HoverBoxComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/loadingAnimation/loadingAnimation.component.ts\n            \n            component\n            LoadingAnimation\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/medications/medications.component.ts\n            \n            component\n            MedicationsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/newCondition/newCondition.component.ts\n            \n            component\n            NewCondition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/noteNavigation/noteNavigation.component.ts\n            \n            component\n            NoteNavigationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursion/observationRecursion.component.ts\n            \n            component\n            ObservationRecursive\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n            \n            component\n            ObservationRecursiveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/observations/observations.component.ts\n            \n            component\n            ObservationsComponent\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/components/observationsDisplay/observationsDisplay.component.ts\n            \n            component\n            ObservationsDisplay\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            component\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            injectable\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/timeline_popup/timeline_popup.component.ts\n            \n            component\n            TimelinePopupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/tripleList/tripleList.component.ts\n            \n            component\n            TripleListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/directives/auto-grow.directive.ts\n            \n            directive\n            AutoGrowDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/directives/highlight.directive.ts\n            \n            directive\n            HighlightDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/allergyIntolerance.model.ts\n            \n            class\n            AllergyIntolerance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/associable.model.ts\n            \n            interface\n            Associable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Bundle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/carePlan.model.ts\n            \n            class\n            CarePlan\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/chart.model.ts\n            \n            class\n            Chart\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/client.model.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/condition.model.ts\n            \n            class\n            Condition\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/encounter.model.ts\n            \n            class\n            Encounter\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/form.model.ts\n            \n            class\n            Form\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/medication.model.ts\n            \n            class\n            Medication\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/observation.model.ts\n            \n            class\n            Observation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/patient.model.ts\n            \n            class\n            Patient\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/server.model.ts\n            \n            class\n            Server\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/timeline.model.ts\n            \n            class\n            Timeline\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pipes/humanizeBytes.pipe.ts\n            \n            pipe\n            HumanizeBytesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/carePlan.service.ts\n            \n            injectable\n            CarePlanService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/condition.service.ts\n            \n            injectable\n            ConditionService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/doctor.service.ts\n            \n            injectable\n            DoctorService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/encounter.service.ts\n            \n            injectable\n            EncounterService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/fhir.service.ts\n            \n            injectable\n            FhirService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/historicalTrends.service.ts\n            \n            injectable\n            HistoricalTrendsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/map.service.ts\n            \n            injectable\n            MapService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/observation.service.ts\n            \n            injectable\n            ObservationService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/services/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/scratchPad.service.ts\n            \n            injectable\n            ScratchPadService\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/services/smart.service.ts\n            \n            injectable\n            SmartService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/toolbar.service.ts\n            \n            injectable\n            ToolBarService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/cli : ^8.3.25\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            angular2-router-loader : ^0.3.5\n        \n            bootstrap : ^3.3.7\n        \n            concurrently : ^3.4.0\n        \n            install : ^0.8.9\n        \n            jquery : ^3.2.1\n        \n            lite-server : ^2.3.0\n        \n            moment : ^2.24.0\n        \n            ngx-contextmenu : ^5.3.0\n        \n            ngx-cookie-service : ^2.3.0\n        \n            ngx-moment : ^3.5.0\n        \n            reflect-metadata : ^0.1.10\n        \n            rxjs : ^6.5.4\n        \n            rxjs-compat : ^6.5.4\n        \n            systemjs : ^0.19.47\n        \n            ts-md5 : ^1.2.0\n        \n            tslib : ^1.9.0\n        \n            typescript : ^3.4.5\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPatient Viewer\nFront-end project for context-driven clinical transactions.\nPreparing the Application\nThis is an Angular 7 project using grunt as the build system, SASS for CSS, and Bootstrap for layout. npm is the package manager. \nAssuming you already have node installed via brew install node or similar, begin by running the following commands in the terminal:\ngit clone https://github.com/HII-C/patient_viewer.git\ncd patient_viewer\nnpm install -g grunt typings\nnpm install # to install project development dependencies\ntypings install # to install TypeScript declarationsIf you do not have npm installed and brew install node does not work as expected, you may need to follow the instructions here to install the brew package manager. The project was tested specifically with node version 10.19.0.\nDevelopment Guidelines\nDo's:\n\nPrefer to use let rather than var for declaring variables. The scoping for variables declared with var is unintuitive and can result in strange bugs.\nPrefer to create models (such as Encounter) rather than dealing with JSON directly. By doing so, we can take advantage of Typescript's type checking and code completion.\n\nDont's:\n\nAvoid using libraries like jQuery. Also avoid using any other approach to accessing the DOM directly (ie, document.getElementById(..)).\nAvoid leaving console.log(..) statements in the code when pushing to the repository. You can use them while developing locally but it can cause clutter in the repository.\nWrite a brief comment above each component and method that you write giving a brief overview of the functionality. If some code is particularly complex, place comments within the body of the method too.\nAvoid writing components that are very similar to one another. Instead, create a generic component that supports all use cases through an interface (examples are contextMenu.component.ts and hoverBox.component.ts).\n\nRunning the Application\nTo launch in development mode, run the following terminal command from the patient_viewer folder:\ngrunt --force # to serve the project and automatically recompile on file changesThen, do the following:\n\nVisit HSPC Sandbox, select the \"HII-C\" sandbox, choose the \"Apps\" option from the left menu, click on the \"HII-C Confidential\" app, and then click \"Launch\" on the right.\nSelect the patient Adams, Daniel X in the popup. This should open the Patient Viewer application.\nOnce you are done running Patient Viewer, make sure to terminate the grunt --force command in the terminal.\n\nBuilding for Production (Tech Team Only)\nFirst, build:\ngrunt clean # to remove all existing compiled files\ngrunt build # to build your local copy with any local changesThen, assuming you've already familiar with Docker awesomeness and have it installed, plop the build into a wicked-fast nginx web server container using the including Dockerfile with:\ndocker build -t p3000/healthcreek-ui:latest . # though you probably want your own repo and tag strings :)Production Deployment (Tech Team Only)\nExtremely easy in your existing Dockerized hosting environment. Just:\ndocker run -d -p 9000:80 --restart unless-stopped p3000/healthcreek-ui:latest # or any official tagAnd you're done. No environment variables or further configuration are needed. Jedi's may use your existing Kubernetes, Open Shift etc installations as you see fit. :)\nLicense\nApache 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormCreatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAddObservation\n\nAddObservation\n\nAppModule -->\n\nAddObservation->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanComponent\n\nCarePlanComponent\n\nAppModule -->\n\nCarePlanComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nDoctorNoteComponent\n\nDoctorNoteComponent\n\nAppModule -->\n\nDoctorNoteComponent->AppModule\n\n\n\n\n\nFavorites\n\nFavorites\n\nAppModule -->\n\nFavorites->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nNewCondition\n\nNewCondition\n\nAppModule -->\n\nNewCondition->AppModule\n\n\n\n\n\nNoteNavigationComponent\n\nNoteNavigationComponent\n\nAppModule -->\n\nNoteNavigationComponent->AppModule\n\n\n\n\n\nObservationRecursive\n\nObservationRecursive\n\nAppModule -->\n\nObservationRecursive->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    35 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../conditions.component.ts)\n                        \n                        \n                            appRoutingProviders   (src/.../app.module.ts)\n                        \n                        \n                            routing   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/conditions/conditions.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutingProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
