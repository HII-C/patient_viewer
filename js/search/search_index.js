var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AccordionRecursion.html",[0,0.145,1,0.758]],["body/components/AccordionRecursion.html",[0,0.244,1,1.278,2,0.915,3,0.077,4,0.077,5,0.7,6,0.674,7,0.7,8,0.052,9,2.668,10,0.575,11,1.697,12,1.028,13,4.515,14,0.128,15,0.31,16,4.641,17,5.349,18,0.821,19,4.515,20,3.243,21,4.515,22,4.515,23,4.515,24,1.398,25,5.349,26,5.349,27,5.894,28,5.349,29,0.468,30,2.668,31,3.097,32,0.276,33,4.515,34,0.914,35,0.015,36,0.579,37,0.245,38,0.954,39,2.383,40,3.076,41,3.076,42,3.076,43,3.076,44,4.515,45,3.076,46,5.894,47,0.874,48,3.076,49,1.103,50,4.515,51,3.076,52,3.076,53,3.076,54,3.076,55,3.076,56,1.792,57,0.553,58,0.509,59,2.024,60,3.076,61,0.399,62,1.732,63,1.604,64,0.32,65,2.04,66,0.089,67,0.097,68,3.076,69,2.15,70,3.316,71,3.826,72,3.076,73,5.349,74,2.798,75,3.076,76,3.229,77,0.304,78,3.076,79,2.668,80,1.068,81,2.668,82,2.2,83,3.076,84,2.668,85,1.574,86,3.917,87,0.879,88,2.302,89,1.859,90,1.692,91,2.203,92,1.524,93,2.524,94,2.04,95,2.2,96,2.798,97,3.076,98,2.798,99,1.267,100,2.2,101,2.4,102,3.076,103,2.668,104,3.523,105,3.076,106,1.117,107,1.604,108,2.2,109,2.04,110,3.076,111,3.076,112,2.631,113,5.349,114,3.076,115,3.076,116,3.076,117,4.515,118,3.076,119,2.668,120,3.076,121,2.668,122,3.229,123,3.076,124,3.523,125,3.076,126,1.906,127,2.4,128,2.2,129,3.076,130,3.076,131,3.076,132,2.4,133,3.076,134,2.668,135,3.917,136,3.076,137,3.076,138,1.228,139,3.076,140,3.076,141,3.076,142,2.04,143,3.917,144,2.2,145,3.076,146,3.076,147,2.04,148,1.451,149,2.2,150,4.515,151,4.515,152,0.623,153,1.028,154,1.028,155,0.575,156,0.7,157,0.7,158,0.599,159,0.7,160,0.599,161,0.7,162,0.599,163,0.7,164,0.599,165,0.7,166,0.599,167,0.7,168,0.7,169,0.599,170,0.7,171,0.599,172,0.7,173,0.599,174,0.7,175,0.599,176,0.7,177,0.575,178,0.7,179,0.599,180,0.599,181,0.7,182,0.599,183,0.7,184,0.599,185,0.7,186,0.599,187,0.7,188,0.599,189,0.7,190,0.599,191,0.7,192,0.599,193,0.951,194,0.951,195,0.7,196,0.599,197,0.7,198,0.599,199,0.7,200,0.599,201,0.7,202,0.599,203,0.7,204,0.599,205,0.7,206,0.599,207,0.7,208,0.7,209,0.599,210,0.674,211,0.7,212,0.599,213,0.7,214,0.599,215,0.623,216,0.7,217,0.599,218,0.7,219,0.599,220,0.7,221,0.599,222,0.623,223,0.7,224,0.623,225,0.674,226,0.7,227,0.006,228,0.008,229,0.006]],["title/components/AccountComponent.html",[0,0.145,158,0.758]],["body/components/AccountComponent.html",[0,0.202,1,0.613,2,0.93,3,0.078,4,0.078,5,0.717,6,0.689,7,0.717,8,0.053,10,0.589,11,1.7,12,1.045,14,0.131,15,0.315,18,0.639,29,0.478,32,0.266,34,0.668,35,0.015,36,0.527,37,0.226,38,0.698,47,0.755,49,1.014,56,1.816,57,1.139,58,1.049,59,1.191,61,0.406,64,0.328,66,0.091,67,0.099,77,0.536,80,1.717,87,1.234,89,1.891,91,2.454,93,1.485,106,1.667,107,1.641,138,1.115,142,3.045,143,5.169,144,3.283,152,0.638,153,1.045,154,1.045,155,0.589,156,0.717,157,0.717,158,1.16,159,0.717,160,0.613,161,0.717,162,0.613,163,0.717,164,0.613,165,0.717,166,0.613,167,0.717,168,0.717,169,0.613,170,0.717,171,0.613,172,0.717,173,0.613,174,0.717,175,0.613,176,0.717,177,0.589,178,0.717,179,0.613,180,0.613,181,0.717,182,0.613,183,0.717,184,0.613,185,0.717,186,0.613,187,0.717,188,0.613,189,0.717,190,0.613,191,0.717,192,0.613,193,0.967,194,0.967,195,0.717,196,0.613,197,0.717,198,0.613,199,0.717,200,0.613,201,0.717,202,0.613,203,0.717,204,0.613,205,0.717,206,0.613,207,0.717,208,0.717,209,0.613,210,0.689,211,0.717,212,0.613,213,0.717,214,0.613,215,1.098,216,0.717,217,0.613,218,0.717,219,0.613,220,0.717,221,0.613,222,0.638,223,0.717,224,0.638,225,0.689,226,0.717,227,0.006,228,0.008,229,0.006,230,2.73,231,3.583,232,4.591,233,5.42,234,5.42,235,5.42,236,5.42,237,5.42,238,4.591,239,5.958,240,5.958,241,3.147,242,3.122,243,4.591,244,4.591,245,4.702,246,3.147,247,2.526,248,3.147,249,3.147,250,4.591,251,4.591,252,4.591,253,4.591,254,3.147,255,4.591,256,4.591,257,4.591,258,4.591,259,4.591,260,4.591,261,4.591,262,4.591,263,4.591,264,3.147,265,4.591,266,4.591,267,4.591,268,3.983,269,4.591,270,4.591,271,4.591,272,3.147,273,3.147,274,1.95,275,3.147,276,3.147,277,3.147,278,3.147,279,3.147,280,3.147,281,5.42,282,4.591,283,4.591,284,4.591,285,5.958,286,4.591,287,4.591,288,4.591,289,4.591,290,3.983,291,3.983,292,4.591,293,4.591,294,3.583,295,3.983,296,4.591,297,4.591,298,4.591,299,3.045,300,3.583,301,4.591,302,3.583,303,5.162,304,4.591,305,3.983,306,4.591,307,3.583,308,4.591,309,4.591,310,3.983,311,4.591,312,5.463,313,2.067,314,7.001,315,4.591,316,3.583,317,4.591,318,3.983]],["title/classes/AllergyIntolerance.html",[67,0.122,319,2.782]],["body/classes/AllergyIntolerance.html",[3,0.149,4,0.149,8,0.101,14,0.248,15,0.481,32,0.261,35,0.015,37,0.246,66,0.173,67,0.188,77,0.736,227,0.011,228,0.013,229,0.011,319,5.017,320,2.085,321,5.187,322,3.066,323,2.703,324,3.118,325,5.979,326,5.979,327,2.693]],["title/components/AppComponent.html",[0,0.145,160,0.758]],["body/components/AppComponent.html",[0,0.27,1,0.897,2,1.21,3,0.115,4,0.115,5,1.049,6,1.009,7,1.049,8,0.078,10,0.862,11,1.743,12,1.36,29,1.007,32,0.172,35,0.015,36,0.552,61,0.407,64,0.48,66,0.133,67,0.145,87,0.897,138,1.312,152,0.933,153,1.36,154,1.36,155,0.862,156,1.049,157,1.049,158,0.897,159,1.049,160,1.365,161,1.049,162,0.897,163,1.049,164,0.897,165,1.049,166,0.897,167,1.049,168,1.049,169,0.897,170,1.049,171,0.897,172,1.049,173,0.897,174,1.049,175,0.897,176,1.049,177,0.862,178,1.049,179,0.897,180,0.897,181,1.049,182,0.897,183,1.049,184,0.897,185,1.049,186,0.897,187,1.049,188,0.897,189,1.049,190,0.897,191,1.049,192,0.897,193,1.258,194,1.258,195,1.049,196,0.897,197,1.049,198,0.897,199,1.049,200,0.897,201,1.049,202,0.897,203,1.049,204,0.897,205,1.049,206,0.897,207,1.049,208,1.049,209,0.897,210,1.009,211,1.049,212,0.897,213,1.049,214,0.897,215,0.933,216,1.049,217,0.897,218,1.049,219,0.897,220,1.049,221,0.897,222,0.933,223,1.049,224,0.933,225,1.009,226,1.049,227,0.008,228,0.011,229,0.008,231,4.66,316,4.66,328,3.996,329,1.484,330,5.18,331,5.971,332,3.701,333,5.18,334,5.971,335,4.606,336,5.971,337,5.18]],["title/modules/AppModule.html",[338,2.412,339,2.782]],["body/modules/AppModule.html",[0,0.23,1,1.2,2,0.527,3,0.065,4,0.065,8,0.044,31,2.908,35,0.015,61,0.716,64,0.415,66,0.075,67,0.082,88,1.12,90,2.663,92,1.289,152,0.527,158,1.249,160,1.39,162,1.2,164,1.2,169,1.2,171,1.2,173,1.2,175,1.2,177,1.153,179,1.2,182,1.249,184,1.288,186,1.2,188,1.2,190,1.2,198,1.2,200,1.2,202,1.2,204,1.2,212,1.2,214,1.2,217,1.2,219,1.2,221,0.507,227,0.005,228,0.007,229,0.005,231,2.03,242,2.908,330,2.257,338,1.613,339,5.904,340,1.725,341,1.725,342,3.776,343,2.999,344,3.776,345,2.03,346,2.257,347,2.257,348,2.257,349,2.257,350,2.257,351,4.087,352,3.391,353,3.591,354,2.908,355,3.591,356,2.432,357,3.214,358,3.82,359,3.391,360,2.432,361,3.82,362,3.82,363,3.108,364,1.613,365,1.725,366,2.03,367,4.703,368,3.455,369,3.982,370,3.982,371,2.602,372,2.257,373,2.602,374,2.602,375,2.602,376,2.602,377,2.602,378,2.602,379,2.602,380,2.602,381,2.602,382,2.602,383,2.602,384,2.602,385,2.602,386,2.602,387,2.602,388,2.602,389,2.602,390,2.602,391,2.03,392,2.602,393,2.602,394,2.602,395,2.602,396,2.602,397,2.602,398,2.602,399,1.571,400,2.641,401,2.192,402,1.613,403,2.602,404,2.602,405,2.602,406,2.602,407,2.602,408,2.602,409,2.602,410,2.602,411,2.602,412,2.602,413,2.602,414,2.602,415,2.602,416,3.982,417,1.516,418,3.982,419,2.257,420,1.725,421,3.455,422,3.455,423,3.108,424,1.861,425,3.455,426,2.03,427,3.982,428,1.357,429,2.03,430,2.03,431,2.257,432,3.982,433,2.602,434,2.602,435,3.209,436,2.602,437,3.36,438,2.257,439,3.108,440,3.108,441,2.257,442,1.516,443,2.602]],["title/interfaces/Associable.html",[444,2.58,445,2.412]],["body/interfaces/Associable.html",[3,0.157,4,0.157,8,0.107,35,0.014,66,0.182,227,0.012,228,0.013,229,0.012,444,4.174,445,4.48,446,6.294,447,5.46]],["title/injectables/AssociationService.html",[352,2.141,448,0.957]],["body/injectables/AssociationService.html",[3,0.084,4,0.084,8,0.057,14,0.139,15,0.33,18,0.669,29,0.731,31,3.287,32,0.265,34,0.946,35,0.015,36,0.541,37,0.236,38,0.988,47,0.855,49,0.628,57,1.01,58,0.93,61,0.597,64,0.35,66,0.097,67,0.105,77,0.332,80,1.851,88,3.206,89,1.98,92,3.692,103,2.911,148,3.191,227,0.006,228,0.009,229,0.006,247,1.846,322,2.785,352,2.646,354,3.287,428,1.75,437,3.484,448,1.183,449,1.444,450,2.911,451,5.621,452,5.621,453,1.894,454,4.809,455,4.809,456,5.621,457,4.172,458,2.225,459,3.577,460,4.809,461,2.802,462,4.809,463,3.355,464,4.484,465,4.172,466,4.809,467,3.526,468,3.355,469,3.753,470,3.355,471,6.042,472,3.355,473,5.326,474,4.809,475,3.355,476,4.724,477,2.057,478,3.355,479,4.809,480,4.809,481,4.172,482,4.172,483,4.809,484,4.809,485,4.809,486,3.355,487,3.355,488,3.355,489,1.955,490,2.225,491,1.846,492,4.172,493,2.07,494,3.355,495,2.911,496,3.355,497,3.093,498,4.39,499,1.955,500,2.618,501,3.355,502,3.355,503,3.355,504,3.355,505,3.355,506,3.355,507,3.355,508,6.498,509,4.172,510,3.355,511,4.809,512,3.355,513,4.809,514,3.355,515,4.809,516,4.172,517,1.955,518,3.355,519,4.809,520,3.355,521,2.618,522,3.355,523,3.355,524,4.809,525,4.809,526,4.809,527,3.355,528,4.809,529,3.355,530,4.809,531,3.355,532,4.809,533,3.355,534,2.911,535,1.382,536,3.355,537,3.355,538,3.355,539,3.439,540,2.225,541,4.809,542,3.355,543,3.355,544,3.355,545,3.355,546,2.911,547,3.355,548,3.355]],["title/directives/AutoGrowDirective.html",[155,0.728,222,0.788]],["body/directives/AutoGrowDirective.html",[3,0.134,4,0.134,8,0.091,10,1.004,11,1.385,14,0.223,18,0.915,29,0.816,32,0.265,34,0.781,35,0.015,36,0.447,37,0.177,38,0.816,47,0.915,49,1.23,61,0.474,64,0.559,66,0.155,67,0.169,107,2.799,155,1.23,221,1.045,222,1.332,227,0.01,228,0.012,229,0.01,453,1.32,549,6.428,550,4.656,551,6.576,552,7.602,553,7.602,554,4.656,555,5.299,556,6.798,557,5.367,558,5.705,559,5.367,560,5.367,561,5.367,562,4.656,563,5.367,564,5.367,565,6.576,566,5.705,567,5.367,568,5.367,569,5.367]],["title/classes/BaseColumn.html",[67,0.122,570,2.141]],["body/classes/BaseColumn.html",[3,0.098,4,0.098,8,0.067,14,0.163,15,0.369,18,0.748,29,0.931,32,0.276,34,0.572,35,0.015,36,0.327,37,0.202,38,0.598,39,2.39,47,0.916,49,1.231,57,1.332,58,1.089,61,0.475,66,0.114,67,0.236,70,4.08,77,0.531,90,4.185,106,2.502,112,3.132,134,4.663,147,2.609,227,0.007,228,0.01,229,0.007,300,3.069,320,1.372,329,1.731,332,3.332,399,2.121,493,2.313,570,2.958,571,3.413,572,3.844,573,4.195,574,4.663,575,3.844,576,4.663,577,6.124,578,5.375,579,4.195,580,3.432,581,4.365,582,3.357,583,3.357,584,4.379,585,4.061,586,4.379,587,3.844,588,4.365,589,4.365,590,4.707,591,3.933,592,3.933,593,4.57,594,3.565,595,3.933,596,3.844,597,3.933,598,3.844,599,3.844,600,3.844,601,3.565,602,3.844,603,3.933,604,4.08,605,4.928,606,3.933,607,3.835,608,3.261,609,5.088,610,3.71,611,3.933,612,3.933,613,3.069,614,1.856,615,3.933,616,2.609,617,2.165,618,5.375,619,3.933,620,5.375,621,3.933,622,3.933,623,3.933,624,3.933,625,3.933,626,3.933,627,3.069,628,3.933,629,2.292,630,3.933]],["title/classes/Bundle.html",[67,0.122,631,2.141]],["body/classes/Bundle.html",[3,0.147,4,0.147,8,0.1,14,0.246,15,0.478,32,0.26,35,0.015,37,0.231,66,0.202,67,0.219,77,0.689,80,1.812,227,0.011,228,0.013,229,0.011,320,2.064,631,3.838,632,4.62,633,6.433,634,5.476,635,5.92,636,5.92,637,5.136,638,2.794]],["title/classes/CarePlan.html",[67,0.122,442,2.267]],["body/classes/CarePlan.html",[3,0.125,4,0.125,8,0.085,14,0.208,15,0.433,32,0.283,35,0.015,37,0.261,39,1.824,56,1.683,58,0.832,61,0.444,66,0.145,67,0.158,77,0.809,99,2.599,227,0.009,228,0.012,229,0.009,320,1.752,322,2.599,323,2.506,324,3.291,327,2.263,329,2.223,442,3.678,445,4.278,464,4.186,539,3.593,639,4.359,640,4.514,641,6.901,642,4.936,643,4.219,644,5.385,645,5.024,646,5.024,647,5.024,648,5.024,649,5.024,650,5.024,651,3.921,652,3.114,653,3.473,654,2.928,655,5.024,656,5.024,657,5.024,658,5.024,659,5.024,660,4.359,661,5.024,662,5.024,663,3.593]],["title/components/CarePlanDisplay.html",[0,0.145,162,0.758]],["body/components/CarePlanDisplay.html",[0,0.19,1,0.554,2,0.864,3,0.071,4,0.071,5,0.648,6,0.624,7,0.648,8,0.048,10,0.533,11,1.687,12,0.971,14,0.118,15,0.292,18,0.712,24,1.32,29,0.433,32,0.274,34,0.929,35,0.015,36,0.579,37,0.238,38,0.97,47,0.921,49,1.194,56,2.33,57,0.512,58,0.471,59,2.414,61,0.501,62,1.176,63,2.223,64,0.297,66,0.082,67,0.089,74,1.765,77,0.505,80,1.21,87,0.83,88,1.835,89,1.756,106,1.034,107,1.485,109,1.888,122,3.656,138,1.062,152,0.577,153,0.971,154,0.971,155,0.533,156,0.648,157,0.648,158,0.554,159,0.648,160,0.554,161,0.648,162,1.242,163,0.648,164,0.554,165,0.648,166,0.554,167,1.164,168,0.648,169,0.554,170,0.648,171,0.554,172,0.648,173,0.554,174,0.648,175,0.554,176,0.648,177,1.062,178,0.648,179,0.554,180,0.554,181,0.648,182,0.554,183,0.648,184,0.554,185,0.648,186,0.554,187,0.648,188,0.554,189,0.648,190,0.554,191,0.648,192,0.554,193,0.898,194,0.898,195,0.648,196,0.554,197,0.648,198,0.554,199,0.648,200,0.554,201,0.648,202,0.554,203,0.648,204,0.554,205,0.648,206,0.554,207,0.648,208,0.648,209,0.554,210,0.624,211,0.648,212,0.554,213,0.648,214,0.554,215,0.577,216,0.648,217,0.554,218,0.648,219,0.554,220,0.648,221,0.554,222,0.577,223,0.648,224,0.577,225,0.624,226,0.648,227,0.005,228,0.008,229,0.005,247,3.123,299,1.888,313,2.737,327,2.302,329,1.373,360,2.684,442,4.455,477,0.954,493,1.835,499,2.485,517,2.485,535,1.048,562,2.47,580,1.485,582,2.012,583,2.012,608,2.113,610,1.485,652,2.643,654,2.485,664,2.47,665,4.264,666,3.989,667,3.542,668,4.264,669,4.264,670,4.264,671,3.049,672,4.059,673,4.059,674,4.264,675,4.031,676,2.643,677,5.111,678,2.222,679,4.264,680,2.847,681,3.307,682,2.847,683,4.264,684,2.847,685,4.264,686,5.676,687,2.847,688,4.264,689,2.847,690,3.049,691,2.847,692,2.827,693,2.847,694,2.847,695,4.264,696,2.847,697,2.847,698,1.659,699,3.049,700,2.223,701,2.847,702,1.765,703,1.344,704,2.036,705,2.222,706,1.659,707,1.888,708,1.173,709,2.485,710,2.827,711,3.518,712,1.888,713,2.036,714,1.888,715,1.888,716,1.888,717,2.036,718,2.813,719,1.888,720,1.888,721,1.888,722,1.888,723,3.39,724,3.168,725,3.39,726,2.222,727,3.989,728,2.847,729,3.656,730,2.036,731,4.264,732,2.222,733,1.659,734,2.222,735,2.847,736,2.485,737,2.847,738,2.847,739,2.036,740,1.765,741,2.847,742,2.847,743,2.47,744,2.47,745,2.222,746,2.847,747,2.036,748,2.036,749,2.847,750,2.847,751,2.47,752,4.264,753,3.699,754,3.049,755,2.036,756,2.036,757,2.222,758,2.222,759,2.847,760,4.264,761,4.264,762,2.847]],["title/injectables/CarePlanService.html",[353,2.267,448,0.957]],["body/injectables/CarePlanService.html",[3,0.104,4,0.104,8,0.071,14,0.173,15,0.384,18,0.779,29,0.851,32,0.251,34,0.919,35,0.015,36,0.526,37,0.223,38,0.96,47,0.779,57,0.75,58,0.691,61,0.672,64,0.435,66,0.121,67,0.131,77,0.413,80,1.324,94,3.712,95,4.003,227,0.008,228,0.01,229,0.008,353,3.261,356,2.857,428,2.177,437,3.913,442,3.679,448,1.376,449,1.797,453,1.73,459,3.931,461,3.679,476,4.187,477,2.356,535,1.78,614,1.97,616,2.769,631,2.298,638,1.97,642,2.986,652,2.588,654,2.433,675,2.769,705,3.258,718,2.298,763,3.622,764,5.597,765,5.597,766,2.588,767,5.597,768,5.597,769,2.435,770,4.175,771,4.36,772,5.597,773,4.175,774,2.769,775,1.647,776,4.36,777,3.258,778,2.986,779,3.913,780,3.913,781,2.588,782,2.986,783,3.258,784,2.588,785,2.986,786,3.622,787,3.258,788,3.622,789,3.622,790,3.258,791,3.258,792,3.622,793,4.175,794,3.258,795,3.622,796,4.175,797,2.433,798,4.175,799,4.175,800,4.175,801,4.856,802,4.175,803,4.175,804,3.258,805,3.622,806,5.597,807,4.175,808,4.175,809,3.622,810,4.175,811,4.175,812,4.175,813,3.622,814,4.175,815,4.175,816,4.175]],["title/components/CarePlansComponent.html",[0,0.145,164,0.758]],["body/components/CarePlansComponent.html",[0,0.224,1,0.542,2,0.849,3,0.069,4,0.069,5,0.634,6,0.61,7,0.634,8,0.047,10,0.521,11,1.683,12,0.954,14,0.115,15,0.287,18,0.584,20,3.088,24,1.298,29,0.637,32,0.278,34,0.61,35,0.015,36,0.501,37,0.229,38,0.637,39,1.522,47,0.881,49,1.126,56,1.404,57,1.18,58,0.929,59,1.586,61,0.597,62,1.156,64,0.29,66,0.081,67,0.176,70,2.598,77,0.275,80,0.992,85,0.97,87,1.346,89,1.146,90,2.775,94,5.022,95,5.34,99,1.726,106,1.522,112,1.622,138,1.05,149,1.991,152,0.564,153,0.954,154,0.954,155,0.521,156,0.634,157,0.634,158,0.542,159,0.634,160,0.542,161,0.634,162,0.542,163,0.634,164,1.093,165,0.634,166,0.542,167,0.634,168,0.634,169,0.542,170,0.634,171,0.542,172,0.634,173,0.542,174,0.634,175,0.542,176,0.634,177,0.521,178,0.634,179,0.542,180,0.542,181,0.634,182,0.542,183,0.634,184,0.542,185,0.634,186,0.542,187,0.634,188,0.542,189,0.634,190,0.542,191,0.634,192,0.542,193,0.883,194,0.883,195,0.634,196,0.542,197,0.634,198,0.542,199,0.634,200,0.542,201,0.634,202,0.542,203,0.634,204,0.542,205,0.634,206,0.542,207,0.954,208,0.634,209,0.542,210,0.61,211,0.634,212,0.542,213,0.634,214,0.542,215,0.564,216,0.634,217,0.542,218,0.634,219,0.542,220,0.634,221,0.542,222,0.564,223,0.634,224,0.564,225,0.61,226,0.634,227,0.005,228,0.008,229,0.005,313,2.711,329,1.35,353,3.825,356,2.496,360,2.59,399,1.098,442,2.938,453,1.24,493,2.415,535,0.684,570,3.937,572,1.991,580,1.451,581,1.846,582,3.098,583,3.098,584,2.998,585,2.78,586,2.998,587,2.998,588,3.344,589,3.344,590,3.606,593,2.78,594,1.846,596,1.991,598,1.991,599,1.991,600,1.991,601,1.846,602,1.991,604,2.598,605,1.991,607,2.443,608,2.781,609,3.606,610,2.629,614,1.314,675,4.195,703,1.314,705,2.172,706,2.443,708,2.311,727,3.271,740,1.725,753,2.415,766,1.725,769,2.181,775,1.098,817,2.415,818,3.637,819,4.192,820,4.192,821,2.78,822,3.271,823,4.192,824,5.042,825,5.042,826,5.612,827,4.192,828,3.271,829,2.783,830,2.783,831,4.192,832,3.637,833,5.123,834,2.172,835,2.172,836,2.172,837,2.172,838,2.783,839,3.271,840,2.783,841,2.598,842,3.992,843,2.783,844,4.192,845,3.478,846,3.637,847,4.192,848,3.935,849,2.783,850,2.172,851,2.172,852,2.172,853,1.846,854,2.415,855,1.991,856,2.172,857,2.783,858,2.415,859,2.783,860,2.172,861,3.271,862,1.991,863,1.532,864,2.783,865,2.783,866,2.172,867,2.783,868,2.783]],["title/classes/Chart.html",[67,0.122,869,2.58]],["body/classes/Chart.html",[3,0.121,4,0.121,8,0.082,14,0.201,15,0.423,32,0.289,35,0.015,36,0.595,37,0.263,39,2.782,56,2.067,57,0.871,58,1.182,66,0.14,67,0.152,69,2.128,77,0.729,80,1.46,98,3.003,99,1.995,128,3.465,227,0.009,228,0.011,229,0.009,312,4.813,320,1.689,322,2.795,324,3.539,401,3.394,420,4.5,497,2.666,644,5.296,663,3.465,708,1.995,739,4.412,869,5.001,870,4.204,871,6.786,872,6.786,873,6.786,874,6.786,875,6.786,876,4.845,877,4.845,878,4.845,879,4.845,880,4.845,881,4.845,882,4.845,883,4.845,884,3.781,885,4.845,886,4.204,887,4.204,888,4.204,889,4.204,890,4.204,891,3.781,892,4.204,893,4.204,894,4.845,895,4.845,896,4.204,897,4.204,898,3.781]],["title/components/CheckboxInline.html",[0,0.145,166,0.758]],["body/components/CheckboxInline.html",[0,0.237,1,0.826,2,1.146,3,0.106,4,0.106,5,0.966,6,0.929,7,0.966,8,0.072,10,0.793,11,1.735,12,1.288,14,0.176,15,0.388,18,0.787,24,1.751,32,0.263,35,0.015,36,0.53,37,0.21,47,0.787,49,0.793,56,1.895,57,1.016,58,0.936,59,1.604,61,0.375,62,1.56,64,0.442,66,0.123,67,0.133,77,0.559,87,0.826,91,1.746,138,1.323,152,0.859,153,1.288,154,1.288,155,0.793,156,0.966,157,0.966,158,0.826,159,0.966,160,0.826,161,0.966,162,0.826,163,0.966,164,0.826,165,0.966,166,1.322,167,1.61,168,0.966,169,0.826,170,0.966,171,0.826,172,0.966,173,0.826,174,0.966,175,0.826,176,0.966,177,0.793,178,0.966,179,0.826,180,0.826,181,0.966,182,0.826,183,0.966,184,0.826,185,0.966,186,0.826,187,0.966,188,0.826,189,0.966,190,0.826,191,0.966,192,0.826,193,1.191,194,1.191,195,0.966,196,0.826,197,0.966,198,0.826,199,0.966,200,0.826,201,0.966,202,0.826,203,0.966,204,0.826,205,0.966,206,0.826,207,0.966,208,0.966,209,0.826,210,0.929,211,0.966,212,0.826,213,0.966,214,0.826,215,0.859,216,0.966,217,0.826,218,0.966,219,0.826,220,0.966,221,0.826,222,0.859,223,0.966,224,0.859,225,0.929,226,0.966,227,0.008,228,0.01,229,0.008,673,4.854,899,6.309,900,3.679,901,5.655,902,5.655,903,6.362,904,6.362,905,3.708,906,4.219,907,4.24,908,4.24,909,4.24,910,4.24,911,4.24,912,3.679,913,4.24,914,3.75,915,4.906]],["title/classes/Client.html",[67,0.122,916,3.036]],["body/classes/Client.html",[3,0.15,4,0.15,8,0.103,14,0.251,15,0.484,32,0.263,35,0.015,36,0.622,37,0.233,67,0.19,77,0.761,227,0.011,228,0.013,229,0.011,320,2.106,323,2.715,916,5.507,917,5.24,918,6.04,919,6.04]],["title/components/ColumnStateSwitcherComponent.html",[0,0.145,169,0.758]],["body/components/ColumnStateSwitcherComponent.html",[0,0.26,1,0.659,2,0.98,3,0.084,4,0.084,5,0.77,6,0.741,7,0.77,8,0.057,10,0.633,11,1.71,12,1.101,14,0.14,18,0.673,24,1.498,29,0.735,32,0.252,34,0.492,35,0.015,36,0.513,37,0.215,38,0.514,39,2.462,47,0.786,49,0.905,57,1.171,61,0.499,62,1.557,64,0.352,66,0.098,67,0.106,74,2.998,77,0.478,85,1.686,87,0.659,88,2.43,90,4.184,91,1.992,92,2.797,98,2.998,124,3.774,138,1.153,147,3.207,152,0.685,153,1.101,154,1.101,155,0.633,156,0.77,157,0.77,158,0.659,159,0.77,160,0.659,161,0.77,162,0.659,163,0.77,164,0.659,165,0.77,166,0.659,167,0.77,168,0.77,169,1.2,170,0.77,171,0.659,172,0.77,173,0.659,174,0.77,175,0.659,176,0.77,177,0.633,178,0.77,179,0.659,180,0.659,181,0.77,182,0.659,183,0.77,184,0.659,185,0.77,186,0.659,187,0.77,188,0.659,189,0.77,190,0.659,191,0.77,192,0.659,193,1.019,194,1.019,195,0.77,196,0.659,197,0.77,198,0.659,199,0.77,200,0.659,201,0.77,202,0.659,203,0.77,204,0.659,205,0.77,206,0.659,207,1.101,208,0.77,209,0.659,210,0.741,211,0.77,212,0.659,213,0.77,214,0.659,215,0.685,216,0.77,217,0.659,218,0.77,219,0.659,220,0.77,221,0.659,222,0.685,223,0.77,224,0.685,225,0.741,226,0.77,227,0.006,228,0.009,229,0.006,329,1.089,360,2.675,399,1.908,453,0.832,491,1.861,535,1.515,570,3.39,573,4.808,580,2.522,582,3.294,583,3.43,604,2.998,608,3.053,675,4.086,678,2.639,703,1.596,708,1.992,779,2.998,855,4.406,856,3.774,920,2.934,921,3.774,922,6.161,923,4.836,924,4.836,925,4.836,926,6.78,927,6.161,928,6.161,929,5.646,930,4.836,931,3.382,932,6.161,933,4.196,934,3.382,935,4.196,936,4.836,937,3.382,938,3.382,939,4.836,940,4.836,941,4.836,942,3.459,943,3.382,944,3.382,945,5.646,946,3.382,947,3.382,948,2.934,949,2.934,950,3.382]],["title/classes/Condition.html",[67,0.122,148,1.836]],["body/classes/Condition.html",[3,0.129,4,0.129,8,0.088,14,0.214,15,0.44,32,0.295,35,0.015,37,0.264,56,2.449,61,0.456,66,0.149,67,0.162,77,0.806,99,2.126,148,3.03,227,0.009,228,0.012,229,0.009,320,1.8,322,3.01,323,2.537,324,2.692,327,2.325,445,4.331,464,3.424,465,6.062,539,3.693,640,4.592,651,4.029,692,4.634,951,4.479,952,6.987,953,6.987,954,6.987,955,4.997,956,6.987,957,5.163,958,5.163,959,5.163,960,5.163,961,5.163,962,5.163,963,5.163,964,5.163,965,5.163]],["title/injectables/ConditionService.html",[354,1.836,448,0.957]],["body/injectables/ConditionService.html",[3,0.084,4,0.084,8,0.057,14,0.139,15,0.33,18,0.669,29,0.731,32,0.28,34,0.946,35,0.015,36,0.541,37,0.243,38,0.988,47,0.941,49,0.9,57,1.168,58,1.016,61,0.65,64,0.35,66,0.097,67,0.105,69,1,77,0.736,80,1.33,85,1.677,88,2.997,90,2.646,104,2.618,138,0.628,148,3.191,227,0.006,228,0.009,229,0.006,307,3.753,313,1.511,319,3.439,354,2.269,356,2.748,360,2.748,399,1.324,428,1.75,435,2.225,437,3.484,448,1.183,449,1.444,453,1.663,458,2.225,459,3.577,461,2.802,476,2.225,477,1.124,489,1.955,491,1.846,493,1.444,509,4.172,535,1.81,580,2.508,582,1.583,583,1.583,585,3.727,614,1.583,616,2.225,631,1.846,638,2.653,703,1.583,769,2.369,771,4.317,774,2.225,775,1.324,778,2.4,779,2.981,780,2.981,781,2.981,782,2.4,783,3.753,784,2.981,785,3.439,786,2.911,787,2.618,788,4.172,789,4.172,832,2.911,862,3.439,966,2.911,967,5.621,968,4.876,969,6.139,970,6.139,971,4.172,972,4.809,973,4.809,974,4.809,975,4.809,976,3.355,977,3.355,978,4.809,979,3.355,980,4.809,981,3.355,982,4.809,983,3.355,984,4.809,985,3.355,986,4.809,987,3.355,988,2.08,989,3.355,990,3.355,991,3.355,992,2.911,993,4.172,994,3.355,995,2.911,996,3.355,997,3.355,998,3.355,999,3.355,1000,3.355,1001,3.355,1002,3.355,1003,2.911,1004,3.189,1005,2.4,1006,3.355,1007,3.355,1008,3.355,1009,3.355,1010,2.618,1011,3.355,1012,3.355,1013,2.911,1014,3.753,1015,2.618,1016,2.618,1017,3.355,1018,3.355,1019,3.355,1020,3.355,1021,3.355,1022,3.355,1023,2.911,1024,3.355,1025,3.355,1026,3.355,1027,3.355,1028,3.355,1029,3.355,1030,3.355]],["title/components/ConditionsChartComponent.html",[0,0.145,171,0.758]],["body/components/ConditionsChartComponent.html",[0,0.159,1,0.418,2,0.694,3,0.085,4,0.053,5,0.489,6,0.47,7,0.489,8,0.036,10,0.402,11,1.641,12,0.78,14,0.089,15,0.235,16,3.711,18,0.477,20,2.687,24,1.062,29,0.521,32,0.279,34,0.869,35,0.015,36,0.545,37,0.237,38,0.907,39,2.065,47,0.948,49,1.274,56,1.788,57,0.959,58,1.026,59,2.345,61,0.527,62,0.945,63,1.787,64,0.224,66,0.062,67,0.067,69,0.64,77,0.692,80,1.583,85,1.195,87,0.667,88,2.101,89,2.553,91,0.884,93,2.518,98,1.331,99,0.884,100,1.536,112,1.251,119,1.863,126,1.331,138,1.16,142,2.837,144,2.451,148,3.092,152,0.435,153,0.78,154,0.78,155,0.402,156,0.489,157,0.489,158,0.418,159,0.489,160,0.418,161,0.489,162,0.418,163,0.489,164,0.418,165,0.489,166,0.418,167,0.489,168,0.489,169,0.418,170,0.489,171,0.951,172,0.489,173,0.418,174,0.489,175,0.418,176,0.489,177,0.402,178,0.489,179,0.418,180,0.418,181,0.489,182,0.418,183,0.489,184,0.418,185,0.489,186,0.418,187,0.489,188,0.418,189,0.489,190,0.418,191,0.489,192,0.418,193,0.722,194,0.722,195,0.489,196,0.418,197,0.489,198,0.418,199,0.489,200,0.418,201,0.489,202,0.418,203,0.489,204,0.418,205,0.489,206,0.418,207,0.489,208,0.489,209,0.418,210,0.47,211,0.489,212,0.418,213,0.489,214,0.418,215,0.435,216,0.489,217,0.418,218,0.489,219,0.418,220,0.489,221,0.418,222,0.435,223,0.489,224,0.435,225,0.47,226,0.489,227,0.004,228,0.006,229,0.004,242,2.817,245,1.863,247,1.886,274,1.331,313,1.926,316,2.675,329,1.104,338,1.331,354,2.684,360,2.355,417,1.997,453,1.052,477,1.788,489,1.251,500,1.676,517,4.03,535,0.843,540,2.273,643,1.997,653,2.354,671,2.451,676,2.125,681,2.845,690,2.451,692,2.273,703,1.013,712,1.424,721,1.424,740,2.125,743,1.863,744,1.863,745,1.676,751,1.863,754,2.451,755,3.059,756,1.536,769,1.762,775,0.847,797,1.251,805,1.863,841,1.331,863,1.182,1031,1.863,1032,3.428,1033,3.428,1034,4.278,1035,3.711,1036,4.278,1037,4.278,1038,3.711,1039,4.883,1040,4.883,1041,3.428,1042,3.428,1043,2.675,1044,3.428,1045,3.428,1046,4.883,1047,4.883,1048,3.338,1049,2.148,1050,3.428,1051,2.148,1052,2.148,1053,2.148,1054,2.148,1055,2.148,1056,3.428,1057,4.278,1058,5.336,1059,4.278,1060,2.148,1061,2.148,1062,2.148,1063,3.428,1064,2.148,1065,2.675,1066,2.148,1067,3.428,1068,2.148,1069,3.238,1070,3.428,1071,2.148,1072,3.428,1073,2.148,1074,2.148,1075,2.148,1076,2.148,1077,2.148,1078,2.148,1079,2.148,1080,2.148,1081,2.148,1082,1.424,1083,1.863,1084,4.785,1085,2.148,1086,3.428,1087,2.148,1088,3.428,1089,2.148,1090,1.863,1091,3.428,1092,2.148,1093,2.148,1094,2.148,1095,3.428,1096,1.676,1097,1.863,1098,2.148,1099,2.148,1100,2.974,1101,2.148,1102,2.148,1103,4.629,1104,3.428,1105,2.148,1106,2.974,1107,2.148,1108,1.331,1109,3.428,1110,2.148,1111,1.536,1112,1.676,1113,2.148,1114,1.863,1115,2.148,1116,2.148,1117,2.148,1118,1.676,1119,1.863,1120,2.148,1121,2.148,1122,3.428,1123,2.148,1124,3.428,1125,2.148,1126,2.148,1127,1.863,1128,1.676,1129,2.148,1130,2.148,1131,2.148,1132,1.676,1133,2.148,1134,2.148,1135,1.863,1136,4.278,1137,2.148,1138,4.278,1139,2.148,1140,3.428,1141,2.148,1142,3.428,1143,3.428,1144,3.428,1145,3.428,1146,2.148,1147,2.148,1148,1.676,1149,2.974,1150,3.428,1151,2.148,1152,2.148,1153,2.148,1154,2.148,1155,2.148,1156,2.148,1157,2.148,1158,2.148,1159,2.148,1160,2.148,1161,3.428,1162,2.148,1163,2.148,1164,1.863,1165,3.428,1166,2.451,1167,3.428,1168,2.148,1169,2.148,1170,3.428,1171,3.428,1172,2.148,1173,2.148,1174,2.148]],["title/components/ConditionsComponent.html",[0,0.145,173,0.758]],["body/components/ConditionsComponent.html",[0,0.206,1,0.45,2,0.736,3,0.058,4,0.058,5,0.526,6,0.506,7,0.526,8,0.039,10,0.432,11,1.654,12,0.827,14,0.096,15,0.249,18,0.625,20,2.799,24,1.125,29,0.552,32,0.282,34,0.529,35,0.015,36,0.46,37,0.236,38,0.552,39,1.319,47,0.885,49,1.19,56,1.967,57,1.203,58,1.083,59,1.924,61,0.591,62,1.002,63,1.894,64,0.241,66,0.067,67,0.16,69,1.082,70,2.251,71,2.597,77,0.228,80,1.204,85,0.805,87,1.077,88,3.129,89,1.848,90,3.6,91,0.951,100,2.597,106,1.629,112,1.346,124,2.834,138,1.035,148,3.002,152,0.468,153,0.827,154,0.827,155,0.432,156,0.526,157,0.526,158,0.45,159,0.526,160,0.45,161,0.526,162,0.45,163,0.526,164,0.45,165,0.526,166,0.45,167,0.526,168,0.526,169,0.45,170,0.526,171,0.45,172,0.526,173,0.991,174,0.526,175,0.45,176,0.526,177,0.432,178,0.526,179,0.45,180,0.45,181,0.526,182,0.45,183,0.526,184,0.45,185,0.526,186,0.45,187,0.526,188,0.45,189,0.526,190,0.45,191,0.526,192,0.45,193,0.765,194,0.765,195,0.526,196,0.45,197,0.526,198,0.45,199,0.526,200,0.45,201,0.526,202,0.45,203,0.526,204,0.45,205,0.526,206,0.45,207,0.827,208,0.526,209,0.45,210,0.506,211,0.526,212,0.45,213,0.526,214,0.45,215,0.468,216,0.526,217,0.45,218,0.526,219,0.45,220,0.526,221,0.45,222,0.468,223,0.526,224,0.468,225,0.506,226,0.526,227,0.004,228,0.007,229,0.004,242,2.898,274,1.432,295,2.004,313,2.864,329,1.17,332,2.251,354,2.898,356,2.316,360,2.509,399,1.77,417,2.116,453,1.251,477,1.853,489,1.346,493,1.563,500,1.803,535,0.893,570,3.757,572,1.652,580,2.34,581,1.532,582,2.4,583,2.4,584,2.597,585,2.408,586,2.597,587,2.597,588,2.976,589,2.976,590,4.392,593,2.408,594,1.532,596,1.652,598,1.652,599,1.652,600,1.652,601,1.532,602,1.652,604,3.153,605,1.652,607,2.116,608,1.8,609,3.209,610,2.34,614,1.09,676,2.251,681,2.964,703,1.09,707,2.408,708,1.496,733,1.346,740,1.432,747,2.597,766,1.432,769,1.902,775,0.911,822,2.834,833,4.792,834,1.803,835,1.803,836,1.803,837,1.803,839,4.963,841,2.251,842,3.893,850,1.803,851,1.803,852,1.803,853,1.532,860,1.803,861,2.834,862,2.597,863,1.271,866,1.803,896,2.004,912,2.004,921,2.834,942,2.597,955,1.652,1005,3.209,1035,3.893,1038,3.893,1048,3.502,1082,1.532,1083,2.004,1084,3.955,1096,1.803,1097,2.004,1103,2.004,1106,2.004,1128,2.834,1175,1.803,1176,3.151,1177,2.597,1178,3.151,1179,4.487,1180,5.086,1181,2.116,1182,3.632,1183,3.632,1184,3.632,1185,4.487,1186,4.487,1187,5.086,1188,4.413,1189,3.632,1190,2.31,1191,2.31,1192,2.31,1193,2.31,1194,2.408,1195,2.31,1196,2.31,1197,2.31,1198,2.31,1199,2.31,1200,2.31,1201,2.31,1202,2.31,1203,2.31,1204,2.004,1205,1.803,1206,1.432,1207,1.652,1208,1.652,1209,2.31,1210,2.31,1211,2.31,1212,2.31,1213,2.004,1214,1.803,1215,2.31,1216,2.31,1217,2.31,1218,2.004,1219,3.632,1220,2.31,1221,2.31,1222,2.31,1223,2.834,1224,2.004,1225,2.004,1226,2.004,1227,2.004,1228,2.31,1229,3.632,1230,2.31,1231,2.31,1232,2.31,1233,2.004,1234,3.632,1235,3.632,1236,2.004,1237,2.31,1238,2.31,1239,2.31,1240,2.004,1241,2.31,1242,2.31,1243,2.004,1244,2.31,1245,2.31,1246,2.31,1247,2.31,1248,2.31,1249,2.31,1250,2.31,1251,2.31,1252,3.632]],["title/components/ConditionsDisplay.html",[0,0.145,175,0.758]],["body/components/ConditionsDisplay.html",[0,0.169,1,0.456,2,0.743,3,0.058,4,0.058,5,0.533,6,0.513,7,0.533,8,0.04,10,0.438,11,1.656,12,0.836,14,0.097,15,0.252,18,0.63,24,1.137,29,0.558,32,0.274,34,0.978,35,0.015,36,0.588,37,0.239,38,1.022,47,0.954,49,1.155,56,2.295,57,0.659,58,0.607,59,2.543,61,0.521,62,1.248,63,1.914,64,0.244,66,0.068,67,0.074,74,1.451,77,0.506,80,1.071,81,2.031,87,0.456,88,2.75,89,0.964,99,0.964,106,0.85,109,1.552,138,0.959,147,2.433,148,3.784,149,1.674,152,0.474,153,0.836,154,0.836,155,0.438,156,0.533,157,0.533,158,0.456,159,0.533,160,0.456,161,0.533,162,0.456,163,0.533,164,0.456,165,0.533,166,0.456,167,1.031,168,0.533,169,0.456,170,0.533,171,0.456,172,0.533,173,0.456,174,0.533,175,1.15,176,0.533,177,0.959,178,0.533,179,0.456,180,0.456,181,0.533,182,0.456,183,0.533,184,0.456,185,0.533,186,0.456,187,0.533,188,0.456,189,0.533,190,0.456,191,0.533,192,0.456,193,0.773,194,0.773,195,0.533,196,0.456,197,0.533,198,0.456,199,0.533,200,0.456,201,0.533,202,0.456,203,0.533,204,0.456,205,0.533,206,0.456,207,0.836,208,0.533,209,0.456,210,0.513,211,0.533,212,0.456,213,0.533,214,0.456,215,0.474,216,0.533,217,0.456,218,0.533,219,0.456,220,0.533,221,0.456,222,0.474,223,0.533,224,0.474,225,0.513,226,0.533,227,0.004,228,0.007,229,0.004,247,3.699,299,1.552,327,2.307,329,1.182,352,3.396,354,2.913,360,2.435,435,1.552,453,1.113,477,1.229,489,1.364,493,1.948,497,1.288,498,1.674,499,2.637,517,2.138,535,1.26,540,2.433,582,2.913,583,2.913,608,1.818,610,1.221,643,2.138,666,3.532,667,3.243,671,2.624,672,3.664,673,3.664,676,2.275,678,1.827,681,2.986,690,2.624,692,2.433,698,1.364,699,2.624,700,1.914,702,1.451,703,1.105,704,1.674,706,2.986,707,2.433,708,0.964,709,2.138,710,2.433,711,3.449,712,1.552,713,1.674,714,1.552,715,1.552,716,1.552,717,1.674,718,3.516,719,1.552,720,1.552,721,1.552,722,1.552,723,3.398,724,3.176,725,3.398,726,2.863,729,3.664,730,1.674,732,1.827,733,1.364,734,1.827,736,2.637,754,2.624,755,1.674,756,1.674,757,2.863,758,2.863,995,2.031,1043,2.863,1048,3.532,1065,2.863,1082,1.552,1084,2.624,1100,3.184,1135,3.184,1253,2.031,1254,3.67,1255,3.67,1256,3.67,1257,3.67,1258,3.67,1259,3.67,1260,3.67,1261,3.67,1262,4.526,1263,3.67,1264,2.341,1265,2.341,1266,2.341,1267,3.67,1268,2.341,1269,3.67,1270,2.341,1271,3.67,1272,2.341,1273,3.67,1274,2.341,1275,3.67,1276,2.341,1277,3.67,1278,2.341,1279,3.67,1280,2.341,1281,2.341,1282,2.341,1283,3.67,1284,2.341,1285,2.341,1286,2.341,1287,1.827,1288,1.674,1289,2.341,1290,3.184,1291,2.433,1292,4.445,1293,3.67,1294,3.184,1295,2.341,1296,2.341,1297,4.526,1298,2.341,1299,3.926,1300,2.341,1301,3.67,1302,3.67,1303,1.674,1304,3.184,1305,2.341,1306,2.341,1307,2.341,1308,2.341,1309,2.031,1310,2.341,1311,2.341,1312,2.341,1313,2.341,1314,2.341,1315,2.341,1316,2.341,1317,2.341,1318,2.341,1319,2.341,1320,2.341,1321,2.341,1322,2.341,1323,2.341,1324,2.341,1325,3.184,1326,2.341]],["title/components/ContextMenuComponent.html",[0,0.145,177,0.728]],["body/components/ContextMenuComponent.html",[0,0.204,1,0.44,2,0.723,3,0.056,4,0.056,5,0.514,6,0.495,7,0.514,8,0.038,10,0.423,11,1.65,12,0.813,14,0.094,15,0.245,18,0.497,29,0.343,32,0.264,34,0.846,35,0.015,36,0.541,37,0.22,38,0.884,39,1.296,47,0.762,49,1.024,56,1.683,57,1.134,58,1.045,59,2.2,61,0.391,64,0.235,66,0.065,67,0.071,69,2.086,77,0.496,80,0.845,85,2.028,87,0.861,89,1.47,99,2.069,106,2.738,107,1.178,122,3.163,138,0.94,152,0.458,153,0.813,154,0.813,155,0.423,156,0.514,157,0.514,158,0.44,159,0.514,160,0.44,161,0.514,162,0.44,163,0.514,164,0.44,165,0.514,166,0.44,167,0.514,168,0.514,169,0.44,170,0.514,171,0.44,172,0.514,173,0.44,174,0.514,175,0.44,176,0.514,177,0.94,178,0.514,179,0.44,180,0.44,181,0.514,182,0.44,183,0.514,184,0.44,185,0.514,186,0.44,187,0.514,188,0.44,189,0.514,190,0.44,191,0.514,192,0.44,193,0.752,194,0.752,195,0.514,196,0.44,197,0.514,198,0.44,199,0.514,200,0.44,201,0.514,202,0.44,203,0.514,204,0.44,205,0.514,206,0.44,207,0.514,208,0.514,209,0.44,210,0.495,211,0.514,212,0.44,213,0.514,214,0.44,215,0.458,216,0.514,217,0.44,218,0.514,219,0.44,220,0.514,221,0.44,222,0.458,223,0.514,224,0.458,225,0.495,226,0.514,227,0.004,228,0.007,229,0.004,299,2.367,327,2.263,329,1.762,364,1.401,365,2.367,417,2.08,453,1.598,493,0.972,497,2.434,499,2.08,555,3.593,607,2.928,613,1.763,614,1.066,617,1.243,627,1.763,629,3.389,667,4.594,708,1.47,709,4.319,711,3.114,715,1.498,718,2.765,719,4.038,722,2.367,723,2.367,724,3.114,725,2.367,730,2.552,748,3.593,771,2.212,809,3.096,841,2.212,842,3.332,845,2.742,933,4.359,1148,1.763,1177,3.163,1214,3.921,1291,4.577,1327,1.96,1328,3.569,1329,3.569,1330,4.423,1331,3.096,1332,5.263,1333,3.569,1334,3.569,1335,3.569,1336,4.423,1337,5.024,1338,4.423,1339,4.269,1340,3.837,1341,2.881,1342,3.569,1343,3.569,1344,3.569,1345,5.283,1346,2.26,1347,3.569,1348,3.569,1349,3.569,1350,3.593,1351,2.26,1352,3.569,1353,2.26,1354,5.815,1355,3.569,1356,5.815,1357,3.569,1358,2.26,1359,4.359,1360,3.096,1361,4.538,1362,3.569,1363,3.096,1364,2.26,1365,5.024,1366,3.569,1367,3.096,1368,3.569,1369,3.096,1370,3.569,1371,3.569,1372,3.569,1373,2.26,1374,2.26,1375,3.096,1376,2.26,1377,3.569,1378,3.569,1379,3.569,1380,5.024,1381,3.096,1382,3.569,1383,4.359,1384,2.26,1385,3.096,1386,4.359,1387,2.26,1388,2.26,1389,2.26,1390,2.26,1391,2.26,1392,2.26,1393,2.26,1394,2.26,1395,4.423,1396,2.26,1397,3.569,1398,1.763,1399,2.26,1400,2.26,1401,3.569,1402,2.26,1403,1.96,1404,3.569,1405,2.26,1406,2.26,1407,2.26,1408,1.96,1409,2.26,1410,2.26,1411,2.26,1412,4.423,1413,1.96,1414,3.569,1415,4.423,1416,1.96,1417,2.26,1418,2.26,1419,2.26,1420,2.26,1421,2.26,1422,2.26,1423,2.26,1424,3.569]],["title/classes/ContextMenuOption.html",[67,0.122,1350,2.782]],["body/classes/ContextMenuOption.html",[3,0.129,4,0.129,8,0.088,14,0.215,15,0.442,32,0.261,34,0.755,35,0.015,36,0.432,37,0.232,49,0.971,66,0.15,67,0.163,69,2.243,77,0.724,99,2.653,122,5.009,177,0.971,227,0.01,228,0.012,229,0.01,320,1.81,327,3.391,329,2.074,343,3.992,497,3.544,629,3.025,667,4.388,708,2.653,709,4.388,711,4.341,724,4.667,1004,4.271,1176,4.503,1206,3.217,1291,5.159,1331,5.588,1332,4.606,1350,4.606,1360,5.588,1425,4.503,1426,5.19,1427,5.19,1428,6.441,1429,6.441,1430,5.19]],["title/injectables/DoctorService.html",[242,1.836,448,0.957]],["body/injectables/DoctorService.html",[3,0.111,4,0.111,8,0.076,14,0.185,15,0.401,18,0.814,29,0.678,32,0.275,34,0.95,35,0.015,36,0.543,37,0.244,38,0.992,47,0.814,49,0.835,56,1.959,57,1.172,58,1.146,61,0.576,62,1.613,64,0.465,66,0.129,67,0.14,69,1.742,80,1.825,87,1.437,89,2.687,91,1.838,100,4.183,101,4.564,107,2.327,112,2.6,127,4.564,135,5.66,148,2.106,227,0.008,228,0.011,229,0.008,242,2.76,322,1.838,399,2.308,400,4.892,401,2.455,402,2.766,448,1.438,449,1.92,489,2.6,517,2.6,601,2.959,700,2.327,721,2.959,797,2.6,804,3.482,1010,3.482,1023,3.871,1118,3.482,1194,2.959,1206,2.766,1226,3.871,1431,3.871,1432,6.525,1433,5.66,1434,5.849,1435,6.925,1436,3.871,1437,5.849,1438,4.462,1439,4.462,1440,5.849,1441,4.462,1442,4.462,1443,4.462,1444,3.871,1445,4.462,1446,4.462,1447,5.849,1448,4.462,1449,3.482,1450,4.462,1451,4.462,1452,4.462,1453,4.462,1454,4.462,1455,4.462,1456,4.462,1457,4.462,1458,4.462,1459,4.462,1460,5.074,1461,4.462,1462,4.462,1463,4.462,1464,4.462,1465,4.462,1466,4.462,1467,3.871,1468,4.462,1469,4.462,1470,4.462]],["title/classes/Encounter.html",[67,0.122,1471,2.141]],["body/classes/Encounter.html",[3,0.114,4,0.114,8,0.078,14,0.191,15,0.409,18,0.83,32,0.291,35,0.015,37,0.256,47,0.975,66,0.133,67,0.144,77,0.791,85,2.443,108,3.289,227,0.008,228,0.011,229,0.008,320,1.604,322,1.894,323,2.404,324,3.453,327,3.269,464,3.05,477,1.999,497,2.531,535,1.908,539,4.266,642,4.735,643,4.083,652,2.851,653,3.855,654,2.68,736,2.68,797,2.68,1471,3.995,1472,3.99,1473,4.655,1474,5.32,1475,7.006,1476,7.006,1477,7.006,1478,7.006,1479,4.599,1480,4.599,1481,4.599,1482,4.599,1483,4.599,1484,4.599,1485,4.599,1486,4.599,1487,4.599,1488,4.599,1489,4.599,1490,4.599,1491,5.965,1492,3.589,1493,4.599,1494,5.175,1495,4.599,1496,5.965,1497,4.599,1498,4.599,1499,4.599]],["title/injectables/EncounterService.html",[355,2.267,448,0.957]],["body/injectables/EncounterService.html",[3,0.092,4,0.092,8,0.063,14,0.154,15,0.353,18,0.825,29,0.783,32,0.251,34,0.933,35,0.015,36,0.534,37,0.223,38,0.975,47,0.825,57,0.665,58,0.612,61,0.645,62,1.636,64,0.386,66,0.107,67,0.201,77,0.634,80,0.876,138,0.692,227,0.007,228,0.009,229,0.007,329,2.065,355,3.003,356,2.826,399,2.033,428,1.929,435,2.454,437,3.675,448,1.267,449,1.592,453,1.867,458,2.454,459,3.737,461,3.003,477,1.24,492,4.471,535,1.658,614,1.746,616,2.454,629,3.455,631,2.036,638,2.798,769,2.39,771,4.179,774,2.454,775,1.46,778,2.646,779,4.327,780,3.194,781,2.293,782,2.646,783,2.887,784,2.293,785,2.646,787,2.887,828,4.021,988,4.179,992,3.21,993,3.21,1003,4.471,1004,2.454,1005,3.685,1013,3.21,1014,4.021,1015,2.887,1016,2.887,1112,5.261,1128,2.887,1181,4.257,1341,2.938,1471,4.32,1500,3.21,1501,5.153,1502,5.977,1503,7.305,1504,5.153,1505,4.021,1506,5.153,1507,5.153,1508,5.153,1509,3.7,1510,5.153,1511,5.153,1512,5.153,1513,3.7,1514,5.153,1515,3.7,1516,2.646,1517,3.21,1518,3.7,1519,3.7,1520,3.7,1521,3.7,1522,3.7,1523,3.21,1524,3.7,1525,5.153,1526,3.7,1527,3.7,1528,3.7]],["title/injectables/FhirService.html",[356,1.535,448,0.957]],["body/injectables/FhirService.html",[3,0.118,4,0.118,8,0.08,14,0.196,15,0.417,18,0.846,29,1.02,32,0.284,34,0.977,35,0.015,36,0.559,37,0.248,38,1.02,47,0.986,49,1.137,56,2.248,57,0.85,58,0.783,61,0.537,64,0.493,66,0.137,67,0.149,77,0.786,89,2.502,227,0.009,228,0.011,229,0.009,324,2.467,356,2.397,428,2.467,448,1.494,449,2.036,453,1.65,477,1.585,535,1.494,638,2.867,1341,3.325,1529,4.104,1530,6.71,1531,5.236,1532,6.074,1533,7.08,1534,6.074,1535,6.074,1536,4.73,1537,6.074,1538,4.73,1539,6.074,1540,4.73,1541,6.074,1542,4.73,1543,6.074,1544,6.074,1545,4.73,1546,4.73,1547,4.73,1548,5.27,1549,6.074,1550,6.074,1551,6.353,1552,4.73,1553,4.73,1554,4.73,1555,4.73]],["title/classes/Form.html",[67,0.122,180,0.758]],["body/classes/Form.html",[3,0.148,4,0.148,8,0.101,14,0.246,15,0.479,32,0.276,35,0.015,37,0.262,39,2.535,66,0.172,67,0.186,69,2.211,77,0.69,180,1.36,227,0.011,228,0.013,229,0.011,320,2.068,323,2.694,1556,5.146,1557,5.932,1558,5.932,1559,5.932]],["title/components/FormBuilder.html",[0,0.145,179,0.758]],["body/components/FormBuilder.html",[0,0.212,1,0.667,2,1.327,3,0.085,4,0.085,5,0.78,6,0.75,7,0.78,8,0.058,10,0.641,11,1.711,12,1.111,14,0.142,15,0.335,18,0.791,24,1.511,29,0.864,32,0.284,34,0.498,35,0.015,36,0.516,37,0.247,38,0.521,47,0.912,49,1.311,57,0.615,58,0.567,61,0.431,62,1.568,63,2.545,64,0.357,66,0.099,67,0.108,69,1.02,77,0.612,87,1.207,91,1.41,106,1.243,121,2.971,138,1.225,152,0.694,153,1.111,154,1.111,155,0.641,156,0.78,157,0.78,158,0.667,159,0.78,160,0.667,161,0.78,162,0.667,163,0.78,164,0.667,165,0.78,166,0.667,167,0.78,168,0.78,169,0.667,170,0.78,171,0.667,172,0.78,173,0.667,174,0.78,175,0.667,176,0.78,177,0.641,178,0.78,179,1.207,180,1.395,181,0.78,182,0.667,183,0.78,184,0.667,185,0.78,186,0.667,187,0.78,188,0.667,189,0.78,190,0.667,191,0.78,192,0.667,193,1.028,194,1.028,195,0.78,196,0.667,197,0.78,198,0.667,199,0.78,200,0.667,201,0.78,202,0.667,203,0.78,204,0.667,205,0.78,206,0.667,207,0.78,208,0.78,209,0.667,210,0.75,211,0.78,212,0.667,213,0.78,214,0.667,215,0.694,216,0.78,217,0.667,218,0.78,219,0.667,220,0.78,221,0.667,222,0.694,223,0.78,224,0.694,225,0.75,226,0.78,227,0.006,228,0.009,229,0.006,391,5.989,399,1.351,477,1.147,673,4.431,676,3.025,681,3.611,698,1.996,748,2.449,905,3.313,1108,2.123,1118,2.672,1166,4.066,1181,1.996,1341,3.663,1560,5.685,1561,6.659,1562,2.971,1563,4.88,1564,5.685,1565,5.685,1566,4.88,1567,5.685,1568,6.55,1569,5.685,1570,6.196,1571,4.88,1572,6.196,1573,5.685,1574,5.685,1575,5.685,1576,4.88,1577,3.424,1578,3.424,1579,3.424,1580,3.424,1581,3.424,1582,3.424,1583,3.424,1584,3.424,1585,3.424,1586,4.88,1587,3.424,1588,3.424,1589,3.424,1590,3.424,1591,3.424,1592,3.424,1593,2.449,1594,3.424,1595,3.424,1596,4.88,1597,3.424,1598,3.424,1599,4.932,1600,3.424,1601,3.424]],["title/modules/FormCreatorModule.html",[338,2.412,351,2.58]],["body/modules/FormCreatorModule.html",[3,0.118,4,0.118,8,0.08,35,0.015,61,0.682,64,0.492,66,0.137,67,0.148,87,0.92,152,0.957,166,1.55,192,1.55,194,1.279,196,1.55,206,1.55,209,1.55,227,0.009,228,0.011,229,0.009,338,2.927,340,3.132,341,3.132,342,5.232,343,2.927,344,3.685,345,5.232,351,5.401,363,4.735,364,2.927,365,3.132,367,4.097,421,5.265,422,5.265,423,3.685,424,3.378,425,5.265,426,3.685,1602,4.097,1603,4.097,1604,4.097,1605,4.723,1606,4.723,1607,4.723,1608,6.068,1609,4.723,1610,4.723,1611,4.723,1612,4.723,1613,4.723,1614,4.723]],["title/directives/HighlightDirective.html",[155,0.728,224,0.788]],["body/directives/HighlightDirective.html",[3,0.139,4,0.139,8,0.095,10,1.046,11,1.42,14,0.232,24,2.087,29,0.849,32,0.251,34,0.813,35,0.015,36,0.465,37,0.223,38,0.849,57,1.004,58,0.925,61,0.494,62,1.541,64,0.582,66,0.162,67,0.176,77,0.666,107,2.914,155,1.261,221,1.088,224,1.365,225,1.476,227,0.01,228,0.012,229,0.01,327,2.516,453,1.374,554,4.848,555,5.372,556,6.854,558,5.846,1615,4.848,1616,6.739,1617,6.739,1618,5.588,1619,5.588,1620,5.588,1621,5.588]],["title/components/HistoricalTrendsComponent.html",[0,0.145,182,0.758]],["body/components/HistoricalTrendsComponent.html",[0,0.176,1,0.489,2,0.785,3,0.063,4,0.063,5,0.572,6,0.55,7,0.572,8,0.043,10,0.47,11,1.668,12,0.883,14,0.104,15,0.266,18,0.54,29,0.589,31,2.989,32,0.27,34,0.837,35,0.015,36,0.545,37,0.216,38,0.874,39,1.932,47,0.846,49,1.137,57,1.033,58,0.952,59,1.467,61,0.578,64,0.262,65,1.666,66,0.073,67,0.079,69,1.41,70,1.557,74,1.557,85,2.433,87,1.036,88,1.668,93,2.512,96,2.403,106,1.408,109,1.666,132,3.025,138,0.996,152,0.509,153,0.883,154,0.883,155,0.47,156,0.572,157,0.572,158,0.489,159,0.572,160,0.489,161,0.572,162,0.489,163,0.572,164,0.489,165,0.572,166,0.489,167,0.572,168,0.572,169,0.489,170,0.572,171,0.489,172,0.572,173,0.489,174,0.572,175,0.489,176,0.572,177,0.996,178,0.572,179,0.489,180,0.755,181,0.572,182,1.036,183,0.572,184,0.489,185,0.572,186,0.489,187,0.572,188,0.489,189,0.572,190,0.489,191,0.572,192,0.489,193,0.817,194,0.817,195,0.572,196,0.489,197,0.572,198,0.489,199,0.572,200,0.489,201,0.572,202,0.489,203,0.572,204,0.489,205,0.572,206,0.489,207,0.572,208,0.572,209,0.489,210,0.55,211,0.572,212,0.489,213,0.572,214,0.489,215,0.509,216,0.572,217,0.489,218,0.572,219,0.489,220,0.572,221,0.489,222,0.509,223,0.572,224,0.509,225,0.55,226,0.572,227,0.009,228,0.007,229,0.005,268,2.179,302,3.025,303,3.025,310,3.363,313,1.131,327,1.131,357,2.775,359,3.486,360,0.991,364,1.557,417,2.259,420,4.338,453,1.801,477,1.299,481,3.363,491,1.382,535,0.618,566,2.179,575,1.797,579,3.025,593,1.666,608,1.921,610,1.31,613,1.96,614,1.186,617,1.382,627,1.96,652,2.403,653,3.773,654,2.259,663,1.797,667,3.351,672,3.806,698,1.464,699,2.772,700,2.021,702,1.557,704,1.797,708,2.503,709,2.259,710,2.571,711,2.403,712,1.666,713,1.797,714,1.666,715,1.666,716,1.666,717,1.797,718,2.605,720,2.571,722,1.666,723,1.666,724,1.557,725,1.666,729,1.797,748,1.797,769,2.026,771,1.557,775,0.991,780,2.403,791,3.025,797,1.464,842,1.666,845,1.557,863,1.382,869,2.571,884,1.96,888,4.107,889,2.179,891,4.488,942,1.797,948,2.179,1069,3.814,1194,1.666,1223,4.742,1227,2.179,1291,1.666,1292,2.179,1309,5.272,1369,2.179,1398,3.025,1416,2.179,1599,3.363,1622,2.179,1623,3.877,1624,3.877,1625,4.734,1626,4.107,1627,4.107,1628,4.107,1629,4.734,1630,3.877,1631,5.322,1632,3.877,1633,3.877,1634,3.877,1635,2.512,1636,3.877,1637,3.025,1638,2.512,1639,3.877,1640,2.512,1641,2.512,1642,2.512,1643,3.877,1644,2.512,1645,3.877,1646,2.512,1647,3.877,1648,2.512,1649,6.856,1650,3.877,1651,3.363,1652,2.512,1653,2.512,1654,2.512,1655,2.512,1656,2.512,1657,2.512,1658,1.797,1659,1.96,1660,4.617,1661,2.512,1662,2.512,1663,2.512,1664,2.512,1665,3.877,1666,2.179,1667,4.734,1668,4.734,1669,2.512,1670,2.179,1671,3.363,1672,3.363,1673,2.512,1674,2.512,1675,2.512,1676,2.512,1677,5.751,1678,2.512,1679,5.751,1680,2.512,1681,2.179,1682,2.179,1683,2.179,1684,2.512,1685,2.512,1686,3.877,1687,2.512,1688,2.512,1689,2.512,1690,3.877,1691,3.363,1692,3.877,1693,2.512,1694,2.512,1695,3.877,1696,2.512,1697,2.512,1698,2.179,1699,2.512,1700,3.877,1701,3.877,1702,3.877,1703,3.877,1704,3.877,1705,3.025,1706,5.322]],["title/injectables/HistoricalTrendsService.html",[357,2.029,448,0.957]],["body/injectables/HistoricalTrendsService.html",[3,0.073,4,0.073,8,0.05,14,0.121,15,0.298,18,0.606,29,0.79,32,0.255,34,0.895,35,0.015,36,0.622,37,0.203,38,0.935,47,0.856,49,0.972,57,0.782,58,1.066,61,0.459,64,0.305,66,0.085,67,0.092,69,2.206,80,1.03,85,1.517,87,0.57,91,2.885,93,1.38,108,2.092,126,2.697,128,3.111,193,0.616,227,0.005,228,0.008,229,0.005,312,4.053,357,2.269,401,2.394,420,4.646,438,3.774,448,1.07,449,1.259,453,1.277,467,1.525,476,3.814,477,2.297,491,2.394,493,1.259,495,2.538,497,2.394,499,2.535,535,1.723,617,1.61,642,2.092,644,2.283,653,3.546,663,2.092,708,1.792,718,3.383,736,1.705,739,3.111,776,4.137,777,2.283,780,3.811,790,4.053,792,2.538,841,1.813,869,5.292,884,4.489,886,3.774,887,3.774,890,2.538,891,2.283,892,2.538,893,2.538,897,2.538,898,2.283,942,3.715,988,1.813,1004,1.94,1164,4.506,1205,2.283,1223,2.283,1290,2.538,1341,3.63,1381,2.538,1626,4.506,1627,3.774,1670,2.538,1671,5.948,1672,5.948,1682,2.538,1683,2.538,1691,2.538,1698,5.591,1707,2.538,1708,5.194,1709,4.35,1710,4.35,1711,4.35,1712,4.35,1713,4.35,1714,4.35,1715,4.35,1716,2.925,1717,4.35,1718,2.925,1719,4.35,1720,4.35,1721,2.925,1722,4.35,1723,2.925,1724,4.35,1725,2.925,1726,2.925,1727,2.925,1728,2.925,1729,2.092,1730,4.35,1731,2.925,1732,2.538,1733,2.925,1734,5.752,1735,2.925,1736,2.925,1737,2.925,1738,2.925,1739,4.35,1740,2.925,1741,2.925,1742,2.925,1743,2.925,1744,2.925,1745,6.673,1746,2.925,1747,2.925,1748,4.35,1749,4.35,1750,4.35,1751,2.925,1752,2.925,1753,5.752,1754,2.925,1755,2.925,1756,2.925,1757,2.925,1758,2.925,1759,2.925,1760,2.925,1761,2.925,1762,4.35,1763,4.35,1764,2.925,1765,2.925,1766,2.925,1767,5.194,1768,5.194,1769,2.925,1770,2.925,1771,2.925,1772,2.925,1773,2.925,1774,2.925,1775,2.925,1776,2.925,1777,4.35,1778,4.35,1779,4.35,1780,2.925,1781,4.35,1782,2.925,1783,4.35,1784,2.925,1785,2.925,1786,2.925]],["title/components/HomeComponent.html",[0,0.145,184,0.758]],["body/components/HomeComponent.html",[0,0.247,1,0.691,2,1.276,3,0.088,4,0.088,5,0.808,6,0.778,7,0.808,8,0.06,10,0.664,11,1.716,12,1.14,14,0.147,15,0.343,18,0.697,29,0.761,32,0.216,34,0.729,35,0.015,36,0.553,37,0.192,38,0.761,47,0.494,49,0.664,57,0.638,58,0.588,61,0.609,64,0.37,66,0.103,67,0.112,69,1.058,71,3.58,77,0.573,85,1.746,87,1.129,88,2.154,92,2.481,94,3.32,95,3.58,99,2.062,126,2.201,138,1.178,152,0.719,153,1.14,154,1.14,155,0.664,156,0.808,157,0.808,158,0.691,159,0.808,160,0.691,161,0.808,162,0.691,163,0.808,164,0.691,165,0.808,166,0.691,167,0.808,168,0.808,169,0.691,170,0.808,171,0.691,172,0.808,173,0.691,174,0.808,175,0.691,176,0.808,177,0.664,178,0.808,179,0.691,180,0.691,181,0.808,182,0.691,183,0.808,184,1.226,185,0.808,186,0.691,187,0.808,188,0.691,189,0.808,190,0.691,191,0.808,192,0.691,193,1.055,194,1.055,195,0.808,196,0.691,197,0.808,198,0.691,199,0.808,200,0.691,201,0.808,202,0.691,203,0.808,204,0.691,205,0.808,206,0.691,207,0.808,208,0.808,209,0.691,210,1.27,211,0.808,212,0.691,213,0.808,214,0.691,215,1.175,216,0.808,217,0.691,218,0.808,219,0.691,220,0.808,221,0.691,222,0.719,223,0.808,224,0.719,225,0.778,226,0.808,227,0.007,228,0.009,229,0.007,313,2.99,323,2.286,329,1.612,337,4.343,356,2.718,359,3.896,361,4.388,399,1.401,400,4.695,401,1.954,402,2.201,453,1.633,629,2.069,708,2.062,710,3.32,740,2.201,766,2.201,769,2.391,775,1.401,779,3.103,821,3.32,841,3.103,848,3.907,853,2.354,898,3.907,1341,2.873,1531,3.907,1659,2.77,1666,3.08,1787,3.08,1788,5.006,1789,4.343,1790,4.343,1791,5.006,1792,5.006,1793,7.08,1794,5.006,1795,5.006,1796,3.55,1797,3.55,1798,3.55,1799,3.55,1800,3.08,1801,3.55,1802,3.55,1803,3.55,1804,3.55,1805,3.55,1806,3.55,1807,3.55]],["title/components/HoverBoxComponent.html",[0,0.145,186,0.758]],["body/components/HoverBoxComponent.html",[0,0.229,1,0.567,2,0.879,3,0.073,4,0.073,5,0.663,6,0.638,7,0.663,8,0.049,10,0.545,11,1.69,12,0.988,14,0.121,15,0.297,18,0.604,29,0.788,32,0.275,34,0.836,35,0.015,36,0.555,37,0.231,38,0.873,39,2.336,47,0.799,49,0.812,56,1.736,57,1.231,58,1.133,59,1.641,61,0.257,64,0.304,66,0.084,67,0.092,69,1.292,77,0.567,80,1.453,85,2.14,87,0.567,91,1.786,98,3.212,99,2.65,106,2.42,126,1.806,128,3.102,138,1.204,152,0.59,153,0.988,154,0.988,155,0.545,156,0.663,157,0.663,158,0.567,159,0.663,160,0.567,161,0.663,162,0.567,163,0.663,164,0.567,165,0.663,166,0.567,167,0.663,168,0.663,169,0.567,170,0.663,171,0.567,172,0.663,173,0.567,174,0.663,175,0.567,176,0.663,177,0.545,178,0.663,179,0.567,180,0.567,181,0.663,182,0.567,183,0.663,184,0.567,185,0.663,186,1.118,187,0.663,188,0.567,189,0.663,190,0.567,191,0.663,192,0.567,193,0.914,194,1.651,195,0.663,196,0.567,197,0.663,198,0.567,199,0.663,200,0.567,201,0.663,202,0.567,203,0.663,204,0.567,205,0.663,206,0.567,207,0.663,208,0.663,209,0.567,210,0.638,211,0.663,212,0.567,213,0.663,214,0.567,215,0.59,216,0.663,217,0.567,218,0.663,219,0.567,220,0.663,221,0.567,222,0.59,223,0.663,224,0.59,225,0.638,226,0.663,227,0.005,228,0.008,229,0.005,294,3.385,303,2.274,305,4.981,322,1.2,329,1.397,448,0.716,453,1.412,491,1.603,493,1.867,535,0.716,579,3.385,594,1.932,607,3.346,617,1.603,629,2.528,653,1.603,706,3.75,720,2.877,736,2.528,794,3.385,935,6.18,1069,3.807,1177,3.706,1214,4.48,1332,3.102,1339,4.044,1340,5.325,1341,3.042,1345,4.496,1361,3.385,1363,2.528,1385,3.763,1386,4.981,1398,2.274,1403,2.528,1408,2.528,1467,2.528,1651,3.763,1660,2.528,1729,3.102,1789,3.763,1790,4.496,1808,2.528,1809,6.773,1810,4.338,1811,5.741,1812,3.763,1813,4.338,1814,5.182,1815,5.741,1816,5.182,1817,5.741,1818,4.338,1819,4.338,1820,4.338,1821,2.914,1822,2.914,1823,2.914,1824,2.914,1825,2.914,1826,4.338,1827,2.914,1828,4.338,1829,3.763,1830,4.338,1831,4.338,1832,2.914,1833,2.914,1834,2.914,1835,2.914,1836,4.338,1837,2.914,1838,2.914,1839,2.914,1840,2.914,1841,2.914,1842,4.338,1843,2.914,1844,2.528,1845,2.914,1846,2.914,1847,2.914,1848,2.914,1849,2.914,1850,2.914,1851,2.914,1852,2.914,1853,5.741,1854,6.665]],["title/pipes/HumanizeBytesPipe.html",[1855,2.782,1856,3.036]],["body/pipes/HumanizeBytesPipe.html",[3,0.136,4,0.136,8,0.093,10,1.023,18,0.761,32,0.248,34,0.968,35,0.015,36,0.621,37,0.181,38,1.011,47,0.926,58,0.904,61,0.483,64,0.57,66,0.158,67,0.172,77,0.79,93,3.382,227,0.01,228,0.012,229,0.01,535,1.635,640,3.909,1855,4.755,1856,5.188,1857,5.465,1858,4.742,1859,6.649,1860,5.465,1861,6.649,1862,5.465,1863,6.649,1864,5.465,1865,6.649,1866,7.166,1867,5.465,1868,6.649,1869,5.465,1870,5.465,1871,5.465,1872,5.465,1873,5.465,1874,5.465,1875,5.465]],["title/classes/Link.html",[67,0.122,634,2.782]],["body/classes/Link.html",[3,0.147,4,0.147,8,0.1,14,0.246,15,0.478,32,0.26,35,0.015,37,0.231,66,0.202,67,0.219,77,0.756,80,1.65,227,0.011,228,0.013,229,0.011,320,2.064,631,3.258,632,4.62,633,5.136,634,5.303,637,6.433,638,3.499,1876,5.92,1877,5.92]],["title/components/LoadingAnimation.html",[0,0.145,188,0.758]],["body/components/LoadingAnimation.html",[0,0.271,1,0.907,2,1.218,3,0.116,4,0.116,5,1.06,6,1.02,7,1.06,8,0.079,10,0.871,11,1.744,12,1.369,29,1.012,32,0.173,35,0.015,36,0.554,61,0.411,64,0.485,66,0.135,67,0.146,87,0.907,138,1.317,152,0.943,153,1.369,154,1.369,155,0.871,156,1.06,157,1.06,158,0.907,159,1.06,160,0.907,161,1.06,162,0.907,163,1.06,164,0.907,165,1.06,166,0.907,167,1.06,168,1.06,169,0.907,170,1.06,171,0.907,172,1.06,173,0.907,174,1.06,175,0.907,176,1.06,177,0.871,178,1.06,179,0.907,180,0.907,181,1.06,182,0.907,183,1.06,184,0.907,185,1.06,186,0.907,187,1.06,188,1.453,189,1.06,190,0.907,191,1.06,192,0.907,193,1.267,194,1.267,195,1.06,196,0.907,197,1.06,198,0.907,199,1.06,200,0.907,201,1.06,202,0.907,203,1.06,204,0.907,205,1.06,206,0.907,207,1.06,208,1.06,209,0.907,210,1.02,211,1.06,212,0.907,213,1.06,214,0.907,215,0.943,216,1.06,217,0.907,218,1.06,219,0.907,220,1.06,221,0.907,222,0.943,223,1.06,224,0.943,225,1.02,226,1.06,227,0.009,228,0.011,229,0.009,329,1.5,1729,4.301,1878,4.04,1879,6.013,1880,5.217,1881,6.013,1882,6.013,1883,4.657]],["title/injectables/MapService.html",[358,2.412,448,0.957]],["body/injectables/MapService.html",[3,0.099,4,0.099,8,0.067,14,0.165,15,0.371,32,0.148,35,0.015,37,0.131,57,0.714,58,0.658,61,0.351,64,0.414,66,0.115,67,0.125,82,5.614,91,2.939,93,3.368,96,4.098,227,0.007,228,0.01,229,0.007,302,6.266,358,3.356,448,1.331,449,1.711,700,3.211,988,2.464,1341,1.97,1705,5.159,1884,3.449,1885,6.157,1886,6.611,1887,7.432,1888,7.136,1889,6.611,1890,6.611,1891,5.414,1892,5.414,1893,4.697,1894,6.611,1895,5.414,1896,6.448,1897,6.611,1898,5.414,1899,7.136,1900,8.155,1901,5.414,1902,5.414,1903,7.432,1904,7.136,1905,6.183,1906,5.414,1907,7.432,1908,6.611,1909,5.414,1910,6.611,1911,5.414,1912,5.414,1913,4.697,1914,4.697,1915,7.136,1916,5.414,1917,5.414,1918,6.611,1919,5.414,1920,5.414,1921,6.611,1922,6.611,1923,5.414,1924,5.414,1925,5.414,1926,5.414,1927,4.697,1928,5.414,1929,5.414,1930,5.414,1931,3.975]],["title/classes/Medication.html",[67,0.122,776,2.412]],["body/classes/Medication.html",[3,0.137,4,0.137,8,0.093,14,0.228,15,0.457,29,0.835,32,0.278,34,0.8,35,0.015,36,0.648,37,0.253,38,0.835,39,1.995,66,0.159,67,0.173,77,0.795,227,0.01,228,0.012,229,0.01,320,1.916,324,2.866,652,3.406,653,3.671,654,3.202,776,4.135,795,6.232,801,6.831,813,4.768,1932,4.768,1933,5.787,1934,5.496,1935,5.496,1936,5.496,1937,5.496,1938,5.496,1939,5.496,1940,5.496]],["title/components/MedicationsComponent.html",[0,0.145,190,0.758]],["body/components/MedicationsComponent.html",[0,0.227,1,0.762,2,1.085,3,0.097,4,0.097,5,0.891,6,0.857,7,0.891,8,0.066,10,0.732,11,1.727,12,1.22,14,0.162,15,0.367,18,0.746,20,3.614,24,1.659,29,0.814,32,0.256,34,0.78,35,0.015,36,0.605,37,0.217,38,0.814,47,0.746,49,1.002,61,0.608,62,1.477,64,0.408,66,0.113,67,0.123,80,1.267,87,0.762,94,2.595,106,2.217,138,1.229,152,0.793,153,1.22,154,1.22,155,0.732,156,0.891,157,0.891,158,0.762,159,0.891,160,0.762,161,0.891,162,0.762,163,0.891,164,0.762,165,0.891,166,0.762,167,0.891,168,0.891,169,0.762,170,0.891,171,0.762,172,0.891,173,0.762,174,0.891,175,0.762,176,0.891,177,0.732,178,0.891,179,0.762,180,0.762,181,0.891,182,0.762,183,0.891,184,0.762,185,0.891,186,0.762,187,0.891,188,0.762,189,0.891,190,1.279,191,0.891,192,0.762,193,1.128,194,1.128,195,0.891,196,0.762,197,0.891,198,0.762,199,0.891,200,0.762,201,0.891,202,0.762,203,0.891,204,0.762,205,0.891,206,0.762,207,0.891,208,0.891,209,0.762,210,0.857,211,0.891,212,0.762,213,0.891,214,0.762,215,0.793,216,0.891,217,0.762,218,0.891,219,0.762,220,0.891,221,0.762,222,0.793,223,0.891,224,0.793,225,0.857,226,0.891,227,0.007,228,0.01,229,0.007,247,2.153,353,4.139,357,3.792,453,1.317,706,2.28,727,3.053,736,3.559,769,2.2,775,1.544,776,4.263,777,3.053,791,5.674,854,3.395,863,2.153,1303,2.798,1658,2.798,1941,3.395,1942,5.356,1943,3.913,1944,5.356,1945,5.356,1946,3.913,1947,3.913,1948,3.913,1949,3.913,1950,3.913,1951,3.395,1952,3.913,1953,3.913,1954,3.913,1955,3.913,1956,5.356]],["title/components/NormalBox1.html",[0,0.145,192,0.758]],["body/components/NormalBox1.html",[0,0.241,1,0.851,2,1.169,3,0.109,4,0.109,5,0.995,6,0.957,7,0.995,8,0.074,10,0.818,11,1.738,12,1.314,14,0.181,15,0.396,18,0.803,24,1.787,32,0.241,35,0.015,36,0.538,37,0.191,47,0.608,61,0.386,62,1.592,64,0.455,66,0.126,67,0.137,69,1.302,77,0.57,85,2.012,87,0.851,93,2.723,138,1.285,152,0.885,153,1.314,154,1.314,155,0.818,156,0.995,157,0.995,158,0.851,159,0.995,160,0.851,161,0.995,162,0.851,163,0.995,164,0.851,165,0.995,166,0.851,167,0.995,168,0.995,169,0.851,170,0.995,171,0.851,172,0.995,173,0.851,174,0.995,175,0.851,176,0.995,177,0.818,178,0.995,179,0.851,180,0.851,181,0.995,182,0.851,183,0.995,184,0.851,185,0.995,186,0.851,187,0.995,188,0.851,189,0.995,190,0.851,191,0.995,192,1.338,193,1.545,194,1.634,195,0.995,196,0.851,197,0.995,198,0.851,199,0.995,200,0.851,201,0.995,202,0.851,203,0.995,204,0.851,205,0.995,206,0.851,207,0.995,208,0.995,209,0.851,210,0.957,211,0.995,212,0.851,213,0.995,214,0.851,215,0.885,216,0.995,217,0.851,218,0.995,219,0.851,220,0.995,221,0.851,222,0.885,223,0.995,224,0.885,225,0.957,226,0.995,227,0.008,228,0.011,229,0.008,323,1.587,535,1.419,905,4.003,906,4.283,914,3.826,1957,5.36,1958,3.792,1959,5.77,1960,5.603,1961,4.371,1962,4.371,1963,4.371,1964,5.006,1965,3.126]],["title/components/NormalBox2.html",[0,0.145,196,0.758]],["body/components/NormalBox2.html",[0,0.241,1,0.851,2,1.169,3,0.109,4,0.109,5,0.995,6,0.957,7,0.995,8,0.074,10,0.818,11,1.738,12,1.314,14,0.181,15,0.396,18,0.803,24,1.787,32,0.241,35,0.015,36,0.538,37,0.191,47,0.608,61,0.386,62,1.592,64,0.455,66,0.126,67,0.137,69,1.302,77,0.57,85,2.012,87,0.851,96,3.576,138,1.285,152,0.885,153,1.314,154,1.314,155,0.818,156,0.995,157,0.995,158,0.851,159,0.995,160,0.851,161,0.995,162,0.851,163,0.995,164,0.851,165,0.995,166,0.851,167,0.995,168,0.995,169,0.851,170,0.995,171,0.851,172,0.995,173,0.851,174,0.995,175,0.851,176,0.995,177,0.818,178,0.995,179,0.851,180,0.851,181,0.995,182,0.851,183,0.995,184,0.851,185,0.995,186,0.851,187,0.995,188,0.851,189,0.995,190,0.851,191,0.995,192,0.851,193,1.545,194,1.634,195,0.995,196,1.338,197,0.995,198,0.851,199,0.995,200,0.851,201,0.995,202,0.851,203,0.995,204,0.851,205,0.995,206,0.851,207,0.995,208,0.995,209,0.851,210,0.957,211,0.995,212,0.851,213,0.995,214,0.851,215,0.885,216,0.995,217,0.851,218,0.995,219,0.851,220,0.995,221,0.851,222,0.885,223,0.995,224,0.885,225,0.957,226,0.995,227,0.008,228,0.011,229,0.008,323,1.587,535,1.419,905,4.003,906,4.283,914,3.826,1957,5.36,1960,5.603,1964,5.006,1965,3.126,1966,3.792,1967,5.77,1968,4.371,1969,4.371,1970,4.371]],["title/classes/Observation.html",[67,0.122,467,2.029]],["body/classes/Observation.html",[3,0.108,4,0.108,8,0.074,14,0.181,15,0.395,18,0.802,32,0.296,34,0.939,35,0.015,36,0.537,37,0.261,38,0.98,47,0.955,58,0.721,61,0.385,66,0.126,67,0.137,76,4.613,77,0.766,80,1.624,99,1.795,193,0.918,227,0.008,228,0.011,229,0.008,320,1.519,322,2.656,323,2.342,327,2.593,445,3.998,467,4.145,469,5.033,521,5.033,535,1.687,640,4.118,643,3.758,651,3.401,700,4.004,790,3.401,955,4.613,988,4.543,1206,2.701,1474,3.117,1971,3.781,1972,6.449,1973,6.449,1974,5.595,1975,5.595,1976,6.861,1977,5.758,1978,5.758,1979,5.758,1980,4.358,1981,4.358,1982,4.358,1983,4.358,1984,4.358,1985,4.358,1986,4.358,1987,4.358,1988,4.358,1989,4.358,1990,4.358,1991,5.758,1992,4.358,1993,5.758,1994,4.358,1995,5.758,1996,4.358,1997,4.358,1998,4.358,1999,4.358,2000,4.358,2001,4.358,2002,4.358,2003,4.358,2004,4.358,2005,4.358,2006,4.358]],["title/components/ObservationRecursiveChart.html",[0,0.145,198,0.758]],["body/components/ObservationRecursiveChart.html",[0,0.225,1,0.746,2,1.07,3,0.095,4,0.095,5,0.873,6,0.84,7,0.873,8,0.065,10,0.717,11,1.724,12,1.202,14,0.159,15,0.362,18,0.735,24,1.635,29,0.583,30,3.325,31,3.331,32,0.269,34,0.769,35,0.015,36,0.568,37,0.226,38,0.803,39,2.775,47,0.841,49,0.717,61,0.575,62,1.666,64,0.399,65,2.542,66,0.111,67,0.12,69,1.8,71,4.32,80,1.541,87,0.746,106,2.193,107,1.999,138,1.218,152,0.776,153,1.202,154,1.202,155,0.717,156,0.873,157,0.873,158,0.746,159,0.873,160,0.746,161,0.873,162,0.746,163,0.873,164,0.746,165,0.873,166,0.746,167,0.873,168,0.873,169,0.746,170,0.873,171,0.746,172,0.873,173,0.746,174,0.873,175,0.746,176,0.873,177,0.717,178,0.873,179,0.746,180,0.746,181,0.873,182,0.746,183,0.873,184,0.746,185,0.873,186,0.746,187,0.873,188,0.746,189,0.873,190,0.746,191,0.873,192,0.746,193,1.113,194,1.113,195,0.873,196,0.746,197,0.873,198,1.268,199,0.873,200,0.746,201,0.873,202,0.746,203,0.873,204,0.746,205,0.873,206,0.746,207,0.873,208,0.873,209,0.746,210,0.84,211,0.873,212,0.746,213,0.873,214,0.746,215,0.776,216,0.873,217,0.746,218,0.873,219,0.746,220,0.873,221,0.746,222,0.776,223,0.873,224,0.776,225,0.84,226,0.873,227,0.007,228,0.01,229,0.007,247,3.324,357,3.395,453,0.942,467,2.754,490,2.542,535,1.298,905,3.794,1194,2.542,1303,2.741,1473,5.08,1637,4.714,1658,2.741,2007,3.325,2008,5.28,2009,5.28,2010,6.041,2011,6.51,2012,5.241,2013,5.28,2014,3.833,2015,3.833,2016,5.28,2017,3.833,2018,3.833,2019,3.833,2020,3.833,2021,3.833,2022,3.833,2023,5.28,2024,3.833,2025,3.833,2026,3.833,2027,5.28,2028,5.28,2029,5.28,2030,5.28,2031,4.581]],["title/injectables/ObservationService.html",[31,1.836,448,0.957]],["body/injectables/ObservationService.html",[3,0.058,4,0.058,8,0.04,14,0.097,15,0.251,18,0.511,29,0.558,31,1.731,32,0.281,34,0.898,35,0.015,36,0.514,37,0.236,38,0.938,39,1.642,47,0.995,49,1.282,57,1.06,58,0.977,59,1.711,61,0.545,64,0.244,66,0.068,67,0.073,69,2.041,76,1.673,77,0.677,79,2.029,80,1.775,82,2.623,85,0.816,86,2.029,89,0.963,91,3.05,92,3.394,93,3.495,96,4.741,98,1.45,99,2.907,132,3.996,227,0.004,228,0.007,229,0.004,313,2.037,322,1.51,323,2.669,324,1.22,356,2.328,360,2.434,417,2.137,428,1.22,448,0.902,449,1.007,453,1.112,459,2.984,461,2.636,467,2.901,477,1.977,490,1.551,535,1.368,546,2.029,570,1.287,575,1.673,582,1.104,583,1.104,588,3.396,589,3.396,610,2.359,617,2.018,631,3.247,638,1.104,703,1.104,766,1.45,769,1.136,774,1.551,778,1.673,780,2.273,784,1.45,785,1.673,866,1.825,955,1.673,1004,1.551,1014,2.862,1015,1.825,1016,1.825,1069,3.396,1090,2.029,1096,1.825,1111,1.673,1188,4.443,1218,2.029,1233,2.029,1236,2.029,1240,2.029,1288,2.623,1460,6.323,1473,2.862,1517,2.029,1705,4.814,1893,2.029,1896,2.029,1905,2.862,1913,2.029,1914,2.029,1927,2.029,2032,2.029,2033,5.121,2034,4.523,2035,5.562,2036,4.523,2037,4.523,2038,3.667,2039,3.667,2040,4.523,2041,3.667,2042,5.121,2043,3.667,2044,3.667,2045,3.667,2046,5.121,2047,3.667,2048,2.339,2049,2.339,2050,3.667,2051,2.339,2052,2.339,2053,3.667,2054,2.339,2055,3.667,2056,3.667,2057,3.667,2058,2.339,2059,3.667,2060,2.339,2061,3.667,2062,2.339,2063,2.339,2064,3.667,2065,2.339,2066,4.523,2067,2.339,2068,2.339,2069,2.339,2070,2.339,2071,2.339,2072,2.339,2073,2.339,2074,2.339,2075,2.339,2076,2.339,2077,2.339,2078,3.667,2079,2.339,2080,2.339,2081,3.667,2082,2.339,2083,2.339,2084,2.339,2085,2.339,2086,2.339,2087,2.339,2088,2.339,2089,2.339,2090,2.339,2091,2.339,2092,2.339,2093,2.339,2094,2.339,2095,3.667,2096,2.339,2097,2.339,2098,2.339,2099,2.339,2100,3.667,2101,2.339,2102,2.339,2103,1.825,2104,2.339,2105,2.339,2106,2.339,2107,2.339,2108,2.339,2109,2.339,2110,2.339,2111,2.339,2112,2.339,2113,2.339,2114,2.339,2115,4.443,2116,2.339,2117,2.339,2118,2.339,2119,2.339,2120,2.339,2121,2.339,2122,2.339,2123,2.339,2124,2.339,2125,2.339,2126,2.339,2127,3.667,2128,2.339,2129,3.667,2130,2.339,2131,2.339,2132,2.339,2133,2.339,2134,2.339,2135,2.339,2136,2.339,2137,2.339,2138,2.339,2139,3.667,2140,2.339,2141,2.339,2142,2.339,2143,2.339,2144,2.339,2145,2.339,2146,2.339,2147,2.339,2148,2.339,2149,3.667,2150,3.667,2151,2.339,2152,2.339,2153,2.339,2154,2.339,2155,2.339,2156,2.339]],["title/components/ObservationsComponent.html",[0,0.145,200,0.758]],["body/components/ObservationsComponent.html",[0,0.191,1,0.56,2,0.87,3,0.072,4,0.072,5,0.655,6,0.63,7,0.655,8,0.049,10,0.538,11,1.688,12,0.978,14,0.119,15,0.294,18,0.598,20,3.138,24,1.33,29,0.653,31,3.131,32,0.28,34,0.625,35,0.015,36,0.508,37,0.238,38,0.653,39,1.559,47,0.85,49,1.142,57,1.192,58,1.01,61,0.637,62,1.573,63,1.499,64,0.3,65,1.906,66,0.083,67,0.179,69,1.818,70,2.662,77,0.424,80,1.216,87,0.56,90,3.523,92,3.38,106,1.559,112,1.675,138,1.067,152,0.582,153,0.978,154,0.978,155,0.538,156,0.655,157,0.655,158,0.56,159,0.655,160,0.56,161,0.655,162,0.56,163,0.655,164,0.56,165,0.655,166,0.56,167,0.655,168,0.655,169,0.56,170,0.655,171,0.56,172,0.655,173,0.56,174,0.655,175,0.56,176,0.655,177,0.538,178,0.655,179,0.56,180,0.56,181,0.655,182,0.56,183,0.655,184,0.56,185,0.655,186,0.56,187,0.655,188,0.56,189,0.655,190,0.56,191,0.655,192,0.56,193,0.905,194,0.905,195,0.655,196,0.56,197,0.655,198,0.56,199,0.655,200,1.111,201,0.655,202,0.56,203,0.655,204,0.56,205,0.655,206,0.56,207,0.978,208,0.655,209,0.56,210,0.63,211,0.655,212,0.56,213,0.655,214,0.56,215,0.582,216,0.655,217,0.56,218,0.655,219,0.56,220,0.655,221,0.56,222,0.582,223,0.655,224,0.582,225,0.63,226,0.655,227,0.005,228,0.008,229,0.005,242,3.131,274,1.782,300,3.351,313,2.315,324,1.499,329,1.656,332,2.662,356,2.526,357,2.974,358,4.113,360,2.618,399,2.408,453,1.574,467,3.46,477,0.963,490,1.906,570,3.966,572,2.056,580,1.499,581,1.906,582,2.426,583,2.426,584,3.071,585,2.848,586,3.071,587,3.071,588,3.409,589,3.409,590,3.676,593,2.848,594,1.906,596,2.056,598,2.056,599,2.056,600,2.056,601,1.906,602,2.056,604,2.662,605,2.056,607,2.502,608,2.128,609,3.676,610,2.681,614,1.357,638,1.357,681,2.502,703,1.357,747,3.071,766,1.782,769,2.16,775,1.134,781,1.782,822,3.351,833,5.178,834,2.243,835,2.243,836,2.243,837,2.243,839,2.243,842,4.524,850,2.243,851,2.243,852,2.243,853,1.906,860,2.243,861,3.351,862,3.071,863,1.582,921,4.011,1108,2.662,1194,2.848,1213,2.494,1359,3.726,1361,3.351,1413,2.494,1637,4.011,1658,2.056,1844,4.46,1880,3.726,2157,2.494,2158,4.294,2159,5.141,2160,4.294,2161,2.874,2162,2.874,2163,4.294,2164,4.294,2165,2.874,2166,2.874,2167,2.874,2168,2.874,2169,2.874,2170,2.874,2171,2.874,2172,2.874,2173,2.874,2174,2.874,2175,2.874,2176,2.874,2177,2.874]],["title/components/ObservationsDisplay.html",[0,0.145,202,0.758]],["body/components/ObservationsDisplay.html",[0,0.208,1,0.462,2,0.751,3,0.059,4,0.059,5,1.039,6,0.519,7,0.54,8,0.04,10,0.444,11,1.658,12,0.844,14,0.098,15,0.254,18,0.718,24,1.148,29,0.563,32,0.267,34,0.902,35,0.015,36,0.562,37,0.227,38,0.943,47,0.863,49,1.047,56,2.21,57,0.666,58,0.854,59,2.346,61,0.494,62,1.022,63,1.933,64,0.247,66,0.069,67,0.143,74,1.469,77,0.451,80,1.221,87,1.208,89,0.976,92,3.551,106,1.346,109,2.458,138,0.965,149,2.65,152,0.48,153,0.844,154,0.844,155,0.444,156,0.54,157,0.54,158,0.462,159,0.54,160,0.462,161,0.54,162,0.462,163,0.54,164,0.462,165,0.54,166,0.462,167,1.039,168,0.54,169,0.462,170,0.54,171,0.462,172,0.54,173,0.462,174,0.54,175,0.462,176,0.54,177,0.965,178,0.54,179,0.462,180,0.462,181,0.54,182,0.462,183,0.54,184,0.462,185,0.54,186,0.462,187,0.54,188,0.462,189,0.54,190,0.462,191,0.54,192,0.462,193,0.781,194,0.781,195,0.54,196,0.462,197,0.54,198,0.462,199,0.54,200,0.462,201,0.54,202,1.156,203,0.54,204,0.462,205,0.54,206,0.462,207,0.54,208,0.54,209,0.462,210,0.519,211,0.54,212,0.462,213,0.54,214,0.462,215,0.48,216,0.54,217,0.462,218,0.54,219,0.462,220,0.54,221,0.462,222,0.48,223,0.54,224,0.48,225,0.519,226,0.54,227,0.004,228,0.007,229,0.004,247,3.943,299,1.572,313,2.97,327,2.055,329,1.661,352,3.266,360,2.532,453,0.911,467,4.195,477,0.794,490,1.572,493,2.762,497,2.039,498,2.65,499,3.006,517,2.659,521,1.85,535,0.911,540,2.458,580,2.69,582,1.749,583,1.749,608,2.556,610,1.933,617,2.039,629,3.006,666,3.56,667,3.458,671,2.65,672,3.69,676,2.297,681,3.006,690,2.65,692,2.458,698,1.381,699,2.65,700,2.69,702,1.469,703,1.119,704,1.695,706,3.931,707,2.458,708,1.526,709,2.659,710,3.712,711,3.198,712,1.572,713,1.695,714,1.572,715,1.572,716,1.572,717,1.695,718,2.839,719,3.026,720,1.572,721,1.572,722,1.572,723,3.026,724,2.828,725,3.026,726,1.85,729,3.263,730,1.695,732,1.85,733,1.381,734,1.85,736,3.006,740,1.469,745,1.85,747,2.65,754,2.65,755,1.695,756,1.695,757,4.026,758,1.85,821,2.458,858,3.215,1084,1.695,1148,2.892,1178,3.215,1287,1.85,1288,2.65,1294,2.057,1303,3.69,1304,4.476,1325,3.215,1444,3.215,1729,2.65,2012,3.958,2115,2.057,2178,2.057,2179,3.706,2180,3.706,2181,3.706,2182,3.706,2183,3.706,2184,3.706,2185,4.563,2186,2.057,2187,3.706,2188,2.371,2189,2.371,2190,3.706,2191,3.706,2192,2.371,2193,3.706,2194,5.598,2195,2.371,2196,3.706,2197,2.371,2198,3.706,2199,2.371,2200,3.706,2201,2.371,2202,2.371,2203,3.706,2204,3.706,2205,2.371,2206,2.371,2207,2.371,2208,3.706,2209,3.706,2210,2.371,2211,2.371,2212,2.371,2213,3.706,2214,2.371,2215,2.371,2216,2.371,2217,2.371,2218,2.371,2219,3.706,2220,2.371,2221,3.706,2222,3.706,2223,3.706,2224,3.706,2225,3.706]],["title/classes/Patient.html",[67,0.122,769,1.205]],["body/classes/Patient.html",[3,0.133,4,0.133,8,0.091,14,0.222,15,0.45,32,0.297,35,0.015,36,0.591,37,0.263,56,2.198,66,0.155,67,0.168,77,0.781,80,1.871,142,4.707,227,0.01,228,0.012,229,0.01,320,1.865,323,2.577,769,2.032,2226,4.64,2227,7.098,2228,7.098,2229,7.098,2230,6.158,2231,5.539,2232,7.098,2233,5.348,2234,5.348,2235,5.348,2236,5.348,2237,5.348,2238,5.348,2239,5.348,2240,5.348,2241,5.348]],["title/components/PatientComponent.html",[0,0.145,204,0.758]],["body/components/PatientComponent.html",[0,0.183,1,0.518,2,0.821,3,0.066,4,0.066,5,0.606,6,0.583,7,0.606,8,0.045,10,0.498,11,1.677,12,0.923,14,0.11,15,0.278,18,0.564,20,3.019,29,0.616,32,0.278,34,0.798,35,0.015,36,0.538,37,0.23,38,0.834,47,0.866,49,1.21,56,1.358,57,1.061,58,0.977,59,2.353,61,0.625,62,1.118,63,1.388,64,0.277,66,0.077,67,0.084,77,0.614,80,1.161,84,2.309,85,0.928,87,0.518,89,1.096,91,1.096,93,2.589,99,1.096,106,1.471,127,2.077,138,1.104,148,2.786,152,0.539,153,0.923,154,0.923,155,0.498,156,0.606,157,0.606,158,0.518,159,0.606,160,0.518,161,0.606,162,0.518,163,0.606,164,0.518,165,0.606,166,0.518,167,0.606,168,0.606,169,0.518,170,0.606,171,0.518,172,0.606,173,0.518,174,0.606,175,0.518,176,0.606,177,0.498,178,0.606,179,0.518,180,0.518,181,0.606,182,0.518,183,0.606,184,1.298,185,0.606,186,1.068,187,0.606,188,0.518,189,0.606,190,0.518,191,0.606,192,0.518,193,0.854,194,1.034,195,0.606,196,0.518,197,0.606,198,0.518,199,0.606,200,0.518,201,0.606,202,0.518,203,0.606,204,1.068,205,0.606,206,0.518,207,0.606,208,0.606,209,0.518,210,0.583,211,0.606,212,0.518,213,0.606,214,0.518,215,0.539,216,0.606,217,0.518,218,0.606,219,0.518,220,0.606,221,0.518,222,0.539,223,0.606,224,0.539,225,0.583,226,0.606,227,0.005,228,0.007,229,0.005,242,3.051,274,1.65,307,5.2,354,3.051,355,3.768,399,1.05,400,4.124,401,1.465,402,1.65,448,0.997,453,1.741,489,1.551,491,1.465,535,0.655,607,1.551,698,1.551,700,2.113,702,1.65,708,1.096,718,1.465,769,2.114,775,1.05,794,2.077,797,1.551,855,1.904,863,1.465,968,4.257,971,4.759,1005,1.904,1043,3.162,1065,3.162,1082,1.765,1166,2.898,1181,3.624,1433,4.257,1436,2.309,1471,2.23,1474,4.766,1492,2.077,1494,2.309,1502,3.829,1505,4.281,1516,1.904,1523,2.309,1809,4.759,2231,3.162,2242,2.309,2243,4.053,2244,4.907,2245,6.826,2246,4.907,2247,4.053,2248,4.053,2249,4.053,2250,4.053,2251,2.662,2252,2.662,2253,2.662,2254,2.662,2255,2.662,2256,4.053,2257,2.662,2258,2.662,2259,2.662,2260,2.662,2261,2.662,2262,4.053,2263,2.662,2264,2.662,2265,2.662,2266,2.662,2267,2.309,2268,2.662,2269,2.662,2270,2.662,2271,2.662,2272,2.662,2273,5.486,2274,2.662,2275,2.662,2276,4.053,2277,4.053,2278,4.053,2279,4.053,2280,2.662,2281,2.662,2282,2.309,2283,2.662,2284,2.662,2285,2.662,2286,2.662,2287,2.662,2288,2.662,2289,4.907,2290,5.486,2291,2.662,2292,2.662,2293,4.257,2294,2.662,2295,2.662,2296,2.662,2297,2.662,2298,2.309,2299,2.662,2300,5.486,2301,2.662,2302,2.662,2303,2.662,2304,2.662,2305,2.662,2306,4.053,2307,3.516,2308,4.053,2309,5.486,2310,2.662,2311,2.662,2312,2.662,2313,2.662,2314,2.662,2315,2.662]],["title/injectables/PatientService.html",[359,2.141,448,0.957]],["body/injectables/PatientService.html",[3,0.113,4,0.113,8,0.077,14,0.188,15,0.405,18,0.823,29,0.899,32,0.269,34,0.86,35,0.015,36,0.492,37,0.217,38,0.899,47,0.823,49,0.849,57,0.815,58,0.751,61,0.655,64,0.473,66,0.131,67,0.143,77,0.65,138,0.849,227,0.008,228,0.011,229,0.008,323,2.53,356,2.978,359,3.253,428,2.366,437,4.077,448,1.454,449,1.952,453,1.777,458,3.008,459,4.061,461,3.445,476,3.008,493,1.952,535,1.454,614,2.141,616,3.008,617,3.619,638,2.141,719,3.008,769,2.396,771,4.077,774,3.008,775,1.79,779,2.812,781,2.812,782,3.244,784,2.812,1111,3.244,1341,3.259,2231,3.54,2298,3.936,2307,3.936,2316,3.936,2317,5.706,2318,7.227,2319,6.969,2320,6.577,2321,5.912,2322,4.536,2323,5.912,2324,4.536,2325,4.536,2326,5.912,2327,4.536,2328,4.536,2329,4.536,2330,4.536,2331,4.536,2332,4.536,2333,4.536,2334,4.536,2335,4.536]],["title/components/ScratchPadUpdate.html",[0,0.145,206,0.758]],["body/components/ScratchPadUpdate.html",[0,0.233,1,0.8,2,1.121,3,0.102,4,0.102,5,0.935,6,0.9,7,0.935,8,0.07,10,0.768,11,1.732,12,1.26,14,0.17,15,0.379,18,0.771,24,1.714,32,0.268,34,0.598,35,0.015,36,0.558,37,0.231,38,0.624,47,0.771,49,1.036,61,0.363,62,1.527,64,0.428,66,0.119,67,0.129,69,1.223,77,0.75,87,0.8,138,1.254,142,3.67,144,3.958,152,0.832,153,1.26,154,1.26,155,0.768,156,0.935,157,0.935,158,0.8,159,0.935,160,0.8,161,0.935,162,0.8,163,0.935,164,0.8,165,0.935,166,0.8,167,0.935,168,0.935,169,0.8,170,0.935,171,0.8,172,0.935,173,0.8,174,0.935,175,0.8,176,0.935,177,0.768,178,0.935,179,0.8,180,0.8,181,0.935,182,0.8,183,0.935,184,0.8,185,0.935,186,0.8,187,0.935,188,0.8,189,0.935,190,0.8,191,0.935,192,0.8,193,1.166,194,1.166,195,0.935,196,0.8,197,0.935,198,0.8,199,0.935,200,0.8,201,0.935,202,0.8,203,0.935,204,0.8,205,0.935,206,1.305,207,1.425,208,0.935,209,0.8,210,0.9,211,0.935,212,0.8,213,0.935,214,0.8,215,0.832,216,0.935,217,0.8,218,0.935,219,0.8,220,0.935,221,0.8,222,0.832,223,0.935,224,0.832,225,0.9,226,0.935,227,0.008,228,0.01,229,0.008,323,1.491,329,2.158,535,1.01,540,4.152,604,3.431,643,3.904,905,3.904,906,4.152,914,3.67,1965,2.937,2336,6.389,2337,3.563,2338,5.535,2339,5.535,2340,5.535,2341,4.106,2342,4.106,2343,5.535,2344,4.106,2345,5.535,2346,4.106,2347,4.106,2348,4.106,2349,4.106,2350,5.535,2351,4.106,2352,5.535]],["title/components/SelectListSingle.html",[0,0.145,209,0.758]],["body/components/SelectListSingle.html",[0,0.24,1,0.849,2,1.167,3,0.108,4,0.108,5,0.992,6,0.955,7,0.992,8,0.074,10,0.815,11,1.738,12,1.311,14,0.181,15,0.395,18,0.802,24,1.783,32,0.24,35,0.015,36,0.537,37,0.19,47,0.607,61,0.385,62,1.588,64,0.454,66,0.126,67,0.137,69,1.298,77,0.569,85,2.008,87,1.495,138,1.284,152,0.883,153,1.311,154,1.311,155,0.815,156,0.992,157,0.992,158,0.849,159,0.992,160,0.849,161,0.992,162,0.849,163,0.992,164,0.849,165,0.992,166,0.849,167,0.992,168,0.992,169,0.849,170,0.992,171,0.849,172,0.992,173,0.849,174,0.992,175,0.849,176,0.992,177,0.815,178,0.992,179,0.849,180,0.849,181,0.992,182,0.849,183,0.992,184,0.849,185,0.992,186,0.849,187,0.992,188,0.849,189,0.992,190,0.849,191,0.992,192,0.849,193,1.213,194,1.213,195,0.992,196,0.849,197,0.992,198,0.849,199,0.992,200,0.849,201,0.992,202,0.849,203,0.992,204,0.849,205,0.992,206,0.849,207,0.992,208,0.992,209,1.336,210,1.563,211,0.992,212,0.849,213,0.992,214,0.849,215,0.883,216,0.992,217,0.849,218,0.992,219,0.849,220,0.992,221,0.849,222,0.883,223,0.992,224,0.883,225,0.955,226,0.992,227,0.008,228,0.011,229,0.008,323,1.582,535,1.416,905,3.998,906,4.277,914,3.819,915,4.996,1965,3.117,2353,5.952,2354,3.781,2355,5.758,2356,5.758,2357,6.449,2358,4.358,2359,4.358,2360,4.358,2361,5.758]],["title/classes/Server.html",[67,0.122,1181,2.267]],["body/classes/Server.html",[3,0.141,4,0.141,8,0.096,14,0.236,15,0.467,29,0.864,32,0.271,34,0.827,35,0.015,36,0.653,37,0.241,38,0.864,66,0.165,67,0.179,77,0.799,227,0.01,228,0.012,229,0.01,320,1.982,638,3.701,1181,3.967,1341,3.827,1933,4.931,2362,4.931,2363,5.684,2364,6.808,2365,5.684]],["title/injectables/SmartService.html",[361,2.412,448,0.957]],["body/injectables/SmartService.html",[3,0.08,4,0.08,8,0.054,10,0.598,14,0.133,15,0.318,18,0.647,29,0.706,32,0.283,34,0.676,35,0.015,36,0.387,37,0.244,38,0.706,47,0.836,49,0.598,57,0.983,58,0.905,61,0.588,64,0.333,66,0.093,67,0.1,77,0.768,85,1.115,101,2.495,108,2.287,138,1.245,180,0.623,227,0.011,228,0.009,229,0.006,294,2.495,322,2.253,356,2.708,359,3.777,361,2.879,365,2.12,399,1.261,400,4.552,401,1.759,402,1.982,428,1.667,429,2.495,430,2.495,431,2.774,435,3.08,448,1.142,449,1.376,453,1.476,458,2.12,459,3.498,461,2.707,477,1.071,491,1.759,535,1.476,580,3.13,638,1.509,739,2.287,769,1.438,781,1.982,784,1.982,853,2.12,1108,1.982,1243,2.774,1531,2.495,1548,4.029,1551,4.745,1659,2.495,2103,3.624,2317,6.219,2366,2.774,2367,6.003,2368,5.47,2369,5.47,2370,5.47,2371,5.771,2372,5.47,2373,6.003,2374,5.47,2375,6.003,2376,4.645,2377,6.003,2378,6.003,2379,3.197,2380,3.197,2381,4.645,2382,3.197,2383,4.645,2384,3.197,2385,3.197,2386,3.197,2387,3.197,2388,4.645,2389,4.645,2390,4.645,2391,4.645,2392,4.645,2393,3.197,2394,3.197,2395,3.197,2396,4.645,2397,3.197,2398,4.645,2399,4.645,2400,3.197,2401,3.197,2402,3.197,2403,6.003,2404,3.197,2405,4.645,2406,4.645,2407,5.47,2408,4.645,2409,4.645,2410,3.197,2411,3.197,2412,3.197,2413,3.197,2414,3.197,2415,3.197,2416,3.197,2417,3.197,2418,3.197,2419,5.47,2420,5.47,2421,3.197,2422,4.645,2423,3.197,2424,4.645,2425,4.645,2426,4.645,2427,3.197,2428,3.197,2429,3.197,2430,3.197,2431,3.197,2432,3.197,2433,3.197,2434,3.197,2435,3.197,2436,3.197,2437,3.197,2438,3.197,2439,3.197,2440,4.645,2441,3.197,2442,3.197,2443,3.197,2444,3.197,2445,3.197,2446,3.197,2447,3.197,2448,3.197,2449,3.197,2450,3.197,2451,3.197,2452,2.774,2453,3.197,2454,5.47,2455,3.197,2456,3.197,2457,3.197,2458,3.197,2459,3.197,2460,3.197,2461,3.197,2462,3.197,2463,3.197,2464,2.774,2465,3.197,2466,3.197,2467,3.197,2468,3.197,2469,4.645,2470,3.197,2471,3.197,2472,3.197,2473,3.197]],["title/classes/Timeline.html",[67,0.122,215,0.788]],["body/classes/Timeline.html",[3,0.138,4,0.138,8,0.094,14,0.229,15,0.459,32,0.294,35,0.015,37,0.261,66,0.16,67,0.174,76,5.15,77,0.77,215,1.356,227,0.01,228,0.012,229,0.01,320,1.927,322,2.965,323,2.614,469,5.619,643,4.196,988,4.93,1974,6.247,1975,6.247,2474,4.794,2475,5.526,2476,5.526,2477,5.526,2478,5.526,2479,5.526,2480,5.526,2481,5.526]],["title/components/TimelineComponent.html",[0,0.145,212,0.758]],["body/components/TimelineComponent.html",[0,0.23,1,0.778,2,1.101,3,0.099,4,0.099,5,0.91,6,0.875,7,0.91,8,0.068,10,0.748,11,1.729,12,1.237,14,0.166,15,0.373,18,0.756,20,3.646,24,1.683,29,0.608,32,0.258,34,0.582,35,0.015,36,0.552,37,0.204,38,0.608,47,0.756,49,1.24,57,0.718,58,0.661,61,0.585,62,1.499,64,0.416,66,0.116,67,0.126,80,1.286,87,0.778,107,2.084,138,1.24,152,0.81,153,1.237,154,1.237,155,0.748,156,0.91,157,0.91,158,0.778,159,0.91,160,0.778,161,0.91,162,0.778,163,0.91,164,0.778,165,0.91,166,0.778,167,0.91,168,0.91,169,0.778,170,0.91,171,0.778,172,0.91,173,0.778,174,0.91,175,0.778,176,0.91,177,0.748,178,0.91,179,0.778,180,0.778,181,0.91,182,0.778,183,0.91,184,0.778,185,0.91,186,0.778,187,0.91,188,0.778,189,0.91,190,0.778,191,0.91,192,0.778,193,1.145,194,1.145,195,0.91,196,0.778,197,0.91,198,0.778,199,0.91,200,0.778,201,0.91,202,0.778,203,0.91,204,0.778,205,0.91,206,0.778,207,0.91,208,0.91,209,0.778,210,0.875,211,0.91,212,1.29,213,0.91,214,0.778,215,0.81,216,0.91,217,0.778,218,0.91,219,0.778,220,0.91,221,0.778,222,0.81,223,0.91,224,0.81,225,0.875,226,0.91,227,0.007,228,0.01,229,0.007,355,4.165,453,1.518,769,2.214,775,1.577,863,2.199,1471,2.199,1502,5.17,1505,5.17,1516,2.858,1951,3.467,2267,3.467,2282,3.467,2482,3.467,2483,5.434,2484,5.434,2485,3.997,2486,5.434,2487,3.997,2488,3.997,2489,3.997,2490,3.997,2491,3.997,2492,3.997,2493,3.997,2494,3.997,2495,5.434,2496,3.997,2497,3.997,2498,3.997,2499,3.997,2500,3.997,2501,3.997]],["title/components/TimelinePopupComponent.html",[0,0.145,214,0.758]],["body/components/TimelinePopupComponent.html",[0,0.226,1,0.755,2,1.078,3,0.097,4,0.097,5,0.883,6,0.849,7,0.883,8,0.066,10,0.725,11,1.726,12,1.212,14,0.161,15,0.365,18,0.741,32,0.244,34,0.775,35,0.015,36,0.571,37,0.216,38,0.809,47,0.741,49,1.224,57,0.697,58,0.642,59,2.014,61,0.578,64,0.404,66,0.112,67,0.122,80,0.918,87,0.755,106,2.489,138,1.224,152,0.786,153,1.212,154,1.212,155,0.725,156,0.883,157,0.883,158,0.755,159,0.883,160,0.755,161,0.883,162,0.755,163,0.883,164,0.755,165,0.883,166,0.755,167,0.883,168,0.883,169,0.755,170,0.883,171,0.755,172,0.883,173,0.755,174,0.883,175,0.755,176,0.883,177,0.725,178,0.883,179,0.755,180,0.755,181,0.883,182,0.755,183,0.883,184,0.755,185,0.883,186,1.274,187,0.883,188,0.755,189,0.883,190,0.755,191,0.883,192,0.755,193,1.121,194,1.121,195,0.883,196,0.755,197,0.883,198,0.755,199,0.883,200,0.755,201,0.883,202,0.755,203,0.883,204,0.755,205,0.883,206,0.755,207,0.883,208,0.883,209,0.755,210,0.849,211,0.883,212,0.755,213,0.883,214,1.274,215,1.231,216,0.883,217,0.755,218,0.883,219,0.755,220,0.883,221,0.755,222,0.786,223,0.883,224,0.786,225,0.849,226,0.883,227,0.007,228,0.01,229,0.007,322,2.694,477,1.783,653,2.134,698,2.26,700,2.776,702,2.403,733,3.102,1166,2.773,1208,3.807,1383,5.676,1471,3.992,1474,2.773,1492,3.026,1516,2.773,1628,6.145,1812,5.273,2031,4.618,2502,3.364,2503,5.323,2504,7.083,2505,5.323,2506,3.877,2507,5.323,2508,3.877,2509,5.323,2510,3.877,2511,5.323,2512,3.877,2513,3.364,2514,3.877,2515,3.877,2516,3.877,2517,3.877,2518,3.877,2519,3.877,2520,3.877,2521,5.323,2522,5.323,2523,5.323,2524,5.323]],["title/injectables/ToolBarService.html",[362,2.412,448,0.957]],["body/injectables/ToolBarService.html",[3,0.146,4,0.146,8,0.1,14,0.244,15,0.476,29,1.123,32,0.275,35,0.015,37,0.229,61,0.519,64,0.612,66,0.17,67,0.185,77,0.755,227,0.011,228,0.013,229,0.011,362,4.303,448,1.707,449,2.528,2525,5.096,2526,7.39,2527,7.39,2528,6.942,2529,5.873]],["title/components/ToolbarComponent.html",[0,0.145,217,0.758]],["body/components/ToolbarComponent.html",[0,0.237,1,0.619,2,0.937,3,0.079,4,0.079,5,0.723,6,0.696,7,0.723,8,0.054,10,0.594,11,1.702,12,1.053,14,0.132,15,0.317,18,0.644,24,1.432,29,0.703,31,3.233,32,0.255,34,0.462,35,0.015,36,0.498,37,0.18,38,0.483,47,0.833,49,1.12,56,1.549,57,0.979,58,0.526,59,1.749,61,0.62,62,1.275,64,0.331,65,2.107,66,0.092,67,0.1,87,0.619,88,1.99,92,2.291,138,1.12,152,0.644,153,1.053,154,1.053,155,0.594,156,0.723,157,0.723,158,0.619,159,0.723,160,0.619,161,0.723,162,0.619,163,0.723,164,0.619,165,0.723,166,0.619,167,0.723,168,0.723,169,0.619,170,0.723,171,0.619,172,0.723,173,0.619,174,0.723,175,0.619,176,0.723,177,0.594,178,0.723,179,0.619,180,0.619,181,0.723,182,0.619,183,0.723,184,0.619,185,0.723,186,0.619,187,0.723,188,0.619,189,0.723,190,0.619,191,0.723,192,0.619,193,0.974,194,0.974,195,0.723,196,0.619,197,0.723,198,0.619,199,0.723,200,0.619,201,0.723,202,0.619,203,0.723,204,0.619,205,0.723,206,0.619,207,0.723,208,0.723,209,0.619,210,0.696,211,0.723,212,0.619,213,0.723,214,0.619,215,0.644,216,0.723,217,1.166,218,0.723,219,0.619,220,0.723,221,0.619,222,0.644,223,0.723,224,0.644,225,0.696,226,0.723,227,0.006,228,0.008,229,0.006,242,3.233,274,1.969,313,2.082,329,1.023,332,3.71,352,3.652,354,3.233,360,2.703,362,4.246,364,2.866,399,1.253,453,1.788,457,5.193,471,4.011,473,2.756,493,2.856,498,3.306,499,2.694,534,2.756,555,4.281,582,3.233,583,3.233,608,3.394,703,1.499,706,2.694,708,1.904,769,2.174,775,1.253,818,4.011,821,3.969,846,4.011,848,5.478,855,2.272,856,3.607,1082,2.107,1108,1.969,1132,3.607,1177,3.306,1287,2.479,1367,4.011,1449,4.671,2186,2.756,2530,2.756,2531,4.623,2532,5.45,2533,5.985,2534,5.985,2535,5.985,2536,5.45,2537,4.623,2538,3.177,2539,3.177,2540,4.623,2541,3.177,2542,3.177,2543,3.177,2544,4.623,2545,5.985,2546,5.985,2547,5.45,2548,4.623,2549,3.177,2550,4.623,2551,3.177,2552,3.177,2553,3.177,2554,3.177,2555,3.177,2556,3.177,2557,3.177,2558,3.177]],["title/components/TripleListComponent.html",[0,0.145,219,0.758]],["body/components/TripleListComponent.html",[0,0.265,1,0.841,2,1.16,3,0.108,4,0.108,5,0.984,6,0.946,7,0.984,8,0.073,10,0.808,11,1.737,12,1.304,14,0.179,24,1.773,29,0.976,32,0.213,35,0.015,36,0.535,37,0.143,61,0.506,62,1.579,64,0.45,66,0.125,67,0.136,69,2.037,87,1.251,88,2.464,92,2.837,138,1.279,152,0.875,153,1.304,154,1.304,155,0.808,156,0.984,157,0.984,158,0.841,159,0.984,160,0.841,161,0.984,162,0.841,163,0.984,164,0.841,165,0.984,166,0.841,167,0.984,168,0.984,169,0.841,170,0.984,171,0.841,172,0.984,173,0.841,174,0.984,175,0.841,176,0.984,177,0.808,178,0.984,179,0.841,180,0.841,181,0.984,182,0.841,183,0.984,184,0.841,185,0.984,186,0.841,187,0.984,188,0.841,189,0.984,190,0.841,191,0.984,192,0.841,193,1.206,194,1.206,195,0.984,196,0.841,197,0.984,198,0.841,199,0.984,200,0.841,201,0.984,202,0.841,203,0.984,204,0.841,205,0.984,206,0.841,207,0.984,208,0.984,209,0.841,210,0.946,211,0.984,212,0.841,213,0.984,214,0.841,215,0.875,216,0.984,217,0.841,218,0.984,219,1.332,220,1.462,221,0.841,222,0.875,223,0.984,224,0.875,225,0.946,226,0.984,227,0.008,228,0.01,229,0.008,329,1.391,573,4.468,574,4.967,675,3.797,769,2.397,775,1.704,821,3.797,828,4.468,1225,4.967,1299,4.967,1449,5.336,2559,3.748,2560,5.725,2561,5.725,2562,5.725]],["title/classes/User.html",[67,0.122,845,2.412]],["body/classes/User.html",[3,0.15,4,0.15,8,0.102,14,0.25,15,0.483,32,0.262,35,0.015,36,0.622,37,0.233,39,2.559,66,0.174,67,0.189,77,0.696,227,0.011,228,0.013,229,0.011,320,2.102,323,2.712,845,4.369,2563,5.229,2564,6.027,2565,6.027]],["title/coverage.html",[2566,4.629]],["body/coverage.html",[0,0.3,1,0.657,8,0.057,9,2.927,31,1.592,35,0.015,37,0.112,67,0.245,82,2.413,87,0.657,91,3.392,148,1.592,155,0.903,158,0.657,160,0.657,162,0.657,164,0.657,166,0.657,169,0.657,171,0.657,173,0.657,175,0.657,177,0.631,179,0.657,180,0.657,182,0.657,184,0.657,186,0.657,188,0.657,190,0.657,192,0.657,194,1.017,196,0.657,198,0.657,200,0.657,202,0.657,204,0.94,206,0.657,209,0.657,212,0.657,214,0.657,215,0.684,217,0.657,219,0.657,222,0.684,224,0.684,227,0.006,228,0.009,229,0.006,230,2.927,242,1.592,319,2.413,321,2.927,328,2.927,352,1.857,353,1.966,354,1.592,355,1.966,356,1.331,357,1.759,358,2.091,359,1.857,360,1.331,361,2.091,362,2.091,366,3.768,391,2.633,439,2.633,440,2.633,442,1.966,444,2.238,445,2.091,447,2.927,448,1.883,450,2.927,467,1.759,477,1.13,549,2.927,550,2.927,570,1.857,571,2.927,631,1.857,632,3.768,634,2.413,639,2.927,664,2.927,763,2.927,769,1.045,776,2.091,817,2.927,845,2.091,869,2.238,870,2.927,899,2.927,900,2.927,916,2.633,917,2.927,920,2.927,951,2.927,966,2.927,1031,2.927,1149,2.927,1175,3.768,1181,1.966,1253,2.927,1327,2.927,1350,2.413,1375,4.189,1425,2.927,1431,2.927,1471,1.857,1472,2.927,1500,2.927,1529,2.927,1556,2.927,1561,2.927,1562,2.927,1615,2.927,1622,2.927,1707,2.927,1787,2.927,1808,2.927,1855,2.413,1856,2.633,1858,2.927,1878,2.927,1884,2.927,1932,2.927,1941,2.927,1957,3.768,1958,2.927,1966,2.927,1971,2.927,2007,2.927,2032,2.927,2157,2.927,2178,2.927,2226,2.927,2230,2.927,2242,4.189,2316,2.927,2336,2.927,2337,2.927,2353,2.927,2354,2.927,2362,2.927,2366,2.927,2474,2.927,2482,2.927,2502,2.927,2525,2.927,2530,2.927,2559,2.927,2563,2.927,2566,2.927,2567,3.374,2568,2.927,2569,5.638,2570,6.155,2571,4.828,2572,5.638,2573,4.828,2574,4.828,2575,3.374,2576,3.374,2577,4.828,2578,3.374,2579,3.374,2580,3.374,2581,3.374,2582,3.374,2583,3.374,2584,3.374,2585,3.374,2586,3.374,2587,5.638,2588,3.374,2589,6.155,2590,6.976,2591,5.638,2592,5.638,2593,3.374,2594,3.374,2595,3.374,2596,3.374,2597,5.638,2598,3.374,2599,3.374,2600,3.374,2601,3.374,2602,4.828,2603,5.638,2604,3.374,2605,3.374,2606,3.374,2607,6.775,2608,5.638,2609,3.374,2610,3.374,2611,3.374,2612,3.374,2613,3.374,2614,3.374,2615,3.374,2616,3.374]],["title/dependencies.html",[341,3.108,2617,2.808]],["body/dependencies.html",[10,1.013,35,0.015,64,0.564,227,0.01,228,0.012,229,0.01,341,3.592,343,3.357,372,4.699,399,2.137,401,3.639,402,3.357,417,3.853,419,4.699,420,3.592,423,5.159,424,4.729,426,4.226,429,4.226,430,4.226,576,4.699,614,3.12,1114,4.699,1207,3.873,2513,4.699,2618,5.416,2619,7.924,2620,5.416,2621,5.416,2622,5.416,2623,5.416,2624,5.416,2625,5.416,2626,5.416,2627,5.416,2628,5.416,2629,5.416,2630,5.416,2631,5.416,2632,5.416,2633,5.416,2634,5.416,2635,5.416,2636,6.612,2637,5.416,2638,5.416,2639,5.416,2640,5.416,2641,5.416,2642,5.416,2643,5.416,2644,5.416,2645,5.416,2646,5.416]],["title/index.html",[14,0.134,2647,3.237,2648,3.237]],["body/index.html",[0,0.211,2,0.86,6,0.93,8,0.072,35,0.012,37,0.14,104,3.314,126,2.632,138,1.059,147,2.816,210,1.24,227,0.01,228,0.01,229,0.008,290,3.684,291,3.684,318,3.684,322,2.622,332,3.947,333,3.684,343,2.632,444,2.816,464,2.816,516,3.684,517,3.299,575,3.037,581,2.816,654,2.475,660,3.684,667,2.475,707,2.816,709,2.475,714,2.816,716,2.816,733,2.475,769,2.103,797,2.475,804,4.417,949,3.684,1010,3.314,1069,2.816,1108,3.509,1111,4.554,1112,3.314,1119,3.684,1127,3.684,1132,3.314,1206,4.209,1207,3.037,1208,3.037,1224,3.684,1288,3.037,1291,2.816,1332,4.048,1339,3.314,1471,2.337,1593,4.048,1681,3.684,1732,5.892,1800,4.911,1829,5.892,1905,3.314,2103,3.314,2293,3.684,2371,4.911,2452,3.684,2464,3.684,2568,3.684,2617,3.684,2649,6.367,2650,4.246,2651,7.073,2652,4.246,2653,4.246,2654,4.246,2655,4.246,2656,4.246,2657,6.791,2658,4.246,2659,4.246,2660,4.246,2661,4.246,2662,6.791,2663,4.246,2664,6.791,2665,5.66,2666,4.246,2667,5.66,2668,7.073,2669,5.66,2670,4.246,2671,6.367,2672,4.246,2673,6.791,2674,4.246,2675,4.246,2676,4.246,2677,4.246,2678,4.246,2679,5.66,2680,4.246,2681,6.367,2682,4.246,2683,4.246,2684,4.246,2685,5.66,2686,4.246,2687,4.246,2688,4.246,2689,4.246,2690,5.66,2691,4.246,2692,5.66,2693,4.246,2694,4.246,2695,4.246,2696,4.246,2697,4.246,2698,5.66,2699,4.246,2700,4.246,2701,4.246,2702,4.246,2703,4.246,2704,4.246,2705,4.246,2706,4.246,2707,4.246,2708,5.66,2709,4.246,2710,4.246,2711,4.246,2712,4.246,2713,4.246,2714,4.246,2715,5.66,2716,4.246,2717,4.246,2718,4.246,2719,4.246,2720,4.246,2721,4.246,2722,4.246,2723,4.246,2724,4.246,2725,4.246,2726,4.246,2727,4.246,2728,4.246,2729,5.66,2730,4.246,2731,4.246,2732,4.246,2733,4.246,2734,5.66,2735,5.66,2736,4.246,2737,3.314,2738,4.246,2739,4.246,2740,4.246,2741,4.246,2742,4.246,2743,4.246,2744,4.246,2745,4.246,2746,4.246,2747,4.246,2748,4.246,2749,4.246,2750,4.246,2751,4.246,2752,4.246,2753,4.246]],["title/modules.html",[340,3.538]],["body/modules.html",[35,0.013,227,0.012,228,0.013,229,0.012,339,4.501,340,4.174,351,4.174,424,5.169,2754,7.227,2755,7.227,2756,7.227]],["title/overview.html",[2737,4.163]],["body/overview.html",[1,1.165,2,0.763,31,2.824,35,0.015,93,2.462,96,3.233,152,0.763,158,1.165,160,1.401,162,1.165,164,1.165,166,1.401,169,1.165,171,1.165,173,1.165,175,1.165,177,1.12,179,1.165,182,1.165,184,1.165,186,1.165,188,1.165,190,1.165,192,1.401,196,1.401,198,1.165,200,1.165,202,1.165,204,1.165,206,1.401,209,1.401,212,1.165,214,1.165,217,1.165,219,1.165,221,0.733,227,0.007,228,0.01,229,0.007,242,2.824,320,1.313,338,2.334,339,5.974,340,2.497,341,2.497,342,2.938,343,2.334,344,2.938,345,2.938,346,3.266,347,3.266,348,3.266,349,3.266,350,3.266,351,5.261,352,3.293,353,3.488,354,2.824,355,3.488,356,2.361,357,3.121,358,3.71,359,3.293,360,2.361,361,3.71,362,3.71,363,4.07,364,2.334,365,2.497,444,2.497,449,1.62,482,3.266,1602,3.266,1603,3.266,1604,3.266,1855,2.693,2737,2.938,2757,3.765,2758,3.765]],["title/miscellaneous/variables.html",[1593,3.351,2759,2.808]],["body/miscellaneous/variables.html",[14,0.249,35,0.015,37,0.246,57,1.262,58,1.162,227,0.011,228,0.013,229,0.011,366,4.675,368,5.198,439,5.481,440,5.481,441,5.198,733,3.491,1175,4.675,1204,5.198,1205,4.675,1206,3.714,1207,4.285,1208,4.285,1593,4.285,2759,5.198,2760,5.991,2761,7.024]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":91,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["0.1.13",{"_index":2635,"title":{},"body":{"dependencies.html":{}}}],["0.19.47",{"_index":2639,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1757,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["0.3.5",{"_index":2628,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":1229,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["0.80",{"_index":2126,"title":{},"body":{"injectables/ObservationService.html":{}}}],["0.9.1",{"_index":2646,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2570,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2572,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2610,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2571,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2577,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2592,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2602,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2586,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2612,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2585,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2607,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":2615,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2590,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2603,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2589,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2591,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2597,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2608,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1386,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["1",{"_index":93,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"components/NormalBox1.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"overview.html":{}}}],["1'},{'name",{"_index":195,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["1.2.0",{"_index":2640,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":2642,"title":{},"body":{"dependencies.html":{}}}],["1.component",{"_index":1609,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["1.component.ts",{"_index":1958,"title":{},"body":{"components/NormalBox1.html":{},"coverage.html":{}}}],["1.component.ts:10",{"_index":1963,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:12",{"_index":1962,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:9",{"_index":1961,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.html",{"_index":1959,"title":{},"body":{"components/NormalBox1.html":{}}}],["1/1",{"_index":2584,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":2613,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":481,"title":{},"body":{"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{}}}],["10.19.0",{"_index":2689,"title":{},"body":{"index.html":{}}}],["10/15",{"_index":2588,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1375,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["102588006",{"_index":1923,"title":{},"body":{"injectables/MapService.html":{}}}],["10839",{"_index":1897,"title":{},"body":{"injectables/MapService.html":{}}}],["10px",{"_index":289,"title":{},"body":{"components/AccountComponent.html":{}}}],["12",{"_index":304,"title":{},"body":{"components/AccountComponent.html":{}}}],["12/15",{"_index":2601,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":569,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["13.0.2",{"_index":2625,"title":{},"body":{"dependencies.html":{}}}],["13969",{"_index":1908,"title":{},"body":{"injectables/MapService.html":{}}}],["14",{"_index":2757,"title":{},"body":{"overview.html":{}}}],["15/16",{"_index":2579,"title":{},"body":{"coverage.html":{}}}],["15/23",{"_index":2583,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2758,"title":{},"body":{"overview.html":{}}}],["17861",{"_index":1906,"title":{},"body":{"injectables/MapService.html":{}}}],["18",{"_index":305,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{}}}],["180",{"_index":596,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["181.us",{"_index":483,"title":{},"body":{"injectables/AssociationService.html":{}}}],["185903001",{"_index":1898,"title":{},"body":{"injectables/MapService.html":{}}}],["1st",{"_index":2545,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["2",{"_index":96,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"overview.html":{}}}],["2'},{'name",{"_index":197,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["2.0",{"_index":2753,"title":{},"body":{"index.html":{}}}],["2.24.0",{"_index":2631,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2632,"title":{},"body":{"dependencies.html":{}}}],["2.component",{"_index":1610,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["2.component.ts",{"_index":1966,"title":{},"body":{"components/NormalBox2.html":{},"coverage.html":{}}}],["2.component.ts:10",{"_index":1970,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:12",{"_index":1969,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:9",{"_index":1968,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.compute.amazonaws.com/get_items",{"_index":485,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2.html",{"_index":1967,"title":{},"body":{"components/NormalBox2.html":{}}}],["2/3",{"_index":2606,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1651,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["200px",{"_index":567,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["2075",{"_index":1891,"title":{},"body":{"injectables/MapService.html":{}}}],["2157",{"_index":1916,"title":{},"body":{"injectables/MapService.html":{}}}],["2160",{"_index":1920,"title":{},"body":{"injectables/MapService.html":{}}}],["220px",{"_index":598,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["2345",{"_index":1903,"title":{},"body":{"injectables/MapService.html":{}}}],["249288007",{"_index":1892,"title":{},"body":{"injectables/MapService.html":{}}}],["25",{"_index":1703,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["2571",{"_index":2087,"title":{},"body":{"injectables/ObservationService.html":{}}}],["26450",{"_index":1915,"title":{},"body":{"injectables/MapService.html":{}}}],["26464",{"_index":1907,"title":{},"body":{"injectables/MapService.html":{}}}],["26478",{"_index":1904,"title":{},"body":{"injectables/MapService.html":{}}}],["26511",{"_index":1894,"title":{},"body":{"injectables/MapService.html":{}}}],["26515",{"_index":1910,"title":{},"body":{"injectables/MapService.html":{}}}],["266998003",{"_index":1924,"title":{},"body":{"injectables/MapService.html":{}}}],["267432004",{"_index":1919,"title":{},"body":{"injectables/MapService.html":{}}}],["2710",{"_index":2084,"title":{},"body":{"injectables/ObservationService.html":{}}}],["2823",{"_index":1914,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["28542",{"_index":1895,"title":{},"body":{"injectables/MapService.html":{}}}],["29",{"_index":482,"title":{},"body":{"injectables/AssociationService.html":{},"overview.html":{}}}],["2951",{"_index":1911,"title":{},"body":{"injectables/MapService.html":{}}}],["29857009",{"_index":1926,"title":{},"body":{"injectables/MapService.html":{}}}],["2c304df8",{"_index":2388,"title":{},"body":{"injectables/SmartService.html":{}}}],["2nd",{"_index":2546,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["3",{"_index":1705,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3.2.1",{"_index":2630,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":2629,"title":{},"body":{"dependencies.html":{}}}],["3.4.5",{"_index":2644,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":2633,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2594,"title":{},"body":{"coverage.html":{}}}],["30385",{"_index":1901,"title":{},"body":{"injectables/MapService.html":{}}}],["30428",{"_index":1922,"title":{},"body":{"injectables/MapService.html":{}}}],["3094",{"_index":1927,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3141",{"_index":2083,"title":{},"body":{"injectables/ObservationService.html":{}}}],["32398004",{"_index":1912,"title":{},"body":{"injectables/MapService.html":{}}}],["32623",{"_index":1929,"title":{},"body":{"injectables/MapService.html":{}}}],["330c01a5ca8e",{"_index":2392,"title":{},"body":{"injectables/SmartService.html":{}}}],["38341003",{"_index":1925,"title":{},"body":{"injectables/MapService.html":{}}}],["39156",{"_index":2085,"title":{},"body":{"injectables/ObservationService.html":{}}}],["4",{"_index":82,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["4/4",{"_index":2609,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2611,"title":{},"body":{"coverage.html":{}}}],["44054006",{"_index":1889,"title":{},"body":{"injectables/MapService.html":{}}}],["442311008",{"_index":1928,"title":{},"body":{"injectables/MapService.html":{}}}],["4de9",{"_index":2390,"title":{},"body":{"injectables/SmartService.html":{}}}],["5",{"_index":132,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{}}}],["5/7",{"_index":2581,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2573,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":480,"title":{},"body":{"injectables/AssociationService.html":{}}}],["54150009",{"_index":1902,"title":{},"body":{"injectables/MapService.html":{}}}],["55284",{"_index":1888,"title":{},"body":{"injectables/MapService.html":{}}}],["56",{"_index":2598,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":302,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{}}}],["6.5.4",{"_index":2636,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":2595,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":2582,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2587,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1900,"title":{},"body":{"injectables/MapService.html":{}}}],["7/8",{"_index":2605,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":2580,"title":{},"body":{"coverage.html":{}}}],["711d",{"_index":2389,"title":{},"body":{"injectables/SmartService.html":{}}}],["718",{"_index":1899,"title":{},"body":{"injectables/MapService.html":{}}}],["72166",{"_index":1893,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["75",{"_index":2593,"title":{},"body":{"coverage.html":{}}}],["777",{"_index":1930,"title":{},"body":{"injectables/MapService.html":{}}}],["785",{"_index":1918,"title":{},"body":{"injectables/MapService.html":{}}}],["786",{"_index":1921,"title":{},"body":{"injectables/MapService.html":{}}}],["789",{"_index":1913,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["8",{"_index":1905,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["8.2.14",{"_index":2619,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2621,"title":{},"body":{"dependencies.html":{}}}],["8.3.25",{"_index":2623,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":2576,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2600,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1650,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["80394007",{"_index":1909,"title":{},"body":{"injectables/MapService.html":{}}}],["8302",{"_index":2082,"title":{},"body":{"injectables/ObservationService.html":{}}}],["8310",{"_index":2086,"title":{},"body":{"injectables/ObservationService.html":{}}}],["8462",{"_index":1890,"title":{},"body":{"injectables/MapService.html":{}}}],["8480",{"_index":1887,"title":{},"body":{"injectables/MapService.html":{}}}],["87",{"_index":2604,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2575,"title":{},"body":{"coverage.html":{}}}],["89765005",{"_index":1917,"title":{},"body":{"injectables/MapService.html":{}}}],["9",{"_index":1896,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["9/14",{"_index":2596,"title":{},"body":{"coverage.html":{}}}],["9/16",{"_index":2599,"title":{},"body":{"coverage.html":{}}}],["90708001",{"_index":1886,"title":{},"body":{"injectables/MapService.html":{}}}],["93",{"_index":2578,"title":{},"body":{"coverage.html":{}}}],["a['code",{"_index":519,"title":{},"body":{"injectables/AssociationService.html":{}}}],["abnormal",{"_index":311,"title":{},"body":{"components/AccountComponent.html":{}}}],["above",{"_index":104,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ConditionService.html":{},"index.html":{}}}],["access",{"_index":710,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["accessing",{"_index":2724,"title":{},"body":{"index.html":{}}}],["according",{"_index":103,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{}}}],["accordion",{"_index":72,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["accordionrecursion",{"_index":1,"title":{"components/AccordionRecursion.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordionrecursion'},{'name",{"_index":157,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["accordionrecursion.html",{"_index":13,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["account",{"_index":231,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["account'},{'name",{"_index":159,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["account.html",{"_index":232,"title":{},"body":{"components/AccountComponent.html":{}}}],["accountcomponent",{"_index":158,"title":{"components/AccountComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["achieved",{"_index":1009,"title":{},"body":{"injectables/ConditionService.html":{}}}],["active",{"_index":142,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"classes/Patient.html":{},"components/ScratchPadUpdate.html":{}}}],["active/inactive",{"_index":136,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["activities",{"_index":308,"title":{},"body":{"components/AccountComponent.html":{}}}],["activity",{"_index":641,"title":{},"body":{"classes/CarePlan.html":{}}}],["actual_component",{"_index":226,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["actually",{"_index":751,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["adams",{"_index":2702,"title":{},"body":{"index.html":{}}}],["add",{"_index":718,"title":{},"body":{"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["addcategoriesconditions",{"_index":19,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesconditions(arrdata",{"_index":44,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["addcategoriesobservations",{"_index":2038,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addcategoriesobservations(observations",{"_index":2048,"title":{},"body":{"injectables/ObservationService.html":{}}}],["addgraphconfig",{"_index":1434,"title":{},"body":{"injectables/DoctorService.html":{}}}],["addgraphconfig(list",{"_index":1438,"title":{},"body":{"injectables/DoctorService.html":{}}}],["adding",{"_index":1158,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["addmedicationchart",{"_index":1709,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addmedicationchart(medication",{"_index":1715,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservationchart",{"_index":1710,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservationchart(chartname",{"_index":1717,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addoption",{"_index":1342,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["addoption(option",{"_index":1349,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["address",{"_index":2227,"title":{},"body":{"classes/Patient.html":{}}}],["adds",{"_index":2540,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["addsetting",{"_index":238,"title":{},"body":{"components/AccountComponent.html":{}}}],["addsetting(checked",{"_index":244,"title":{},"body":{"components/AccountComponent.html":{}}}],["adjust",{"_index":2196,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["advancedsearch",{"_index":2244,"title":{},"body":{"components/PatientComponent.html":{}}}],["advantage",{"_index":2718,"title":{},"body":{"index.html":{}}}],["afbe",{"_index":2391,"title":{},"body":{"injectables/SmartService.html":{}}}],["again",{"_index":1841,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["albumin",{"_index":270,"title":{},"body":{"components/AccountComponent.html":{}}}],["allergies",{"_index":307,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["allergies.map(allergy",{"_index":2286,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergies/precautions",{"_index":145,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["allergy",{"_index":2245,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergy.code.text",{"_index":2287,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergyintolerance",{"_index":319,"title":{"classes/AllergyIntolerance.html":{}},"body":{"classes/AllergyIntolerance.html":{},"injectables/ConditionService.html":{},"coverage.html":{}}}],["allow",{"_index":1148,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["allows",{"_index":1457,"title":{},"body":{"injectables/DoctorService.html":{}}}],["already",{"_index":126,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["alt",{"_index":268,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["amdateformat:'mm/dd/yyyy",{"_index":2310,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdateformat:\\'mm/dd/yyyy",{"_index":2314,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:'years':false)}}yr",{"_index":2311,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:\\'years\\':false)}}yr",{"_index":2315,"title":{},"body":{"components/PatientComponent.html":{}}}],["amtimeago",{"_index":2031,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"components/TimelinePopupComponent.html":{}}}],["amtimeago:true",{"_index":1325,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ana",{"_index":263,"title":{},"body":{"components/AccountComponent.html":{}}}],["angular",{"_index":2656,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2618,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2620,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":2622,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2513,"title":{},"body":{"components/TimelinePopupComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["angular/compiler",{"_index":2624,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":1114,"title":{},"body":{"components/ConditionsChartComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1881,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["another",{"_index":2744,"title":{},"body":{"index.html":{}}}],["apache",{"_index":2752,"title":{},"body":{"index.html":{}}}],["api",{"_index":509,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{}}}],["app",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":161,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["app.html",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["app/components/accordionrecursion/accordionrecursion.component",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/account/account.component",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/app/app.component",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplandisplay/careplandisplay.component",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplans/careplans.component",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/columnstateswitcher/columnstateswitcher.component",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditions/conditions.component",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionschart/conditionschart.component",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionsdisplay/conditionsdisplay.component",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/contextmenu/contextmenu.component",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/form",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/historicaltrends/historicaltrends.component",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/home/home.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/hoverbox/hoverbox.component",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loadinganimation/loadinganimation.component",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/medications/medications.component",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursionchart/observationrecursionchart.component",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observations/observations.component",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationsdisplay/observationsdisplay.component",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/patient/patient.component",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline/timeline.component",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline_popup/timeline_popup.component",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/toolbar/toolbar.component",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/triplelist/triplelist.component",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/form.module",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/association.service",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/careplan.service",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/condition.service",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/doctor.service",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/encounter.service",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/fhir.service",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/historicaltrends.service",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/map.service",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/observation.service",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/patient.service",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/scratchpad.service",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/smart.service",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/toolbar.service",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":160,"title":{"components/AppComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1225,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TripleListComponent.html":{}}}],["appears",{"_index":1831,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["application",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseColumn.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["application/json",{"_index":1553,"title":{},"body":{"injectables/FhirService.html":{}}}],["application/x",{"_index":2445,"title":{},"body":{"injectables/SmartService.html":{}}}],["appmodule",{"_index":339,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":2723,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingproviders",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approximate",{"_index":599,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["apps",{"_index":2699,"title":{},"body":{"index.html":{}}}],["april",{"_index":1313,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["arbitrary",{"_index":1230,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["arg.url",{"_index":2422,"title":{},"body":{"injectables/SmartService.html":{}}}],["arg.valueuri",{"_index":2424,"title":{},"body":{"injectables/SmartService.html":{}}}],["args",{"_index":1866,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["array",{"_index":80,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/Bundle.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["array.from(medicationmap.values",{"_index":816,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["array.from(this.chartsmap.values",{"_index":1768,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["arrdata",{"_index":46,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["arriving",{"_index":2406,"title":{},"body":{"injectables/SmartService.html":{}}}],["asc",{"_index":1086,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["assign",{"_index":2330,"title":{},"body":{"injectables/PatientService.html":{}}}],["assignvisible",{"_index":1435,"title":{},"body":{"injectables/DoctorService.html":{}}}],["assignvisible(list",{"_index":1440,"title":{},"body":{"injectables/DoctorService.html":{}}}],["associable",{"_index":445,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{},"coverage.html":{}}}],["associable.model",{"_index":651,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{}}}],["associated",{"_index":497,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Chart.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["associatedconditions",{"_index":511,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapconditions",{"_index":451,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapobservations",{"_index":452,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedobservations",{"_index":513,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association",{"_index":734,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associations",{"_index":498,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["associationservice",{"_index":352,"title":{"injectables/AssociationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":1119,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["ast",{"_index":269,"title":{},"body":{"components/AccountComponent.html":{}}}],["aud",{"_index":2367,"title":{},"body":{"injectables/SmartService.html":{}}}],["august",{"_index":1316,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["auth",{"_index":2419,"title":{},"body":{"injectables/SmartService.html":{}}}],["authenticate",{"_index":2375,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorize",{"_index":2423,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorizeurl",{"_index":2368,"title":{},"body":{"injectables/SmartService.html":{}}}],["autogrow",{"_index":551,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["autogrow]'},{'name",{"_index":223,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["autogrowdirective",{"_index":222,"title":{"directives/AutoGrowDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":2694,"title":{},"body":{"index.html":{}}}],["available",{"_index":1802,"title":{},"body":{"components/HomeComponent.html":{}}}],["avoid",{"_index":1732,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"index.html":{}}}],["away",{"_index":1846,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["axis",{"_index":891,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["back",{"_index":1701,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["bar",{"_index":1668,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["base",{"_index":1530,"title":{},"body":{"injectables/FhirService.html":{}}}],["basecolumn",{"_index":570,"title":{"classes/BaseColumn.html":{}},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{}}}],["basecolumn:26",{"_index":834,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:33",{"_index":835,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:38",{"_index":836,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:43",{"_index":837,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:46",{"_index":850,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:49",{"_index":852,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:52",{"_index":851,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["based",{"_index":149,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlansComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["basic",{"_index":1109,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["bearer",{"_index":1555,"title":{},"body":{"injectables/FhirService.html":{}}}],["before",{"_index":1830,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["begin",{"_index":2670,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":715,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["being",{"_index":841,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{}}}],["below",{"_index":2465,"title":{},"body":{"injectables/SmartService.html":{}}}],["best",{"_index":2453,"title":{},"body":{"injectables/SmartService.html":{}}}],["better",{"_index":1242,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["between",{"_index":856,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ToolbarComponent.html":{}}}],["bilirubin",{"_index":271,"title":{},"body":{"components/AccountComponent.html":{}}}],["bind(this",{"_index":729,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["birthdate",{"_index":2228,"title":{},"body":{"classes/Patient.html":{}}}],["blood",{"_index":2092,"title":{},"body":{"injectables/ObservationService.html":{}}}],["blur",{"_index":563,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["body",{"_index":2103,"title":{},"body":{"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"index.html":{}}}],["boolean",{"_index":56,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["bootstrap",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextMenuOption.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":285,"title":{},"body":{"components/AccountComponent.html":{}}}],["bound",{"_index":713,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["box",{"_index":194,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["boxdata",{"_index":1960,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["break",{"_index":2278,"title":{},"body":{"components/PatientComponent.html":{}}}],["brew",{"_index":2667,"title":{},"body":{"index.html":{}}}],["brief",{"_index":2735,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2756,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["buffer",{"_index":1753,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["bugs",{"_index":2712,"title":{},"body":{"index.html":{}}}],["build",{"_index":2658,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1563,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder'},{'name",{"_index":181,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["builder.component",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["builder.component.ts",{"_index":1562,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["builder.component.ts:13",{"_index":1588,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:14",{"_index":1587,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:16",{"_index":1589,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:17",{"_index":1585,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:19",{"_index":1577,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:20",{"_index":1578,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:22",{"_index":1576,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:27",{"_index":1581,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:32",{"_index":1580,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:39",{"_index":1584,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:55",{"_index":1583,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:59",{"_index":1579,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.html",{"_index":1566,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder/form",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"components/FormBuilder.html":{},"coverage.html":{}}}],["bun",{"_index":267,"title":{},"body":{"components/AccountComponent.html":{}}}],["bundle",{"_index":631,"title":{"classes/Bundle.html":{}},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["bundle.entry",{"_index":787,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["bundle.entry.map(e",{"_index":1517,"title":{},"body":{"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["bundle.entry.map(r",{"_index":788,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["bundle.link.find(link",{"_index":1015,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["button",{"_index":1600,"title":{},"body":{"components/FormBuilder.html":{}}}],["c",{"_index":517,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["c.clinicalstatus",{"_index":1135,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.id",{"_index":744,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c.isparent",{"_index":756,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.isvisible",{"_index":755,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.parent",{"_index":754,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.relativedatetime",{"_index":1100,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.sort((n1",{"_index":1089,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["c/patient_viewer.git",{"_index":2677,"title":{},"body":{"index.html":{}}}],["c2",{"_index":1221,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c2.onsetdatetime.localecompare(c1.onsetdatetime",{"_index":1222,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c['code']['text",{"_index":1324,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c['selected",{"_index":743,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c[\\'code\\'][\\'text",{"_index":1326,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c[element",{"_index":1153,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cache",{"_index":1025,"title":{},"body":{"injectables/ConditionService.html":{}}}],["calcium",{"_index":259,"title":{},"body":{"components/AccountComponent.html":{}}}],["call",{"_index":534,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["called",{"_index":1194,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["calls",{"_index":1026,"title":{},"body":{"injectables/ConditionService.html":{}}}],["cardiovascular",{"_index":2110,"title":{},"body":{"injectables/ObservationService.html":{}}}],["care",{"_index":94,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{}}}],["careplan",{"_index":442,"title":{"classes/CarePlan.html":{}},"body":{"modules/AppModule.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"coverage.html":{}}}],["careplandisplay",{"_index":162,"title":{"components/CarePlanDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay'},{'name",{"_index":163,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplandisplay.html",{"_index":665,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanloadfinished",{"_index":824,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["careplans",{"_index":675,"title":{},"body":{"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/TripleListComponent.html":{}}}],["careplans'},{'name",{"_index":165,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplans.html",{"_index":823,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["careplans.length",{"_index":867,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["careplanscomponent",{"_index":164,"title":{"components/CarePlansComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplanselected",{"_index":677,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanservice",{"_index":353,"title":{"injectables/CarePlanService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/MedicationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":2276,"title":{},"body":{"components/PatientComponent.html":{}}}],["cases",{"_index":2747,"title":{},"body":{"index.html":{}}}],["cast",{"_index":1523,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{}}}],["casted",{"_index":1524,"title":{},"body":{"injectables/EncounterService.html":{}}}],["cat.category",{"_index":150,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.count",{"_index":2028,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["cat.data?.length",{"_index":151,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.display",{"_index":2027,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["catch",{"_index":1154,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["categories",{"_index":2066,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorize",{"_index":2079,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorizedobservations",{"_index":2033,"title":{},"body":{"injectables/ObservationService.html":{}}}],["category",{"_index":76,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Timeline.html":{}}}],["cause",{"_index":2732,"title":{},"body":{"index.html":{}}}],["causes",{"_index":1300,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["cd",{"_index":2678,"title":{},"body":{"index.html":{}}}],["certain",{"_index":2055,"title":{},"body":{"injectables/ObservationService.html":{}}}],["chain",{"_index":998,"title":{},"body":{"injectables/ConditionService.html":{}}}],["change",{"_index":1444,"title":{},"body":{"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{}}}],["changed",{"_index":832,"title":{},"body":{"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{}}}],["changedobs",{"_index":2018,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changedobs.isselected",{"_index":2023,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changesthen",{"_index":2696,"title":{},"body":{"index.html":{}}}],["chart",{"_index":869,"title":{"classes/Chart.html":{}},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["chart.data",{"_index":1745,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.length",{"_index":1778,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.push",{"_index":1741,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.sort((p1",{"_index":1746,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].name",{"_index":1783,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].value",{"_index":1779,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.linechartdata",{"_index":1750,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.normalvalues",{"_index":1761,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.title",{"_index":1734,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemax",{"_index":1759,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemin",{"_index":1758,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chartevent",{"_index":1641,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmaxdate",{"_index":1686,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate",{"_index":1685,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate.gettime",{"_index":1688,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartname",{"_index":1719,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["charts",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"dependencies.html":{}}}],["chartsize",{"_index":1625,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartsmap",{"_index":1708,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["check",{"_index":736,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["check(medication",{"_index":1945,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["checkallcareplans",{"_index":668,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallcareplans(checked",{"_index":683,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallconditions",{"_index":1255,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallconditions(checked",{"_index":1267,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallobservations",{"_index":2180,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkallobservations(checked",{"_index":2191,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkbox",{"_index":167,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["checkboxdata",{"_index":903,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxes",{"_index":913,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxinline",{"_index":166,"title":{"components/CheckboxInline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcareplan",{"_index":669,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcareplan(checked",{"_index":685,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked",{"_index":670,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked(careplan",{"_index":688,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcondition",{"_index":1256,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkcondition(checkedcondition",{"_index":1269,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checked",{"_index":247,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["checked(changedobs",{"_index":2016,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["checkedcareplan",{"_index":686,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkedcondition",{"_index":1271,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkedconditions",{"_index":473,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedconditions.map(this.extractconditioninfo",{"_index":527,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedconditionsinfo",{"_index":526,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservation",{"_index":2194,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkedobservations",{"_index":471,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedobservations.map(this.extractobservationinfo",{"_index":529,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservationsinfo",{"_index":528,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checking",{"_index":707,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["checkobservation",{"_index":2181,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkobservation(checked",{"_index":2193,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["chief",{"_index":140,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["child",{"_index":610,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["chloride",{"_index":257,"title":{},"body":{"components/AccountComponent.html":{}}}],["cholesteralbattery",{"_index":233,"title":{},"body":{"components/AccountComponent.html":{}}}],["choose",{"_index":1681,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["class",{"_index":67,"title":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":320,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{},"overview.html":{}}}],["clean",{"_index":1452,"title":{},"body":{"injectables/DoctorService.html":{}}}],["cleaning",{"_index":1366,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clear",{"_index":504,"title":{},"body":{"injectables/AssociationService.html":{}}}],["click",{"_index":1332,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["clicked",{"_index":748,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{}}}],["clickedset",{"_index":1072,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["clicking",{"_index":722,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["clicks",{"_index":1354,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clicksubscription",{"_index":1336,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["client",{"_index":916,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"coverage.html":{}}}],["client_id",{"_index":2460,"title":{},"body":{"injectables/SmartService.html":{}}}],["clientid",{"_index":2369,"title":{},"body":{"injectables/SmartService.html":{}}}],["clinical",{"_index":2653,"title":{},"body":{"index.html":{}}}],["clinicalstatus",{"_index":952,"title":{},"body":{"classes/Condition.html":{}}}],["clone",{"_index":2675,"title":{},"body":{"index.html":{}}}],["close",{"_index":1383,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["close(event",{"_index":2505,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["closeable",{"_index":1337,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closeable_delay",{"_index":1338,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closed",{"_index":1405,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closes",{"_index":1365,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["cluster_appmodule",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule",{"_index":1602,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_declarations",{"_index":1603,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_exports",{"_index":1604,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["clutter",{"_index":2733,"title":{},"body":{"index.html":{}}}],["cnum",{"_index":1140,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cnum.tostring",{"_index":1144,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["co2",{"_index":258,"title":{},"body":{"components/AccountComponent.html":{}}}],["code",{"_index":322,"title":{},"body":{"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["codes",{"_index":2077,"title":{},"body":{"injectables/ObservationService.html":{}}}],["coding",{"_index":539,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{}}}],["collapse",{"_index":286,"title":{},"body":{"components/AccountComponent.html":{}}}],["collapsequeue",{"_index":1034,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["column",{"_index":90,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["column's",{"_index":936,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnheight",{"_index":584,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnnum",{"_index":25,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["columns",{"_index":134,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{}}}],["columnstate",{"_index":585,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnstatesubscription",{"_index":825,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["columnstateswitcher",{"_index":924,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitcher'},{'name",{"_index":170,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["columnstateswitcher.html",{"_index":925,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitchercomponent",{"_index":169,"title":{"components/ColumnStateSwitcherComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["columntype",{"_index":929,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["combdata",{"_index":1567,"title":{},"body":{"components/FormBuilder.html":{}}}],["combineddata",{"_index":904,"title":{},"body":{"components/CheckboxInline.html":{}}}],["command",{"_index":2690,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2672,"title":{},"body":{"index.html":{}}}],["comment",{"_index":2464,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["comments",{"_index":2741,"title":{},"body":{"index.html":{}}}],["compat",{"_index":2637,"title":{},"body":{"dependencies.html":{}}}],["compiler",{"_index":1793,"title":{},"body":{"components/HomeComponent.html":{}}}],["complaint",{"_index":141,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["completion",{"_index":2720,"title":{},"body":{"index.html":{}}}],["complex",{"_index":2739,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":156,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/form_components/checkbox",{"_index":1606,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/normal",{"_index":1608,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/scrachpad",{"_index":1613,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/select",{"_index":1611,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/home/home.component",{"_index":2268,"title":{},"body":{"components/PatientComponent.html":{}}}],["components/hoverbox/hoverbox.component",{"_index":2514,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["concat",{"_index":992,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concat(of(conditions",{"_index":1017,"title":{},"body":{"injectables/ConditionService.html":{}}}],["concat(of(encounters",{"_index":1519,"title":{},"body":{"injectables/EncounterService.html":{}}}],["concatmap",{"_index":993,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["condition",{"_index":148,"title":{"classes/Condition.html":{}},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["condition.code.coding[0].code",{"_index":2524,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.code.coding[0].display",{"_index":2522,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.isvisible",{"_index":1237,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.onsetdatetime",{"_index":2521,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.relativedatetime",{"_index":1239,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.service",{"_index":487,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['code",{"_index":542,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['system",{"_index":543,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['onsetdatetime",{"_index":544,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionally",{"_index":1000,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditiongrouping",{"_index":1035,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["conditiongroupingname",{"_index":1036,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditiongroupingname[conditiongrouping.indexof(c",{"_index":1167,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditions",{"_index":88,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditions'},{'name",{"_index":174,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditions.component.ts",{"_index":1447,"title":{},"body":{"injectables/DoctorService.html":{}}}],["conditions.html",{"_index":1184,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["conditions.map(this.extractconditioninfo",{"_index":531,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionscache",{"_index":967,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditionschart",{"_index":1032,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschart'},{'name",{"_index":172,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionschart.html",{"_index":1033,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschartcomponent",{"_index":171,"title":{"components/ConditionsChartComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionscomponent",{"_index":173,"title":{"components/ConditionsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay",{"_index":175,"title":{"components/ConditionsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay'},{'name",{"_index":176,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionsdisplay.html",{"_index":1254,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["conditionselected",{"_index":1048,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{}}}],["conditionservice",{"_index":354,"title":{"injectables/ConditionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsinfo",{"_index":530,"title":{},"body":{"injectables/AssociationService.html":{}}}],["confidential",{"_index":2700,"title":{},"body":{"index.html":{}}}],["config",{"_index":317,"title":{},"body":{"components/AccountComponent.html":{}}}],["configmode",{"_index":1432,"title":{},"body":{"injectables/DoctorService.html":{}}}],["console.log",{"_index":2727,"title":{},"body":{"index.html":{}}}],["console.log(\"add",{"_index":1669,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["console.log(\"changing",{"_index":2351,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["console.log(\"highlighting",{"_index":1619,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["console.log(\"loaded",{"_index":866,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["console.log(\"no",{"_index":2119,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(\"saved",{"_index":280,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"this",{"_index":1163,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log('blur",{"_index":568,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('focus",{"_index":564,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('loaded",{"_index":1951,"title":{},"body":{"components/MedicationsComponent.html":{},"components/TimelineComponent.html":{}}}],["console.log('log",{"_index":2498,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('stop",{"_index":2434,"title":{},"body":{"injectables/SmartService.html":{}}}],["console.log('that",{"_index":1156,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(condition",{"_index":1297,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["console.log(data",{"_index":1333,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["console.log(forms",{"_index":1597,"title":{},"body":{"components/FormBuilder.html":{}}}],["console.log(fullpath",{"_index":1160,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(obs",{"_index":2213,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["console.log(plan",{"_index":731,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["console.log(this.encounters",{"_index":2494,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log(this.getscratchpadobservations",{"_index":2156,"title":{},"body":{"injectables/ObservationService.html":{}}}],["const",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{},"injectables/EncounterService.html":{},"injectables/SmartService.html":{}}}],["constitutional",{"_index":2101,"title":{},"body":{"injectables/ObservationService.html":{}}}],["construct",{"_index":2288,"title":{},"body":{"components/PatientComponent.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(associationservice",{"_index":2186,"title":{},"body":{"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["constructor(careplanservice",{"_index":1943,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["constructor(conditionservice",{"_index":1049,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["constructor(cookieservice",{"_index":1436,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["constructor(doctorservice",{"_index":241,"title":{},"body":{"components/AccountComponent.html":{}}}],["constructor(el",{"_index":554,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["constructor(encounterservice",{"_index":2485,"title":{},"body":{"components/TimelineComponent.html":{}}}],["constructor(fhirservice",{"_index":766,"title":{},"body":{"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["constructor(http",{"_index":458,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["constructor(name",{"_index":1933,"title":{},"body":{"classes/Medication.html":{},"classes/Server.html":{}}}],["constructor(observationservice",{"_index":30,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationRecursiveChart.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"directives/HighlightDirective.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelineComponent.html":{}}}],["constructor(public",{"_index":2365,"title":{},"body":{"classes/Server.html":{}}}],["constructor(ref",{"_index":1346,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["constructor(scratchpadservice",{"_index":678,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{}}}],["constructor(trendsservice",{"_index":1635,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["contained",{"_index":2057,"title":{},"body":{"injectables/ObservationService.html":{}}}],["containing",{"_index":1810,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["contains",{"_index":1120,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["content",{"_index":2444,"title":{},"body":{"injectables/SmartService.html":{}}}],["context",{"_index":709,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["contextmenu",{"_index":1334,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["contextmenu'},{'name",{"_index":178,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["contextmenu.component.ts",{"_index":2749,"title":{},"body":{"index.html":{}}}],["contextmenu.html",{"_index":1335,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["contextmenu/contextmenu.component",{"_index":704,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["contextmenucomponent",{"_index":177,"title":{"components/ContextMenuComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contextmenuoption",{"_index":1350,"title":{"classes/ContextMenuOption.html":{}},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["contexts",{"_index":1379,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["continual",{"_index":2163,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["continually",{"_index":1002,"title":{},"body":{"injectables/ConditionService.html":{}}}],["continue",{"_index":1740,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["convert",{"_index":1510,"title":{},"body":{"injectables/EncounterService.html":{}}}],["cookie",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["correct",{"_index":124,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{}}}],["count",{"_index":1460,"title":{},"body":{"injectables/DoctorService.html":{},"injectables/ObservationService.html":{}}}],["coverage",{"_index":2566,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":800,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.code",{"_index":802,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.value",{"_index":814,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.period.end",{"_index":761,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp.period.start",{"_index":760,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp['title",{"_index":759,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp[\\'title",{"_index":762,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["create",{"_index":804,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["created",{"_index":1765,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creating",{"_index":1733,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creatinine",{"_index":265,"title":{},"body":{"components/AccountComponent.html":{}}}],["cross",{"_index":2435,"title":{},"body":{"injectables/SmartService.html":{}}}],["css",{"_index":2660,"title":{},"body":{"index.html":{}}}],["csub.clinicalstatus",{"_index":1170,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub.relativedatetime",{"_index":1171,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['coding'][0]['code",{"_index":1169,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['text",{"_index":1168,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'coding\\'][0][\\'code",{"_index":1174,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'text",{"_index":1173,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ctgry",{"_index":2150,"title":{},"body":{"injectables/ObservationService.html":{}}}],["current",{"_index":70,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["currently",{"_index":493,"title":{},"body":{"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{},"components/ToolbarComponent.html":{}}}],["currstatus",{"_index":2345,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["custom",{"_index":1811,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["d",{"_index":1307,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getdate",{"_index":1322,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getfullyear",{"_index":1323,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["dailyamount",{"_index":656,"title":{},"body":{"classes/CarePlan.html":{}}}],["daniel",{"_index":2703,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1700,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["dashedlines",{"_index":871,"title":{},"body":{"classes/Chart.html":{}}}],["data",{"_index":69,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TripleListComponent.html":{}}}],["data.length",{"_index":1731,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["data['rest'][0].security.extension.filter(e",{"_index":2414,"title":{},"body":{"injectables/SmartService.html":{}}}],["data[0].code['text",{"_index":1735,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["datafilter",{"_index":139,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["datalocation",{"_index":1057,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["datalocation.foreach(element",{"_index":1151,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date",{"_index":653,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/TimelinePopupComponent.html":{}}}],["date().gettime",{"_index":1096,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["date(c.onsetdatetime",{"_index":1308,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["date(c.onsetdatetime).gettime",{"_index":1099,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(condition.onsetdatetime).gettime",{"_index":1238,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["date(cp.period.end",{"_index":812,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(cp.period.start",{"_index":811,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(form.maxdate",{"_index":1680,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(form.mindate",{"_index":1678,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(newdate).todatestring",{"_index":1101,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(ob.effectivedatetime).gettime",{"_index":2131,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(point.relativedatetime",{"_index":1742,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["date(this.conditions[0].onsetdatetime).gettime",{"_index":1097,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["date(this.observations[0].effectivedatetime).gettime",{"_index":2128,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(this.period.end",{"_index":1498,"title":{},"body":{"classes/Encounter.html":{}}}],["date(this.period.start",{"_index":1497,"title":{},"body":{"classes/Encounter.html":{}}}],["datepipe",{"_index":2504,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["datepipe('en",{"_index":2509,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dates",{"_index":1223,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["datetime",{"_index":541,"title":{},"body":{"injectables/AssociationService.html":{}}}],["dd",{"_index":2516,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dealing",{"_index":2714,"title":{},"body":{"index.html":{}}}],["debounce",{"_index":624,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debouncetime",{"_index":615,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debugging",{"_index":2466,"title":{},"body":{"injectables/SmartService.html":{}}}],["december",{"_index":1320,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["declarations",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["declare",{"_index":1209,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["declared",{"_index":2710,"title":{},"body":{"index.html":{}}}],["declaring",{"_index":2709,"title":{},"body":{"index.html":{}}}],["decodeuricomponent(tmp[1",{"_index":2473,"title":{},"body":{"injectables/SmartService.html":{}}}],["decorators",{"_index":698,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["default",{"_index":57,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":1382,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["delete",{"_index":1126,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["demos",{"_index":1228,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["dependencies",{"_index":341,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependenciesif",{"_index":2682,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1464,"title":{},"body":{"injectables/DoctorService.html":{}}}],["desc",{"_index":1087,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["described",{"_index":129,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["description",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["deserialize",{"_index":1504,"title":{},"body":{"injectables/EncounterService.html":{}}}],["deserialize(input",{"_index":1508,"title":{},"body":{"injectables/EncounterService.html":{}}}],["detail",{"_index":655,"title":{},"body":{"classes/CarePlan.html":{}}}],["details",{"_index":1492,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["detects",{"_index":844,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["determine",{"_index":1304,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["developing",{"_index":2730,"title":{},"body":{"index.html":{}}}],["development",{"_index":2681,"title":{},"body":{"index.html":{}}}],["diff",{"_index":1095,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["different",{"_index":133,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["directive",{"_index":155,"title":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["directives",{"_index":221,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["directly",{"_index":2715,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1410,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["discussed",{"_index":1012,"title":{},"body":{"injectables/ConditionService.html":{}}}],["display",{"_index":99,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/CarePlan.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{}}}],["display_delay",{"_index":1814,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["displayed",{"_index":708,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["displaying",{"_index":1729,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/ObservationsDisplay.html":{}}}],["displays",{"_index":2560,"title":{},"body":{"components/TripleListComponent.html":{}}}],["div",{"_index":1489,"title":{},"body":{"classes/Encounter.html":{}}}],["do's",{"_index":2707,"title":{},"body":{"index.html":{}}}],["dob",{"_index":2308,"title":{},"body":{"components/PatientComponent.html":{}}}],["doctorservice",{"_index":242,"title":{"injectables/DoctorService.html":{}},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["document",{"_index":1356,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["document.getelementbyid",{"_index":2725,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"cg",{"_index":1143,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["documentation",{"_index":2567,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":2716,"title":{},"body":{"index.html":{}}}],["doit",{"_index":1860,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["doit(n",{"_index":1861,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["don't",{"_index":2303,"title":{},"body":{"components/PatientComponent.html":{}}}],["done",{"_index":2704,"title":{},"body":{"index.html":{}}}],["dont's",{"_index":2721,"title":{},"body":{"index.html":{}}}],["dosage",{"_index":813,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["dosageunits",{"_index":801,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["doubles/triples",{"_index":1454,"title":{},"body":{"injectables/DoctorService.html":{}}}],["down",{"_index":1183,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["driven",{"_index":2652,"title":{},"body":{"index.html":{}}}],["due",{"_index":309,"title":{},"body":{"components/AccountComponent.html":{}}}],["duration",{"_index":1029,"title":{},"body":{"injectables/ConditionService.html":{}}}],["dynamic",{"_index":576,"title":{},"body":{"classes/BaseColumn.html":{},"dependencies.html":{}}}],["e.resource",{"_index":2114,"title":{},"body":{"injectables/ObservationService.html":{}}}],["e.url",{"_index":2415,"title":{},"body":{"injectables/SmartService.html":{}}}],["each",{"_index":147,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"index.html":{}}}],["earliest",{"_index":1682,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["ears",{"_index":2105,"title":{},"body":{"injectables/ObservationService.html":{}}}],["edge",{"_index":1847,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["effective",{"_index":545,"title":{},"body":{"injectables/AssociationService.html":{}}}],["effectivedatetime",{"_index":469,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["eg",{"_index":847,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["el",{"_index":558,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["elapsed",{"_index":1407,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["electrolytes",{"_index":234,"title":{},"body":{"components/AccountComponent.html":{}}}],["element",{"_index":154,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["elementref",{"_index":555,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/ContextMenuComponent.html":{},"directives/HighlightDirective.html":{},"components/ToolbarComponent.html":{}}}],["elements",{"_index":896,"title":{},"body":{"classes/Chart.html":{},"components/ConditionsComponent.html":{}}}],["ellipsestoggle",{"_index":1039,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["elref",{"_index":2536,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["emit",{"_index":2190,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["empty",{"_index":790,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{}}}],["emsp",{"_index":1854,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["enableprodmode",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["enc",{"_index":2299,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getlogvalue()/5",{"_index":2497,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.getreason",{"_index":2301,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getstartdate",{"_index":2501,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.position",{"_index":2496,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encodeuri(request",{"_index":2468,"title":{},"body":{"injectables/SmartService.html":{}}}],["encodeuri(this.redirecturi",{"_index":2441,"title":{},"body":{"injectables/SmartService.html":{}}}],["encounter",{"_index":1471,"title":{"classes/Encounter.html":{}},"body":{"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{},"index.html":{}}}],["encounter.getreason",{"_index":2518,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["encounters",{"_index":1502,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["encounters.foreach(enc",{"_index":2495,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encounterservice",{"_index":355,"title":{"injectables/EncounterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{},"overview.html":{}}}],["end",{"_index":654,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{},"index.html":{}}}],["endpoint",{"_index":492,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/EncounterService.html":{}}}],["ent",{"_index":2109,"title":{},"body":{"injectables/ObservationService.html":{}}}],["entire",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["entry",{"_index":633,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["entry.description",{"_index":915,"title":{},"body":{"components/CheckboxInline.html":{},"components/SelectListSingle.html":{}}}],["enumerated",{"_index":1456,"title":{},"body":{"injectables/DoctorService.html":{}}}],["error",{"_index":1155,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["errors",{"_index":1130,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["even",{"_index":1215,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["event",{"_index":106,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["event.pagex",{"_index":1403,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["event.pagey",{"_index":1400,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.preventdefault",{"_index":1412,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.shiftkey",{"_index":2024,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["event.target.checked",{"_index":1953,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["event.target.innerheight",{"_index":630,"title":{},"body":{"classes/BaseColumn.html":{}}}],["eventemitter",{"_index":681,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["events",{"_index":1414,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["example",{"_index":933,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ContextMenuComponent.html":{}}}],["examples",{"_index":2748,"title":{},"body":{"index.html":{}}}],["excessive",{"_index":626,"title":{},"body":{"classes/BaseColumn.html":{}}}],["excludes",{"_index":1461,"title":{},"body":{"injectables/DoctorService.html":{}}}],["exec",{"_index":711,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["execute",{"_index":1330,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["executed",{"_index":1360,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["exist",{"_index":805,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{}}}],["existing",{"_index":803,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["exists",{"_index":1164,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["exp",{"_index":1871,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["expand",{"_index":671,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expand(parent",{"_index":690,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expected",{"_index":886,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["export",{"_index":66,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["extends",{"_index":822,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["extra",{"_index":1754,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["extract",{"_index":508,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo",{"_index":454,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo(condition",{"_index":462,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractnewobservations",{"_index":2039,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractnewobservations(observations",{"_index":2050,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractobservationinfo",{"_index":455,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractobservationinfo(observation",{"_index":466,"title":{},"body":{"injectables/AssociationService.html":{}}}],["eyes",{"_index":2104,"title":{},"body":{"injectables/ObservationService.html":{}}}],["false",{"_index":59,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["february",{"_index":1311,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["female",{"_index":2277,"title":{},"body":{"components/PatientComponent.html":{}}}],["fhir",{"_index":1503,"title":{},"body":{"injectables/EncounterService.html":{}}}],["fhir.service",{"_index":774,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["fhirbaseurl",{"_index":2370,"title":{},"body":{"injectables/SmartService.html":{}}}],["fhirservice",{"_index":356,"title":{"injectables/FhirService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["field",{"_index":1157,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["fields",{"_index":525,"title":{},"body":{"injectables/AssociationService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":135,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{}}}],["filtering",{"_index":2554,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterscratchpad",{"_index":2533,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterset",{"_index":2034,"title":{},"body":{"injectables/ObservationService.html":{}}}],["find",{"_index":1850,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["findgetparameter",{"_index":2376,"title":{},"body":{"injectables/SmartService.html":{}}}],["findgetparameter(parametername",{"_index":2381,"title":{},"body":{"injectables/SmartService.html":{}}}],["findings",{"_index":310,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["finished",{"_index":950,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["first",{"_index":108,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/SmartService.html":{}}}],["firstiteration",{"_index":26,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["fit",{"_index":1702,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["fix",{"_index":2450,"title":{},"body":{"injectables/SmartService.html":{}}}],["fixed",{"_index":1525,"title":{},"body":{"injectables/EncounterService.html":{}}}],["fixed[prop",{"_index":1527,"title":{},"body":{"injectables/EncounterService.html":{}}}],["focus",{"_index":562,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{}}}],["folder",{"_index":2691,"title":{},"body":{"index.html":{}}}],["following",{"_index":1829,"title":{},"body":{"components/HoverBoxComponent.html":{},"index.html":{}}}],["follows",{"_index":75,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["foo",{"_index":1621,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["force",{"_index":2692,"title":{},"body":{"index.html":{}}}],["form",{"_index":180,"title":{"classes/Form.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["format",{"_index":128,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{}}}],["formbuilder",{"_index":179,"title":{"components/FormBuilder.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcreatormodule",{"_index":351,"title":{"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["forminput",{"_index":1573,"title":{},"body":{"components/FormBuilder.html":{}}}],["forms",{"_index":1568,"title":{},"body":{"components/FormBuilder.html":{}}}],["formsmodule",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["found",{"_index":2088,"title":{},"body":{"injectables/ObservationService.html":{}}}],["fromevent",{"_index":613,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(document",{"_index":1416,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(window",{"_index":622,"title":{},"body":{"classes/BaseColumn.html":{}}}],["front",{"_index":2650,"title":{},"body":{"index.html":{}}}],["fullpath",{"_index":1150,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["function",{"_index":122,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["function(condition",{"_index":1292,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["function(data",{"_index":1329,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["functionality",{"_index":575,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["functions",{"_index":712,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["g",{"_index":2680,"title":{},"body":{"index.html":{}}}],["gender",{"_index":2229,"title":{},"body":{"classes/Patient.html":{}}}],["genderstring",{"_index":2247,"title":{},"body":{"components/PatientComponent.html":{}}}],["genderstring(patient",{"_index":2250,"title":{},"body":{"components/PatientComponent.html":{}}}],["generalchange",{"_index":292,"title":{},"body":{"components/AccountComponent.html":{}}}],["generally",{"_index":894,"title":{},"body":{"classes/Chart.html":{}}}],["generate",{"_index":1455,"title":{},"body":{"injectables/DoctorService.html":{}}}],["generic",{"_index":2745,"title":{},"body":{"index.html":{}}}],["getassociations",{"_index":456,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations(checkedconditions",{"_index":470,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcheckedconditions",{"_index":969,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getcheckedobservations",{"_index":2040,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getcode",{"_index":1976,"title":{},"body":{"classes/Observation.html":{}}}],["getcolumnstate",{"_index":970,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getdata",{"_index":905,"title":{},"body":{"components/CheckboxInline.html":{},"components/FormBuilder.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["getdaterange",{"_index":1711,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdaterange(chart",{"_index":1720,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdatestring",{"_index":1257,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getdatestring(c",{"_index":1273,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getenddate",{"_index":1475,"title":{},"body":{"classes/Encounter.html":{}}}],["getforms",{"_index":1570,"title":{},"body":{"components/FormBuilder.html":{}}}],["getgrouping",{"_index":2041,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getgrouping(code",{"_index":2053,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getlevel",{"_index":2011,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["getlogvalue",{"_index":1476,"title":{},"body":{"classes/Encounter.html":{}}}],["getreason",{"_index":1477,"title":{},"body":{"classes/Encounter.html":{}}}],["getrequestoptions",{"_index":1532,"title":{},"body":{"injectables/FhirService.html":{}}}],["getrequestoptions(withauth",{"_index":1537,"title":{},"body":{"injectables/FhirService.html":{}}}],["gets",{"_index":1023,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{}}}],["getscratchpadcareplans",{"_index":826,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["getscratchpadconditions",{"_index":1187,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["getscratchpadcount",{"_index":926,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["getscratchpadobservations",{"_index":2042,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getstartdate",{"_index":1478,"title":{},"body":{"classes/Encounter.html":{}}}],["getters",{"_index":1249,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["gettext",{"_index":1977,"title":{},"body":{"classes/Observation.html":{}}}],["gettext(o",{"_index":1991,"title":{},"body":{"classes/Observation.html":{}}}],["getting",{"_index":2647,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":2377,"title":{},"body":{"injectables/SmartService.html":{}}}],["getunits",{"_index":1978,"title":{},"body":{"classes/Observation.html":{}}}],["getunits(o",{"_index":1993,"title":{},"body":{"classes/Observation.html":{}}}],["geturl",{"_index":1533,"title":{},"body":{"injectables/FhirService.html":{}}}],["getvalue",{"_index":1979,"title":{},"body":{"classes/Observation.html":{}}}],["getvalue(o",{"_index":1995,"title":{},"body":{"classes/Observation.html":{}}}],["getvaluerange",{"_index":1712,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getvaluerange(chart",{"_index":1722,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["gfr",{"_index":266,"title":{},"body":{"components/AccountComponent.html":{}}}],["git",{"_index":2674,"title":{},"body":{"index.html":{}}}],["given",{"_index":780,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["giving",{"_index":2736,"title":{},"body":{"index.html":{}}}],["glitch",{"_index":1378,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["global",{"_index":1592,"title":{},"body":{"components/FormBuilder.html":{}}}],["glu",{"_index":262,"title":{},"body":{"components/AccountComponent.html":{}}}],["glyphicon",{"_index":725,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["graphconfig",{"_index":1433,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["groupconditions",{"_index":1040,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouping",{"_index":1972,"title":{},"body":{"classes/Observation.html":{}}}],["groupingcount",{"_index":1059,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouplist",{"_index":2078,"title":{},"body":{"injectables/ObservationService.html":{}}}],["groupmap",{"_index":2035,"title":{},"body":{"injectables/ObservationService.html":{}}}],["grow.directive.ts",{"_index":550,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["grow.directive.ts:10",{"_index":557,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:15",{"_index":560,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:19",{"_index":559,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grunt",{"_index":2657,"title":{},"body":{"index.html":{}}}],["guaranteed",{"_index":131,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["guidelines",{"_index":2706,"title":{},"body":{"index.html":{}}}],["handle",{"_index":1178,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["handledocclick",{"_index":1343,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handledocclick(event",{"_index":1352,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleobservationbundle",{"_index":2043,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleobservationbundle(bundle",{"_index":2059,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleoptionclick",{"_index":1344,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleoptionclick(option",{"_index":1357,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleresize",{"_index":587,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handleresize(event",{"_index":602,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handles",{"_index":1359,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ObservationsComponent.html":{}}}],["hardcode",{"_index":1849,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hardcoded",{"_index":1763,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["hashing",{"_index":2451,"title":{},"body":{"injectables/SmartService.html":{}}}],["hasing\")).tostring",{"_index":2456,"title":{},"body":{"injectables/SmartService.html":{}}}],["hba1c",{"_index":261,"title":{},"body":{"components/AccountComponent.html":{}}}],["hdl",{"_index":252,"title":{},"body":{"components/AccountComponent.html":{}}}],["headers",{"_index":1551,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["headers.append('authorization",{"_index":1554,"title":{},"body":{"injectables/FhirService.html":{}}}],["headings",{"_index":83,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["heart",{"_index":2094,"title":{},"body":{"injectables/ObservationService.html":{}}}],["height",{"_index":593,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["height_offset",{"_index":586,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["here",{"_index":84,"title":{},"body":{"components/AccordionRecursion.html":{},"components/PatientComponent.html":{}}}],["hide",{"_index":1345,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hide(event",{"_index":1363,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hiding",{"_index":1371,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["high",{"_index":898,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{}}}],["highlight",{"_index":225,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["highlightdirective",{"_index":224,"title":{"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["highlighted",{"_index":995,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{}}}],["highlighttext",{"_index":1616,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["hii",{"_index":2698,"title":{},"body":{"index.html":{}}}],["historical",{"_index":298,"title":{},"body":{"components/AccountComponent.html":{}}}],["historicaltrends",{"_index":1623,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrends'},{'name",{"_index":183,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["historicaltrends.html",{"_index":1624,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrendscomponent",{"_index":182,"title":{"components/HistoricalTrendsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["historicaltrendsservice",{"_index":357,"title":{"injectables/HistoricalTrendsService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["history",{"_index":2098,"title":{},"body":{"injectables/ObservationService.html":{}}}],["home",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":185,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["home.html",{"_index":1791,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":184,"title":{"components/HomeComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["horizontal",{"_index":892,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["host",{"_index":561,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["hover",{"_index":1809,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["hoverbox",{"_index":1812,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["hoverbox'},{'name",{"_index":187,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["hoverbox.component.ts",{"_index":2750,"title":{},"body":{"index.html":{}}}],["hoverbox.html",{"_index":1813,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hoverbox/hoverbox.component",{"_index":2269,"title":{},"body":{"components/PatientComponent.html":{}}}],["hoverboxcomponent",{"_index":186,"title":{"components/HoverBoxComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hoverstyling",{"_index":2246,"title":{},"body":{"components/PatientComponent.html":{}}}],["hspc",{"_index":2697,"title":{},"body":{"index.html":{}}}],["html",{"_index":153,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["http",{"_index":461,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["http://ec2",{"_index":479,"title":{},"body":{"injectables/AssociationService.html":{}}}],["http://fhir",{"_index":2416,"title":{},"body":{"injectables/SmartService.html":{}}}],["http://localhost:9000",{"_index":2396,"title":{},"body":{"injectables/SmartService.html":{}}}],["httpclient",{"_index":459,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["httpclientmodule",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1548,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["httpheaders({'accept",{"_index":1552,"title":{},"body":{"injectables/FhirService.html":{}}}],["https://github.com/hii",{"_index":2676,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/45594609/which",{"_index":996,"title":{},"body":{"injectables/ConditionService.html":{}}}],["humanizebytes",{"_index":1859,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["humanizebytespipe",{"_index":1856,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["icon",{"_index":724,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["icons",{"_index":1428,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["id",{"_index":323,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"components/HomeComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Patient.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"classes/User.html":{}}}],["id.type",{"_index":2332,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.type.coding[0].code",{"_index":2333,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.value",{"_index":2335,"title":{},"body":{"injectables/PatientService.html":{}}}],["id=\"tableparentele",{"_index":1172,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["identifier",{"_index":2230,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["ie",{"_index":581,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"index.html":{}}}],["implement",{"_index":948,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["implemented",{"_index":1216,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["implements",{"_index":640,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Observation.html":{}}}],["import",{"_index":61,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["imports",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["inactive",{"_index":144,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1299,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/TripleListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["information",{"_index":1790,"title":{},"body":{"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["inherited",{"_index":833,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["initial",{"_index":300,"title":{},"body":{"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{}}}],["initialize",{"_index":912,"title":{},"body":{"components/CheckboxInline.html":{},"components/ConditionsComponent.html":{}}}],["initialized",{"_index":109,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["injectable",{"_index":448,"title":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"coverage.html":{}}}],["injectables",{"_index":449,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"overview.html":{}}}],["inline",{"_index":901,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline'},{'name",{"_index":168,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["inline.component",{"_index":1607,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["inline.component.ts",{"_index":900,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["inline.component.ts:10",{"_index":910,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:11",{"_index":911,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:13",{"_index":909,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:20",{"_index":908,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:9",{"_index":907,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.html",{"_index":902,"title":{},"body":{"components/CheckboxInline.html":{}}}],["input",{"_index":62,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["input('highlighttext",{"_index":1618,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["input[prop",{"_index":1528,"title":{},"body":{"injectables/EncounterService.html":{}}}],["inputdata",{"_index":906,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.name",{"_index":914,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.status",{"_index":2352,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["inputs",{"_index":24,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["install",{"_index":2668,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2665,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1511,"title":{},"body":{"injectables/EncounterService.html":{}}}],["instead",{"_index":1127,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["instructions",{"_index":2685,"title":{},"body":{"index.html":{}}}],["interface",{"_index":444,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":446,"title":{},"body":{"interfaces/Associable.html":{}}}],["internal",{"_index":1113,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["interval",{"_index":1406,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["invalid",{"_index":1674,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["isallchecked",{"_index":666,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ischecked",{"_index":1294,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["isconditionassociated",{"_index":1258,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionassociated(condition",{"_index":1275,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked",{"_index":1259,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked(condition",{"_index":1277,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected",{"_index":1260,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected(condition",{"_index":1279,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isdate",{"_index":1818,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isdate(x",{"_index":1822,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth",{"_index":1819,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth(x",{"_index":1824,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isn't",{"_index":1999,"title":{},"body":{"classes/Observation.html":{}}}],["isobservationassociated",{"_index":2182,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationassociated(observation",{"_index":2198,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked",{"_index":2183,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked(observation",{"_index":2200,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isparent",{"_index":953,"title":{},"body":{"classes/Condition.html":{}}}],["isvisible",{"_index":954,"title":{},"body":{"classes/Condition.html":{}}}],["it's",{"_index":1159,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["item",{"_index":1853,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["item.split",{"_index":2471,"title":{},"body":{"injectables/SmartService.html":{}}}],["items",{"_index":935,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HoverBoxComponent.html":{}}}],["iteration",{"_index":1459,"title":{},"body":{"injectables/DoctorService.html":{}}}],["itself",{"_index":1728,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["january",{"_index":1310,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["john",{"_index":290,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["jquery",{"_index":1207,"title":{},"body":{"components/ConditionsComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":1112,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{},"index.html":{}}}],["json.parse(json.stringify(this.conditions",{"_index":1105,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["json.parse(this.cookieservice.get('graphconfig",{"_index":2272,"title":{},"body":{"components/PatientComponent.html":{}}}],["json.stringify(this.graphconfig",{"_index":1470,"title":{},"body":{"injectables/DoctorService.html":{}}}],["july",{"_index":1315,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["june",{"_index":1314,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["justcreated",{"_index":1185,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["keep",{"_index":1662,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["keeps",{"_index":578,"title":{},"body":{"classes/BaseColumn.html":{}}}],["key",{"_index":2171,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["kidneyfunction",{"_index":235,"title":{},"body":{"components/AccountComponent.html":{}}}],["know",{"_index":1024,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lab",{"_index":314,"title":{},"body":{"components/AccountComponent.html":{}}}],["largest",{"_index":1776,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["last",{"_index":1028,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lastindex",{"_index":2010,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["latest",{"_index":1683,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["launch",{"_index":2371,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["layout",{"_index":2661,"title":{},"body":{"index.html":{}}}],["ldl",{"_index":251,"title":{},"body":{"components/AccountComponent.html":{}}}],["leave",{"_index":1466,"title":{},"body":{"injectables/DoctorService.html":{}}}],["leaving",{"_index":2726,"title":{},"body":{"index.html":{}}}],["left",{"_index":1339,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["leftoffset",{"_index":1815,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["leftposition",{"_index":2526,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["legend",{"_index":152,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["level",{"_index":71,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationRecursiveChart.html":{}}}],["leveldata",{"_index":27,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["levelnum",{"_index":28,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["libraries",{"_index":2722,"title":{},"body":{"index.html":{}}}],["library",{"_index":1429,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["license",{"_index":2751,"title":{},"body":{"index.html":{}}}],["line",{"_index":739,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/SmartService.html":{}}}],["linear",{"_index":296,"title":{},"body":{"components/AccountComponent.html":{}}}],["linechartdata",{"_index":872,"title":{},"body":{"classes/Chart.html":{}}}],["lines",{"_index":893,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["link",{"_index":634,"title":{"classes/Link.html":{}},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["link.relation",{"_index":1016,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["links",{"_index":2164,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["linux",{"_index":2686,"title":{},"body":{"index.html":{}}}],["list",{"_index":87,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["listdata",{"_index":2357,"title":{},"body":{"components/SelectListSingle.html":{}}}],["lists",{"_index":1449,"title":{},"body":{"injectables/DoctorService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["literal",{"_index":324,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"injectables/FhirService.html":{},"classes/Medication.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["liverfunction",{"_index":236,"title":{},"body":{"components/AccountComponent.html":{}}}],["load",{"_index":1003,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["loadallergies",{"_index":971,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["loadallergies(patient",{"_index":978,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadcareplans",{"_index":764,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadcareplans(patient",{"_index":768,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadconditions",{"_index":972,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditions(patient",{"_index":980,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage",{"_index":973,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage(url",{"_index":982,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loaded",{"_index":839,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["loadencounters",{"_index":1505,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["loadencounters(patient",{"_index":1512,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage",{"_index":1506,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage(url",{"_index":1514,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loader",{"_index":2627,"title":{},"body":{"dependencies.html":{}}}],["loadfinished",{"_index":16,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["loading",{"_index":1880,"title":{},"body":{"components/LoadingAnimation.html":{},"components/ObservationsComponent.html":{}}}],["loadinganimation",{"_index":188,"title":{"components/LoadingAnimation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadinganimation'},{'name",{"_index":189,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["loadinganimation.html",{"_index":1882,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["loadmedications",{"_index":765,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadmedications(patient",{"_index":772,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadobservationspage",{"_index":2044,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadobservationspage(url",{"_index":2061,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadpatient",{"_index":2319,"title":{},"body":{"injectables/PatientService.html":{}}}],["locally",{"_index":2731,"title":{},"body":{"index.html":{}}}],["location",{"_index":1398,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["location.search.substr(1).split(\"&\").foreach(item",{"_index":2470,"title":{},"body":{"injectables/SmartService.html":{}}}],["logarithmic",{"_index":297,"title":{},"body":{"components/AccountComponent.html":{}}}],["logic",{"_index":1118,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{}}}],["long",{"_index":1131,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["longer",{"_index":1368,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["losing",{"_index":737,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["low",{"_index":897,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["lower",{"_index":2026,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["m.name",{"_index":1956,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["mac",{"_index":2683,"title":{},"body":{"index.html":{}}}],["magnesium",{"_index":260,"title":{},"body":{"components/AccountComponent.html":{}}}],["main_list",{"_index":1564,"title":{},"body":{"components/FormBuilder.html":{}}}],["maintaining",{"_index":735,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["make",{"_index":1224,"title":{},"body":{"components/ConditionsComponent.html":{},"index.html":{}}}],["male",{"_index":2279,"title":{},"body":{"components/PatientComponent.html":{}}}],["manager",{"_index":2663,"title":{},"body":{"index.html":{}}}],["map",{"_index":476,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/PatientService.html":{}}}],["mapping",{"_index":2056,"title":{},"body":{"injectables/ObservationService.html":{}}}],["mappings",{"_index":2159,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["maps",{"_index":495,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mapservice",{"_index":358,"title":{"injectables/MapService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapservice.static_mappings",{"_index":2173,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["march",{"_index":1312,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["mark",{"_index":515,"title":{},"body":{"injectables/AssociationService.html":{}}}],["matching",{"_index":228,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(recency_multiplier",{"_index":1236,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["math.log(this.getstartdate().gettime",{"_index":1499,"title":{},"body":{"classes/Encounter.html":{}}}],["math.max(max",{"_index":1782,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.min(min",{"_index":1780,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.pow(1024",{"_index":1870,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["max",{"_index":1672,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate",{"_index":1626,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate.gettime",{"_index":1785,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["maximum",{"_index":889,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["md5",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["md5.hashstr(\"testing",{"_index":2455,"title":{},"body":{"injectables/SmartService.html":{}}}],["md5/dist/md5",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{}}}],["med",{"_index":806,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["med.periods.push",{"_index":810,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication",{"_index":776,"title":{"classes/Medication.html":{}},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"coverage.html":{}}}],["medication(cp.title",{"_index":808,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication.dosageunits",{"_index":1771,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.name",{"_index":1770,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.periods[i",{"_index":1772,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medicationmap",{"_index":799,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.get(cp.title",{"_index":807,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.set(cp.title",{"_index":815,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medications",{"_index":791,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{}}}],["medications'},{'name",{"_index":191,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["medications.html",{"_index":1942,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["medicationscomponent",{"_index":190,"title":{"components/MedicationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menu",{"_index":667,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["merged",{"_index":796,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["method",{"_index":1108,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["methods",{"_index":18,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["min",{"_index":1671,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mindate",{"_index":1627,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["minimum",{"_index":888,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["miscellaneous",{"_index":2759,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":318,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["model",{"_index":127,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["models",{"_index":2713,"title":{},"body":{"index.html":{}}}],["models/allergyintolerance.model",{"_index":994,"title":{},"body":{"injectables/ConditionService.html":{}}}],["models/bundle.model",{"_index":778,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["models/careplan.model",{"_index":705,"title":{},"body":{"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{}}}],["models/chart.model",{"_index":1727,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["models/condition.model",{"_index":489,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["models/contextmenuoption.model",{"_index":1391,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["models/encounter.model",{"_index":1516,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["models/form.model",{"_index":1591,"title":{},"body":{"components/FormBuilder.html":{}}}],["models/medication.model",{"_index":777,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{}}}],["models/observation.model",{"_index":490,"title":{},"body":{"injectables/AssociationService.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["models/patient.model",{"_index":775,"title":{},"body":{"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["models/server.model",{"_index":2270,"title":{},"body":{"components/PatientComponent.html":{}}}],["modified",{"_index":1121,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["modifiers",{"_index":1446,"title":{},"body":{"injectables/DoctorService.html":{}}}],["module",{"_index":338,"title":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["modules",{"_index":340,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"dependencies.html":{}}}],["moment().subtract(months",{"_index":1696,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().subtract(years",{"_index":1693,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().todate",{"_index":1695,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.maxdate).isvalid",{"_index":1676,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.mindate).isvalid",{"_index":1675,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(newdate).toisostring",{"_index":1102,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["moment(relativedatetime).toisostring",{"_index":1240,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["momentmodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":303,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["months",{"_index":1309,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["months').todate",{"_index":1697,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["months[d.getmonth",{"_index":1321,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["more",{"_index":1226,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["mouse",{"_index":1660,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["mouseevent",{"_index":1628,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["mousemove",{"_index":1664,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mousesubscription",{"_index":1629,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mouth",{"_index":2107,"title":{},"body":{"injectables/ObservationService.html":{}}}],["movements",{"_index":1661,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moving",{"_index":1845,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["mr",{"_index":2334,"title":{},"body":{"injectables/PatientService.html":{}}}],["mrn",{"_index":2231,"title":{},"body":{"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["ms",{"_index":1828,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["multiple",{"_index":794,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["n",{"_index":1863,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["n1.code['coding'][0]['code",{"_index":1091,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n1.effectivedatetime",{"_index":2124,"title":{},"body":{"injectables/ObservationService.html":{}}}],["n1.onsetdatetime",{"_index":1093,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2",{"_index":1090,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{}}}],["n2.code['coding'][0]['code",{"_index":1092,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2.onsetdatetime",{"_index":1094,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["nav2",{"_index":2532,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["navigation",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1204,"title":{},"body":{"components/ConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":1467,"title":{},"body":{"injectables/DoctorService.html":{},"components/HoverBoxComponent.html":{}}}],["needed",{"_index":1369,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["needs",{"_index":1451,"title":{},"body":{"injectables/DoctorService.html":{}}}],["new",{"_index":477,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["newcolumnstate",{"_index":986,"title":{},"body":{"injectables/ConditionService.html":{}}}],["newdate",{"_index":1098,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newly",{"_index":1764,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["newtable",{"_index":1041,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtable(tablename",{"_index":1056,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtoken",{"_index":1543,"title":{},"body":{"injectables/FhirService.html":{}}}],["next",{"_index":1004,"title":{},"body":{"injectables/ConditionService.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["nextlink",{"_index":1014,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["nextobservations",{"_index":2113,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ngafterviewinit",{"_index":672,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ngmodule",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["ngonchanges",{"_index":20,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["ngoninit",{"_index":673,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{}}}],["ngx",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"injectables/DoctorService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":2664,"title":{},"body":{"index.html":{}}}],["none",{"_index":1166,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["normal",{"_index":193,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["normalbox1",{"_index":192,"title":{"components/NormalBox1.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalbox2",{"_index":196,"title":{"components/NormalBox2.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalvalues",{"_index":873,"title":{},"body":{"classes/Chart.html":{}}}],["nose",{"_index":2106,"title":{},"body":{"injectables/ObservationService.html":{}}}],["note",{"_index":74,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["nothing",{"_index":1673,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["november",{"_index":1319,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["now",{"_index":112,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/ObservationsComponent.html":{}}}],["npm",{"_index":2662,"title":{},"body":{"index.html":{}}}],["null",{"_index":85,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["number",{"_index":39,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"classes/User.html":{}}}],["numeric",{"_index":1737,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["o",{"_index":521,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["o.date",{"_index":2030,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["o.id",{"_index":2217,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.name",{"_index":2029,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["o.relativedatetime",{"_index":2225,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o['code']['coding'][0]['display",{"_index":2005,"title":{},"body":{"classes/Observation.html":{}}}],["o['code']['text",{"_index":2004,"title":{},"body":{"classes/Observation.html":{}}}],["o['selected",{"_index":2216,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o['valuequantity']['unit",{"_index":2003,"title":{},"body":{"classes/Observation.html":{}}}],["o['valuequantity']['value",{"_index":2001,"title":{},"body":{"classes/Observation.html":{}}}],["ob",{"_index":2130,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ob.relativedatetime",{"_index":2132,"title":{},"body":{"injectables/ObservationService.html":{}}}],["object",{"_index":988,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["object.keys(observationsbycategory",{"_index":2151,"title":{},"body":{"injectables/ObservationService.html":{}}}],["obs",{"_index":2012,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["observable",{"_index":771,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/PatientService.html":{}}}],["observable.concat",{"_index":1011,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observables",{"_index":999,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observation",{"_index":467,"title":{"classes/Observation.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["observation.category[0].text",{"_index":2145,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.gettext(o",{"_index":2222,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getunits(o",{"_index":2224,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getvalue(o",{"_index":2223,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.grouping",{"_index":2134,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('category",{"_index":2143,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.hasownproperty('valuequantity",{"_index":2142,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.service",{"_index":488,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation?patient",{"_index":2175,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observation['code']['coding'][0]['code",{"_index":546,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ObservationService.html":{}}}],["observation['code']['coding'][0]['system",{"_index":547,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation['effectivedatetime",{"_index":548,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationcategory",{"_index":2144,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationrecursionchart",{"_index":2008,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationrecursionchart'},{'name",{"_index":199,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursivechart",{"_index":198,"title":{"components/ObservationRecursiveChart.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationreturned",{"_index":2170,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations",{"_index":92,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observations'},{'name",{"_index":201,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observations.html",{"_index":2158,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations.map(this.extractobservationinfo",{"_index":533,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationsbycategory",{"_index":2141,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory.hasownproperty(observationcategory",{"_index":2146,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[ctgry",{"_index":2153,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory",{"_index":2147,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationsbycategory[observationcategory].push(observation",{"_index":2148,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observationschart.html",{"_index":2009,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationscomponent",{"_index":200,"title":{"components/ObservationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay",{"_index":202,"title":{"components/ObservationsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay'},{'name",{"_index":203,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationsdisplay.html",{"_index":2179,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationselected",{"_index":2185,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationservice",{"_index":31,"title":{"injectables/ObservationService.html":{}},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsinfo",{"_index":532,"title":{},"body":{"injectables/AssociationService.html":{}}}],["occurrence",{"_index":1744,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["occurs",{"_index":2405,"title":{},"body":{"injectables/SmartService.html":{}}}],["october",{"_index":1318,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["of(conditions",{"_index":1019,"title":{},"body":{"injectables/ConditionService.html":{}}}],["of(encounters",{"_index":1521,"title":{},"body":{"injectables/EncounterService.html":{}}}],["onblur",{"_index":552,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["once",{"_index":949,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"index.html":{}}}],["onchanges",{"_index":1115,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ondatapointselect",{"_index":1630,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["ondatapointselect(chartevent",{"_index":1639,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["one",{"_index":797,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["onfocus",{"_index":553,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["onloadcomplete",{"_index":1188,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["onradiochanged",{"_index":2340,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onradiochanged(currstatus",{"_index":2343,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onset",{"_index":540,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{}}}],["onsetdatetime",{"_index":465,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Condition.html":{}}}],["onsubmitclick",{"_index":1575,"title":{},"body":{"components/FormBuilder.html":{}}}],["onto",{"_index":2295,"title":{},"body":{"components/PatientComponent.html":{}}}],["open",{"_index":733,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/TimelinePopupComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["open(encounter",{"_index":2507,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["opened",{"_index":1380,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["openid",{"_index":2398,"title":{},"body":{"injectables/SmartService.html":{}}}],["opens",{"_index":846,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ToolbarComponent.html":{}}}],["operator",{"_index":997,"title":{},"body":{"injectables/ConditionService.html":{}}}],["option",{"_index":1291,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["option.exec",{"_index":1418,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.exec(this.data",{"_index":1420,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.text",{"_index":1424,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["options",{"_index":719,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["options).pipe(map(res",{"_index":2329,"title":{},"body":{"injectables/PatientService.html":{}}}],["order",{"_index":1205,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"miscellaneous/variables.html":{}}}],["other_grouping",{"_index":2139,"title":{},"body":{"injectables/ObservationService.html":{}}}],["otherwise",{"_index":1493,"title":{},"body":{"classes/Encounter.html":{}}}],["out",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"injectables/SmartService.html":{},"overview.html":{}}}],["output",{"_index":63,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["outputs",{"_index":676,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{}}}],["outside",{"_index":1355,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["over",{"_index":793,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["overridden",{"_index":2155,"title":{},"body":{"injectables/ObservationService.html":{}}}],["overriden",{"_index":609,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["overview",{"_index":2737,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p1.name",{"_index":1748,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2",{"_index":1747,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2.name",{"_index":1749,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["package",{"_index":2617,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":583,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["paddedtable",{"_index":284,"title":{},"body":{"components/AccountComponent.html":{}}}],["paddedtd",{"_index":282,"title":{},"body":{"components/AccountComponent.html":{}}}],["padding:10px",{"_index":283,"title":{},"body":{"components/AccountComponent.html":{}}}],["page",{"_index":1005,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{}}}],["pages",{"_index":1007,"title":{},"body":{"injectables/ConditionService.html":{}}}],["paginated",{"_index":1001,"title":{},"body":{"injectables/ConditionService.html":{}}}],["param",{"_index":629,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{}}}],["parameter",{"_index":1362,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["parametername",{"_index":2383,"title":{},"body":{"injectables/SmartService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["parent",{"_index":692,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["parsed",{"_index":102,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["parseddata",{"_index":17,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["part",{"_index":820,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["particularly",{"_index":2738,"title":{},"body":{"index.html":{}}}],["pass",{"_index":1458,"title":{},"body":{"injectables/DoctorService.html":{}}}],["passed",{"_index":1361,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["passes",{"_index":1182,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["password",{"_index":293,"title":{},"body":{"components/AccountComponent.html":{}}}],["path",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["patient",{"_index":769,"title":{"classes/Patient.html":{}},"body":{"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["patient's",{"_index":819,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["patient'},{'name",{"_index":205,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["patient.birthdate",{"_index":2309,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender",{"_index":2275,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender.charat(0).touppercase",{"_index":2306,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.html",{"_index":2243,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.id",{"_index":783,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["patient.mrn",{"_index":2307,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["patient.name[0].family[0",{"_index":2313,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0",{"_index":2312,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0",{"_index":2305,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient_viewer",{"_index":2679,"title":{},"body":{"index.html":{}}}],["patientcomponent",{"_index":204,"title":{"components/PatientComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["patientid",{"_index":2318,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientservice",{"_index":359,"title":{"injectables/PatientService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["pencil",{"_index":726,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["period",{"_index":642,"title":{},"body":{"classes/CarePlan.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{}}}],["periods",{"_index":795,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["persona",{"_index":2701,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1855,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(concatmap(bundle",{"_index":1013,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["pipe(debouncetime(100",{"_index":623,"title":{},"body":{"classes/BaseColumn.html":{}}}],["pipe(map(bundle",{"_index":786,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["pipes",{"_index":1857,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pipetransform",{"_index":1868,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pixel",{"_index":1851,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["pixels",{"_index":594,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["place",{"_index":2740,"title":{},"body":{"index.html":{}}}],["plan",{"_index":727,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/MedicationsComponent.html":{}}}],["plans",{"_index":95,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/HomeComponent.html":{}}}],["please",{"_index":2437,"title":{},"body":{"injectables/SmartService.html":{}}}],["point",{"_index":1698,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["point.name",{"_index":1786,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.name.gettime",{"_index":1784,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.value",{"_index":1781,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity",{"_index":1738,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity['value",{"_index":1739,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["points",{"_index":884,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["popover",{"_index":1252,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["populatecategories",{"_index":2045,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populatecategories(categories",{"_index":2064,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populated",{"_index":1997,"title":{},"body":{"classes/Observation.html":{}}}],["popup",{"_index":1208,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TimelinePopupComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["popup'},{'name",{"_index":216,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["pos",{"_index":2500,"title":{},"body":{"components/TimelineComponent.html":{}}}],["position",{"_index":1473,"title":{},"body":{"classes/Encounter.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{}}}],["position:string",{"_index":1490,"title":{},"body":{"classes/Encounter.html":{}}}],["possible",{"_index":923,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["potassium",{"_index":256,"title":{},"body":{"components/AccountComponent.html":{}}}],["practice",{"_index":125,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prefer",{"_index":2708,"title":{},"body":{"index.html":{}}}],["preparing",{"_index":2655,"title":{},"body":{"index.html":{}}}],["pressure",{"_index":2093,"title":{},"body":{"injectables/ObservationService.html":{}}}],["prevent",{"_index":625,"title":{},"body":{"classes/BaseColumn.html":{}}}],["preventions/exposures",{"_index":146,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prevents",{"_index":1377,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["previously",{"_index":2327,"title":{},"body":{"injectables/PatientService.html":{}}}],["print",{"_index":2302,"title":{},"body":{"components/PatientComponent.html":{}}}],["printmsg",{"_index":1261,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["printmsg(condition",{"_index":1283,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["prior",{"_index":505,"title":{},"body":{"injectables/AssociationService.html":{}}}],["private",{"_index":453,"title":{},"body":{"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{}}}],["probably",{"_index":1241,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["problem",{"_index":306,"title":{},"body":{"components/AccountComponent.html":{}}}],["problems",{"_index":143,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{}}}],["produces",{"_index":1231,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["product",{"_index":657,"title":{},"body":{"classes/CarePlan.html":{}}}],["productcodableconcept",{"_index":658,"title":{},"body":{"classes/CarePlan.html":{}}}],["productreference",{"_index":662,"title":{},"body":{"classes/CarePlan.html":{}}}],["profile",{"_index":2399,"title":{},"body":{"injectables/SmartService.html":{}}}],["project",{"_index":2651,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1526,"title":{},"body":{"injectables/EncounterService.html":{}}}],["proper",{"_index":2297,"title":{},"body":{"components/PatientComponent.html":{}}}],["properties",{"_index":15,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{}}}],["provided",{"_index":1777,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["providers",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["provides",{"_index":574,"title":{},"body":{"classes/BaseColumn.html":{},"components/TripleListComponent.html":{}}}],["providing",{"_index":1751,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["proxy.herokuapp.com/token",{"_index":2449,"title":{},"body":{"injectables/SmartService.html":{}}}],["public",{"_index":1341,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/PatientService.html":{},"classes/Server.html":{}}}],["pug",{"_index":2209,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["purposes",{"_index":101,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{},"injectables/SmartService.html":{}}}],["push",{"_index":1453,"title":{},"body":{"injectables/DoctorService.html":{}}}],["pushing",{"_index":2728,"title":{},"body":{"index.html":{}}}],["px",{"_index":1401,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["quality",{"_index":1058,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["queued",{"_index":1840,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["r",{"_index":1495,"title":{},"body":{"classes/Encounter.html":{}}}],["r.resource",{"_index":789,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["r.text",{"_index":1496,"title":{},"body":{"classes/Encounter.html":{}}}],["random",{"_index":732,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["range",{"_index":1760,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["ranges",{"_index":1998,"title":{},"body":{"classes/Observation.html":{}}}],["rate",{"_index":2095,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reactivity",{"_index":1117,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["readable",{"_index":1874,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["readonly",{"_index":2317,"title":{},"body":{"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["realistic",{"_index":1232,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["reason",{"_index":1474,"title":{},"body":{"classes/Encounter.html":{},"classes/Observation.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["reasons",{"_index":1491,"title":{},"body":{"classes/Encounter.html":{}}}],["reasontext",{"_index":2300,"title":{},"body":{"components/PatientComponent.html":{}}}],["rebuild",{"_index":123,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["recency_multiplier",{"_index":1233,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["recent",{"_index":1227,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["recompile",{"_index":2695,"title":{},"body":{"index.html":{}}}],["reconstruct",{"_index":111,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions",{"_index":21,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataconditions(arrdata",{"_index":50,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings",{"_index":22,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdatafindings(arrdata",{"_index":52,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations",{"_index":23,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructdataobservations(arrdata",{"_index":54,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["reconstructedobject",{"_index":2149,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reconstructedobject.push",{"_index":2152,"title":{},"body":{"injectables/ObservationService.html":{}}}],["recursion",{"_index":97,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["redirect",{"_index":2430,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirect_uri",{"_index":2440,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirecturi",{"_index":2372,"title":{},"body":{"injectables/SmartService.html":{}}}],["ref",{"_index":1348,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["reference",{"_index":663,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["referencerange",{"_index":1973,"title":{},"body":{"classes/Observation.html":{}}}],["reflect",{"_index":2634,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":750,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["registry.smarthealthit.org/structuredefinition/oauth",{"_index":2417,"title":{},"body":{"injectables/SmartService.html":{}}}],["relation",{"_index":637,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["relativedatetime",{"_index":955,"title":{},"body":{"classes/Condition.html":{},"components/ConditionsComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{}}}],["relevant",{"_index":524,"title":{},"body":{"injectables/AssociationService.html":{}}}],["reload",{"_index":831,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["remain",{"_index":1008,"title":{},"body":{"injectables/ConditionService.html":{}}}],["remove",{"_index":1290,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/HistoricalTrendsService.html":{}}}],["removechart",{"_index":1713,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["removechart(chartname",{"_index":1724,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["renderer",{"_index":556,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["rendering",{"_index":1179,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["repository",{"_index":2729,"title":{},"body":{"index.html":{}}}],["representing",{"_index":818,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ToolbarComponent.html":{}}}],["represents",{"_index":1176,"title":{},"body":{"components/ConditionsComponent.html":{},"classes/ContextMenuOption.html":{}}}],["request",{"_index":2458,"title":{},"body":{"injectables/SmartService.html":{}}}],["requestauth",{"_index":2378,"title":{},"body":{"injectables/SmartService.html":{}}}],["res",{"_index":2298,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["res['identifier",{"_index":2331,"title":{},"body":{"injectables/PatientService.html":{}}}],["res['selectedconditions",{"_index":512,"title":{},"body":{"injectables/AssociationService.html":{}}}],["res['selectedobservations",{"_index":514,"title":{},"body":{"injectables/AssociationService.html":{}}}],["reset",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetdaterange",{"_index":1631,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["resettodefaultview",{"_index":2534,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resize",{"_index":605,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["resizing",{"_index":577,"title":{},"body":{"classes/BaseColumn.html":{}}}],["respiration",{"_index":2096,"title":{},"body":{"injectables/ObservationService.html":{}}}],["response",{"_index":510,"title":{},"body":{"injectables/AssociationService.html":{}}}],["response_type=code",{"_index":2459,"title":{},"body":{"injectables/SmartService.html":{}}}],["result",{"_index":227,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.tofixed(0",{"_index":1873,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["result.tofixed(2",{"_index":1872,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["results",{"_index":229,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":2174,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["retrieve",{"_index":779,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{}}}],["retrieved",{"_index":2294,"title":{},"body":{"components/PatientComponent.html":{}}}],["retrieves",{"_index":1180,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["retrieving",{"_index":1501,"title":{},"body":{"injectables/EncounterService.html":{}}}],["return",{"_index":535,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["reusable",{"_index":1328,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["review",{"_index":2099,"title":{},"body":{"injectables/ObservationService.html":{}}}],["right",{"_index":721,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{}}}],["root",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["router",{"_index":2626,"title":{},"body":{"dependencies.html":{}}}],["routermodule",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["routing",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1132,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["runassociationstool",{"_index":457,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["runassociationstool(checkedconditions",{"_index":474,"title":{},"body":{"injectables/AssociationService.html":{}}}],["running",{"_index":2671,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":614,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":616,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["s",{"_index":2273,"title":{},"body":{"components/PatientComponent.html":{}}}],["same",{"_index":81,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsDisplay.html":{}}}],["sandbox",{"_index":1800,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["sass",{"_index":2659,"title":{},"body":{"index.html":{}}}],["save",{"_index":315,"title":{},"body":{"components/AccountComponent.html":{}}}],["savesettings",{"_index":239,"title":{},"body":{"components/AccountComponent.html":{}}}],["scale",{"_index":295,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsComponent.html":{}}}],["scaledates",{"_index":2046,"title":{},"body":{"injectables/ObservationService.html":{}}}],["scaledtimesinceconditiononset",{"_index":1235,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scaledtimesinceobservation",{"_index":2129,"title":{},"body":{"injectables/ObservationService.html":{}}}],["schema",{"_index":105,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["scope",{"_index":2373,"title":{},"body":{"injectables/SmartService.html":{}}}],["scoping",{"_index":716,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["scrachpad",{"_index":2338,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["scratch",{"_index":582,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["scratchpad",{"_index":207,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["scratchpadcheckboxes",{"_index":1042,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadcheckboxes(checked",{"_index":1063,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadconditions",{"_index":1186,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scratchpadmode",{"_index":1262,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["scratchpadservice",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scratchpadservice.statechange$.subscribe",{"_index":860,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["scratchpadupdate",{"_index":206,"title":{"components/ScratchPadUpdate.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screen",{"_index":1848,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["scripting",{"_index":2436,"title":{},"body":{"injectables/SmartService.html":{}}}],["seems",{"_index":600,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["select",{"_index":210,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["selectcareplan",{"_index":674,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcareplan(careplan",{"_index":695,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcondition",{"_index":1043,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selectcondition(condition",{"_index":1065,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selected",{"_index":313,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["selectedcondition",{"_index":968,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["selectedconditions",{"_index":537,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectedobservations",{"_index":538,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selection",{"_index":858,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ObservationsDisplay.html":{}}}],["selectlistsingle",{"_index":209,"title":{"components/SelectListSingle.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectobservation",{"_index":2184,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selectobservation(observation",{"_index":2204,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["selectpatientbyid",{"_index":1792,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectpatientbyid(id",{"_index":1795,"title":{},"body":{"components/HomeComponent.html":{}}}],["selects",{"_index":1298,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["separate",{"_index":287,"title":{},"body":{"components/AccountComponent.html":{}}}],["september",{"_index":1317,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["series",{"_index":887,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["serve",{"_index":2693,"title":{},"body":{"index.html":{}}}],["server",{"_index":1181,"title":{"classes/Server.html":{}},"body":{"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"components/PatientComponent.html":{},"classes/Server.html":{},"coverage.html":{}}}],["service",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["services",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["services/association.service",{"_index":1287,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/careplan.service",{"_index":854,"title":{},"body":{"components/CarePlansComponent.html":{},"components/MedicationsComponent.html":{}}}],["services/condition.service",{"_index":1082,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/doctor.service",{"_index":274,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/encounter.service",{"_index":2267,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["services/fhir.service",{"_index":853,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{}}}],["services/historicaltrends.service",{"_index":1658,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["services/map.service",{"_index":2169,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["services/observation.service",{"_index":65,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/patient.service",{"_index":1659,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["services/scratchpad.service",{"_index":703,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/smart.service",{"_index":1797,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/toolbar.service",{"_index":2549,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["session",{"_index":1030,"title":{},"body":{"injectables/ConditionService.html":{}}}],["set",{"_index":617,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["setcolumnstate",{"_index":974,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setcolumnstate(newcolumnstate",{"_index":984,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setdaterange",{"_index":1632,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterange(form",{"_index":1643,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths",{"_index":1633,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths(months",{"_index":1645,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears",{"_index":1634,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears(years",{"_index":1647,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setpatientid",{"_index":2320,"title":{},"body":{"injectables/PatientService.html":{}}}],["setpatientid(patientid",{"_index":2323,"title":{},"body":{"injectables/PatientService.html":{}}}],["sets",{"_index":1692,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setters",{"_index":1250,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["settimeout",{"_index":1408,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["setting",{"_index":245,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["settings",{"_index":237,"title":{},"body":{"components/AccountComponent.html":{}}}],["settoken",{"_index":1534,"title":{},"body":{"injectables/FhirService.html":{}}}],["settoken(newtoken",{"_index":1541,"title":{},"body":{"injectables/FhirService.html":{}}}],["setup",{"_index":2203,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["seturl",{"_index":1535,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl(url",{"_index":1544,"title":{},"body":{"injectables/FhirService.html":{}}}],["shouldn't",{"_index":1762,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["show",{"_index":607,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{}}}],["show(data",{"_index":1372,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["show(items",{"_index":1826,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["showallergyhover",{"_index":2248,"title":{},"body":{"components/PatientComponent.html":{}}}],["showallergyhover(event",{"_index":2256,"title":{},"body":{"components/PatientComponent.html":{}}}],["showdefault",{"_index":588,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["showing",{"_index":1789,"title":{},"body":{"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["shown",{"_index":720,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{}}}],["showscratchpad",{"_index":589,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["si[exp",{"_index":1875,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["side",{"_index":1667,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["sieve",{"_index":137,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["similar",{"_index":2669,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1879,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["simply",{"_index":1128,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{}}}],["single",{"_index":2355,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single'},{'name",{"_index":211,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["single.component",{"_index":1612,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["single.component.ts",{"_index":2354,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["single.component.ts:10",{"_index":2360,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:12",{"_index":2359,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:9",{"_index":2358,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.html",{"_index":2356,"title":{},"body":{"components/SelectListSingle.html":{}}}],["site",{"_index":2407,"title":{},"body":{"injectables/SmartService.html":{}}}],["skip",{"_index":1736,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["small",{"_index":1752,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smallest",{"_index":1775,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smartextension",{"_index":2413,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartextension[0].extension.foreach(arg",{"_index":2421,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartservice",{"_index":361,"title":{"injectables/SmartService.html":{}},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["smith",{"_index":291,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["sodium",{"_index":255,"title":{},"body":{"components/AccountComponent.html":{}}}],["sort",{"_index":1743,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["sortcondition",{"_index":1044,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["sortcondition(x",{"_index":1067,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["space",{"_index":1755,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["spacing",{"_index":288,"title":{},"body":{"components/AccountComponent.html":{}}}],["spad",{"_index":861,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["specific",{"_index":1670,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["specifically",{"_index":2688,"title":{},"body":{"index.html":{}}}],["specify",{"_index":1706,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/.../app.module.ts",{"_index":2761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../conditions.component.ts",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts",{"_index":9,"title":{},"body":{"components/AccordionRecursion.html":{},"coverage.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:120",{"_index":55,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:128",{"_index":53,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:26",{"_index":42,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:29",{"_index":40,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:32",{"_index":43,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:35",{"_index":41,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:38",{"_index":60,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:39",{"_index":33,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:48",{"_index":48,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:71",{"_index":51,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:75",{"_index":45,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/account/account.component.ts",{"_index":230,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/components/account/account.component.ts:10",{"_index":273,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:11",{"_index":264,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:12",{"_index":254,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:13",{"_index":272,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:14",{"_index":243,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:18",{"_index":246,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:27",{"_index":248,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:33",{"_index":249,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/app/app.component.ts",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/app/app.component.ts:10",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/basecolumn.ts",{"_index":571,"title":{},"body":{"classes/BaseColumn.html":{},"coverage.html":{}}}],["src/app/components/basecolumn.ts:26",{"_index":603,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:33",{"_index":606,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:38",{"_index":611,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:43",{"_index":612,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:46",{"_index":592,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:49",{"_index":597,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:52",{"_index":595,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:9",{"_index":591,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts",{"_index":664,"title":{},"body":{"components/CarePlanDisplay.html":{},"coverage.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:111",{"_index":684,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:21",{"_index":701,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:24",{"_index":697,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:27",{"_index":680,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:28",{"_index":682,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:30",{"_index":679,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:39",{"_index":694,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:44",{"_index":693,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:77",{"_index":696,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:85",{"_index":689,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:94",{"_index":687,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:98",{"_index":691,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplans/careplans.component.ts",{"_index":817,"title":{},"body":{"components/CarePlansComponent.html":{},"coverage.html":{}}}],["src/app/components/careplans/careplans.component.ts:23",{"_index":849,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:26",{"_index":840,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:29",{"_index":838,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:35",{"_index":843,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:38",{"_index":827,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:57",{"_index":830,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:72",{"_index":829,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts",{"_index":920,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"coverage.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:16",{"_index":931,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:22",{"_index":930,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:29",{"_index":937,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:40",{"_index":938,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:53",{"_index":934,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts",{"_index":1175,"title":{},"body":{"components/ConditionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/conditions/conditions.component.ts:132",{"_index":1195,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:143",{"_index":1191,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:36",{"_index":1201,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:39",{"_index":1197,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:40",{"_index":1200,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:43",{"_index":1199,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:45",{"_index":1203,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:46",{"_index":1196,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:47",{"_index":1198,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:50",{"_index":1202,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:52",{"_index":1190,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:53",{"_index":1189,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:79",{"_index":1192,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:95",{"_index":1193,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts",{"_index":1031,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:111",{"_index":1052,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:121",{"_index":1073,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:129",{"_index":1064,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:145",{"_index":1074,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:149",{"_index":1053,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:159",{"_index":1054,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:16",{"_index":1079,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:17",{"_index":1078,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:18",{"_index":1081,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:181",{"_index":1071,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:19",{"_index":1075,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:195",{"_index":1060,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:20",{"_index":1076,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:21",{"_index":1077,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:22",{"_index":1080,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:24",{"_index":1051,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:26",{"_index":1050,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:34",{"_index":1062,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:45",{"_index":1066,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:53",{"_index":1068,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:82",{"_index":1055,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts",{"_index":1253,"title":{},"body":{"components/ConditionsDisplay.html":{},"coverage.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:104",{"_index":1285,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:109",{"_index":1270,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:116",{"_index":1280,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:121",{"_index":1278,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:126",{"_index":1276,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:131",{"_index":1268,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:138",{"_index":1272,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:147",{"_index":1284,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:151",{"_index":1274,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:23",{"_index":1286,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:26",{"_index":1264,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:27",{"_index":1266,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:30",{"_index":1265,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:32",{"_index":1263,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:45",{"_index":1282,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:50",{"_index":1281,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts",{"_index":1327,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:113",{"_index":1358,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:133",{"_index":1364,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:28",{"_index":1388,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:33",{"_index":1384,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:35",{"_index":1390,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:36",{"_index":1389,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:37",{"_index":1387,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:43",{"_index":1374,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:50",{"_index":1376,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:51",{"_index":1347,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:58",{"_index":1351,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:67",{"_index":1353,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:82",{"_index":1373,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/form",{"_index":1561,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["src/app/components/form_components/checkbox",{"_index":899,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["src/app/components/form_components/normal",{"_index":1957,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"coverage.html":{}}}],["src/app/components/form_components/scrachpad",{"_index":2336,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["src/app/components/form_components/select",{"_index":2353,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts",{"_index":1622,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:101",{"_index":1648,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:108",{"_index":1646,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:114",{"_index":1640,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:20",{"_index":1652,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:23",{"_index":1655,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:24",{"_index":1653,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:27",{"_index":1657,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:29",{"_index":1654,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:32",{"_index":1656,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:35",{"_index":1636,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:54",{"_index":1638,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:70",{"_index":1644,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:81",{"_index":1642,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1787,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:21",{"_index":1794,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:50",{"_index":1796,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts",{"_index":1808,"title":{},"body":{"components/HoverBoxComponent.html":{},"coverage.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:13",{"_index":1832,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:16",{"_index":1839,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:18",{"_index":1837,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:19",{"_index":1833,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:20",{"_index":1838,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:21",{"_index":1834,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:24",{"_index":1835,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:27",{"_index":1820,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:37",{"_index":1827,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:69",{"_index":1821,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:89",{"_index":1823,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:97",{"_index":1825,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts",{"_index":1878,"title":{},"body":{"components/LoadingAnimation.html":{},"coverage.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts:10",{"_index":1883,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["src/app/components/medications/medications.component.ts",{"_index":1941,"title":{},"body":{"components/MedicationsComponent.html":{},"coverage.html":{}}}],["src/app/components/medications/medications.component.ts:14",{"_index":1948,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:15",{"_index":1944,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:22",{"_index":1947,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:31",{"_index":1946,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts",{"_index":2007,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"coverage.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:13",{"_index":2015,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:14",{"_index":2014,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:15",{"_index":2013,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:20",{"_index":2019,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:24",{"_index":2020,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:29",{"_index":2017,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observations/observations.component.ts",{"_index":2157,"title":{},"body":{"components/ObservationsComponent.html":{},"coverage.html":{}}}],["src/app/components/observations/observations.component.ts:20",{"_index":2167,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:21",{"_index":2168,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:22",{"_index":2166,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:24",{"_index":2161,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:27",{"_index":2165,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:30",{"_index":2160,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:60",{"_index":2162,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts",{"_index":2178,"title":{},"body":{"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:100",{"_index":2205,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:112",{"_index":2201,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:121",{"_index":2195,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:129",{"_index":2192,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:140",{"_index":2199,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:144",{"_index":2197,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:28",{"_index":2207,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:33",{"_index":2210,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:38",{"_index":2206,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:43",{"_index":2188,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:48",{"_index":2189,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:50",{"_index":2187,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:61",{"_index":2202,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/patient/patient.component.ts",{"_index":2242,"title":{},"body":{"components/PatientComponent.html":{},"coverage.html":{}}}],["src/app/components/patient/patient.component.ts:109",{"_index":2257,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:23",{"_index":2266,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:24",{"_index":2265,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:25",{"_index":2258,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:26",{"_index":2261,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:29",{"_index":2259,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:30",{"_index":2260,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:31",{"_index":2263,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:32",{"_index":2264,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:34",{"_index":2249,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:46",{"_index":2251,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:59",{"_index":2255,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:63",{"_index":2254,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:70",{"_index":2252,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:92",{"_index":2253,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts",{"_index":2482,"title":{},"body":{"components/TimelineComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline/timeline.component.ts:13",{"_index":2489,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:14",{"_index":2486,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:18",{"_index":2488,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:22",{"_index":2487,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts",{"_index":2502,"title":{},"body":{"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:14",{"_index":2512,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:15",{"_index":2510,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:16",{"_index":2508,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:25",{"_index":2506,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts",{"_index":2530,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:22",{"_index":2538,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:27",{"_index":2537,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:43",{"_index":2543,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:50",{"_index":2542,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:61",{"_index":2539,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:73",{"_index":2541,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts",{"_index":2559,"title":{},"body":{"components/TripleListComponent.html":{},"coverage.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:16",{"_index":2562,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/directives/auto",{"_index":549,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts",{"_index":1615,"title":{},"body":{"directives/HighlightDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts:8",{"_index":1617,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["src/app/models/allergyintolerance.model.ts",{"_index":321,"title":{},"body":{"classes/AllergyIntolerance.html":{},"coverage.html":{}}}],["src/app/models/allergyintolerance.model.ts:2",{"_index":326,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/allergyintolerance.model.ts:3",{"_index":325,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/associable.model.ts",{"_index":447,"title":{},"body":{"interfaces/Associable.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts",{"_index":632,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts:3",{"_index":635,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:4",{"_index":636,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:8",{"_index":1876,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/bundle.model.ts:9",{"_index":1877,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/careplan.model.ts",{"_index":639,"title":{},"body":{"classes/CarePlan.html":{},"coverage.html":{}}}],["src/app/models/careplan.model.ts:10",{"_index":648,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:15",{"_index":645,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:4",{"_index":647,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:5",{"_index":650,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:6",{"_index":649,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:7",{"_index":646,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/chart.model.ts",{"_index":870,"title":{},"body":{"classes/Chart.html":{},"coverage.html":{}}}],["src/app/models/chart.model.ts:14",{"_index":879,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:23",{"_index":883,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:24",{"_index":882,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:28",{"_index":880,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:3",{"_index":881,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:4",{"_index":876,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:5",{"_index":877,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:8",{"_index":878,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/client.model.ts",{"_index":917,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/app/models/client.model.ts:2",{"_index":918,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/client.model.ts:3",{"_index":919,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/condition.model.ts",{"_index":951,"title":{},"body":{"classes/Condition.html":{},"coverage.html":{}}}],["src/app/models/condition.model.ts:10",{"_index":960,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:11",{"_index":963,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:12",{"_index":958,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:4",{"_index":959,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:5",{"_index":962,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:6",{"_index":964,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:7",{"_index":965,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:8",{"_index":957,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:9",{"_index":961,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/contextmenuoption.model.ts",{"_index":1425,"title":{},"body":{"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["src/app/models/contextmenuoption.model.ts:10",{"_index":1427,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:15",{"_index":1430,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:23",{"_index":1426,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/encounter.model.ts",{"_index":1472,"title":{},"body":{"classes/Encounter.html":{},"coverage.html":{}}}],["src/app/models/encounter.model.ts:11",{"_index":1484,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:16",{"_index":1481,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:18",{"_index":1482,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:29",{"_index":1487,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:3",{"_index":1479,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:4",{"_index":1483,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:44",{"_index":1488,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:45",{"_index":1485,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:47",{"_index":1486,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:6",{"_index":1480,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/form.model.ts",{"_index":1556,"title":{},"body":{"classes/Form.html":{},"coverage.html":{}}}],["src/app/models/form.model.ts:2",{"_index":1558,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:3",{"_index":1559,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:4",{"_index":1557,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/medication.model.ts",{"_index":1932,"title":{},"body":{"classes/Medication.html":{},"coverage.html":{}}}],["src/app/models/medication.model.ts:10",{"_index":1934,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:3",{"_index":1936,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:4",{"_index":1935,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:6",{"_index":1937,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/observation.model.ts",{"_index":1971,"title":{},"body":{"classes/Observation.html":{},"coverage.html":{}}}],["src/app/models/observation.model.ts:10",{"_index":1989,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:11",{"_index":1988,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:14",{"_index":1985,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:15",{"_index":1983,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:18",{"_index":1996,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:23",{"_index":1994,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:28",{"_index":1992,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:33",{"_index":1990,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:4",{"_index":1984,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:5",{"_index":1987,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:6",{"_index":1982,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:7",{"_index":1986,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:8",{"_index":1980,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:9",{"_index":1981,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/patient.model.ts",{"_index":2226,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["src/app/models/patient.model.ts:10",{"_index":2241,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:11",{"_index":2239,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:3",{"_index":2233,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:4",{"_index":2237,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:5",{"_index":2235,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:6",{"_index":2236,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:7",{"_index":2234,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:8",{"_index":2238,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:9",{"_index":2240,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/server.model.ts",{"_index":2362,"title":{},"body":{"classes/Server.html":{},"coverage.html":{}}}],["src/app/models/server.model.ts:1",{"_index":2363,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/server.model.ts:4",{"_index":2364,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/timeline.model.ts",{"_index":2474,"title":{},"body":{"classes/Timeline.html":{},"coverage.html":{}}}],["src/app/models/timeline.model.ts:2",{"_index":2478,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:3",{"_index":2479,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:4",{"_index":2477,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:5",{"_index":2475,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:6",{"_index":2476,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:7",{"_index":2481,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:8",{"_index":2480,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/user.model.ts",{"_index":2563,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:3",{"_index":2564,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":2565,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/form.module.ts",{"_index":1605,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts",{"_index":1858,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:12",{"_index":1862,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:8",{"_index":1867,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/services/association.service.ts",{"_index":450,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{}}}],["src/app/services/association.service.ts:13",{"_index":486,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:17",{"_index":478,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:18",{"_index":460,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:26",{"_index":475,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:64",{"_index":472,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:88",{"_index":463,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:97",{"_index":468,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/careplan.service.ts",{"_index":763,"title":{},"body":{"injectables/CarePlanService.html":{},"coverage.html":{}}}],["src/app/services/careplan.service.ts:16",{"_index":767,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:24",{"_index":770,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:40",{"_index":773,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/condition.service.ts",{"_index":966,"title":{},"body":{"injectables/ConditionService.html":{},"coverage.html":{}}}],["src/app/services/condition.service.ts:17",{"_index":990,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:19",{"_index":987,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:21",{"_index":991,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:23",{"_index":989,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:24",{"_index":975,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:36",{"_index":983,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:51",{"_index":981,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:56",{"_index":976,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:63",{"_index":979,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:77",{"_index":977,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:82",{"_index":985,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/doctor.service.ts",{"_index":1431,"title":{},"body":{"injectables/DoctorService.html":{},"coverage.html":{}}}],["src/app/services/doctor.service.ts:10",{"_index":1437,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:15",{"_index":1441,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:46",{"_index":1439,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:8",{"_index":1443,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:9",{"_index":1442,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/encounter.service.ts",{"_index":1500,"title":{},"body":{"injectables/EncounterService.html":{},"coverage.html":{}}}],["src/app/services/encounter.service.ts:18",{"_index":1507,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:29",{"_index":1515,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:50",{"_index":1513,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:60",{"_index":1509,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/fhir.service.ts",{"_index":1529,"title":{},"body":{"injectables/FhirService.html":{},"coverage.html":{}}}],["src/app/services/fhir.service.ts:10",{"_index":1547,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:12",{"_index":1540,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:16",{"_index":1545,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:20",{"_index":1542,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:24",{"_index":1538,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:5",{"_index":1536,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:9",{"_index":1546,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/historicaltrends.service.ts",{"_index":1707,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["src/app/services/historicaltrends.service.ts:12",{"_index":1714,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:138",{"_index":1725,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:147",{"_index":1723,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:165",{"_index":1721,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:17",{"_index":1718,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:80",{"_index":1716,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:9",{"_index":1726,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/map.service.ts",{"_index":1884,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/services/map.service.ts:5",{"_index":1931,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/services/observation.service.ts",{"_index":2032,"title":{},"body":{"injectables/ObservationService.html":{},"coverage.html":{}}}],["src/app/services/observation.service.ts:132",{"_index":2062,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:139",{"_index":2060,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:14",{"_index":2075,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:15",{"_index":2070,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:157",{"_index":2063,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:16",{"_index":2072,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:17",{"_index":2071,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:175",{"_index":2052,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:179",{"_index":2067,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:18",{"_index":2073,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:19",{"_index":2074,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:190",{"_index":2051,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:20",{"_index":2076,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:206",{"_index":2054,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:217",{"_index":2065,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:22",{"_index":2047,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:255",{"_index":2049,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:284",{"_index":2058,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:289",{"_index":2068,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:293",{"_index":2069,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/patient.service.ts",{"_index":2316,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/app/services/patient.service.ts:12",{"_index":2325,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:15",{"_index":2321,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:23",{"_index":2324,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:28",{"_index":2322,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/scratchpad.service.ts",{"_index":2614,"title":{},"body":{"coverage.html":{}}}],["src/app/services/smart.service.ts",{"_index":2366,"title":{},"body":{"injectables/SmartService.html":{},"coverage.html":{}}}],["src/app/services/smart.service.ts:106",{"_index":2382,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:17",{"_index":2393,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:18",{"_index":2400,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:19",{"_index":2397,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:21",{"_index":2394,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:22",{"_index":2387,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:23",{"_index":2402,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:24",{"_index":2395,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:25",{"_index":2401,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:26",{"_index":2386,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:28",{"_index":2380,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:73",{"_index":2384,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:88",{"_index":2385,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:9",{"_index":2379,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/toolbar.service.ts",{"_index":2525,"title":{},"body":{"injectables/ToolBarService.html":{},"coverage.html":{}}}],["src/app/services/toolbar.service.ts:5",{"_index":2529,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["src/app/services/toolbar.service.ts:6",{"_index":2528,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["standard",{"_index":1411,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["start",{"_index":652,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{}}}],["started",{"_index":2648,"title":{"index.html":{}},"body":{}}],["state",{"_index":580,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["statements",{"_index":2568,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["states",{"_index":922,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["static",{"_index":700,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["static_mappings",{"_index":1885,"title":{},"body":{"injectables/MapService.html":{}}}],["stats",{"_index":730,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["status",{"_index":643,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"classes/Observation.html":{},"components/ScratchPadUpdate.html":{},"classes/Timeline.html":{}}}],["store",{"_index":942,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["stored",{"_index":2080,"title":{},"body":{"injectables/ObservationService.html":{}}}],["storedata",{"_index":1571,"title":{},"body":{"components/FormBuilder.html":{}}}],["storedata(data",{"_index":1582,"title":{},"body":{"components/FormBuilder.html":{}}}],["stores",{"_index":885,"title":{},"body":{"classes/Chart.html":{}}}],["strange",{"_index":714,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["string",{"_index":77,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"classes/Medication.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"injectables/ToolBarService.html":{},"classes/User.html":{}}}],["strings",{"_index":2284,"title":{},"body":{"components/PatientComponent.html":{}}}],["structure",{"_index":73,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["structures",{"_index":1027,"title":{},"body":{"injectables/ConditionService.html":{}}}],["stuff",{"_index":1246,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["style",{"_index":1565,"title":{},"body":{"components/FormBuilder.html":{}}}],["styles",{"_index":1560,"title":{},"body":{"components/FormBuilder.html":{}}}],["subheading",{"_index":78,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["subheadings",{"_index":86,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["submit",{"_index":1599,"title":{},"body":{"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{}}}],["submitclick",{"_index":1572,"title":{},"body":{"components/FormBuilder.html":{}}}],["subs",{"_index":79,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{}}}],["subscribe",{"_index":1413,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ObservationsComponent.html":{}}}],["subscribe((bundle",{"_index":2111,"title":{},"body":{"injectables/ObservationService.html":{}}}],["subscribe((event",{"_index":627,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["subscribe(res",{"_index":503,"title":{},"body":{"injectables/AssociationService.html":{}}}],["subscribe){data",{"_index":1450,"title":{},"body":{"injectables/DoctorService.html":{}}}],["subscription",{"_index":842,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["subtracts",{"_index":1690,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["such",{"_index":516,"title":{},"body":{"injectables/AssociationService.html":{},"index.html":{}}}],["super",{"_index":572,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["support",{"_index":2754,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":2746,"title":{},"body":{"index.html":{}}}],["sure",{"_index":2452,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["svg",{"_index":2755,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":855,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["switcher",{"_index":932,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switches",{"_index":2544,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["switching",{"_index":921,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["switchnav",{"_index":2535,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["switchtodefault",{"_index":927,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switchtoscratchpad",{"_index":928,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["symptoms",{"_index":2102,"title":{},"body":{"injectables/ObservationService.html":{}}}],["system",{"_index":464,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"index.html":{}}}],["system:{{condition.code.coding[0].system",{"_index":2523,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["systemjs",{"_index":2638,"title":{},"body":{"dependencies.html":{}}}],["systems",{"_index":2100,"title":{},"body":{"injectables/ObservationService.html":{}}}],["table",{"_index":1149,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["tablename",{"_index":1061,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation",{"_index":1045,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation(clickedset",{"_index":1070,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2616,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2717,"title":{},"body":{"index.html":{}}}],["taken",{"_index":792,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["takes",{"_index":68,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["telecom",{"_index":2232,"title":{},"body":{"classes/Patient.html":{}}}],["temp",{"_index":1124,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temperature",{"_index":2097,"title":{},"body":{"injectables/ObservationService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["templateurl",{"_index":12,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["temptablevar",{"_index":1142,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temptablevar.hidden",{"_index":1145,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["terminal",{"_index":2673,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":2705,"title":{},"body":{"index.html":{}}}],["test",{"_index":1844,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["tested",{"_index":2687,"title":{},"body":{"index.html":{}}}],["testing",{"_index":100,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["text",{"_index":327,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["textinputforedit",{"_index":1037,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["thanks",{"_index":2438,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.addcategoriesconditions(arrdata",{"_index":130,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.allergies",{"_index":2285,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies.length",{"_index":2289,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies[0",{"_index":2291,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergy",{"_index":2290,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.associatedmapconditions.clear",{"_index":506,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapconditions.set(c",{"_index":520,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.clear",{"_index":507,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.set(o",{"_index":523,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.associatedmapconditions.get(condition",{"_index":1306,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.associationservice.associatedmapobservations.get(observation",{"_index":2220,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.associationservice.runassociationstool(checkedconditions",{"_index":2553,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.aud",{"_index":2408,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.authorizeurl",{"_index":2426,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.base",{"_index":1549,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.boxdata",{"_index":1964,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["this.careplanloadfinished",{"_index":865,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["this.careplans",{"_index":753,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{}}}],["this.careplanselected.emit(this.selected",{"_index":741,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.careplanservice.loadcareplans(this.patient).subscribe(careplans",{"_index":864,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["this.careplanservice.loadmedications(this.patient).subscribe(medications",{"_index":1949,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.categorizedobservations",{"_index":2089,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.charts",{"_index":1767,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.delete(chartname",{"_index":1774,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(chartname",{"_index":1730,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(medication.name",{"_index":1769,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(chartname",{"_index":1766,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(medication.name",{"_index":1773,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.clicksubscription",{"_index":1415,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clicksubscription.unsubscribe",{"_index":1423,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clientid",{"_index":2461,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.closeable",{"_index":1395,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.closeable_delay",{"_index":1409,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.column",{"_index":939,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.columnstate",{"_index":940,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showdefault",{"_index":943,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showscratchpad",{"_index":944,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.updateservice",{"_index":941,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.columnheight",{"_index":618,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.columnnum",{"_index":113,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.columnstate",{"_index":862,"title":{},"body":{"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.columnstatesubscription",{"_index":859,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["this.columntype",{"_index":945,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.compiler.clearcache",{"_index":1798,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.conditiongrouping",{"_index":1088,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping.indexof(c",{"_index":1141,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0",{"_index":1136,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0].push(c",{"_index":1137,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1",{"_index":1138,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1].push(c",{"_index":1139,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount",{"_index":1161,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount].push(c",{"_index":1162,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.indexof(tablename",{"_index":1146,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.push(tablename",{"_index":1147,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditions",{"_index":1084,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.conditions.concat(conditions",{"_index":1217,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.filter(c",{"_index":1021,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.conditions.length",{"_index":1219,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.sort((c1",{"_index":1220,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions[value].isselected",{"_index":1122,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionselected.emit(this.selected",{"_index":1085,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionservice.conditions",{"_index":500,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.getcheckedconditions",{"_index":2551,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.conditionservice.getcolumnstate",{"_index":1289,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.loadallergies(this.patient).subscribe(allergies",{"_index":2283,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.conditionservice.loadconditions(this.patient).subscribe(conditions",{"_index":1083,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.selectedcondition",{"_index":1301,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.setcolumnstate(this.columnstate",{"_index":1248,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.cookieservice.get('state",{"_index":2431,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.get('tokenurl",{"_index":2443,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('fhirbaseurl",{"_index":2428,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('graphconfig",{"_index":1469,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.cookieservice.set('state",{"_index":2457,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('tokenurl",{"_index":2427,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.data",{"_index":1397,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.datepipe.transform(encounter.getstartdate(),'mm",{"_index":2515,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.description",{"_index":2349,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.deserialize(e['resource",{"_index":1518,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.doctorservice.addgraphconfig(this.settings",{"_index":279,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.assignvisible(this.conditions",{"_index":1106,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.doctorservice.configmode",{"_index":281,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.filter",{"_index":277,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doit(parseint(value",{"_index":1869,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["this.dosageunits",{"_index":1940,"title":{},"body":{"classes/Medication.html":{}}}],["this.el.nativeelement.textcontent",{"_index":1620,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["this.encounters",{"_index":2491,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.concat(encounters",{"_index":2492,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.length",{"_index":2493,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(encounters",{"_index":2490,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(res",{"_index":2296,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.extractconditioninfo(c)['code",{"_index":518,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.extractnewobservations(nextobservations",{"_index":2117,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.extractobservationinfo(o)['code",{"_index":522,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.fhirbaseurl",{"_index":2403,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions",{"_index":785,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["this.fhirservice.getrequestoptions(false)).subscribe(data",{"_index":2412,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions(true",{"_index":2328,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.fhirservice.geturl",{"_index":781,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.fhirservice.settoken(data['access_token",{"_index":1805,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.cookieservice.get('fhirbaseurl",{"_index":1799,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.fhirbaseurl",{"_index":2411,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.token",{"_index":1801,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterset.add(code",{"_index":2137,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.filterset.has(code",{"_index":2133,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.findgetparameter(\"code",{"_index":2439,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"iss",{"_index":2404,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"launch",{"_index":2410,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter('state",{"_index":2432,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.firstiteration",{"_index":110,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.formbuilderservice.gettemplate().then(forms",{"_index":1595,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forminput",{"_index":1598,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forms",{"_index":1596,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getassociations",{"_index":502,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.getforms",{"_index":1594,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getgrouping(code",{"_index":2135,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.getscratchpadconditions",{"_index":1212,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.gettoken",{"_index":2433,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.getvaluerange(chart",{"_index":1756,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.graphconfig",{"_index":2271,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.graphconfig.push(list",{"_index":1468,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.groupconditions",{"_index":1107,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.groupmap",{"_index":2081,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.groupmap[x].indexof(code",{"_index":2138,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handledocclick(event",{"_index":1417,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.handleobservationbundle(bundle",{"_index":2112,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handleresize(event",{"_index":628,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.height_offset",{"_index":620,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.hide(event",{"_index":1421,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.hide(null",{"_index":1396,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.historicaltrendsservice.addmedicationchart(medication",{"_index":1954,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.historicaltrendsservice.removechart(medication.name",{"_index":1955,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.hover.show(this.allergies",{"_index":2304,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.hoverbox.hide(event",{"_index":2520,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverbox.show(details",{"_index":2519,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverstyling",{"_index":2292,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.http.get(url",{"_index":784,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.http.post(\"https://mongo",{"_index":2448,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.http.post(this.path",{"_index":536,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.inputdata.id",{"_index":1965,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["this.isallchecked",{"_index":758,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.items",{"_index":1843,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.justcreated",{"_index":1210,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.launch",{"_index":2409,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.left",{"_index":1402,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.level",{"_index":2022,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.leveldata",{"_index":118,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.listdata",{"_index":2361,"title":{},"body":{"components/SelectListSingle.html":{}}}],["this.loadallergies",{"_index":2281,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.loadcareplans(patient).pipe(map(careplans",{"_index":798,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["this.loadconditionspage(nextlink.url",{"_index":1018,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loadconditionspage(url",{"_index":1020,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loaded",{"_index":1244,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.loadencounters",{"_index":2282,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.loadencounterspage(nextlink.url",{"_index":1520,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadencounterspage(url",{"_index":1522,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadfinished",{"_index":119,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["this.loadobservationspage(nextlink.url",{"_index":2118,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.mappings",{"_index":2172,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.maxdate",{"_index":1679,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.maxdate.gettime",{"_index":1689,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.medications",{"_index":1950,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.medications.length",{"_index":1952,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.menu.addoption",{"_index":723,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.menu.show(null",{"_index":1699,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mindate",{"_index":1677,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mouseevent",{"_index":1665,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mousesubscription",{"_index":1663,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.name",{"_index":1939,"title":{},"body":{"classes/Medication.html":{}}}],["this.nav2",{"_index":2550,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.obs",{"_index":2021,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.observations",{"_index":2115,"title":{},"body":{"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["this.observations.concat(nextobservations",{"_index":2116,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.reverse",{"_index":2120,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.sort((n1",{"_index":2123,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observationselected.emit(this.selected",{"_index":2214,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.observationservice.getcheckedobservations",{"_index":2552,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.observationservice.loadobservationspage(url",{"_index":2177,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.observationservice.observations",{"_index":501,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.onloadcomplete",{"_index":1218,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["this.options",{"_index":1392,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.options.concat(option",{"_index":1393,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.parseddata",{"_index":117,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.path",{"_index":782,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["this.patient",{"_index":863,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.patient.id",{"_index":2176,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.patientid",{"_index":2326,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.loadpatient().subscribe(patient",{"_index":1666,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{}}}],["this.patientservice.setpatientid(id",{"_index":1807,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.periods",{"_index":1938,"title":{},"body":{"classes/Medication.html":{}}}],["this.reason",{"_index":1494,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{}}}],["this.reconstructdataconditions(this.leveldata",{"_index":114,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdatafindings(this.leveldata",{"_index":116,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.reconstructdataobservations(this.leveldata",{"_index":115,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.redirecturi",{"_index":2462,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.ref.nativeelement.contains(event.target",{"_index":1394,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.renderer.setelementstyle(this.el.nativeelement",{"_index":565,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["this.requestauth",{"_index":2429,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scope",{"_index":2463,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scratchpadconditions",{"_index":1211,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.addcareplan(plan",{"_index":728,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.addcondition(condition",{"_index":1296,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.addconditionstoscratchpad",{"_index":2555,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.addobservation(observation",{"_index":2212,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.addobservationtoscratchpad",{"_index":2556,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.buttonclicked(true",{"_index":1134,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.checkcareplan(checked",{"_index":752,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkcondition(checked",{"_index":1302,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapcareplans.get(careplan",{"_index":746,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.foreach((ischecked",{"_index":1293,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(c",{"_index":1022,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(condition",{"_index":1305,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.foreach((ischecked",{"_index":2211,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(o",{"_index":2125,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(observation",{"_index":2218,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkobservation(checked",{"_index":2219,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.conditions.length",{"_index":946,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.getcareplans",{"_index":868,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["this.scratchpadservice.getconditions",{"_index":1251,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.getobservations",{"_index":2154,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.initconditions(this.conditions",{"_index":1247,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.observations.length",{"_index":947,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.removecondition(condition",{"_index":1295,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.switchtoscratchpad(false",{"_index":2558,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.switchtoscratchpad(true",{"_index":2557,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.indexof(this.conditions[value",{"_index":1125,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.push(this.conditions[value",{"_index":1123,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.splice(temp",{"_index":1133,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.totalcareplans",{"_index":742,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.totalobservations",{"_index":2215,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.selected",{"_index":740,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selected.id",{"_index":745,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selectedcondition",{"_index":2280,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectpatientbyid(data['patient",{"_index":1806,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectpatientbyid(this.patientservice.patientid",{"_index":1803,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.settings",{"_index":278,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.push(setting",{"_index":275,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.splice(this.settings.indexof(setting",{"_index":276,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.smartservice.authenticate().subscribe(data",{"_index":1804,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.state",{"_index":2454,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.status",{"_index":2350,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.subscription",{"_index":1213,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.timeouthandle",{"_index":1842,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.token",{"_index":1550,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.tokenurl",{"_index":2425,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.top",{"_index":1399,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.totaldata",{"_index":1601,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.trendsservice.charts",{"_index":1684,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.trendsservice.getdaterange(chart",{"_index":1687,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.uniqueobservations.length",{"_index":2121,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservations.push(observation",{"_index":2136,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservationsloadfinished",{"_index":2122,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.viewconditionlist",{"_index":1104,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.viewtoggle",{"_index":1103,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.visible",{"_index":1404,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this['code']['coding'][0]['code",{"_index":2006,"title":{},"body":{"classes/Observation.html":{}}}],["thismodel",{"_index":1462,"title":{},"body":{"injectables/DoctorService.html":{}}}],["three",{"_index":573,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/TripleListComponent.html":{}}}],["throat",{"_index":2108,"title":{},"body":{"injectables/ObservationService.html":{}}}],["through",{"_index":1010,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["throw",{"_index":1129,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tied",{"_index":1419,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["time",{"_index":294,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/SmartService.html":{}}}],["timeframe",{"_index":301,"title":{},"body":{"components/AccountComponent.html":{}}}],["timeline",{"_index":215,"title":{"classes/Timeline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["timeline.html",{"_index":2484,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timeline_popup.html",{"_index":2503,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["timelinecomponent",{"_index":212,"title":{"components/TimelineComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinepopupcomponent",{"_index":214,"title":{"components/TimelinePopupComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelines",{"_index":2483,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timelines'},{'name",{"_index":213,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["timeouthandle",{"_index":1816,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["timesinceconditiononset",{"_index":1234,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["timesinceobservation",{"_index":2127,"title":{},"body":{"injectables/ObservationService.html":{}}}],["title",{"_index":644,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["tmp",{"_index":2469,"title":{},"body":{"injectables/SmartService.html":{}}}],["tmp[0",{"_index":2472,"title":{},"body":{"injectables/SmartService.html":{}}}],["today's",{"_index":1691,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["todo",{"_index":491,"title":{},"body":{"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["toggle",{"_index":316,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["toggleconfigmode",{"_index":240,"title":{},"body":{"components/AccountComponent.html":{}}}],["toggleexpansion",{"_index":1046,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["toggling",{"_index":1110,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tok",{"_index":2420,"title":{},"body":{"injectables/SmartService.html":{}}}],["token",{"_index":1531,"title":{},"body":{"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["token_url",{"_index":2442,"title":{},"body":{"injectables/SmartService.html":{}}}],["tokenurl",{"_index":2374,"title":{},"body":{"injectables/SmartService.html":{}}}],["tool",{"_index":499,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["toolbar",{"_index":848,"title":{},"body":{"components/CarePlansComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":218,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["toolbar.html",{"_index":2531,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":217,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolbarservice",{"_index":362,"title":{"injectables/ToolBarService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":1165,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["top",{"_index":1177,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{}}}],["topoffset",{"_index":1817,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["topposition",{"_index":2527,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["total",{"_index":250,"title":{},"body":{"components/AccountComponent.html":{}}}],["totalconditions",{"_index":1245,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["totalcount",{"_index":2140,"title":{},"body":{"injectables/ObservationService.html":{}}}],["totaldata",{"_index":1569,"title":{},"body":{"components/FormBuilder.html":{}}}],["track",{"_index":579,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["tracking",{"_index":496,"title":{},"body":{"injectables/AssociationService.html":{}}}],["tracks",{"_index":2548,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["transactions",{"_index":2654,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1864,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transform(value",{"_index":1865,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["trend",{"_index":299,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["trends",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"injectables/HistoricalTrendsService.html":{}}}],["trendsservice",{"_index":1637,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["trick",{"_index":2208,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["triggered",{"_index":1214,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["triggering",{"_index":1370,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["triglycerides",{"_index":253,"title":{},"body":{"components/AccountComponent.html":{}}}],["triple",{"_index":821,"title":{},"body":{"components/CarePlansComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist",{"_index":220,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist.html",{"_index":2561,"title":{},"body":{"components/TripleListComponent.html":{}}}],["triplelistcomponent",{"_index":219,"title":{"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":89,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["try",{"_index":1152,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ts",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["tslib",{"_index":2641,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":895,"title":{},"body":{"classes/Chart.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":2643,"title":{},"body":{"dependencies.html":{}}}],["typescript's",{"_index":2719,"title":{},"body":{"index.html":{}}}],["typescript/javascript",{"_index":717,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ui",{"_index":1116,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["unavailable",{"_index":494,"title":{},"body":{"injectables/AssociationService.html":{}}}],["uncheck",{"_index":757,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["unchecked",{"_index":1303,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["unclicked",{"_index":749,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["undefined",{"_index":1463,"title":{},"body":{"injectables/DoctorService.html":{}}}],["unintuitive",{"_index":2711,"title":{},"body":{"index.html":{}}}],["uniqueobservations",{"_index":2036,"title":{},"body":{"injectables/ObservationService.html":{}}}],["uniqueobservationsloadfinished",{"_index":2037,"title":{},"body":{"injectables/ObservationService.html":{}}}],["unit",{"_index":2221,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["units",{"_index":2002,"title":{},"body":{"classes/Observation.html":{}}}],["unknown",{"_index":2274,"title":{},"body":{"components/PatientComponent.html":{}}}],["unsubscribe",{"_index":1422,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["until",{"_index":1006,"title":{},"body":{"injectables/ConditionService.html":{}}}],["up",{"_index":1367,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{}}}],["update",{"_index":604,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["update'},{'name",{"_index":208,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["update.component",{"_index":1614,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["update.component.ts",{"_index":2337,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["update.component.ts:11",{"_index":2346,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:12",{"_index":2348,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:13",{"_index":2347,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:15",{"_index":2342,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:19",{"_index":2344,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:9",{"_index":2341,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.html",{"_index":2339,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["updatescratchpad",{"_index":1047,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["updateservice",{"_index":590,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["upon",{"_index":1331,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["upper",{"_index":2025,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["uri",{"_index":659,"title":{},"body":{"classes/CarePlan.html":{}}}],["uris",{"_index":2418,"title":{},"body":{"injectables/SmartService.html":{}}}],["url",{"_index":638,"title":{},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{}}}],["urlencoded",{"_index":2447,"title":{},"body":{"injectables/SmartService.html":{}}}],["usage",{"_index":809,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ContextMenuComponent.html":{}}}],["use",{"_index":1206,"title":{},"body":{"components/ConditionsComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Observation.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":98,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{}}}],["user",{"_index":845,"title":{"classes/User.html":{}},"body":{"components/CarePlansComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user's",{"_index":857,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["userid",{"_index":1574,"title":{},"body":{"components/FormBuilder.html":{}}}],["userselected",{"_index":661,"title":{},"body":{"classes/CarePlan.html":{}}}],["uses",{"_index":121,"title":{},"body":{"components/AccordionRecursion.html":{},"components/FormBuilder.html":{}}}],["using",{"_index":1111,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"index.html":{}}}],["utility",{"_index":120,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["val",{"_index":2499,"title":{},"body":{"components/TimelineComponent.html":{}}}],["value",{"_index":58,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["valuecodeableconcept",{"_index":1974,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["valuequantity",{"_index":1975,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["values",{"_index":312,"title":{},"body":{"components/AccountComponent.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["var",{"_index":138,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["variable",{"_index":2569,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1593,"title":{"miscellaneous/variables.html":{}},"body":{"components/FormBuilder.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verificationstatus",{"_index":956,"title":{},"body":{"classes/Condition.html":{}}}],["version",{"_index":660,"title":{},"body":{"classes/CarePlan.html":{},"index.html":{}}}],["very",{"_index":2743,"title":{},"body":{"index.html":{}}}],["via",{"_index":2666,"title":{},"body":{"index.html":{}}}],["view",{"_index":608,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["viewchild",{"_index":702,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["viewchild('hover",{"_index":2262,"title":{},"body":{"components/PatientComponent.html":{}}}],["viewchild('hoverbox",{"_index":2511,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["viewchild('menu",{"_index":699,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["viewchildren",{"_index":1590,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewchildren('form",{"_index":1586,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewer",{"_index":2649,"title":{},"body":{"index.html":{}}}],["views",{"_index":2547,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewtoggle",{"_index":1038,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["visible",{"_index":1340,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["visiblities",{"_index":1445,"title":{},"body":{"injectables/DoctorService.html":{}}}],["visit",{"_index":2293,"title":{},"body":{"components/PatientComponent.html":{},"index.html":{}}}],["vitals",{"_index":2090,"title":{},"body":{"injectables/ObservationService.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["waiting",{"_index":1836,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["want",{"_index":1465,"title":{},"body":{"injectables/DoctorService.html":{}}}],["way",{"_index":1243,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/SmartService.html":{}}}],["weight",{"_index":2091,"title":{},"body":{"injectables/ObservationService.html":{}}}],["west",{"_index":484,"title":{},"body":{"injectables/AssociationService.html":{}}}],["whatever",{"_index":2000,"title":{},"body":{"classes/Observation.html":{}}}],["whenever",{"_index":747,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["whenver",{"_index":738,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["wherever",{"_index":1385,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["whether",{"_index":706,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsDisplay.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["whose",{"_index":828,"title":{},"body":{"components/CarePlansComponent.html":{},"injectables/EncounterService.html":{},"components/TripleListComponent.html":{}}}],["width",{"_index":566,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/HistoricalTrendsComponent.html":{}}}],["window",{"_index":621,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerheight",{"_index":619,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerwidth",{"_index":1852,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["window.location.href",{"_index":2467,"title":{},"body":{"injectables/SmartService.html":{}}}],["windows",{"_index":2684,"title":{},"body":{"index.html":{}}}],["wipes",{"_index":1448,"title":{},"body":{"injectables/DoctorService.html":{}}}],["withauth",{"_index":1539,"title":{},"body":{"injectables/FhirService.html":{}}}],["within",{"_index":1288,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["without",{"_index":1381,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["work",{"_index":601,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/ObservationsComponent.html":{}}}],["wraps",{"_index":1788,"title":{},"body":{"components/HomeComponent.html":{}}}],["write",{"_index":2734,"title":{},"body":{"index.html":{}}}],["writing",{"_index":2742,"title":{},"body":{"index.html":{}}}],["www",{"_index":2446,"title":{},"body":{"injectables/SmartService.html":{}}}],["x",{"_index":1069,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["y",{"_index":890,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["year",{"_index":1704,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years",{"_index":1649,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years').todate",{"_index":1694,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["yscalemax",{"_index":874,"title":{},"body":{"classes/Chart.html":{}}}],["yscalemin",{"_index":875,"title":{},"body":{"classes/Chart.html":{}}}],["yyyy').tostring",{"_index":2517,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["zone.js",{"_index":2645,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccordionRecursion.html":{"url":"components/AccordionRecursion.html","title":"component - AccordionRecursion","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionRecursion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/accordionRecursion/accordionRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                accordionRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./accordionRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFinished\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                reconstructDataConditions\n                            \n                            \n                                reconstructDataFindings\n                            \n                            \n                                reconstructDataObservations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnNum\n                            \n                            \n                                firstIteration\n                            \n                            \n                                levelData\n                            \n                            \n                                levelNum\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstIteration\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levelNum\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesConditions\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataConditions\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataConditions(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataFindings\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataFindings(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reconstructDataObservations\n                        \n                        \n                    \n                \n            \n            \n                \nreconstructDataObservations(arrData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output } from '@angular/core';\nimport { ObservationService } from '../../services/observation.service';\n\n@Component({\n    selector: 'accordionRecursion',\n    templateUrl: './accordionRecursion.html'\n})\nexport class AccordionRecursion {\n\n    /* This component takes in the data at the current level of the accordion structure:\n    Note that the structure of the data should be as follows:\n        {[\n            category: string,\n            subheading: boolean,\n            subs: [array of the same 4 headings here] // null if subheadings is false\n            data: [array of the list of conditions for that level] // null if subheadings is true\n        ]}\n    */\n    @Input() levelData: any;\n\n    // This is the type of the column (conditions: 0, observations: 1, or care plans: 2)\n    @Input() columnNum: number;\n\n    // This is the current level of recursion (used for the display)\n    @Input() levelNum: number;\n\n    // for testing purposes\n    @Input() firstIteration: number;\n\n    // Parsed data according to the above data schema \n    parsedData: any;\n    loadFinished: boolean = false;\n\n    // ===============================================================================================================================================\n    // ================================================================== EVENT METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    constructor(private observationService: ObservationService) { }\n\n    // When the component is first initialized\n    ngOnChanges() {\n        if (this.firstIteration == 1) {\n            // reconstruct the data for now\n            if (this.columnNum == 0)\n                this.reconstructDataConditions(this.levelData);\n            else if (this.columnNum == 1) {\n                this.reconstructDataObservations(this.levelData);\n            }\n            else if (this.columnNum == 2)\n                this.reconstructDataFindings(this.levelData);\n        } else {\n            this.parsedData = this.levelData;\n        }\n\n        this.loadFinished = true;\n    }\n\n    // ===============================================================================================================================================\n    // ================================================================== UTILITY METHODS ==============================================================\n    // ==================================================================---------------==============================================================\n\n    // NOTE: The current component uses this function to rebuild the data into correct structure, but in practice, this function should not be used\n    // since the data should already in the correct model format (described above levelData)\n    reconstructDataConditions(arrData: any) {\n        this.parsedData = this.addCategoriesConditions(arrData);\n    }\n\n    addCategoriesConditions(arrData: any) {\n        // For conditions, there are guaranteed to be 5 different columns; for now, just filter by active/inactive\n\n        // data sieve\n        var dataFilter =\n        {\n            'Chief Complaint': [],\n            'Active Problems': [],\n            'Inactive Problems': [],\n            'Allergies/Precautions': [],\n            'Preventions/Exposures': []\n        };\n\n        // Filter each condition into a category based on the data\n        for (var i = 0; i \n    \n\n    \n        \n\n  \n    \n        {{cat.category}} ({{cat.data?.length}})\n    \n    \n      \n        \n          \n        \n        \n          \n        \n            \n          \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{cat.category}} ({{cat.data?.length}})                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionRecursion'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/account.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                account\n            \n\n\n\n\n            \n                templateUrl\n                ./account.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cholesteralBattery\n                            \n                            \n                                electrolytes\n                            \n                            \n                                kidneyFunction\n                            \n                            \n                                liverFunction\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSetting\n                            \n                            \n                                saveSettings\n                            \n                            \n                                toggleConfigMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSetting\n                        \n                        \n                    \n                \n            \n            \n                \naddSetting(checked: boolean, setting: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveSettings\n                        \n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleConfigMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleConfigMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cholesteralBattery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            electrolytes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kidneyFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Creatinine\", \"GFR\", \"BUN\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            liverFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\n\n@Component({\n  selector: 'account',\n  templateUrl: './account.html',\n})\nexport class AccountComponent {\n  settings: Array = [];\n  electrolytes: Array = [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"];\n  cholesteralBattery: Array = [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"];\n  liverFunction: Array = [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"];\n  kidneyFunction: Array = [\"Creatinine\", \"GFR\", \"BUN\"];\n\n  constructor(private doctorService: DoctorService) { }\n\n  addSetting(checked: boolean, setting: string) {\n    if (checked) {\n      this.settings.push(setting);\n    }\n    else {\n      this.settings.splice(this.settings.indexOf(setting), 1);\n    }\n  }\n\n  saveSettings() {\n    this.doctorService.filter = this.settings;\n    this.doctorService.addGraphConfig(this.settings);\n    console.log(\"saved\");\n  }\n\n  toggleConfigMode() {\n    if (this.doctorService.configMode == true) {\n      this.doctorService.configMode = false;\n    }\n    else {\n      this.doctorService.configMode = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  .paddedtd {\n    padding:10px 0;\n  }\n  .paddedtable {\n    border-collapse: separate;\n    border-spacing: 10px 0;\n  }\n\n\n  \n    \n      \n         John Smith\n        \n          GeneralChange password\n          Event Timeline\n          Time Scale:\n            Linear\n            Logarithmic\n          \n          Historical Trend\n          Initial Timeframe:\n          \n            6 month\n            12 month\n            18 month\n          \n          Problem List\n          \n            \n              \n                \n              \n              Active Problems\n              \n                \n              \n              Allergies\n            \n            \n              \n                \n              \n              Inactive Problems\n              \n                \n              \n              Activities Due\n            \n          \n          Findings List\n          \n            \n              \n                \n              \n              Abnormal Values\n              \n                \n              \n              All Values\n            \n            \n              \n                \n              \n              No Values\n              \n                \n              \n              Selected Values\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n                \n              \n            \n          \n          Save\n          Toggle Config Mode\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .paddedtd {    padding:10px 0;  }  .paddedtable {    border-collapse: separate;    border-spacing: 10px 0;  }                     John Smith                  GeneralChange password          Event Timeline          Time Scale:            Linear            Logarithmic                    Historical Trend          Initial Timeframe:                      6 month            12 month            18 month                    Problem List                                                                                Active Problems                                                          Allergies                                                                                  Inactive Problems                                                          Activities Due                                Findings List                                                                                Abnormal Values                                                          All Values                                                                                  No Values                                                          Selected Values                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                              Save          Toggle Config Mode                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllergyIntolerance.html":{"url":"classes/AllergyIntolerance.html","title":"class - AllergyIntolerance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllergyIntolerance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/allergyIntolerance.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AllergyIntolerance {\n    id: string;\n    code: {\n        text: string;\n    };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The root component for the entire application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app/app.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The root component for the entire application.\n */\n@Component({\n  selector: 'app',\n  templateUrl: './app.html'\n})\nexport class AppComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n            Toggle navigation\n          \n          \n          \n           \n        \n    \n    \n      \n         Home\n         Account\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Toggle navigation                                                                        Home         Account            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nCarePlansComponent\n\nCarePlansComponent\n\nAppModule -->\n\nCarePlansComponent->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionRecursion\n                        \n                        \n                            AccountComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CarePlanDisplay\n                        \n                        \n                            CarePlansComponent\n                        \n                        \n                            ColumnStateSwitcherComponent\n                        \n                        \n                            ConditionsChartComponent\n                        \n                        \n                            ConditionsComponent\n                        \n                        \n                            ConditionsDisplay\n                        \n                        \n                            ContextMenuComponent\n                        \n                        \n                            FormBuilder\n                        \n                        \n                            HistoricalTrendsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HoverBoxComponent\n                        \n                        \n                            LoadingAnimation\n                        \n                        \n                            MedicationsComponent\n                        \n                        \n                            ObservationRecursiveChart\n                        \n                        \n                            ObservationsComponent\n                        \n                        \n                            ObservationsDisplay\n                        \n                        \n                            PatientComponent\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelinePopupComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TripleListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AssociationService\n                        \n                        \n                            CarePlanService\n                        \n                        \n                            ConditionService\n                        \n                        \n                            DoctorService\n                        \n                        \n                            EncounterService\n                        \n                        \n                            FhirService\n                        \n                        \n                            HistoricalTrendsService\n                        \n                        \n                            MapService\n                        \n                        \n                            ObservationService\n                        \n                        \n                            PatientService\n                        \n                        \n                            ScratchPadService\n                        \n                        \n                            SmartService\n                        \n                        \n                            ToolBarService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormCreatorModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, enableProdMode } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// COMPONENT IMPORTS\nimport { AppComponent } from './app/components/app/app.component';\nimport { HomeComponent } from './app/components/home/home.component';\nimport { PatientComponent } from './app/components/patient/patient.component';\nimport { ConditionsComponent } from './app/components/conditions/conditions.component';\nimport { TimelineComponent } from './app/components/timeline/timeline.component';\nimport { TimelinePopupComponent } from './app/components/timeline_popup/timeline_popup.component';\nimport { ObservationsComponent } from './app/components/observations/observations.component';\nimport { CarePlansComponent } from './app/components/carePlans/carePlans.component';\nimport { HoverBoxComponent } from \"./app/components/hoverBox/hoverBox.component\";\nimport { LoadingAnimation } from './app/components/loadingAnimation/loadingAnimation.component';\nimport { AccountComponent } from './app/components/account/account.component';\nimport { ToolbarComponent } from './app/components/toolbar/toolbar.component';\nimport { TripleListComponent } from './app/components/tripleList/tripleList.component';\nimport { ObservationRecursiveChart } from './app/components/observationRecursionChart/observationRecursionChart.component';\nimport { MedicationsComponent } from './app/components/medications/medications.component';\nimport { ConditionsChartComponent } from './app/components/conditionsChart/conditionsChart.component';\nimport { ColumnStateSwitcherComponent } from './app/components/columnStateSwitcher/columnStateSwitcher.component';\nimport { FormBuilder } from './app/components/form-builder/form-builder.component'\nimport { ContextMenuComponent } from './app/components/contextMenu/contextMenu.component';\nimport { CarePlanDisplay } from './app/components/carePlanDisplay/carePlanDisplay.component';\nimport { AccordionRecursion } from './app/components/accordionRecursion/accordionRecursion.component';\nimport { ConditionsDisplay } from './app/components/conditionsDisplay/conditionsDisplay.component';\nimport { HistoricalTrendsComponent } from './app/components/historicalTrends/historicalTrends.component';\nimport { ObservationsDisplay } from './app/components/observationsDisplay/observationsDisplay.component';\n\n// SERVICE IMPORTS\nimport { CookieService } from 'ngx-cookie-service';\nimport { EncounterService } from './app/services/encounter.service';\nimport { FhirService } from './app/services/fhir.service';\nimport { PatientService } from './app/services/patient.service';\nimport { ConditionService } from './app/services/condition.service';\nimport { CarePlanService } from './app/services/carePlan.service';\nimport { ObservationService } from './app/services/observation.service';\nimport { MapService } from './app/services/map.service';\nimport { DoctorService } from './app/services/doctor.service';\nimport { SmartService } from './app/services/smart.service';\nimport { HistoricalTrendsService } from './app/services/historicalTrends.service';\nimport { ScratchPadService } from './app/services/scratchPad.service';\nimport { ToolBarService } from './app/services/toolbar.service';\nimport { AssociationService } from './app/services/association.service';\n\nimport { MomentModule } from 'ngx-moment';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n\nenableProdMode();\n\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormCreatorModule } from './app/modules/form.module';\n\nconst appRoutes: Routes = [\n  { path: 'account', component: AccountComponent },\n  { path: 'trends', component: HistoricalTrendsComponent },\n  { path: '', component: HomeComponent },\n  { path: '**', component: HomeComponent }\n]\nconst appRoutingProviders: any[] = [];\nconst routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n@NgModule({\n  imports: [\n    FormCreatorModule,\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    MomentModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  declarations: [ // Components and Directives\n    AppComponent,\n    HomeComponent,\n    PatientComponent,\n    AccordionRecursion,\n\n    // OBSERVATIONS COLUMN\n    ObservationsComponent,\n    ObservationsDisplay,\n\n    // CONDITIONS COLUMN\n    ConditionsComponent,\n    ConditionsDisplay,\n\n    // CAREPLAN COLUMN\n    CarePlansComponent,\n    CarePlanDisplay,\n    MedicationsComponent,\n\n    TimelineComponent,\n    TimelinePopupComponent,\n    LoadingAnimation,\n    FormBuilder,\n    AccountComponent,\n    ToolbarComponent,\n    TripleListComponent,\n    ObservationRecursiveChart,\n    ConditionsChartComponent,\n    ColumnStateSwitcherComponent,\n    ContextMenuComponent,\n    HoverBoxComponent,\n    HistoricalTrendsComponent,\n  ],\n  providers: [ // Services\n    appRoutingProviders,\n    CookieService,\n    EncounterService,\n    FhirService,\n    PatientService,\n    ObservationService,\n    ConditionService,\n    MapService,\n    DoctorService,\n    SmartService,\n    CarePlanService,\n    HistoricalTrendsService,\n    ScratchPadService,\n    ToolBarService,\n    AssociationService,\n  ],\n  bootstrap: [AppComponent] // Root Component\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Associable.html":{"url":"interfaces/Associable.html","title":"interface - Associable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Associable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/associable.model.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface Associable {\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associatedMapConditions\n                            \n                            \n                                associatedMapObservations\n                            \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractConditionInfo\n                            \n                            \n                                    Private\n                                extractObservationInfo\n                            \n                            \n                                    Private\n                                getAssociations\n                            \n                            \n                                runAssociationsTool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, conditionService: ConditionService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractConditionInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractConditionInfo(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; onsetDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractObservationInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractObservationInfo(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; effectiveDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAssociations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssociations(checkedConditions: Array, checkedObservations: Array, conditions: Array, observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool(checkedConditions: Array, checkedObservations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConditionService } from './condition.service';\nimport { ObservationService } from './observation.service';\n\nimport { Condition } from '../models/condition.model';\nimport { Observation } from '../models/observation.model';\n\n@Injectable()\nexport class AssociationService {\n    // TODO: This endpoint is currently unavailable\n    private path = 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items';\n\n    // Maps for tracking which conditions and observations\n    // are currently associated (according to the associations tool)\n    associatedMapConditions: Map = new Map();\n    associatedMapObservations: Map = new Map();\n\n    constructor(\n        private http: HttpClient,\n        private conditionService: ConditionService,\n        private observationService: ObservationService\n    ) { }\n\n    runAssociationsTool(checkedConditions: Array, checkedObservations: Array) {\n        let conditions = this.conditionService.conditions;\n        let observations = this.observationService.observations;\n\n        this.getAssociations(\n            checkedConditions,\n            checkedObservations,\n            conditions,\n            observations\n        ).subscribe(res => {\n            // Clear prior associations\n            this.associatedMapConditions.clear();\n            this.associatedMapObservations.clear();\n\n            // Extract associations API response\n            let associatedConditions = res['selectedConditions'];\n            let associatedObservations = res['selectedObservations'];\n\n            // Mark associated conditions as such\n            for (let a of associatedConditions) {\n                for (let c of conditions) {\n                    if (this.extractConditionInfo(c)['code'] == a['code']) {\n                        this.associatedMapConditions.set(c, true);\n                    }\n                }\n            }\n\n            // Mark associated observations as such\n            for (let a of associatedObservations) {\n                for (let o of observations) {\n                    if (this.extractObservationInfo(o)['code'] == a['code']) {\n                        this.associatedMapObservations.set(o, true);\n                    }\n                }\n            }\n        });\n    }\n\n    private getAssociations(\n        checkedConditions: Array,\n        checkedObservations: Array,\n        conditions: Array,\n        observations: Array,\n    ) {\n        // Extract relevant fields from checked conditions and observations\n        let checkedConditionsInfo = checkedConditions.map(this.extractConditionInfo);\n        let checkedObservationsInfo = checkedObservations.map(this.extractObservationInfo);\n\n        // Extract relevant fields from all conditions and observations\n        let conditionsInfo = conditions.map(this.extractConditionInfo);\n        let observationsInfo = observations.map(this.extractObservationInfo);\n\n        // Call associations API endpoint\n        return this.http.post(this.path, {\n            selectedConditions: checkedConditionsInfo,\n            selectedObservations: checkedObservationsInfo,\n            conditions: conditionsInfo,\n            observations: observationsInfo,\n        });\n    }\n\n    // Extract the code, coding system, and onset datetime from a condition\n    private extractConditionInfo(condition: Condition) {\n        return {\n            code: condition['code']['coding'][0]['code'],\n            system: condition['code']['coding'][0]['system'],\n            onsetDateTime: condition['onsetDateTime'],\n        }\n    }\n\n    // Extract the code, coding system, and effective datetime from an observation\n    private extractObservationInfo(observation: Observation) {\n        return {\n            code: observation['code']['coding'][0]['code'],\n            system: observation['code']['coding'][0]['system'],\n            effectiveDateTime: observation['effectiveDateTime'],\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutoGrowDirective.html":{"url":"directives/AutoGrowDirective.html","title":"directive - AutoGrowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AutoGrowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/auto-grow.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [autoGrow]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/auto-grow.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFocus\n                        \n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer} from '@angular/core';\n\n@Directive({\n\tselector: '[autoGrow]',\n\thost: {\n\t\t'(focus)': 'onFocus()',\n\t\t'(blur)': 'onBlur()'\n\t}\n})\nexport class AutoGrowDirective {\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t}\n\n\tonFocus() {\n\t\t// console.log('focus!');\n\t\tthis.renderer.setElementStyle(this.el.nativeElement, 'width', '200px');\n\t}\n\t onBlur() {\n\t\t//  console.log('blur');\n\t\t this.renderer.setElementStyle(this.el.nativeElement, 'width', '120px');\n\t }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseColumn.html":{"url":"classes/BaseColumn.html","title":"class - BaseColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/baseColumn.ts\n        \n\n            \n                Description\n            \n            \n                Super class of all three columns in the application. Provides\nfunctionality for dynamic resizing, and keeps track of which\nstate the column is currently in (ie, scratch pad or default).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/baseColumn.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:46\n                            \n                        \n\n                \n                    \n                        The current height (in pixels) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:52\n                            \n                        \n\n                \n                    \n                        The current state (ie, scratch pad) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:49\n                            \n                        \n\n                \n                    \n                        220px is an approximate value that seems to work for now. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:26\n                \n            \n\n\n            \n                \n                    Update the height of the column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:33\n                \n            \n\n\n            \n                \n                    Show default view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:38\n                \n            \n\n\n            \n                \n                    Show scratch pad view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:43\n                \n            \n\n\n            \n                \n                    Update the service. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * Super class of all three columns in the application. Provides\n * functionality for dynamic resizing, and keeps track of which\n * state the column is currently in (ie, scratch pad or default).\n */\nexport class BaseColumn {\n  constructor() {\n    // Set the initial height of the column.\n    this.columnHeight = window.innerHeight - this.HEIGHT_OFFSET;\n\n    // Resize the column on each window resize event.\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(100)) // Debounce to prevent excessive resizing.\n      .subscribe((event) => {\n        this.handleResize(event);\n    });\n  }\n\n  /**\n   * Update the height of the column.\n   * @param event Resize event\n   */\n  handleResize(event) {\n    this.columnHeight = event.target.innerHeight - this.HEIGHT_OFFSET;\n  }\n\n  /**\n   * Show default view. To be overriden in the child class.\n   */\n  showDefault() { }\n\n  /**\n   * Show scratch pad view. To be overriden in the child class.\n   */\n  showScratchPad() { }\n\n  /**\n   * Update the service. To be overriden in the child class.\n   */\n  updateService() { }\n\n  /** The current height (in pixels) of the column. */\n  columnHeight: number;\n\n  /** 220px is an approximate value that seems to work for now. */\n  HEIGHT_OFFSET: number = 180;\n\n  /** The current state (ie, scratch pad) of the column. */\n  columnState: string = \"default\";\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bundle.html":{"url":"classes/Bundle.html","title":"class - Bundle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bundle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                link\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CarePlan.html":{"url":"classes/CarePlan.html","title":"class - CarePlan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CarePlan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/carePlan.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class CarePlan implements Associable {\n    id: string;\n    title: string;\n    status: string;\n    description: string;\n\n\n    period: {\n        start: Date;\n        end: Date;\n    }\n\n    activity: {\n        detail: {\n            status: string;\n            dailyAmount: {\n                value: number;\n                system: string;\n                code: string;\n            }\n            product: {\n                productCodableConcept: {\n                    coding: {\n                        // URI\n                        system: string;\n                        version: string;\n                        code: string;\n                        display: string;\n                        userSelected: boolean;\n                    }[],\n                    text: string;\n                }\n                productReference: {\n                    reference: string;\n                    type: string;\n                    display: string;\n                }\n            }\n        }\n    }[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanDisplay.html":{"url":"components/CarePlanDisplay.html","title":"component - CarePlanDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                careplanDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlanDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllCarePlans\n                            \n                            \n                                checkCarePlan\n                            \n                            \n                                checkClicked\n                            \n                            \n                                expand\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectCarePlan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                carePlans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                careplanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        carePlans\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        careplanSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllCarePlans(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCarePlan(checked: boolean, checkedCarePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedCarePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncheckClicked(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \nselectCarePlan(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { CarePlan } from '../../models/carePlan.model';\n\n@Component({\n  selector: 'careplanDisplay',\n  templateUrl: './carePlanDisplay.html'\n})\nexport class CarePlanDisplay {\n  // The currently selected careplan in the list.\n  selected: CarePlan;\n\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of careplans to be displayed\n  @Input() carePlans: Array;\n  @Output() careplanSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu !: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(private scratchPadService: ScratchPadService) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking careplans.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function (plan) {\n        this.scratchPadService.addCarePlan(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  //whenver a line is selected\n  selectCarePlan(carePlan: CarePlan) {\n    this.selected = carePlan;\n    this.careplanSelected.emit(this.selected);\n    for (let c of this.scratchPadService.totalCareplans) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  checkClicked(carePlan: CarePlan) {\n    if (this.scratchPadService.checkedMapCareplans.get(carePlan)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkCarePlan(checked: boolean, checkedCarePlan: CarePlan) {\n    this.scratchPadService.checkCarePlan(checked, checkedCarePlan);\n  }\n\n  expand(parent: string) {\n    /*\n    for (let c of this.carePlans) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n\n  // Check or uncheck all conditions.\n  checkAllCarePlans(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let carePlan of this.carePlans) {\n      this.scratchPadService.checkCarePlan(checked, carePlan);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      Description\n      Start\n      End\n    \n  \n  \n     \n      \n        \n      \n      {{cP['title']}}\n      {{cP.period.start}}\n      {{cP.period.end}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Description      Start      End                                       {{cP[\\'title\\']}}      {{cP.period.start}}      {{cP.period.end}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarePlanService.html":{"url":"injectables/CarePlanService.html","title":"injectable - CarePlanService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CarePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/carePlan.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCarePlans\n                            \n                            \n                                loadMedications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \nloadCarePlans(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMedications\n                        \n                        \n                    \n                \n            \n            \n                \nloadMedications(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/CarePlan'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Patient } from '../models/patient.model';\nimport { CarePlan } from '../models/carePlan.model';\nimport { Medication } from '../models/medication.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class CarePlanService {\n  private path = '/CarePlan';\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient\n  ) { }\n\n  // Retrieve care plans for a given patient\n  loadCarePlans(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no care plans, so return an empty array\n          return new Array();\n        }\n      }));\n  }\n\n  // Retrieve medications for a given patient.\n  // If a given medication is taken over multiple periods, it is merged into one.\n  loadMedications(patient: Patient): Observable> {\n    return this.loadCarePlans(patient).pipe(map(carePlans => {\n      let medicationMap: Map = new Map();\n\n      for (let cp of carePlans) {\n        let dosageUnits = cp.activity[0].detail.dailyAmount.code;\n\n        // Retrieve the existing medication, or create it if it does not yet exist.\n        let med: Medication = medicationMap.get(cp.title) || new Medication(cp.title, dosageUnits);\n\n        // Add a period of usage to the medication.\n        med.periods.push({\n          start: new Date(cp.period.start),\n          end: new Date(cp.period.end),\n          dosage: cp.activity[0].detail.dailyAmount.value\n        });\n\n        medicationMap.set(cp.title, med);\n      }\n\n      return Array.from(medicationMap.values());\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlansComponent.html":{"url":"components/CarePlansComponent.html","title":"component - CarePlansComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlansComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlans/carePlans.component.ts\n\n\n    \n        Description\n    \n    \n        Component representing the list of a patient's \ncare plans. It is a part of the triple list \nview.\n\n    \n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                carePlans\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlans.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carePlanLoadFinished\n                            \n                            \n                                carePlans\n                            \n                            \n                                columnStateSubscription\n                            \n                            \n                                selected\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCarePlans\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, carePlanService: CarePlanService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlans/carePlans.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:38\n                            \n                        \n                \n                    \n                        The patient whose care plans are displayed. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCarePlans()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlans/carePlans.component.ts:72\n                \n            \n\n\n            \n                \n                    Get care plans currently in the scratch pad for display \nin the list.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlans/carePlans.component.ts:57\n                \n            \n\n\n            \n                \n                    Reload care plans when the patient is changed. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:26\n\n                \n            \n\n\n            \n                \n                    Update the height of the column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:33\n\n                \n            \n\n\n            \n                \n                    Show default view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:38\n\n                \n            \n\n\n            \n                \n                    Show scratch pad view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:43\n\n                \n            \n\n\n            \n                \n                    Update the service. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlanLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:29\n                            \n                        \n\n                \n                    \n                        Whether or not care plans have loaded yet. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlans\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:26\n                            \n                        \n\n                \n                    \n                        The care plans being displayed in the list. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnStateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:35\n                            \n                        \n\n                \n                    \n                        Subscription that detects when the user opens \nthe scratch pad (eg, from the toolbar).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:23\n                            \n                        \n\n                \n                    \n                        The care plan currently selected by the user. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:46\n\n                            \n                        \n\n                \n                    \n                        The current height (in pixels) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:52\n\n                            \n                        \n\n                \n                    \n                        The current state (ie, scratch pad) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:49\n\n                            \n                        \n\n                \n                    \n                        220px is an approximate value that seems to work for now. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { CarePlan } from '../../models/carePlan.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n/**\n * Component representing the list of a patient's \n * care plans. It is a part of the triple list \n * view.\n */\n@Component({\n  selector: 'carePlans',\n  templateUrl: './carePlans.html'\n})\nexport class CarePlansComponent extends BaseColumn {\n  /** The care plan currently selected by the user. */\n  selected: CarePlan;\n  \n  /** The care plans being displayed in the list. */\n  carePlans: Array;\n  \n  /** Whether or not care plans have loaded yet. */\n  carePlanLoadFinished: boolean = false;\n\n  /** \n   * Subscription that detects when the user opens \n   * the scratch pad (eg, from the toolbar).\n  */\n  columnStateSubscription: Subscription;\n\n  /** The patient whose care plans are displayed. */\n  @Input() patient: Patient;\n\n  constructor(\n    private fhirService: FhirService, \n    private carePlanService: CarePlanService, \n    private scratchPadService: ScratchPadService\n  ) {\n    super();\n\n    // Switch between scratch pad and default based on user's\n    // selection in the toolbar.\n    this.columnStateSubscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        this.columnState = sPad ? 'scratchpad' : 'default';\n      }\n    );\n  }\n\n  /** Reload care plans when the patient is changed. */\n  ngOnChanges() {\n    this.selected = null;\n    if (this.patient) {\n      this.carePlanService.loadCarePlans(this.patient).subscribe(carePlans => {\n        this.carePlans = carePlans;\n        this.carePlanLoadFinished = true;\n        console.log(\"Loaded \" + carePlans.length + \" care plans.\");\n      });\n    }\n  }\n\n  /**\n   * Get care plans currently in the scratch pad for display \n   * in the list.\n   */\n  getScratchPadCarePlans() {\n    return this.scratchPadService.getCarePlans();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Care Plans\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Care Plans                                                                                            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlansComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chart.html":{"url":"classes/Chart.html","title":"class - Chart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chart.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                dashedLines\n                            \n                            \n                                data\n                            \n                            \n                                lineChartData\n                            \n                            \n                                normalValues\n                            \n                            \n                                title\n                            \n                            \n                                yScaleMax\n                            \n                            \n                                yScaleMin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashedLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Chart {\n  title: string;\n  code: string;\n  dashedLines: boolean;\n\n  // An array of data points associated with the chart.\n  data: {\n    value: number;\n    name: any;\n  }[] = [];\n\n  // Stores the chart in the format expected for line charts by NGX-Charts.\n  lineChartData: {\n    name: any;\n    series: {\n      value: number;\n      name: any;\n    }[];\n  }[];\n\n  // The minimum and maximum Y-axis values to be displayed on the chart.\n  yScaleMin: number;\n  yScaleMax: number;\n\n  // Used to display horizontal \"reference\" lines in the NGX-Charts line chart.\n  // Generally an array of two elements (the low and high values).\n  normalValues: {\n    name: string;\n    value: number;\n  }[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxInline.html":{"url":"components/CheckboxInline.html","title":"component - CheckboxInline","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxInline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/checkbox-inline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                checkbox-inline\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-inline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxData\n                            \n                            \n                                combinedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkboxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"checkbox-inline\",\n\ttemplateUrl: \"./checkbox-inline.html\"\n})\n\nexport class CheckboxInline{\n\t@Input() inputData: any;\n\tcheckboxData : boolean[] = [];\n\tcombinedData: String[] = [];\n\t\n\tngOnInit(){\n\t\t// initialize the checkboxes all to false\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n      \n       {{entry.description}} \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}                    {{entry.description}}           '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxInline'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/client.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class Client {\n\tid: string;\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColumnStateSwitcherComponent.html":{"url":"components/ColumnStateSwitcherComponent.html","title":"component - ColumnStateSwitcherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColumnStateSwitcherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component for switching between the three states of each column.\nThe three possible states are: Default, Note Pad, and Scratch Pad.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                columnStateSwitcher\n            \n\n\n\n\n            \n                templateUrl\n                ./columnStateSwitcher.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCount\n                            \n                            \n                                switchToDefault\n                            \n                            \n                                switchToScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                columnType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         BaseColumn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n                \n                    \n                        The type of the column in which the switcher is used.\nFor example, 'conditions', 'observations', or 'careplans'.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:53\n                \n            \n\n\n            \n                \n                    Retrieve the number of items in the column's scratch pad. This \nnumber is displayed in the switcher component.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToDefault\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:29\n                \n            \n\n\n            \n                \n                    Switch to the default view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:40\n                \n            \n\n\n            \n                \n                    Switch to the scratch pad view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { BaseColumn } from '../baseColumn';\n\n\n /**\n  * Component for switching between the three states of each column.\n  * The three possible states are: Default, Note Pad, and Scratch Pad.\n  */\n@Component({\n  selector: 'columnStateSwitcher',\n  templateUrl: './columnStateSwitcher.html'\n})\nexport class ColumnStateSwitcherComponent {\n  @Input() column: BaseColumn;\n\n  /**\n   * The type of the column in which the switcher is used.\n   * For example, 'conditions', 'observations', or 'careplans'.\n   */\n  @Input() columnType: string;\n\n  constructor (private scratchPadService: ScratchPadService) { }\n\n  /**\n   * Switch to the default view of the column.\n   */\n  switchToDefault() {\n    if (this.column != null) {\n      this.column.columnState = 'default';\n      this.column.updateService(); // Update the service to store correct column state\n      this.column.showDefault();\n    }\n  }\n\n  /**\n   * Switch to the scratch pad view of the column.\n   */\n  switchToScratchPad() {\n    if (this.column != null) {\n      this.column.columnState = 'scratchpad';\n      // Update the service to store correct column state\n      this.column.updateService(); \n      this.column.showScratchPad();\n    }\n  }\n\n  /**\n   * Retrieve the number of items in the column's scratch pad. This \n   * number is displayed in the switcher component.\n   */\n  getScratchPadCount(): number {\n    if (this.columnType == 'conditions') {\n      return this.scratchPadService.conditions.length;\n    } else if (this.columnType == 'observations') {\n      return this.scratchPadService.observations.length;\n    } else if (this.columnType == 'careplans') {\n      // TODO: Implement once scratch pad is finished for careplans.\n      return 0;\n    }\n    return 0;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      {{ getScratchPadCount() }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ getScratchPadCount() }}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColumnStateSwitcherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condition.html":{"url":"classes/Condition.html","title":"class - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/condition.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clinicalStatus\n                            \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                isParent\n                            \n                            \n                                isVisible\n                            \n                            \n                                onsetDateTime\n                            \n                            \n                                parent\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                verificationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clinicalStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onsetDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verificationStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Condition implements Associable {\n    id: string;\n    onsetDateTime: string;\n    relativeDateTime: string;\n    verificationStatus: string;\n    clinicalStatus: string;\n    isVisible: boolean;\n    isParent: boolean;\n    parent: string;\n\tcode: {\n        coding: [{code: string, display: string, system: string}],\n        text: string\n    };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConditionService.html":{"url":"injectables/ConditionService.html","title":"injectable - ConditionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConditionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/condition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnState\n                            \n                            \n                                conditions\n                            \n                            \n                                conditionsCache\n                            \n                            \n                                    Private\n                                path\n                            \n                            \n                                selectedCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCheckedConditions\n                            \n                            \n                                getColumnState\n                            \n                            \n                                loadAllergies\n                            \n                            \n                                loadConditions\n                            \n                            \n                                loadConditionsPage\n                            \n                            \n                                setColumnState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnState\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         String\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \nloadAllergies(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditions\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditions(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditionsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditionsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setColumnState\n                        \n                        \n                    \n                \n            \n            \n                \nsetColumnState(newColumnState: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newColumnState\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionsCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Condition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of, concat } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Condition } from '../models/condition.model';\nimport { AllergyIntolerance } from '../models/allergyIntolerance.model';\n\n@Injectable()\nexport class ConditionService {\n  private path = '/Condition';\n\n  conditions: Array = [];\n  // The currently selected (highlighted) condition \n  selectedCondition: Condition = null;\n\n  conditionsCache = {};\n  columnState: String;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  // https://stackoverflow.com/questions/45594609/which-operator-to-chain-observables-conditionally\n  // Because the conditions are paginated in the API, we must continually\n  // load the next page until no pages remain. This is achieved through\n  // concatMap and Observable.concat, as discussed above.\n  loadConditionsPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        const conditions = >bundle.entry.map(r => r.resource);\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(conditions), this.loadConditionsPage(nextLink.url));\n        } else {\n          return of(conditions);\n        }\n      }));\n  }\n\n  // Retrieve conditions for a given patient\n  loadConditions(patient: Patient): Observable> {\n    var url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadConditionsPage(url);\n  }\n\n  getCheckedConditions() {\n    return this.conditions.filter(c => {\n      return this.scratchPadService.checkedMapConditions.get(c);\n    });\n  }\n\n  // Retrieve allergies for a given patient\n  loadAllergies(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + \"/AllergyIntolerance\" + \"?patient=\" + patient.id;\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no allergies\n          return new Array();\n        }\n      }));\n  }\n\n  // Gets the state of the conditions column (default or scratch pad)\n  getColumnState(): String {\n    return this.columnState;\n  }\n\n  // Let the service know that the column state has changed\n  setColumnState(newColumnState: String): void {\n    this.columnState = newColumnState;\n  }\n\n  // TODO: Cache API calls into data structures that last for the duration of a session \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsChartComponent.html":{"url":"components/ConditionsChartComponent.html","title":"component - ConditionsChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsChart/conditionsChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsChart\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collapseQueue\n                            \n                            \n                                conditionGrouping\n                            \n                            \n                                conditionGroupingName\n                            \n                            \n                                conditions\n                            \n                            \n                                selected\n                            \n                            \n                                textInputForEdit\n                            \n                            \n                                viewToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ellipsesToggle\n                            \n                            \n                                expand\n                            \n                            \n                                groupConditions\n                            \n                            \n                                loadFinished\n                            \n                            \n                                newTable\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                scratchPadCheckBoxes\n                            \n                            \n                                selectCondition\n                            \n                            \n                                sortCondition\n                            \n                            \n                                tableNavigation\n                            \n                            \n                                toggleExpansion\n                            \n                            \n                                updateScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ellipsesToggle\n                        \n                        \n                    \n                \n            \n            \n                \nellipsesToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            groupConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngroupConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadFinished\n                        \n                        \n                    \n                \n            \n            \n                \nloadFinished()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newTable\n                        \n                        \n                    \n                \n            \n            \n                \nnewTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLocation\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scratchPadCheckBoxes\n                        \n                        \n                    \n                \n            \n            \n                \nscratchPadCheckBoxes(checked: boolean, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsortCondition(x: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tableNavigation\n                        \n                        \n                    \n                \n            \n            \n                \ntableNavigation(clickedSet: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clickedSet\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleExpansion\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapseQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGroupingName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Active\", \"Inactive\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInputForEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'conditionsChart',\n  templateUrl: './conditionsChart.html'\n})\nexport class ConditionsChartComponent {\n  selected: Condition;\n  conditions: Array = [];\n  viewToggle: boolean = false;\n  collapseQueue: Array = [];\n  conditionGrouping: Array = [];\n  conditionGroupingName: Array = [\"Active\", \"Inactive\"];\n  textInputForEdit: String;\n\n  @Input() patient: Patient;\n\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  constructor(\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = conditions;\n        this.loadFinished();\n      });\n    }\n  }\n\n  selectCondition(condition: Condition) {\n    this.selected = condition;\n    this.conditionSelected.emit(this.selected);\n    for (let c of this.conditions) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  sortCondition(x: string) {\n    if (x == \"date-asc\" || x == \"date-desc\") {\n      var a = 1;\n      if (x == \"date-asc\") {\n        a = -a;\n      }\n\n      for (let c of this.conditionGrouping) {\n        c.sort((n1, n2) => {\n          if (n1.code['coding'][0]['code'] > n2.code['coding'][0]['code']) {\n            return a;\n          }\n          if (n1.code['coding'][0]['code']  {\n      if (n1.onsetDateTime  n2.onsetDateTime) {\n        return -1;\n      }\n    })\n    var diff = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n\n    for (let c of this.conditions) {\n      c.isVisible = true;\n      var newDate = new Date(c.onsetDateTime).getTime() + diff;\n      c.relativeDateTime = new Date(newDate).toDateString();\n      c.relativeDateTime = moment(newDate).toISOString();\n    }\n    if (this.viewToggle == false) {\n      //this.viewConditionList = JSON.parse(JSON.stringify(this.conditions));\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n    this.conditionService.conditions = this.conditions;\n    this.groupConditions();\n  }\n\n  // Method for basic toggling, using JSON functions to toggle internal Angular2 module OnChanges for UI reactivity\n  ellipsesToggle() {\n    // Basic logic for toggle, assuming this.conditions contains all info, and this.viewConditionList is the modified list being used to display data\n    if (this.viewToggle == false) {\n      for (let c of this.conditions) {\n        c.isVisible = true;\n      }\n      this.viewToggle = true;\n    }\n  }\n\n  toggleExpansion() {\n\n    if (this.viewToggle == true) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n      this.viewToggle = false;\n    }\n  }\n\n  scratchPadCheckBoxes(checked: boolean, value) {\n\n    if (checked) {\n      // this.conditions[value].isSelected = true;\n      this.scratchPadService.toAddToCondSpArray.push(this.conditions[value]);\n    }\n    else {\n      // this.conditions[value].isSelected = false;\n      let temp = this.scratchPadService.toAddToCondSpArray.indexOf(this.conditions[value]);\n      if (temp > -1) {\n        // This will actually delete instead of simply setting to null, which will throw errors in the long run\n        this.scratchPadService.toAddToCondSpArray.splice(temp, 1);\n      }\n    }\n  }\n\n  updateScratchPad() {\n    //this.scratchPadService.buttonClicked(true);\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n\n  groupConditions() {\n    for (let c of this.conditions) {\n      if (c.clinicalStatus == \"active\") {\n        if (!this.conditionGrouping[0]) {\n          this.conditionGrouping[0] = [c];\n        }\n        else {\n          this.conditionGrouping[0].push(c);\n        }\n      }\n      else {\n        if (!this.conditionGrouping[1]) {\n          this.conditionGrouping[1] = [c];\n        }\n        else {\n          this.conditionGrouping[1].push(c);\n        }\n      }\n    }\n    // this.conditionGrouping[1] = this.conditionGrouping[0];\n  }\n\n  tableNavigation(clickedSet: number) {\n    for (let c of this.conditionGrouping) {\n      let cNum = this.conditionGrouping.indexOf(c);\n      if (cNum != clickedSet) {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = true;\n      }\n      else {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = false;\n      }\n    }\n  }\n\n  newTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number) {\n    if (this.conditionGroupingName.indexOf(tableName) == -1) {\n      this.conditionGroupingName.push(tableName);\n      for (let c of this.conditions) {\n        // Right now this will only allow for a table with one quality!\n        var fullPath = c;\n        dataLocation.forEach(element => {\n          try {\n            fullPath = c[element];\n          }\n          catch (error) {\n            console.log('That field does not exist on this Condition' + c);\n          }\n        });\n        // Testing condition and adding if it's true\n        if (quality) {\n          console.log(fullPath);\n          if (!this.conditionGrouping[groupingCount]) {\n            this.conditionGrouping[groupingCount] = [c];\n          }\n          else {\n            this.conditionGrouping[groupingCount].push(c);\n\n          }\n        }\n      }\n    }\n    else {\n      console.log(\"This table already exists\");\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Tools\n    \n      \n      \n    \n  \n  (none)\n  \n    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}\n    \n    \n      \n        \n          \n          Description\n          Status\n          Onset\n           \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              ... {{cSub['code']['text']}} {{cSub['code']['coding'][0]['code']}}\n            \n            {{cSub.clinicalStatus}}\n            {{cSub.relativeDateTime}}\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tools                        (none)   0\" id=\"tableParentEle\">    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}                                          Description          Status          Onset                                                                                                                 ... {{cSub[\\'code\\'][\\'text\\']}} {{cSub[\\'code\\'][\\'coding\\'][0][\\'code\\']}}                        {{cSub.clinicalStatus}}            {{cSub.relativeDateTime}}                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsComponent.html":{"url":"components/ConditionsComponent.html","title":"component - ConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditions/conditions.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents the top level of the Conditions column\nin the application. Does not handle rendering; simply retrieves\ndata from server and passes it down.\n\n    \n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditions\n            \n\n\n\n\n            \n                templateUrl\n                ./conditions.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conditionGrouping\n                            \n                            \n                                conditions\n                            \n                            \n                                justCreated\n                            \n                            \n                                loaded\n                            \n                            \n                                scratchPadConditions\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                viewToggle\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                updateService\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditions/conditions.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:52\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:53\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:143\n                \n            \n\n\n            \n                \n                    Retrieves the selected conditions from the scratch pad\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:95\n                \n            \n\n\n            \n                \n                    Called when all conditions have been loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:132\n                \n            \n\n\n            \n                \n                    Update the service to store correct column state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:26\n\n                \n            \n\n\n            \n                \n                    Update the height of the column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:33\n\n                \n            \n\n\n            \n                \n                    Show default view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:38\n\n                \n            \n\n\n            \n                \n                    Show scratch pad view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:43\n\n                \n            \n\n\n            \n                \n                    Update the service. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:39\n                            \n                        \n\n                \n                    \n                        The list of conditions being displayed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            justCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:43\n                            \n                        \n\n                \n                    \n                        For checking whenever the page is loaded \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scratchPadConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:36\n                            \n                        \n\n                \n                    \n                        The currently selected condition in the list. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:50\n                            \n                        \n\n                \n                    \n                        For column switching \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:46\n\n                            \n                        \n\n                \n                    \n                        The current height (in pixels) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:52\n\n                            \n                        \n\n                \n                    \n                        The current state (ie, scratch pad) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:49\n\n                            \n                        \n\n                \n                    \n                        220px is an approximate value that seems to work for now. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n/** Necessary in order to use jQuery to open popup. */\ndeclare var $: any;\n\n/**\n * Component that represents the top level of the Conditions column\n * in the application. Does not handle rendering; simply retrieves\n * data from server and passes it down.\n */\n@Component({\n  selector: 'conditions',\n  templateUrl: './conditions.html'\n})\nexport class ConditionsComponent extends BaseColumn {\n  /** The currently selected condition in the list. */\n  selected: Condition;\n\n  /** The list of conditions being displayed. */\n  conditions: Array = [];\n  scratchPadConditions: any = [];\n\n  /** For checking whenever the page is loaded */\n  loaded: boolean = false;\n\n  viewToggle: boolean = false;\n  conditionGrouping: Array = [];\n  justCreated: boolean;\n\n  /** For column switching */\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private fhirService: FhirService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService\n  ) {\n    super();\n    this.justCreated = true;\n    this.scratchPadConditions = this.getScratchPadConditions();\n\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    // Triggered if a new patient is selected (not even implemented yet).\n    this.selected = null;\n    this.conditions = [];\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = this.conditions.concat(conditions);\n        this.onLoadComplete();\n      });\n    }\n  }\n\n  /**\n   * Called when all conditions have been loaded.\n   */\n  onLoadComplete() {\n    console.log(\"Loaded \" + this.conditions.length + \" conditions.\");\n\n    this.conditions.sort((c1, c2) => {\n      return c2.onsetDateTime.localeCompare(c1.onsetDateTime);\n    });\n\n    // Scale dates to make them appear more recent for demos.\n    // 0.8 is an arbitrary value that produces realistic dates.\n    if (this.conditions.length > 0) {\n      let RECENCY_MULTIPLIER = 0.8;\n      let timeSinceConditionOnset = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n      let scaledTimeSinceConditionOnset = Math.floor(RECENCY_MULTIPLIER * timeSinceConditionOnset);\n\n      for (let condition of this.conditions) {\n        condition.isVisible = true;\n        let relativeDateTime = new Date(condition.onsetDateTime).getTime() + scaledTimeSinceConditionOnset;\n        condition.relativeDateTime = moment(relativeDateTime).toISOString();\n      }\n    }\n\n    if (!this.viewToggle) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n\n    this.conditionService.conditions = this.conditions;\n\n    // for rendering elements only after page is loaded (there probably is a better way)\n    this.loaded = true;\n\n    // initialize the scratchPadService totalConditions with all the stuff\n    this.scratchPadService.initConditions(this.conditions);\n  }\n\n  /**\n   * Update the service to store correct column state\n   */\n  updateService(): void {\n    this.conditionService.setColumnState(this.columnState);\n  }\n\n  // ===============================================================================================================================================\n  // ======================================================== GETTERS AND SETTERS===================================================================\n  // ===============================================================================================================================================\n\n  /**\n   * Retrieves the selected conditions from the scratch pad\n   */\n  getScratchPadConditions() {\n    return this.scratchPadService.getConditions();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Conditions\n      \n        \n      \n    \n  \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Testing condition popover\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Conditions                                                                          Testing condition popover  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsDisplay.html":{"url":"components/ConditionsDisplay.html","title":"component - ConditionsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllConditions\n                            \n                            \n                                checkCondition\n                            \n                            \n                                expand\n                            \n                            \n                                getDateString\n                            \n                            \n                                isConditionAssociated\n                            \n                            \n                                isConditionChecked\n                            \n                            \n                                isConditionSelected\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printmsg\n                            \n                            \n                                selectCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditions\n                            \n                            \n                                scratchPadMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService, conditionService: ConditionService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditions\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scratchPadMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllConditions\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllConditions(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCondition\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCondition(checkedCondition: Condition, checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedCondition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateString\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateString(c: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionAssociated(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionChecked(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionSelected(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printmsg\n                        \n                        \n                    \n                \n            \n            \n                \nprintmsg(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Condition } from '../../models/condition.model';\n\n@Component({\n  selector: 'conditionsDisplay',\n  templateUrl: './conditionsDisplay.html'\n})\nexport class ConditionsDisplay {\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() conditions: Array;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // Whether this display of conditions is within the scratch pad.\n  @Input() scratchPadMode: boolean = false;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private scratchPadService: ScratchPadService,\n    private conditionService: ConditionService,\n    private associationService: AssociationService\n  ) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking conditions.\n    if (this.conditionService.getColumnState() === \"scratchpad\") {\n      // Add 'Remove from Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Remove from Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.removeCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    } else {\n      // Add 'Add to Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Add to Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.addCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    }\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n  }\n\n  // Selects an individual condition (which causes it to be highlighted).\n  // This is NOT the same as checking a condition.\n  selectCondition(condition: Condition) {\n    this.conditionService.selectedCondition = condition;\n  }\n\n  // Check or uncheck an individual condition\n  checkCondition(checkedCondition: Condition, checked: boolean) {\n    this.scratchPadService.checkCondition(checked, checkedCondition);\n  \n    // When an individual condition is checked, the \"check all\" checkbox should be unchecked.\n    this.isAllChecked = false;\n  }\n\n  isConditionSelected(condition: Condition) {\n    return condition == this.conditionService.selectedCondition;\n  }\n\n  // Determine whether a condition is currently checked.\n  isConditionChecked(condition: Condition) {\n    return this.scratchPadService.checkedMapConditions.get(condition) || false;\n  }\n\n  // Determine whether a condition is currently associated (based on associations tool)\n  isConditionAssociated(condition: Condition) {\n    return this.associationService.associatedMapConditions.get(condition) || false;\n  }\n\n  // Check or uncheck all conditions.\n  checkAllConditions(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let condition of this.conditions) {\n        this.scratchPadService.checkCondition(checked, condition);\n    }\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n  printmsg(condition: Condition) {\n      console.log(condition);\n  }\n\n  getDateString(c: Condition) {\n    let d = new Date(c.onsetDateTime);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Description\n        Status\n        Onset\n      \n    \n    \n       \n        \n          \n        \n        \n          ... {{c['code']['text']}} \n        \n        {{c.clinicalStatus}}\n        {{c.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Description        Status        Onset                                                                 ... {{c[\\'code\\'][\\'text\\']}}                 {{c.clinicalStatus}}        {{c.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContextMenuComponent.html":{"url":"components/ContextMenuComponent.html","title":"component - ContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contextMenu/contextMenu.component.ts\n\n\n    \n        Description\n    \n    \n        A reusable context menu component.\nExample Usage:\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    this.menu.addOption({\n  'icon': 'glyphicon-stats', // icon to display\n  'text': 'Add to Trend Tool', // text to display\n  'exec': function(data) { // what to execute upon click\n      console.log(data);\n  }\n});\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                contextMenu\n            \n\n\n\n\n            \n                templateUrl\n                ./contextMenu.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickSubscription\n                            \n                            \n                                closeable\n                            \n                            \n                                CLOSEABLE_DELAY\n                            \n                            \n                                data\n                            \n                            \n                                left\n                            \n                            \n                                options\n                            \n                            \n                                top\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addOption\n                            \n                            \n                                    Private\n                                handleDocClick\n                            \n                            \n                                    Private\n                                handleOptionClick\n                            \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addOption\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOption(option: ContextMenuOption)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:58\n                \n            \n\n\n            \n                \n                    Add an option to the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                ContextMenuOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleDocClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDocClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:67\n                \n            \n\n\n            \n                \n                    Hide the context menu if user clicks outside of it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleOptionClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleOptionClick(option, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:113\n                \n            \n\n\n            \n                \n                    Handles clicks on context menu options. If the option \nhas an associated exec function, it is executed with \ndata passed as the parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The context menu option that was clicked.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:133\n                \n            \n\n\n            \n                \n                    Closes the context menu. Also handles cleaning up \nthe click subscription, which is no longer needed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event triggering the hiding.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(data, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:82\n                \n            \n\n\n            \n                \n                    Show the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to be passed to the context menu.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered the menu.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:43\n                            \n                        \n\n                \n                    \n                        Observable subscription to document clicks. Clicking out of the \ncontext menu closes it.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLOSEABLE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:50\n                            \n                        \n\n                \n                    \n                        Prevents a glitch in contexts where the menu is opened by a left click.\nWithout this delay on being able to close the menu, the menu would close\nthe moment it opened.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:33\n                            \n                        \n\n                \n                    \n                        The data passed into the menu from wherever it was triggered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:28\n                            \n                        \n\n                \n                    \n                        The list of options displayed in the menu.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { ContextMenuOption } from '../../models/contextMenuOption.model';\nimport { fromEvent } from 'rxjs';\n\n/**\n * A reusable context menu component.\n * \n * Example Usage:\n * \n * @example\n * this.menu.addOption({\n *              'icon': 'glyphicon-stats', // icon to display\n *              'text': 'Add to Trend Tool', // text to display\n *              'exec': function(data) { // what to execute upon click\n *                  console.log(data);\n *              }\n * });\n */\n@Component({\n  selector: 'contextMenu',\n  templateUrl: './contextMenu.html'\n})\nexport class ContextMenuComponent {\n\n  /**\n  * The list of options displayed in the menu.\n  */\n  options: Array = [];\n\n  /**\n  * The data passed into the menu from wherever it was triggered.\n  */\n  data: any = null;\n\n  visible: boolean = false;\n  top: string = '0px';\n  left: string = '0px';\n\n  /**\n  * Observable subscription to document clicks. Clicking out of the \n  * context menu closes it.\n  */\n  clickSubscription: any = null;\n\n  /**\n  * Prevents a glitch in contexts where the menu is opened by a left click.\n  * Without this delay on being able to close the menu, the menu would close\n  * the moment it opened.\n  */\n  CLOSEABLE_DELAY: number = 100;\n  closeable: boolean = false;\n\n  constructor(private ref: ElementRef) { }\n\n  /**\n   * Add an option to the context menu.\n   */\n  public addOption(option: ContextMenuOption) {\n    this.options = this.options.concat(option);\n  }\n\n  /**\n  * Hide the context menu if user clicks outside of it.\n  * \n  * @param event The click event on the document.\n  */\n  private handleDocClick(event) {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      // Only hide the menu if it is currently closeable.\n      if (this.closeable) {\n          this.hide(null);\n      }\n    }\n  }\n\n  /**\n   * Show the context menu.\n   * \n   * @param data Data to be passed to the context menu.\n   * @param event The click event that triggered the menu.\n   */\n  public show(data, event) {\n    this.data = data;\n\n    // Set the location of the menu to where the user clicked.\n    this.top = event.pageY + 'px';\n    this.left = event.pageX + 'px';\n\n    this.visible = true;\n    this.closeable = false;\n\n    // Allow the menu to be closed only after an interval has elapsed.\n    setTimeout(() => { this.closeable = true; }, this.CLOSEABLE_DELAY);\n\n    // Disable the standard click behavior.\n    event.preventDefault();\n\n    // Subscribe to document click events.\n    this.clickSubscription = fromEvent(document, 'click')\n      .subscribe((event) => {\n        this.handleDocClick(event);\n    });\n  }\n\n  /**\n   * Handles clicks on context menu options. If the option \n   * has an associated `exec` function, it is executed with \n   * `data` passed as the parameter.\n   * \n   * @param option The context menu option that was clicked.\n   * @param event The click event on the option\n   */\n  private handleOptionClick(option, event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (option.exec) {\n      // Execute the function tied to the clicked menu option.\n      option.exec(this.data);\n    }\n\n    // Hide the context menu.\n    this.hide(event);\n  }\n\n  /**\n   * Closes the context menu. Also handles cleaning up \n   * the click subscription, which is no longer needed.\n   * \n   * @param event The click event triggering the hiding.\n   */\n  private hide(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    // Unsubscribe from document click events.\n    if (this.clickSubscription) {\n      this.clickSubscription.unsubscribe();\n      this.clickSubscription = null;\n    }\n\n    // Hide the menu and reset the associated data.\n    this.visible = false;\n    this.data = null;\n  }\n}\n    \n\n    \n        \n\n  {{ option.text }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ option.text }}'\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextMenuOption.html":{"url":"classes/ContextMenuOption.html","title":"class - ContextMenuOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextMenuOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contextMenuOption.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a context menu option for use with \nContextMenuComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exec\n                            \n                            \n                                icon\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:23\n                            \n                        \n\n                \n                    \n                        Function to be executed upon click of the option\nin the context menu. \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                Data associated with the context menu.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:10\n                            \n                        \n\n                \n                    \n                        Icon to display next to the option (from the \nBootstrap Icons library).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:15\n                            \n                        \n\n                \n                    \n                        Text to be displayed in the option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ContextMenuOption {\n    /**\n     * Icon to display next to the option (from the \n     * Bootstrap Icons library).\n     */\n    icon: string;\n\n    /**\n     * Text to be displayed in the option.\n     */\n    text: string;\n\n    /**\n     * Function to be executed upon click of the option\n     * in the context menu. \n     * \n     * @param data Data associated with the context menu.\n     */\n    exec: (data) => void;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DoctorService.html":{"url":"injectables/DoctorService.html","title":"injectable - DoctorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DoctorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/doctor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configMode\n                            \n                            \n                                filter\n                            \n                            \n                                graphConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGraphConfig\n                            \n                            \n                                assignVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGraphConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddGraphConfig(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assignVisible\n                        \n                        \n                    \n                \n            \n            \n                \nassignVisible(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { Condition } from '../models/condition.model';\n\n@Injectable()\nexport class DoctorService {\n  filter: Array = [];\n  configMode: boolean = true;\n  graphConfig: Array> = [];\n\n  constructor(private cookieService: CookieService) { }\n\n  // The change to visiblities modifiers for the list should be an input to assignVisible(), and input through conditions.component.ts\n  assignVisible(list: Array) {\n    // Wipes the lists, as assignVisible() gets called on subscribe){data == true} for conditions.component.ts\n    // Needs to have a clean list, or it will push doubles/triples, or more\n\n    // Use \"let of\" to generate enumerated list, allows for pass by value iteration\n    let count = 0;\n    for (let c of list) {\n      // Right now the logic only excludes one code, for testing purposes\n      // thisModel is a undefined data model, depending on if we want to leave the service with the data we need to create a static model, but\n      // it should work for testing purposes\n\n      if (count ) {\n    this.graphConfig.push(list);\n    this.cookieService.set('graphConfig', JSON.stringify(this.graphConfig));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encounter.html":{"url":"classes/Encounter.html","title":"class - Encounter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encounter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/encounter.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                position\n                            \n                            \n                                reason\n                            \n                            \n                                status\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEndDate\n                            \n                            \n                                getLogValue\n                            \n                            \n                                getReason\n                            \n                            \n                                getStartDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEndDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetEndDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReason\n                        \n                        \n                    \n                \n            \n            \n                \ngetReason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStartDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetStartDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Encounter {\n  \n  id: string;\n  status: string;\n\n  period: {\n    start: string;\n    end: string;\n  };\n\n  text: {\n    status: string;\n    div: string;\n  }\n\n  position:string;\n  // Reasons for the encounter.\n  reason: {\n    text: string;\n\n    // Coding details for the encounter reason.\n    coding: {\n      system: string;\n      code: string;\n    }[];\n  }[];\n\n  // Get the first reason for the encounter (if there is one). Otherwise, return null.\n  getReason(): string {\n    // Check if there are any reasons. If not, return null.\n    if (!this.reason) {\n      return null;\n    }\n\n    for (let r of this.reason) {\n      if (r.text) {\n        // Return the text associated with the reason.\n        return r.text;\n      }\n    }\n\n    return null;\n  }\n  getStartDate(): Date { return new Date(this.period.start)}\n  getEndDate(): Date { return new Date(this.period.end)}\n\n  getLogValue(): any {\n    return Math.log(this.getStartDate().getTime())\n  }\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncounterService.html":{"url":"injectables/EncounterService.html","title":"injectable - EncounterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EncounterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encounter.service.ts\n        \n\n            \n                Description\n            \n            \n                A service for retrieving patient encounters\nfrom the FHIR server\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                    Public\n                                loadEncounters\n                            \n                            \n                                    Private\n                                loadEncountersPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/encounter.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:60\n                \n            \n\n\n            \n                \n                    Convert a JSON encounter object from the FHIR server\nto an instance of the Encounter class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JSON encounter object from FHIR server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Encounter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:50\n                \n            \n\n\n            \n                \n                    Retrieve encounters for a given patient from the FHIR server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The patient whose encounters to retrieve\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncountersPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncountersPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:29\n                \n            \n\n\n            \n                \n                    Load a page of encounters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Endpoint from which to retrieve encounters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Encounter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/encounter.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, concat } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Encounter } from '../models/encounter.model';\n\n/**\n * A service for retrieving patient encounters\n * from the FHIR server\n */\n@Injectable()\nexport class EncounterService {\n  private path = '/Encounter';\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  /**\n   * Load a page of encounters\n   * @param url Endpoint from which to retrieve encounters\n   */\n  private loadEncountersPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        let encounters: Array = [];\n        if (bundle.entry) {\n          encounters = bundle.entry.map(e => this.deserialize(e['resource']));\n        }\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(encounters), this.loadEncountersPage(nextLink.url));\n        } else {\n          return of(encounters);\n        }\n      }));\n  }\n\n  /**\n   * Retrieve encounters for a given patient from the FHIR server.\n   * @param patient The patient whose encounters to retrieve\n   */\n  public loadEncounters(patient: Patient): Observable> {\n    const url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadEncountersPage(url);\n  }\n\n  /**\n   * Convert a JSON encounter object from the FHIR server\n   * to an instance of the Encounter class\n   * @param input JSON encounter object from FHIR server\n   */\n  private deserialize(input: any): Encounter {\n    // We cannot simply cast the JSON object to an Encounter, because this casted\n    // Encounter will not have the methods of the Encounter class.\n    var fixed: Encounter = new Encounter();\n\n    for (let prop in input) {\n      fixed[prop] = input[prop];\n    }\n\n    return fixed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FhirService.html":{"url":"injectables/FhirService.html","title":"injectable - FhirService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FhirService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/fhir.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                base\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequestOptions\n                            \n                            \n                                getUrl\n                            \n                            \n                                setToken\n                            \n                            \n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/fhir.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestOptions(withAuth: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withAuth\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetToken(newToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class FhirService {\n\n  constructor() { }\n\n  private base: string;\n  public token: string;\n\n  getUrl(): string {\n    return this.base;\n  }\n\n  setUrl(url: string) {\n    this.base = url;\n  }\n\n  setToken(newToken: string) {\n    this.token = newToken;\n  }\n\n  getRequestOptions(withAuth: boolean = true): { headers: HttpHeaders } {\n    let headers = new HttpHeaders({'Accept': 'application/json'});\n    if (withAuth) {\n      headers = headers.append('Authorization', 'Bearer ' + this.token);\n    }\n    return { headers: headers };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/form.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Form {\n\tid: number;\n\ttype: string;\n\tdata : any;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormBuilder.html":{"url":"components/FormBuilder.html","title":"component - FormBuilder","body":"\n                   \n\n\n\n\n\n  Components\n  FormBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-builder/form-builder.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                form-builder\n            \n\n\n            \n                styles\n                #main_list {list-style-type: none;}\n            \n\n\n            \n                templateUrl\n                ./form-builder.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                combData\n                            \n                            \n                                components\n                            \n                            \n                                    Public\n                                forms\n                            \n                            \n                                totalData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getData\n                            \n                            \n                                getForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                storeData\n                            \n                            \n                                    Public\n                                submitClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formInput\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmitClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formInput\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSubmitClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForms\n                        \n                        \n                    \n                \n            \n            \n                \ngetForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('form')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Form[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Form } from '../../models/form.model';\n\n@Component({\n  selector: 'form-builder',\n  templateUrl: './form-builder.html',\n  styles: [\"#main_list {list-style-type: none;}\"]\n})\n\nexport class FormBuilder  {\n\t// GLOBAL VARIABLES\n\tpublic forms: Form[];\n\t@ViewChildren('form') components: any;\n\t\n\ttotalData: String[] = [];\n\tcombData: any;\n\t\n\t@Input() formInput: any[];\n\t@Input() userId: String; \n\t\n\t@Output() onSubmitClick: EventEmitter = new EventEmitter();\n\t\n\t// ============================== EVENT METHODS ==================================\n\tconstructor(){}\n\t\n\tngOnInit(): void {\n\t\tthis.getForms();\n\t}\n\t\t\n\t// method that uses service to get the forms from the server\n\tgetForms(): void {\n\t\t//this.formBuilderService.getTemplate().then(forms => {this.forms = forms; console.log(forms);});\n\t\tthis.forms = this.formInput;\n\t}\n\t\n\t// ===================== LOGIC WHEN SUBMIT BUTTON CLICKED ========================\n\t\n\tpublic submitClick(): void {\n\t\tthis.totalData = [];\n\t\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n  \n    \n    \n       \n    \n    \n       \n    \n    \n       \n    \n    \n      \n    \n    \n      \n    \n  \n   Submit \n\n    \n\n    \n            #main_list {list-style-type: none;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Submit '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormBuilder'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormCreatorModule.html":{"url":"modules/FormCreatorModule.html","title":"module - FormCreatorModule","body":"\n                   \n\n\n\n\n    Modules\n    FormCreatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { CheckboxInline } from '../components/form_components/checkbox-inline.component';\nimport { NormalBox1 } from '../components/form_components/normal-box-1.component';\nimport { NormalBox2 } from '../components/form_components/normal-box-2.component';\nimport { SelectListSingle } from '../components/form_components/select-list-single.component';\nimport { ScratchPadUpdate } from '../components/form_components/scrachpad-update.component';\n\n@NgModule({\n\timports: [\n\t\tFormsModule,\n\t\tBrowserModule\n\t],\n\tdeclarations: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t], exports: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t]\n})\n\nexport class FormCreatorModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HighlightDirective.html":{"url":"directives/HighlightDirective.html","title":"directive - HighlightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  HighlightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/highlight.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [highlight]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlightText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlightText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer, Input} from '@angular/core';\n\n@Directive({\n\tselector: '[highlight]'\n})\nexport class HighlightDirective {\n\n\t@Input('highlightText') text: string = '';\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t\tconsole.log(\"Highlighting!\");\n\t\tthis.el.nativeElement.textContent = 'foo';\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoricalTrendsComponent.html":{"url":"components/HistoricalTrendsComponent.html","title":"component - HistoricalTrendsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoricalTrendsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/historicalTrends/historicalTrends.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                historicalTrends\n            \n\n\n\n\n            \n                templateUrl\n                ./historicalTrends.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartSize\n                            \n                            \n                                    Private\n                                maxDate\n                            \n                            \n                                menu\n                            \n                            \n                                    Private\n                                minDate\n                            \n                            \n                                mouseEvent\n                            \n                            \n                                mouseSubscription\n                            \n                            \n                                    Private\n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onDataPointSelect\n                            \n                            \n                                resetDateRange\n                            \n                            \n                                setDateRange\n                            \n                            \n                                setDateRangeMonths\n                            \n                            \n                                setDateRangeYears\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trendsService: HistoricalTrendsService, observationService: ObservationService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDataPointSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonDataPointSelect(chartEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartEvent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nresetDateRange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRange(form)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeMonths\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeMonths(months)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    months\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeYears\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeYears(years)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    years\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [800, 200]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            patient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\nimport * as moment from 'moment';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { PatientService } from '../../services/patient.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'historicalTrends',\n  templateUrl: './historicalTrends.html'\n})\nexport class HistoricalTrendsComponent {\n  // Width and height of displayed charts.\n  private chartSize: number[] = [800, 200];\n\n  // The minimum and maximum dates for the x-axis of the displayed charts.\n  private minDate: Date = null;\n  private maxDate: Date = null;\n\n  // Reference to the current patient.\n  private patient: Patient;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // Observable subscription to mouse movements.\n  mouseSubscription: any = null;\n\n  // Store the most recent mouse event to keep track of the mouse location.\n  mouseEvent: any = null;\n\n  constructor(\n    private trendsService: HistoricalTrendsService,\n    private observationService: ObservationService,\n    private patientService: PatientService\n  ) {\n      // Track the location of the mouse (needed for context menu).\n      this.mouseSubscription = fromEvent(document, 'mousemove')\n        .subscribe((event) => {\n          this.mouseEvent = event;\n      });\n\n      this.patientService.loadPatient().subscribe(patient => {\n        this.patient = patient;\n      })\n    }\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add option to the context menu shown when clicking data points.\n    this.menu.addOption({\n      'icon': 'glyphicon-list-alt',\n      'text': 'Add to Side Bar',\n      'exec': function(condition) {\n        console.log(\"Add to Side Bar\");\n        // TODO: Implement Add to Side Bar functionality.\n      }.bind(this)\n    });\n  }\n\n  // Set specific (user selected) min and max dates for the x-axis of displayed charts.\n  setDateRange(form) {\n    // Do nothing if one of the dates is invalid.\n    if (!moment(form.minDate).isValid() || !moment(form.maxDate).isValid()) {\n      return;\n    }\n\n    this.minDate = new Date(form.minDate);\n    this.maxDate = new Date(form.maxDate);\n  }\n\n  // Reset the min and max dates for the x-axis of displayed charts (so all data is shown).\n  resetDateRange() {\n    this.minDate = null;\n    this.maxDate = null;\n\n    // Choose the earliest date of all charts, and the latest date of all charts.\n    for (let chart of this.trendsService.charts) {\n      let [chartMinDate, chartMaxDate] = this.trendsService.getDateRange(chart);\n\n      if (this.minDate == null || chartMinDate.getTime()  this.maxDate.getTime()) {\n        this.maxDate = chartMaxDate;\n      }\n    }\n  }\n\n  // Subtracts the given number of years from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeYears(years) {\n    this.minDate = moment().subtract(years, 'years').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Subtracts the given number of months from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeMonths(months) {\n    this.minDate = moment().subtract(months, 'months').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Called when a data point is clicked on a chart.\n  onDataPointSelect(chartEvent) {\n    this.menu.show(null, this.mouseEvent);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n       Dashboard\n      Back\n    \n    \n      \n        \n          Conditions\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Findings List\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Medications\n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Fit All\n    25 Years\n    10 Years\n    5 Years\n    2 Years\n    1 Year\n    6 Months\n    3 Months\n    1 Month\n    \n       Specify\n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n      Specify start and end dates\n        ×\n      \n      \n        \n          \n          \n          Submit\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Dashboard      Back                                Conditions                                                                                                                Findings List                                                                                                                Medications                                                                                                    Fit All    25 Years    10 Years    5 Years    2 Years    1 Year    6 Months    3 Months    1 Month           Specify                                Specify start and end dates        ×                                                  Submit                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HistoricalTrendsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoricalTrendsService.html":{"url":"injectables/HistoricalTrendsService.html","title":"injectable - HistoricalTrendsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoricalTrendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/historicalTrends.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charts\n                            \n                            \n                                chartsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMedicationChart\n                            \n                            \n                                    Public\n                                addObservationChart\n                            \n                            \n                                    Public\n                                getDateRange\n                            \n                            \n                                    Private\n                                getValueRange\n                            \n                            \n                                    Public\n                                removeChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMedicationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMedicationChart(medication: Medication)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addObservationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addObservationChart(chartName, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDateRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDateRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChart(chartName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            charts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Chart } from '../models/chart.model';\nimport { Medication } from '../models/medication.model';\n\n@Injectable()\nexport class HistoricalTrendsService {\n  // Maps the name of a chart to the chart object itself.\n  chartsMap: Map = new Map();\n  \n  // Store all the charts currently being displayed.\n  charts: Array = [];\n\n  constructor() { }\n\n  // Add a new chart displaying a specific observation in the trends tool.\n  public addObservationChart(chartName, data) {\n    // A chart already exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      return;\n    }\n\n    if (data == null || data.length == 0) {\n      // Avoid creating an empty chart.\n      return;\n    }\n\n    let chart = new Chart();\n\n    // Get the title associated with the data point.\n    chart.title = data[0].code['text'];\n\n    for (let point of data) {\n      // Skip data points without a numeric value.\n      if (!point.valueQuantity || !point.valueQuantity['value']) {\n        continue;\n      }\n\n      // Add the data point to the chart.\n      chart.data.push({\n        name: new Date(point.relativeDateTime),\n        value: point.valueQuantity['value']\n      });\n    }\n\n    // Sort data points in order of date of occurrence.\n    chart.data = chart.data.sort((p1, p2) => p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    // Set the min and max y-axis values for the chart, providing a small buffer\n    // of extra space.\n    let [min, max] = this.getValueRange(chart);\n    let buffer = (max - min) * 0.2;\n\n    chart.yScaleMin = min - buffer;\n    chart.yScaleMax = max + buffer;\n\n    // Add the normal range values for the chart (displayed as horizontal \"reference\" lines).\n    chart.normalValues = [\n      {\n        name: \"Low\",\n        value: min // TODO: These shouldn't be hardcoded.\n      },\n      {\n        name: \"High\",\n        value: max // TODO: These shouldn't be hardcoded.\n      }\n    ];\n\n    // Add the newly created chart to the list of charts.\n    this.chartsMap.set(chartName, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  public addMedicationChart(medication: Medication) {\n    // A chart already exists for the given medication.\n    if (this.chartsMap.has(medication.name)) {\n      return;\n    }\n\n    let chart = new Chart();\n    chart.title = medication.name + ' (' + medication.dosageUnits + ')';\n\n    // Add every period the medication was taken to the chart.\n    for (let i = 0; i  0 ? medication.periods[i - 1] : null;\n      let next = i  p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    this.chartsMap.set(medication.name, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  // Remove the chart with the given name from the trends tool.\n  public removeChart(chartName) {\n    // First check if a chart exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      this.chartsMap.delete(chartName);\n      this.charts = Array.from(this.chartsMap.values());\n    }\n  }\n\n  // Get the smallest and largest values from a given chart.\n  private getValueRange(chart: Chart) {\n    // If the data provided is empty, return [0, 0].\n    if (!chart.data || chart.data.length == 0) {\n      return [0, 0];\n    }\n\n    let min = chart.data[0].value;\n    let max = chart.data[0].value;\n\n    for (let point of chart.data) {\n      min = Math.min(min, point.value);\n      max = Math.max(max, point.value);\n    }\n\n    return [min, max];\n  }\n\n  // Get the earliest and latest dates associated with any point in a chart.\n  public getDateRange(chart: Chart) {\n    // If the data provided is empty, return today's date.\n    if (!chart.data || chart.data.length == 0) {\n      return [new Date(), new Date()];\n    }\n    \n    let minDate: Date = chart.data[0].name;\n    let maxDate: Date = chart.data[0].name;\n\n    for (let point of chart.data) {\n      if (point.name.getTime()  maxDate.getTime()) {\n        maxDate = point.name;\n      }\n    }\n\n    return [minDate, maxDate];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        High-level component that wraps the components showing \npatient information, the toolbar, the timeline, and the \ntriple list (conditions, observations, and care plans).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectPatientById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, patientService: PatientService, cookieService: CookieService, smartService: SmartService, compiler: Compiler)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartService\n                                                  \n                                                        \n                                                                        SmartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compiler\n                                                  \n                                                        \n                                                                        Compiler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectPatientById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectPatientById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:50\n                \n            \n\n\n            \n                \n                    Select a patient to display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the selected patient.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                        The patient that is being displayed. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Compiler } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { PatientService } from '../../services/patient.service';\nimport { SmartService } from '../../services/smart.service';\nimport { FhirService } from '../../services/fhir.service';\n\nimport { Patient } from '../../models/patient.model';\n\n/**\n * High-level component that wraps the components showing \n * patient information, the toolbar, the timeline, and the \n * triple list (conditions, observations, and care plans).\n */\n@Component({\n    selector: 'home',\n    templateUrl: './home.html'\n})\nexport class HomeComponent {\n    /** The patient that is being displayed. */\n    selected: Patient = null;\n\n    constructor(\n        private fhirService: FhirService,\n        private patientService: PatientService,\n        private cookieService: CookieService,\n        private smartService: SmartService,\n        private compiler: Compiler\n    ) {\n        this.compiler.clearCache();\n        this.fhirService.setUrl(this.cookieService.get('fhirBaseUrl'));\n\n        // Retrieve patient data from sandbox.\n        if (this.fhirService.token) {\n            // Access token is already available.\n            this.selectPatientById(this.patientService.patientId);\n        } else {\n            // Retrieve the access token and patient.\n            this.smartService.authenticate().subscribe(data => {\n                this.fhirService.setToken(data['access_token']);\n                this.selectPatientById(data['patient']);\n            });\n        }\n    }\n\n    /**\n     * Select a patient to display.\n     * @param id The id of the selected patient.\n     */\n    public selectPatientById(id: string) {\n        this.patientService.setPatientId(id);\n        this.patientService.loadPatient().subscribe(patient => {\n            this.selected = patient;\n        });\n    }\n}\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoverBoxComponent.html":{"url":"components/HoverBoxComponent.html","title":"component - HoverBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HoverBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hoverBox/hoverBox.component.ts\n\n\n    \n        Description\n    \n    \n        A component for displaying a hover box containing \ncustom information. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hoverBox\n            \n\n\n\n\n            \n                templateUrl\n                ./hoverBox.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DISPLAY_DELAY\n                            \n                            \n                                items\n                            \n                            \n                                left\n                            \n                            \n                                leftOffset\n                            \n                            \n                                timeoutHandle\n                            \n                            \n                                top\n                            \n                            \n                                topOffset\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                isDate\n                            \n                            \n                                    Private\n                                isMonth\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hoverBox/hoverBox.component.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:69\n                \n            \n\n\n            \n                \n                    Hide the hover box.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDate(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:89\n                \n            \n\n\n            \n                \n                    Check whether x is a date to display it in a custom \nformat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isMonth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMonth(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:97\n                \n            \n\n\n            \n                \n                    Check whether x is a month to display it in a custom \nformat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(items: Array, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:37\n                \n            \n\n\n            \n                \n                    Show the hover box with multiple items.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The items to display in the hover box.\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered showing the hover box.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISPLAY_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:27\n                            \n                        \n\n                \n                    \n                        Time (in ms) following a hover before the hover box appears. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:13\n                            \n                        \n\n                \n                    \n                        The data passed into the hover box from wherever it was triggered. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeoutHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:24\n                            \n                        \n\n                \n                    \n                        Used to track whether the hover box is waiting to be shown. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:16\n                            \n                        \n\n                \n                    \n                        Whether the hover box is currently visible or not. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable } from '@angular/core';\n\n/**\n * A component for displaying a hover box containing \n * custom information. \n */\n@Component({\n  selector: 'hoverBox',\n  templateUrl: './hoverBox.html'\n})\nexport class HoverBoxComponent {\n  /** The data passed into the hover box from wherever it was triggered. */\n  items: Array = null;\n\n  /** Whether the hover box is currently visible or not. */\n  visible: boolean = false;\n\n  top: string = '0px';\n  left: string = '0px';\n  topOffset: number = 18;\n  leftOffset: number = 18;\n\n  /** Used to track whether the hover box is waiting to be shown. */\n  timeoutHandle: any = null;\n\n  /** Time (in ms) following a hover before the hover box appears. */\n  DISPLAY_DELAY: number = 200;\n\n  constructor() { }\n\n  /**\n   * Show the hover box with multiple items.\n   * \n   * @param items The items to display in the hover box.\n   * @param event The click event that triggered showing the hover box.\n   */\n  public show(items: Array, event) {\n    // The hover box is already queued to display, no need to display again.\n    if (this.timeoutHandle != null) {\n      return;\n    }\n\n    this.timeoutHandle = setTimeout(() => {\n      this.items = items;\n\n      // Set the location of the hover box to where the mouse is.\n      var topOffset = 0;\n      var leftOffset = 0;\n      // Code used to test moving the hover box away from the edge of the screen. \n      // TODO: do not hardcode pixels, find information of the pixel box\n       \n      if (window.innerWidth - event.pageX \n    \n\n    \n        \n\n  \n    \n      \n        {{item}}\n        &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;\n        \n      \n      {{item}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item}}                                         {{item}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HoverBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HumanizeBytesPipe.html":{"url":"pipes/HumanizeBytesPipe.html","title":"pipe - HumanizeBytesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HumanizeBytesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/humanizeBytes.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        humanizeBytes\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doIt\n                        \n                        \n                    \n                \n            \n            \n                \ndoIt(n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, args: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'humanizeBytes'\n})\nexport class HumanizeBytesPipe implements PipeTransform {\n\n    transform(value: string, args: string[]) {\n        return this.doIt(parseInt(value));\n    }\n\n    doIt(n): string {\n        if (n  (1 / Math.pow(1024, exp - 1))) ? result.toFixed(2) : result.toFixed(0);\n        return readable + si[exp - 1];\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingAnimation.html":{"url":"components/LoadingAnimation.html","title":"component - LoadingAnimation","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loadingAnimation/loadingAnimation.component.ts\n\n\n    \n        Description\n    \n    \n        A simple component displaying a loading animation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loadingAnimation\n            \n\n\n\n\n            \n                templateUrl\n                ./loadingAnimation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loadingAnimation/loadingAnimation.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A simple component displaying a loading animation.\n */\n@Component({\n  selector: 'loadingAnimation',\n  templateUrl: './loadingAnimation.html'\n})\nexport class LoadingAnimation {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingAnimation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/map.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                STATIC_MAPPINGS\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            STATIC_MAPPINGS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapService {\n    public static STATIC_MAPPINGS = {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medication.html":{"url":"classes/Medication.html","title":"class - Medication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/medication.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dosageUnits\n                            \n                            \n                                name\n                            \n                            \n                                periods\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, dosageUnits: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/medication.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dosageUnits\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dosageUnits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Medication {\n    name: string;\n    dosageUnits: string;\n\n    periods: {\n        start: Date;\n        end: Date;\n        dosage: number;\n    }[];\n    \n    constructor(name: string, dosageUnits: string) {\n        this.periods = [];\n        this.name = name;\n        this.dosageUnits = dosageUnits;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MedicationsComponent.html":{"url":"components/MedicationsComponent.html","title":"component - MedicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MedicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/medications/medications.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                medications\n            \n\n\n\n\n            \n                templateUrl\n                ./medications.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                medications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carePlanService: CarePlanService, historicalTrendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historicalTrendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck(medication: Medication, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Medication } from '../../models/medication.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'medications',\n  templateUrl: './medications.html'\n})\nexport class MedicationsComponent {\n  medications: Array;\n  @Input() patient: Patient;\n\n  constructor(\n    private carePlanService: CarePlanService,\n    private historicalTrendsService: HistoricalTrendsService\n  ) { }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.carePlanService.loadMedications(this.patient).subscribe(medications => {\n        this.medications = medications;\n        console.log('Loaded ' + this.medications.length + ' medications.');\n      })\n    }\n  }\n\n  check(medication: Medication, event: any) {\n    // Check whether care plan was checked or unchecked.\n    if (event.target.checked) {\n      this.historicalTrendsService.addMedicationChart(medication);\n    } else {\n      this.historicalTrendsService.removeChart(medication.name);\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    \n      \n      Name\n    \n  \n  \n     \n      \n        \n      \n      {{m.name}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Name                                       {{m.name}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'MedicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox1.html":{"url":"components/NormalBox1.html","title":"component - NormalBox1","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-1.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-1\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-1.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-1.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-1\",\n\ttemplateUrl: \"./normal-box-1.html\"\n})\n\nexport class NormalBox1{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox2.html":{"url":"components/NormalBox2.html","title":"component - NormalBox2","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-2.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-2\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-2.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-2.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-2\",\n\ttemplateUrl: \"./normal-box-2.html\"\n})\n\nexport class NormalBox2{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Observation.html":{"url":"classes/Observation.html","title":"class - Observation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Observation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/observation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                grouping\n                            \n                            \n                                id\n                            \n                            \n                                referenceRange\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCode\n                            \n                            \n                                    Static\n                                getText\n                            \n                            \n                                    Static\n                                getUnits\n                            \n                            \n                                    Static\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnits(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Observation implements Associable {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\trelativeDateTime: string;\n\tcategory: Array;\n\tcode: Array;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n\n\t// This should be populated with the normal ranges, but isn't for whatever reason.\n\treferenceRange: Object;\n\tgrouping: string;\n\n\t// Get the value of an observation\n\tstatic getValue(o: Observation) {\n\t\treturn o['valueQuantity']['value'];\n\t}\n\n\t// Get the units for an observation\n\tstatic getUnits(o: Observation) {\n\t\treturn o['valueQuantity']['unit'];\n\t}\n\n\t// Get the text for an observation\n\tstatic getText(o: Observation) {\n\t\t// If the text is empty, use the display.\n\t\treturn o['code']['text'] || o['code']['coding'][0]['display'];\n\t}\n\n\tgetCode() {\n\t\treturn this['code']['coding'][0]['code'];\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursiveChart.html":{"url":"components/ObservationRecursiveChart.html","title":"component - ObservationRecursiveChart","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursiveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursionChart\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(changedObs: any, event, position: number, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changedObs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationRecursionChart',\n  templateUrl: './observationsChart.html'\n})\nexport class ObservationRecursiveChart {\n  @Input() obs: Array;\n  @Input() level: number;\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n    private trendsService: HistoricalTrendsService) { }\n\n  getData(): Array {\n    return this.obs;\n  }\n\n  getLevel(): number {\n    return this.level;\n  }\n\n  // Called when an observation is either checked or unchecked.\n  checked(changedObs: any, event, position: number, data) {\n    changedObs.isSelected = !changedObs.isSelected;\n\n    if (event.shiftKey) {\n      let upper: number, lower: number;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursiveChart'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObservationService.html":{"url":"injectables/ObservationService.html","title":"injectable - ObservationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/observation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categorizedObservations\n                            \n                            \n                                count\n                            \n                            \n                                filterSet\n                            \n                            \n                                groupMap\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                uniqueObservations\n                            \n                            \n                                uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCategoriesObservations\n                            \n                            \n                                extractNewObservations\n                            \n                            \n                                getCheckedObservations\n                            \n                            \n                                getGrouping\n                            \n                            \n                                getScratchPadObservations\n                            \n                            \n                                handleObservationBundle\n                            \n                            \n                                loadObservationsPage\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                populateCategories\n                            \n                            \n                                scaleDates\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCategoriesObservations\n                        \n                        \n                    \n                \n            \n            \n                \naddCategoriesObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractNewObservations\n                        \n                        \n                    \n                \n            \n            \n                \nextractNewObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrouping\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrouping(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:206\n                \n            \n\n\n            \n                \n                    Given a certain observation ID, returns the position mapping of that\n ID contained within the groupMap\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleObservationBundle\n                        \n                        \n                    \n                \n            \n            \n                \nhandleObservationBundle(bundle: Bundle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bundle\n                                    \n                                                Bundle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadObservationsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadObservationsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateCategories\n                        \n                        \n                    \n                \n            \n            \n                \npopulateCategories(categories: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDates\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categorizedObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as moment from 'moment';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Observation } from '../models/observation.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class ObservationService {\n  uniqueObservations: Array = [];\n  categorizedObservations: any;\n  groupMap: { [x: string]: Array };\n  count = 0;\n  observations: Array = [];\n  selected: Array = [];\n  uniqueObservationsLoadFinished = false;\n\n  filterSet = new Set();\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient,\n    private scratchPadService: ScratchPadService\n  ) {\n    // these are the codes of the observations; \n    // groupList is used to categorize where in categorizedObservations this is stored\n    this.groupMap = {\n      \"1-1\": [\"8302-2\", \"3141-9\", \"2710-2\"],\n      \"1-2\": [],\n      \"1-3\": [],\n      \"1-4\": [\"39156-5\", \"8310-5\"],\n      \"1-5\": [],\n      \"2-1\": [\"2571-8\"],\n      \"2-2-1\": [\"789-8\", \"3094-0\", \"72166-2\"],\n      \"2-2-2\": [],\n      \"2-2-3\": [\"2823-3\"]\n    };\n\n    // categories of the observations; found using groupList\n    this.categorizedObservations = {\n      \"categories\": [\n        {\n          \"display\": \"Vitals\",\n          \"id\": \"1\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Weight\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-1\"\n            },\n            {\n              \"display\": \"Blood Pressure\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-2\"\n            },\n            {\n              \"display\": \"Heart Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-3\"\n            },\n            {\n              \"display\": \"Respiration Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-4\"\n            },\n            {\n              \"display\": \"Temperature\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-5\"\n            }\n          ]\n        },\n\n        {\n          \"display\": \"Patient History / Review of Systems\",\n          \"id\": \"2\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Constitutional Symptoms\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"2-1\"\n            },\n            {\n              \"display\": \"Body Systems\",\n              \"count\": 0,\n              \"id\": \"2-2\",\n              \"child\": [\n                {\n                  \"display\": \"Eyes\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-1\"\n                },\n                {\n                  \"display\": \"Ears, Nose, Mouth and Throat (ENT)\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-2\"\n                },\n                {\n                  \"display\": \"Cardiovascular\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-3\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"display\": \"Other\",\n          \"id\": \"3\",\n          \"count\": 0,\n          \"data\": []\n        }\n      ]\n    };\n  }\n\n  loadObservationsPage(url: string): void {\n    this.http.get(url, this.fhirService.getRequestOptions())\n      .subscribe((bundle) => {\n        this.handleObservationBundle(bundle);\n      });\n  }\n\n  handleObservationBundle(bundle: Bundle): void {\n    if (bundle) {\n      let nextObservations = >bundle.entry.map(e => e.resource);\n      this.observations = this.observations.concat(nextObservations);\n      this.extractNewObservations(nextObservations);\n\n      let nextLink = bundle.link.find(link => link.relation == 'next');\n      if (nextLink) {\n        this.loadObservationsPage(nextLink.url);\n      } else {\n        this.onLoadComplete();\n      }\n    } else {\n      console.log(\"No observations for patient.\");\n      this.observations = new Array();\n    }\n  }\n\n  onLoadComplete() {\n    this.observations = this.observations.reverse();\n    console.log(\"Loaded \" + this.uniqueObservations.length + \" observations.\");\n    this.uniqueObservationsLoadFinished = true;\n\n    this.observations.sort((n1, n2) => {\n      return n1.effectiveDateTime  this.scratchPadService.checkedMapObservations.get(o));\n  }\n\n  scaleDates(): void {\n    let RECENCY_MULTIPLIER = 0.80;\n    let timeSinceObservation = new Date().getTime() - new Date(this.observations[0].effectiveDateTime).getTime();\n    let scaledTimeSinceObservation = Math.floor(RECENCY_MULTIPLIER * timeSinceObservation);\n\n    for (let ob of this.observations) {\n      let relativeDateTime = new Date(ob.effectiveDateTime).getTime() + scaledTimeSinceObservation;\n      ob.relativeDateTime = moment(relativeDateTime).toISOString();\n    }\n  }\n\n  extractNewObservations(observations: Array): void {\n    for (let observation of observations) {\n      let code: string = observation['code']['coding'][0]['code'];\n      if (!this.filterSet.has(code)) {\n        observation.grouping = this.getGrouping(code);\n        this.uniqueObservations.push(observation);\n\n        this.filterSet.add(code);\n      }\n    }\n  }\n\n  /**\n  * Given a certain observation ID, returns the position mapping of that\n   * ID contained within the groupMap\n   */\n  getGrouping(code: string): string {\n    for (let x in this.groupMap) {\n      if (this.groupMap[x].indexOf(code) !== -1) {\n        return x;\n      }\n    }\n\n    let OTHER_GROUPING = '3';\n    return OTHER_GROUPING;\n  }\n\n  populateCategories(categories: Array): number {\n    let totalCount = 0;\n    for (let i = 0; i ): Array {\n    let observationsByCategory: { [x: string]: Array } = {};\n\n    for (let observation of observations) {\n      if (observation.hasOwnProperty('valueQuantity') && observation.hasOwnProperty('category')) {\n        let observationCategory = observation.category[0].text;\n\n        if (!observationsByCategory.hasOwnProperty(observationCategory)) {\n          observationsByCategory[observationCategory] = [];\n        }\n        observationsByCategory[observationCategory].push(observation);\n      }\n    }\n\n    let reconstructedObject: Array = [];\n    for (let ctgry of Object.keys(observationsByCategory)) {\n      reconstructedObject.push({\n        category: ctgry,\n        subheadings: false,\n        subs: null,\n        data: observationsByCategory[ctgry]\n      });\n    }\n\n    return reconstructedObject;\n  }\n\n  // ====================== SCRATCH PAD FUNCTIONALITY =============================\n\n  getScratchPadObservations() {\n    return this.scratchPadService.getObservations();\n  }\n\n  // OVERRIDDEN FROM BASECOLUMN:\n  showDefault() {\n\n  }\n\n  showScratchPad() {\n    console.log(this.getScratchPadObservations());\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsComponent.html":{"url":"components/ObservationsComponent.html","title":"component - ObservationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observations/observations.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observations\n            \n\n\n\n\n            \n                templateUrl\n                ./observations.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mappings\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                test\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, observationService: ObservationService, mapService: MapService, doctorService: DoctorService, trendsService: HistoricalTrendsService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observations/observations.component.ts:60\n                \n            \n\n\n            \n                \n                    Description: This method is called whenever the patient data is passed as input to the application. Handles\nthe initial subscription to the observation service and continual loading of the data links.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:26\n\n                \n            \n\n\n            \n                \n                    Update the height of the column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:33\n\n                \n            \n\n\n            \n                \n                    Show default view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:38\n\n                \n            \n\n\n            \n                \n                    Show scratch pad view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:43\n\n                \n            \n\n\n            \n                \n                    Update the service. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n                \n                    \n                        For column switching \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:46\n\n                            \n                        \n\n                \n                    \n                        The current height (in pixels) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:52\n\n                            \n                        \n\n                \n                    \n                        The current state (ie, scratch pad) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:49\n\n                            \n                        \n\n                \n                    \n                        220px is an approximate value that seems to work for now. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ObservationService } from '../../services/observation.service';\nimport { MapService } from '../../services/map.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Observation } from '../../models/observation.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'observations',\n  templateUrl: './observations.html'\n})\nexport class ObservationsComponent extends BaseColumn{\n  selected: Observation;\n  test: Observation;\n  observations: Array = [];\n\n  @Input() patient: Patient;\n  //@Output() observationReturned: EventEmitter> = new EventEmitter();\n\n  mappings: { [key: string]: Array } = {};\n\n  /** For column switching */\n  subscription: Subscription;\n\n  constructor(\n    private fhirService: FhirService,\n    private observationService: ObservationService,\n    private mapService: MapService,\n    private doctorService: DoctorService,\n    private trendsService: HistoricalTrendsService,\n    private scratchPadService: ScratchPadService\n  ) {\n      super();\n      this.mappings = MapService.STATIC_MAPPINGS;\n\n      // subscribe to scratch pad service for column switching\n      this.subscription = scratchPadService.stateChange$.subscribe(\n        sPad => {\n          if (sPad)\n            this.columnState = \"scratchpad\";\n          else\n            this.columnState = \"default\";\n        }\n      );\n  }\n\n  // ===================== FOR DATA RETRIEVAL FROM OBSERVATIONS SERVICE ============\n\n  /**\n   * Description: This method is called whenever the patient data is passed as input to the application. Handles\n   * the initial subscription to the observation service and continual loading of the data links.\n   **/\n  ngOnChanges() {\n    if (this.patient) { //If the patient is loaded\n      let url = this.fhirService.getUrl() + \"/Observation?patient=\" + this.patient.id;\n      this.observationService.loadObservationsPage(url);    \n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Observations\n      \n        \n      \n    \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Observations                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsDisplay.html":{"url":"components/ObservationsDisplay.html","title":"component - ObservationsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationsDisplay/observationsDisplay.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying observations within \nthe observations list of the triple list.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                Observation\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllObservations\n                            \n                            \n                                checkObservation\n                            \n                            \n                                expand\n                            \n                            \n                                isObservationAssociated\n                            \n                            \n                                isObservationChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectObservation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                observationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        observations\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:43\n                            \n                        \n                \n                    \n                        The array of observations to be displayed.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        observationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:48\n                            \n                        \n                \n                    \n                        Emit an event whenever an observation is selected.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllObservations\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllObservations(checked)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:129\n                \n            \n\n\n            \n                \n                    Either check or uncheck all observations.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    checked\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to check or uncheck.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkObservation\n                        \n                        \n                    \n                \n            \n            \n                \ncheckObservation(checked: boolean, checkedObservation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:121\n                \n            \n\n\n            \n                \n                    Change the state of an observation to either checked or unchecked.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to set to checked or unchecked.\n\n                                    \n                                \n                                \n                                    checkedObservation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The observation to adjust the state of.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationAssociated(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:140\n                \n            \n\n\n            \n                \n                    Determine whether an observation is currently associated,\nbased on the associations tool.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationChecked(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:112\n                \n            \n\n\n            \n                \n                    Determine whether an observation is currently checked.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:61\n                \n            \n\n\n            \n                \n                    Setup the context menu with options. We can only access the view child after \nthe view has been initialized.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectObservation\n                        \n                        \n                    \n                \n            \n            \n                \nselectObservation(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:100\n                \n            \n\n\n            \n                \n                    Handle the selection of an observation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The selected observation.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:38\n                            \n                        \n\n                \n                    \n                        Whether the checkbox for checking all observations are currently checked.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Observation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Observation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:28\n                            \n                        \n\n                \n                    \n                        Trick to allow access to static methods of Observation class in pug template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:33\n                            \n                        \n\n                \n                    \n                        The currently selected observation in the list.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Observation } from '../../models/observation.model';\n\n/**\n * Component for displaying observations within \n * the observations list of the triple list.\n */\n@Component({\n  selector: 'observationsDisplay',\n  templateUrl: './observationsDisplay.html'\n})\nexport class ObservationsDisplay {\n  /**\n   * Trick to allow access to static methods of Observation class in pug template\n   */\n  Observation = Observation;\n\n  /**\n   * The currently selected observation in the list.\n   */\n  selected: Observation;\n\n  /**\n   * Whether the checkbox for checking all observations are currently checked.\n   */\n  isAllChecked : boolean = false;\n\n  /**\n   * The array of observations to be displayed.\n   */\n  @Input() observations: Array;\n  \n  /**\n   * Emit an event whenever an observation is selected.\n   */\n  @Output() observationSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  constructor(\n    private associationService: AssociationService, \n    private scratchPadService: ScratchPadService\n  ) { }\n\n  /**\n   * Setup the context menu with options. We can only access the view child after \n   * the view has been initialized.\n   */\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n    \n    // Add options to the context menu shown when right clicking observations.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': (obs => {\n        // Add every checked observation to the scratch pad\n        this.scratchPadService.checkedMapObservations.forEach((isChecked, observation) => {\n          if (isChecked) {\n            this.scratchPadService.addObservation(observation);\n          }\n        });\n      }).bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': (obs => {\n        console.log(obs);\n      }).bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': (obs => {\n        console.log(obs);\n      }).bind(this)\n    });\n  }\n\n  /**\n   * Handle the selection of an observation.\n   * @param observation The selected observation.\n   */\n  selectObservation(observation: Observation) {\n    this.selected = observation;\n    this.observationSelected.emit(this.selected);\n\n    for (let o of this.scratchPadService.totalObservations) {\n      o['selected'] = (o.id == this.selected.id);\n    }\n  }\n\n  /**\n   * Determine whether an observation is currently checked.\n   */\n  isObservationChecked(observation: Observation): boolean {\n    return this.scratchPadService.checkedMapObservations.get(observation) || false;\n  }\n\n  /**\n   * Change the state of an observation to either checked or unchecked.\n   * @param checked Whether to set to checked or unchecked.\n   * @param checkedObservation The observation to adjust the state of.\n   */\n  checkObservation(checked: boolean, checkedObservation: Observation) {\n    this.scratchPadService.checkObservation(checked, checkedObservation);\n  }\n  \n  /**\n   * Either check or uncheck all observations.\n   * @param checked Whether to check or uncheck.\n   */\n  checkAllObservations(checked){\n    this.isAllChecked = checked;\n    for (let c of this.observations){\n      this.scratchPadService.checkObservation(checked, c);\n    }\n  }\n\n  /**\n   * Determine whether an observation is currently associated,\n   * based on the associations tool.\n   */\n  isObservationAssociated(observation: Observation): boolean {\n    return this.associationService.associatedMapObservations.get(observation) || false;\n  }\n\n  expand(parent: string) {\n    /**\n    for (let c of this.conditions) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        Observation\n        Value\n        Unit\n        Onset\n      \n    \n    \n      \n        \n          \n        \n        \n          \n            ...\n          \n          {{Observation.getText(o)}}\n          \n        \n        {{Observation.getValue(o)}}\n        {{Observation.getUnits(o)}}\n        {{o.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Observation        Value        Unit        Onset                                                                            ...                    {{Observation.getText(o)}}                          {{Observation.getValue(o)}}        {{Observation.getUnits(o)}}        {{o.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Patient.html":{"url":"classes/Patient.html","title":"class - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/patient.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                address\n                            \n                            \n                                birthDate\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                identifier\n                            \n                            \n                                mrn\n                            \n                            \n                                name\n                            \n                            \n                                telecom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telecom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Patient {\n\n    active: boolean;\n    id: string;\n    birthDate: string;\n    gender: string;\n    address: Array;\n    identifier: Array;\n    name: Array;\n    telecom: Array;\n    mrn: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientComponent.html":{"url":"components/PatientComponent.html","title":"component - PatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/patient/patient.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                patient\n            \n\n\n\n\n            \n                templateUrl\n                ./patient.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                advancedSearch\n                            \n                            \n                                allergies\n                            \n                            \n                                allergy\n                            \n                            \n                                graphConfig\n                            \n                            \n                                hover\n                            \n                            \n                                hoverStyling\n                            \n                            \n                                reason\n                            \n                            \n                                selectedCondition\n                            \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                genderString\n                            \n                            \n                                    Private\n                                loadAllergies\n                            \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectCondition\n                            \n                            \n                                showAllergyHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, doctorService: DoctorService, homeComponent: HomeComponent, conditionService: ConditionService, encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        homeComponent\n                                                  \n                                                        \n                                                                        HomeComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genderString\n                        \n                        \n                    \n                \n            \n            \n                \ngenderString(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllergies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAllergyHover\n                        \n                        \n                    \n                \n            \n            \n                \nshowAllergyHover(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            advancedSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hover', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverStyling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Server\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input, Output, ViewChild } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { EncounterService } from '../../services/encounter.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { HomeComponent } from '../../components/home/home.component';\nimport { HoverBoxComponent } from '../hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\nimport { Server } from '../../models/server.model';\nimport { Condition } from '../../models/condition.model';\n\n@Injectable()\n@Component({\n  selector: 'patient',\n  templateUrl: './patient.html'\n})\nexport class PatientComponent {\n  @Input() patient: Patient;\n  server: Server;\n  selectedCondition: Condition;\n  advancedSearch = false;\n  graphConfig: any;\n\n  //allergy details\n  allergies: Array = [];\n  allergy: string = '';\n  hoverStyling: boolean = false;\n  reason: string = '';\n\n  @ViewChild('hover', { static: false }) hover: HoverBoxComponent;\n\n  constructor(\n    private cookieService: CookieService,\n    private doctorService: DoctorService,\n    private homeComponent: HomeComponent,\n    private conditionService: ConditionService,\n    private encounterService: EncounterService\n  ) {\n    this.graphConfig = JSON.parse(this.cookieService.get('graphConfig') || '{}');\n  }\n\n  genderString(patient: Patient) {\n    var s = 'Unknown';\n    switch (patient.gender) {\n      case 'female':\n        s = 'Female';\n        break;\n      case 'male':\n        s = 'Male';\n        break;\n    }\n    return s;\n  }\n\n  selectCondition(condition) {\n    this.selectedCondition = condition;\n  }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.loadAllergies();\n      this.loadEncounters();\n    }\n  }\n\n  private loadAllergies(): void {\n    this.conditionService.loadAllergies(this.patient).subscribe(allergies => {\n      if (allergies) {\n        //add allergy strings to allergies\n        this.allergies = allergies.map(allergy => allergy.code.text);\n\n        // Construct displayed allergy string\n        if (this.allergies.length == 0) {\n          this.allergy = \"None\";\n        } else if (this.allergies.length == 1) {\n          this.allergy = this.allergies[0];\n        } else {\n          this.allergy = \"Multiple...\";\n          this.hoverStyling = true;\n        }\n      }\n      else { //no allergies\n        this.allergy = \"None\";\n      }\n    });\n  }\n\n  private loadEncounters(): void {\n    // TODO: Display the reason for visit retrieved here onto the page.\n    this.encounterService.loadEncounters(this.patient).subscribe(res => {\n      // Cast the array of encounters to the proper model (Encounter).\n      let encounters = >res;\n\n      for (let enc of encounters) {\n        let reasonText = enc.getReason();\n\n        // Only print if reasonText is not null.\n        if (reasonText) {\n          this.reason = reasonText;\n        }\n      }\n    });\n  }\n\n  showAllergyHover(event) {\n    // Don't show hover box if there is only one allergy.\n    if (this.allergies.length > 1) {\n      this.hover.show(this.allergies, event);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n        \n          {{patient.name[0].given[0]}}&nbsp;{{patient.name[0].family[0]}}\n            \n               {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}}, \n            DOB: {{patient.birthDate | amDateFormat:'MM/DD/YYYY'}} ({{-1 * (patient.birthDate | amDifference:today:'years':false)}}yr)\n\t\t  \n        \n  \n  \n    \n        \n          \n            \n\t\t\t\tAllergies:\n              {{allergy}}\n            \n            Reason for Visit: {{reason}}\n          \n        \n  \n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{patient.name[0].given[0]}} {{patient.name[0].family[0]}}                           {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}},             DOB: {{patient.birthDate | amDateFormat:\\'MM/DD/YYYY\\'}} ({{-1 * (patient.birthDate | amDifference:today:\\'years\\':false)}}yr)\t\t                                                \t\t\t\tAllergies:              {{allergy}}                        Reason for Visit: {{reason}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                            \n                                    Public\n                                patientId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPatient\n                            \n                            \n                                setPatientId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPatient\n                        \n                        \n                    \n                \n            \n            \n                \nloadPatient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPatientId\n                        \n                        \n                    \n                \n            \n            \n                \nsetPatientId(patientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Patient'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { Patient } from '../models/patient.model';\n\n@Injectable()\nexport class PatientService {\n  private readonly path = '/Patient';\n\n  // The id of the currently set patient\n  public patientId: string;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  // Set the id of the patient\n  setPatientId(patientId) {\n    this.patientId = patientId;\n  }\n\n  // Retrieve the patient with the id previously set using setPatientId()\n  loadPatient(): Observable {\n    var url = this.fhirService.getUrl() + this.path + '/' + this.patientId;\n    let options = this.fhirService.getRequestOptions(true);\n\n    return this.http.get(url, options).pipe(map(res => {\n      let patient = res;\n\n      // Assign patient MRN\n      for (let id of res['identifier']) {\n        if (id.type && id.type.coding[0].code == \"MR\") {\n          patient.mrn = id.value;\n        }\n      }\n      return patient;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScratchPadUpdate.html":{"url":"components/ScratchPadUpdate.html","title":"component - ScratchPadUpdate","body":"\n                   \n\n\n\n\n\n  Components\n  ScratchPadUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/scrachpad-update.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scratchpad-update\n            \n\n\n\n\n            \n                templateUrl\n                ./scrachpad-update.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                onset\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                onRadioChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRadioChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonRadioChanged(currStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"scratchpad-update\",\n\ttemplateUrl: \"./scrachpad-update.html\"\n})\n\nexport class ScratchPadUpdate{\n\t@Input() inputData: any;\n\t\n\tdescription: string;\n\tstatus: string;\n\tonset: string;\n\t\n\tgetData(): any {\t\t\n\t\treturn {id: this.inputData.id, data: {description: this.description, status: this.status}};\n\t}\n\t\n\tonRadioChanged(currStatus: string): void {\n\t\tconsole.log(\"changing!!!\");\n\t\tthis.status = currStatus;\n\t}\n}\n    \n\n    \n        \n\n  {{inputData.data.name}} : {{inputData.data.status}}\n  \n    \n      \n    \n    \n      \n        \n          Active\n        \n        \n          Inactive\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{inputData.data.name}} : {{inputData.data.status}}                                            Active                          Inactive                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScratchPadUpdate'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectListSingle.html":{"url":"components/SelectListSingle.html","title":"component - SelectListSingle","body":"\n                   \n\n\n\n\n\n  Components\n  SelectListSingle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/select-list-single.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                select-list-single\n            \n\n\n\n\n            \n                templateUrl\n                ./select-list-single.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/select-list-single.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"select-list-single\",\n\ttemplateUrl: \"./select-list-single.html\"\n})\n\nexport class SelectListSingle{\n\t@Input() inputData: any;\n\tlistData: String;\n\t\n\tgetData(): any {\n\t\tif (this.listData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.listData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n     {{entry.description}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}            {{entry.description}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectListSingle'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Server.html":{"url":"classes/Server.html","title":"class - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/server.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/server.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Server {\n\t// name: String;\n    // url: String;\n\tconstructor(public name: string, public url: string) {\n\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartService.html":{"url":"injectables/SmartService.html","title":"injectable - SmartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SmartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aud\n                            \n                            \n                                authorizeUrl\n                            \n                            \n                                    Readonly\n                                clientId\n                            \n                            \n                                fhirBaseUrl\n                            \n                            \n                                launch\n                            \n                            \n                                    Readonly\n                                redirectUri\n                            \n                            \n                                    Readonly\n                                scope\n                            \n                            \n                                state\n                            \n                            \n                                tokenUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                findGetParameter\n                            \n                            \n                                getToken\n                            \n                            \n                                requestAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService, fhirService: FhirService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smart.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findGetParameter\n                        \n                        \n                    \n                \n            \n            \n                \nfindGetParameter(parameterName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameterName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestAuth\n                        \n                        \n                    \n                \n            \n            \n                \nrequestAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aud\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorizeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"2c304df8-711d-4de9-afbe-330c01a5ca8e\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fhirBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            launch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            redirectUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:9000\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"launch patient/*.* openid profile\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FhirService } from '../services/fhir.service';\nimport { PatientService } from '../services/patient.service';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class SmartService {\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private fhirService: FhirService,\n    private patientService: PatientService\n  ) { }\n\n  readonly clientId: string = \"2c304df8-711d-4de9-afbe-330c01a5ca8e\";\n  readonly scope: string = \"launch patient/*.* openid profile\";\n  readonly redirectUri: string = \"http://localhost:9000\";\n\n  fhirBaseUrl: string;\n  authorizeUrl: string;\n  tokenUrl: string;\n  launch: string;\n  state: string;\n  aud: string;\n\n  authenticate() {\n    this.fhirBaseUrl = this.findGetParameter(\"iss\");\n\n    if (this.fhirBaseUrl) {\n      // Occurs when arriving to the site for the first time.\n      this.aud = this.fhirBaseUrl;\n      this.launch = this.findGetParameter(\"launch\");\n\n      this.fhirService.setUrl(this.fhirBaseUrl);\n\n      const url = this.fhirService.getUrl() + '/metadata';\n      this.http.get(url, this.fhirService.getRequestOptions(false)).subscribe(data => {\n        var smartExtension = data['rest'][0].security.extension.filter(e => {\n          return (e.url === \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\");\n        });\n\n        var auth;\n        var tok;\n\n        smartExtension[0].extension.forEach(arg => {\n          if (arg.url === \"authorize\") {\n            auth = arg.valueUri;\n          } else if (arg.url === \"token\") {\n            tok = arg.valueUri;\n          }\n        });\n\n        this.tokenUrl = tok;\n        this.authorizeUrl = auth;\n\n        this.cookieService.set('tokenUrl', this.tokenUrl);\n        this.cookieService.set('fhirBaseUrl', this.fhirBaseUrl);\n\n        this.requestAuth();\n      });\n    } else {\n      // Occurs when arriving to the site after the redirect.\n      if (this.cookieService.get('state') == this.findGetParameter('state')) {\n        return this.getToken();\n      } else {\n        console.log('Stop cross-site scripting please, thanks');\n      }\n    }\n  }\n\n  getToken() {\n    var code = this.findGetParameter(\"code\");\n\n    var body = 'code=' + code\n      + '&redirect_uri=' + encodeURI(this.redirectUri)\n      + '&token_url=' + this.cookieService.get('tokenUrl');\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n\n    return this.http.post(\"https://mongo-proxy.herokuapp.com/token\",\n      body, { headers: headers });\n  }\n\n  requestAuth() {\n    //TODO Fix hashing method - not sure best way to do it\n\n    this.state = (Md5.hashStr(\"testing Hasing\")).toString();\n    this.cookieService.set('state', this.state);\n\n    var request = this.authorizeUrl + \"?response_type=code\"\n      + \"&client_id=\" + this.clientId\n      + \"&redirect_uri=\" + this.redirectUri\n      + \"&launch=\" + this.launch\n      + \"&scope=\" + this.scope\n      + \"&state=\" + this.state\n      + \"&aud=\" + this.aud;\n\n    // Comment out the below line for debugging purposes.\n    window.location.href = encodeURI(request);\n  }\n\n  findGetParameter(parameterName) {\n    let result = null;\n    let tmp = [];\n\n    location.search.substr(1).split(\"&\").forEach(item => {\n      tmp = item.split(\"=\");\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeline.html":{"url":"classes/Timeline.html","title":"class - Timeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/timeline.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Timeline {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\tcategory: Object;\n\tcode: Object;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineComponent.html":{"url":"components/TimelineComponent.html","title":"component - TimelineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline/timeline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timelines\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encounters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encounters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { EncounterService } from '../../services/encounter.service';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'timelines',\n  templateUrl: './timeline.html'\n})\nexport class TimelineComponent {\n  encounters: Array = [];\n  @Input() patient: Patient;\n\n  constructor(private encounterService: EncounterService) { }\n\n  ngOnChanges(): void {\n    this.loadEncounters();\n  }\n\n  private loadEncounters(): void {\n    if (this.patient) {\n      this.encounterService.loadEncounters(this.patient).subscribe(encounters => {\n        this.encounters = this.encounters.concat(encounters);\n        console.log('Loaded ' + this.encounters.length + ' encounters.');\n        console.log(this.encounters);\n\n        encounters.forEach(enc => enc.position = enc.getLogValue()/5 + \"%\")\n        encounters.forEach(enc =>  console.log('Log Val pos: ' + enc.getStartDate()))\n        \n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n  \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinePopupComponent.html":{"url":"components/TimelinePopupComponent.html","title":"component - TimelinePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelinePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline_popup/timeline_popup.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timeline-popup\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline_popup.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePipe\n                            \n                            \n                                hoverBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(encounter: Encounter, event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encounter\n                                    \n                                                Encounter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePipe\n\n                        \n                    \n                    \n                        \n                            Default value : new DatePipe('en-US')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hoverBox', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { HoverBoxComponent } from '../../components/hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\n\n@Component({\n  selector: 'timeline-popup',\n  templateUrl: './timeline_popup.html'\n})\n\nexport class TimelinePopupComponent {\n  @ViewChild('hoverBox', { static: false }) hoverBox: HoverBoxComponent;\n   datePipe: DatePipe = new DatePipe('en-US');\n  open(encounter: Encounter, event: MouseEvent): void {\n   \n    let details: Array = [\n      'Date: ' + this.datePipe.transform(encounter.getStartDate(),'MM-dd-yyyy').toString(),\n      'Reason: ' + (encounter.getReason() || 'None')\n    ];\n    this.hoverBox.show(details, event);\n  }\n\n  close(event: MouseEvent): void {\n    this.hoverBox.hide(event);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n        Encounter from {{condition.onsetDateTime | amTimeAgo}}\n      \n      \n        {{condition.code.coding[0].display}}\n        Code System:{{condition.code.coding[0].system}}\n        Code: {{condition.code.coding[0].code}}\n      \n      \n        Close\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×        Encounter from {{condition.onsetDateTime | amTimeAgo}}                    {{condition.code.coding[0].display}}        Code System:{{condition.code.coding[0].system}}        Code: {{condition.code.coding[0].code}}                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolBarService.html":{"url":"injectables/ToolBarService.html","title":"injectable - ToolBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToolBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toolbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftPosition\n                            \n                            \n                                topPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ToolBarService {\n  leftPosition: string;\n  topPosition: string;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/toolbar.component.ts\n\n\n    \n        Description\n    \n    \n        A component representing the toolbar at the top of \nthe application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nav2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterScratchPad\n                            \n                            \n                                resetToDefaultView\n                            \n                            \n                                runAssociationsTool\n                            \n                            \n                                switchNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, conditionService: ConditionService, doctorService: DoctorService, observationService: ObservationService, scratchPadService: ScratchPadService, toolbarService: ToolBarService, elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/toolbar.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:22\n                            \n                        \n                \n                    \n                        The patient currently displayed by the application. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nfilterScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:61\n                \n            \n\n\n            \n                \n                    Adds the currently selected conditions and observations to the \nscratch pad, and opens up the scratch pad view of the triple \nlists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetToDefaultView\n                        \n                        \n                    \n                \n            \n            \n                \nresetToDefaultView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:73\n                \n            \n\n\n            \n                \n                    Reset triple lists to their default view (not the scratch pad).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:50\n                \n            \n\n\n            \n                \n                    Run the associations tool.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchNav\n                        \n                        \n                    \n                \n            \n            \n                \nswitchNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:43\n                \n            \n\n\n            \n                \n                    Switches between the 1st and 2nd views of the \ntoolbar.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nav2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:27\n                            \n                        \n\n                \n                    \n                        Tracks whether the toolbar is currently in its 1st or 2nd view. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ToolBarService } from '../../services/toolbar.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { ObservationService} from '../../services/observation.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { Patient } from '../../models/patient.model';\n\n/** \n * A component representing the toolbar at the top of \n * the application.\n */\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.html'\n})\nexport class ToolbarComponent {\n  /** The patient currently displayed by the application. */\n  @Input() patient: Patient;\n  \n  /** \n   * Tracks whether the toolbar is currently in its 1st or 2nd view. \n   */\n  private nav2: boolean = false;\n\n  constructor(\n    private associationService: AssociationService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private observationService: ObservationService,\n    private scratchPadService: ScratchPadService,\n    private toolbarService: ToolBarService,\n    private elRef: ElementRef\n  ) { }\n  \n  /**\n   * Switches between the 1st and 2nd views of the \n   * toolbar.\n   */\n  switchNav() {\n    this.nav2 = !this.nav2;\n  }\n\n  /**\n   * Run the associations tool.\n   */\n  runAssociationsTool() {\n    let checkedConditions = this.conditionService.getCheckedConditions();\n    let checkedObservations = this.observationService.getCheckedObservations();\n    this.associationService.runAssociationsTool(checkedConditions, checkedObservations);\n  }\n\n  /**\n   * Adds the currently selected conditions and observations to the \n   * scratch pad, and opens up the scratch pad view of the triple \n   * lists.\n   */\n  filterScratchPad() {\n    // Call the filtering method in the service\n    this.scratchPadService.addConditionsToScratchPad();\n    this.scratchPadService.addObservationToScratchPad();\n\n    // also switch the views to the scratch pad view\n    this.scratchPadService.switchToScratchPad(true);\n  }\n\n  /**\n   * Reset triple lists to their default view (not the scratch pad).\n   */\n  resetToDefaultView() {\n    this.scratchPadService.switchToScratchPad(false);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n    \n    \n    \n     \n  \n  \n    \n    \n    \n     \n    \n     \n    \n     \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripleListComponent.html":{"url":"components/TripleListComponent.html","title":"component - TripleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tripleList/tripleList.component.ts\n\n\n    \n        Description\n    \n    \n        A component that displays the triple list of \nconditions, observations, and careplans. It provides \nthe patient data to these individual lists.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                triplelist\n            \n\n\n\n\n            \n                templateUrl\n                ./tripleList.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n                \n                    \n                        The patient whose data will appear in the three lists. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Patient } from '../../models/patient.model';\n\n/**\n * A component that displays the triple list of \n * conditions, observations, and careplans. It provides \n * the patient data to these individual lists.\n */\n@Component({\n  selector: 'triplelist',\n  templateUrl: './tripleList.html'\n})\n\nexport class TripleListComponent {\n  /** The patient whose data will appear in the three lists. */\n  @Input() patient: Patient;\n  \n  constructor() { }\n}\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n\tid: number;\n\tname: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            appRoutingProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/accordionRecursion/accordionRecursion.component.ts\n            \n            component\n            AccordionRecursion\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/baseColumn.ts\n            \n            class\n            BaseColumn\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n            \n            component\n            CarePlanDisplay\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/carePlans/carePlans.component.ts\n            \n            component\n            CarePlansComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n            \n            component\n            ColumnStateSwitcherComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            component\n            ConditionsComponent\n            \n                65 %\n                (15/23)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            variable\n            $\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/conditionsChart/conditionsChart.component.ts\n            \n            component\n            ConditionsChartComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n            \n            component\n            ConditionsDisplay\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/contextMenu/contextMenu.component.ts\n            \n            component\n            ContextMenuComponent\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                src/app/components/form-builder/form-builder.component.ts\n            \n            component\n            FormBuilder\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/form_components/checkbox-inline.component.ts\n            \n            component\n            CheckboxInline\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-1.component.ts\n            \n            component\n            NormalBox1\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-2.component.ts\n            \n            component\n            NormalBox2\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/scrachpad-update.component.ts\n            \n            component\n            ScratchPadUpdate\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/form_components/select-list-single.component.ts\n            \n            component\n            SelectListSingle\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/historicalTrends/historicalTrends.component.ts\n            \n            component\n            HistoricalTrendsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/hoverBox/hoverBox.component.ts\n            \n            component\n            HoverBoxComponent\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/components/loadingAnimation/loadingAnimation.component.ts\n            \n            component\n            LoadingAnimation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/medications/medications.component.ts\n            \n            component\n            MedicationsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n            \n            component\n            ObservationRecursiveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/observations/observations.component.ts\n            \n            component\n            ObservationsComponent\n            \n                56 %\n                (9/16)\n            \n        \n        \n            \n                \n                src/app/components/observationsDisplay/observationsDisplay.component.ts\n            \n            component\n            ObservationsDisplay\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            component\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            injectable\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/timeline_popup/timeline_popup.component.ts\n            \n            component\n            TimelinePopupComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/tripleList/tripleList.component.ts\n            \n            component\n            TripleListComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/directives/auto-grow.directive.ts\n            \n            directive\n            AutoGrowDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/directives/highlight.directive.ts\n            \n            directive\n            HighlightDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/allergyIntolerance.model.ts\n            \n            class\n            AllergyIntolerance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/associable.model.ts\n            \n            interface\n            Associable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Bundle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/carePlan.model.ts\n            \n            class\n            CarePlan\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/chart.model.ts\n            \n            class\n            Chart\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/client.model.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/condition.model.ts\n            \n            class\n            Condition\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/contextMenuOption.model.ts\n            \n            class\n            ContextMenuOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/encounter.model.ts\n            \n            class\n            Encounter\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/form.model.ts\n            \n            class\n            Form\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/medication.model.ts\n            \n            class\n            Medication\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/observation.model.ts\n            \n            class\n            Observation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/patient.model.ts\n            \n            class\n            Patient\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/server.model.ts\n            \n            class\n            Server\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/timeline.model.ts\n            \n            class\n            Timeline\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pipes/humanizeBytes.pipe.ts\n            \n            pipe\n            HumanizeBytesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/carePlan.service.ts\n            \n            injectable\n            CarePlanService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/condition.service.ts\n            \n            injectable\n            ConditionService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/doctor.service.ts\n            \n            injectable\n            DoctorService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/encounter.service.ts\n            \n            injectable\n            EncounterService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/fhir.service.ts\n            \n            injectable\n            FhirService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/historicalTrends.service.ts\n            \n            injectable\n            HistoricalTrendsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/map.service.ts\n            \n            injectable\n            MapService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/observation.service.ts\n            \n            injectable\n            ObservationService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/services/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/scratchPad.service.ts\n            \n            injectable\n            ScratchPadService\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/services/smart.service.ts\n            \n            injectable\n            SmartService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/toolbar.service.ts\n            \n            injectable\n            ToolBarService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/cli : ^8.3.25\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            angular2-router-loader : ^0.3.5\n        \n            bootstrap : ^3.3.7\n        \n            jquery : ^3.2.1\n        \n            moment : ^2.24.0\n        \n            ngx-cookie-service : ^2.3.0\n        \n            ngx-moment : ^3.5.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^6.5.4\n        \n            rxjs-compat : ^6.5.4\n        \n            systemjs : ^0.19.47\n        \n            ts-md5 : ^1.2.0\n        \n            tslib : ^1.9.0\n        \n            typescript : ^3.4.5\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPatient Viewer\n\nFront-end project for context-driven clinical transactions.\nPreparing the Application\nThis is an Angular 8 project using grunt as the build system, SASS for CSS, and Bootstrap for layout. npm is the package manager. \nAssuming you already have node installed via brew install node or similar, begin by running the following commands in the terminal:\ngit clone https://github.com/HII-C/patient_viewer.git\ncd patient_viewer\nnpm install -g grunt\nnpm install # to install project development dependenciesIf you do not have npm installed, do the following:\n\nMac: brew install node in Terminal\nWindows: Instructions\nLinux: Instructions\n\nThe project was tested specifically with node version 10.19.0.\nRunning the Application\nTo launch in development mode, run the following terminal command from the patient_viewer folder:\ngrunt --force # to serve the project and automatically recompile on file changesThen, do the following:\n\nVisit HSPC Sandbox, select the \"HII-C\" sandbox, choose the \"Apps\" option from the left menu, click on the \"HII-C Confidential [USE THIS]\" app, and then click \"Launch\". \nSelect the persona \"John Smith\", and patient Adams, Daniel X in the popup. This should open the Patient Viewer application.\nOnce you are done running Patient Viewer, make sure to terminate the grunt --force command in the terminal.\n\nDevelopment Guidelines\nDo's:\n\nPrefer to use let rather than var for declaring variables. The scoping for variables declared with var is unintuitive and can result in strange bugs.\nPrefer to create models (such as Encounter) rather than dealing with JSON directly. By doing so, we can take advantage of Typescript's type checking and code completion.\n\nDont's:\n\nAvoid using libraries like jQuery. Also avoid using any other approach to accessing the DOM directly (ie, document.getElementById(..)).\nAvoid leaving console.log(..) statements in the code when pushing to the repository. You can use them while developing locally but it can cause clutter in the repository.\nWrite a brief comment above each component and method that you write giving a brief overview of the functionality. If some code is particularly complex, place comments within the body of the method too.\nAvoid writing components that are very similar to one another. Instead, create a generic component that supports all use cases through an interface (examples are contextMenu.component.ts and hoverBox.component.ts).\n\nLicense\nApache 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormCreatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nCarePlansComponent\n\nCarePlansComponent\n\nAppModule -->\n\nCarePlansComponent->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../conditions.component.ts)\n                        \n                        \n                            appRoutingProviders   (src/.../app.module.ts)\n                        \n                        \n                            routing   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/conditions/conditions.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Necessary in order to use jQuery to open popup. \n\n                    \n                \n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutingProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
