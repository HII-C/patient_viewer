var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AccordionRecursion.html",[0,0.174,1,0.79]],["body/components/AccordionRecursion.html",[0,0.256,1,1.164,2,0.737,3,0.071,4,0.071,5,0.987,6,0.501,7,1.496,8,0.054,9,1.599,10,0.43,11,1.703,12,0.825,13,3.536,14,0.089,15,0.266,16,3.981,17,3.817,18,0.514,19,3.536,20,3.536,21,3.536,22,2.769,23,1.113,24,5.156,25,5.033,26,5.805,27,0.338,28,1.936,29,2.761,30,0.3,31,3.536,32,0.759,33,0.015,34,0.546,35,0.248,36,0.791,37,2.229,38,2.723,39,2.867,40,3.265,41,4.019,42,3.233,43,3.451,44,3.598,45,2.229,46,0.881,47,2.081,48,1.249,49,2.229,50,3.396,51,3.536,52,3.152,53,1.995,54,3.911,55,3.329,56,1.682,57,4.345,58,3.071,59,3.817,60,6.005,61,2.229,62,3.536,63,5.784,64,3.536,65,3.536,66,3.152,67,3.536,68,2.229,69,4.662,70,5.805,71,5.082,72,1.383,73,2.549,74,0.727,75,3.536,76,2.229,77,3.536,78,2.229,79,2.229,80,2.765,81,3.536,82,2.071,83,0.43,84,0.656,85,0.606,86,2.229,87,2.353,88,3.536,89,2.353,90,2.353,91,1.493,92,1.616,93,2.433,94,2.536,95,0.577,96,1.477,97,1.234,98,0.247,99,1.484,100,1.743,101,1.234,102,1.388,103,1.599,104,2.229,105,1.936,106,1.599,107,1.936,108,1.936,109,4.738,110,1.743,111,1.936,112,2.229,113,5.487,114,0.463,115,2.229,116,2.229,117,1.936,118,1.071,119,2.229,120,3.071,121,1.936,122,3.536,123,5.805,124,3.071,125,2.229,126,2.176,127,1.743,128,1.388,129,1.484,130,1.388,131,1.743,132,1.234,133,1.936,134,1.936,135,1.936,136,1.936,137,2.353,138,1.936,139,0.08,140,0.057,141,1.113,142,1.936,143,2.229,144,1.936,145,1.306,146,1.936,147,1.936,148,1.354,149,2.229,150,3.817,151,2.229,152,4.395,153,2.229,154,3.817,155,2.229,156,2.229,157,2.229,158,1.936,159,2.229,160,2.229,161,2.229,162,2.229,163,1.936,164,2.433,165,1.936,166,2.229,167,2.229,168,2.353,169,4.345,170,2.536,171,2.229,172,2.229,173,1.936,174,3.329,175,2.229,176,2.229,177,3.536,178,2.765,179,2.229,180,3.536,181,4.395,182,3.536,183,1.388,184,1.599,185,1.234,186,2.229,187,2.229,188,2.229,189,1.17,190,0.008,191,3.536,192,3.536,193,2.229,194,2.229,195,1.936,196,2.229,197,1.599,198,2.229,199,3.536,200,3.536,201,0.464,202,0.825,203,0.825,204,0.43,205,0.965,206,0.52,207,0.52,208,0.447,209,0.52,210,0.447,211,0.52,212,0.447,213,0.52,214,0.447,215,0.52,216,0.447,217,0.52,218,0.52,219,0.447,220,0.52,221,0.447,222,0.52,223,0.447,224,0.52,225,0.447,226,0.52,227,0.43,228,0.52,229,0.447,230,0.447,231,0.52,232,0.447,233,0.52,234,0.447,235,0.52,236,0.447,237,0.52,238,0.447,239,0.52,240,0.447,241,0.52,242,0.447,243,0.765,244,0.765,245,0.52,246,0.447,247,0.52,248,0.447,249,0.52,250,0.447,251,0.52,252,0.447,253,0.52,254,0.447,255,0.52,256,0.447,257,0.52,258,0.52,259,0.447,260,0.501,261,0.52,262,0.447,263,0.52,264,0.447,265,0.464,266,0.52,267,0.447,268,0.52,269,0.447,270,0.52,271,0.447,272,0.464,273,0.52,274,0.464,275,0.501,276,0.52,277,0.004,278,0.004]],["title/components/AccountComponent.html",[0,0.174,208,0.79]],["body/components/AccountComponent.html",[0,0.241,1,0.636,2,0.963,3,0.101,4,0.101,5,0.712,6,0.712,7,0.712,8,0.076,10,0.612,11,1.759,12,1.079,14,0.127,15,0.348,18,0.672,27,0.481,30,0.317,32,0.701,33,0.015,34,0.573,35,0.247,36,0.731,46,1.28,53,2.394,56,1.508,74,0.794,83,1.053,84,1.184,85,1.094,91,1.855,92,1.165,95,0.439,98,0.351,114,0.575,126,1.845,139,0.114,140,0.081,141,1.582,168,3.078,169,5.213,170,3.317,190,0.008,201,0.66,202,1.079,203,1.079,204,0.612,205,1.158,206,0.739,207,0.739,208,1.203,209,0.739,210,0.636,211,0.739,212,0.636,213,0.739,214,0.636,215,0.739,216,0.636,217,0.739,218,0.739,219,0.636,220,0.739,221,0.636,222,0.739,223,0.636,224,0.739,225,0.636,226,0.739,227,0.612,228,0.739,229,0.636,230,0.636,231,0.739,232,0.636,233,0.739,234,0.636,235,0.739,236,0.636,237,0.739,238,0.636,239,0.739,240,0.636,241,0.739,242,0.636,243,1,244,1,245,0.739,246,0.636,247,0.739,248,0.636,249,0.739,250,0.636,251,0.739,252,0.636,253,0.739,254,0.636,255,0.739,256,0.636,257,0.739,258,0.739,259,0.636,260,0.712,261,0.739,262,0.636,263,0.739,264,0.636,265,1.137,266,0.739,267,0.636,268,0.739,269,0.636,270,0.739,271,0.636,272,0.66,273,0.739,274,0.66,275,0.712,276,0.739,277,0.006,278,0.006,279,2.753,280,3.616,281,4.625,282,5.46,283,5.46,284,5.46,285,5.46,286,5.46,287,4.625,288,6.002,289,6.002,290,3.17,291,3.17,292,4.625,293,4.625,294,4.742,295,3.17,296,2.56,297,3.17,298,3.17,299,1.836,300,4.625,301,4.625,302,4.625,303,4.625,304,3.17,305,4.625,306,4.625,307,4.625,308,4.625,309,4.625,310,4.625,311,4.625,312,4.625,313,4.625,314,3.17,315,4.625,316,4.625,317,4.625,318,4.017,319,4.625,320,4.625,321,4.625,322,3.17,323,3.17,324,1.974,325,3.17,326,3.17,327,3.17,328,3.17,329,3.17,330,3.17,331,5.46,332,4.625,333,4.625,334,4.625,335,6.002,336,4.625,337,4.625,338,4.625,339,4.625,340,4.017,341,4.017,342,4.625,343,4.625,344,1.77,345,3.616,346,4.017,347,4.625,348,4.625,349,4.625,350,3.078,351,3.616,352,4.625,353,3.616,354,5.21,355,4.625,356,4.017,357,4.625,358,3.616,359,4.625,360,4.625,361,4.017,362,4.625,363,5.514,364,2.101,365,7.052,366,4.625,367,3.616,368,4.625,369,4.017]],["title/classes/AllergyIntolerance.html",[140,0.101,370,2.825]],["body/classes/AllergyIntolerance.html",[3,0.192,4,0.192,8,0.145,14,0.241,15,0.532,30,0.312,33,0.014,35,0.269,114,0.789,139,0.216,140,0.154,190,0.013,277,0.011,278,0.011,370,5.068,371,2.128,372,5.231,373,3.12,374,2.757,375,3.006,376,6.022,377,6.022,378,2.736]],["title/components/AppComponent.html",[0,0.174,210,0.79]],["body/components/AppComponent.html",[0,0.323,1,0.93,2,1.253,3,0.148,4,0.148,5,1.042,6,1.042,7,1.042,8,0.111,10,0.895,11,1.803,12,1.403,27,1.012,30,0.205,33,0.014,34,0.599,46,0.93,72,1.46,95,0.44,98,0.513,139,0.167,140,0.118,190,0.011,201,0.966,202,1.403,203,1.403,204,0.895,205,1.362,206,1.082,207,1.082,208,0.93,209,1.082,210,1.416,211,1.082,212,0.93,213,1.082,214,0.93,215,1.082,216,0.93,217,1.082,218,1.082,219,0.93,220,1.082,221,0.93,222,1.082,223,0.93,224,1.082,225,0.93,226,1.082,227,0.895,228,1.082,229,0.93,230,0.93,231,1.082,232,0.93,233,1.082,234,0.93,235,1.082,236,0.93,237,1.082,238,0.93,239,1.082,240,0.93,241,1.082,242,0.93,243,1.301,244,1.301,245,1.082,246,0.93,247,1.082,248,0.93,249,1.082,250,0.93,251,1.082,252,0.93,253,1.082,254,0.93,255,1.082,256,0.93,257,1.082,258,1.082,259,0.93,260,1.042,261,1.082,262,0.93,263,1.082,264,0.93,265,0.966,266,1.082,267,0.93,268,1.082,269,0.93,270,1.082,271,0.93,272,0.966,273,1.082,274,0.966,275,1.042,276,1.082,277,0.008,278,0.008,280,4.703,367,4.703,379,4.03,380,5.224,381,6.015,382,3.745,383,5.224,384,6.015,385,4.64,386,6.015,387,5.224]],["title/modules/AppModule.html",[388,2.452,389,2.825]],["body/modules/AppModule.html",[0,0.274,1,1.245,2,0.546,3,0.084,4,0.084,8,0.063,29,2.953,33,0.015,38,2.433,39,1.045,40,1.191,44,1.451,95,0.775,98,0.444,130,3.034,139,0.094,140,0.067,190,0.007,201,0.546,208,1.295,210,1.442,212,1.245,214,1.245,219,1.245,221,1.245,223,1.245,225,1.245,227,1.198,229,1.245,232,1.295,234,1.336,236,1.245,238,1.245,240,1.245,248,1.245,250,1.245,252,1.245,254,1.245,262,1.245,264,1.245,267,1.245,269,1.245,271,0.525,277,0.005,278,0.005,280,2.049,291,2.953,380,2.276,388,1.632,389,5.964,390,1.744,391,1.744,392,3.811,393,3.034,394,3.811,395,2.049,396,2.276,397,2.276,398,2.276,399,2.276,400,2.276,401,4.132,402,3.436,403,3.636,404,2.953,405,3.436,406,2.476,407,3.258,408,3.865,409,3.436,410,2.476,411,3.865,412,3.865,413,3.137,414,1.632,415,1.744,416,2.049,417,4.743,418,3.484,419,4.012,420,4.012,421,2.621,422,2.276,423,2.621,424,2.621,425,2.621,426,2.621,427,2.621,428,2.621,429,2.621,430,2.621,431,2.621,432,2.621,433,2.621,434,2.621,435,2.621,436,2.621,437,2.621,438,2.621,439,2.621,440,2.621,441,2.049,442,2.621,443,2.621,444,2.621,445,2.621,446,2.621,447,2.621,448,2.621,449,1.6,450,2.67,451,2.221,452,1.632,453,2.621,454,2.621,455,2.621,456,2.621,457,2.621,458,2.621,459,2.621,460,2.621,461,2.621,462,2.621,463,2.621,464,2.621,465,2.621,466,4.012,467,1.535,468,4.012,469,2.276,470,1.744,471,3.484,472,3.484,473,3.137,474,1.88,475,3.484,476,2.049,477,4.012,478,1.376,479,2.049,480,2.049,481,2.276,482,4.012,483,2.621,484,2.621,485,2.621,486,3.4,487,2.276,488,3.137,489,3.137,490,2.276,491,2.621]],["title/interfaces/Associable.html",[492,2.622,493,2.452]],["body/interfaces/Associable.html",[3,0.202,4,0.202,8,0.152,33,0.014,139,0.227,190,0.013,277,0.011,278,0.011,492,4.219,493,4.532,494,6.339,495,5.506]],["title/injectables/AssociationService.html",[402,2.18,496,0.99]],["body/injectables/AssociationService.html",[3,0.108,4,0.108,8,0.081,14,0.135,15,0.364,18,0.704,27,0.735,29,3.337,30,0.317,32,0.993,33,0.015,34,0.588,35,0.258,36,1.035,39,2.993,40,3.409,42,3.24,43,3.4,74,0.899,83,0.652,84,1.051,85,0.971,95,0.646,98,0.374,101,1.871,102,2.104,114,0.356,126,1.932,139,0.121,140,0.086,148,1.32,184,2.424,190,0.009,277,0.006,278,0.006,296,1.871,299,1.98,373,2.834,402,2.681,404,3.337,478,1.774,486,3.525,496,1.217,497,1.468,498,2.935,499,5.662,500,5.662,501,1.949,502,4.844,503,4.844,504,5.662,505,4.207,506,2.25,507,3.622,508,4.844,509,2.837,510,4.844,511,3.38,512,4.533,513,4.207,514,4.844,515,3.38,516,3.788,517,3.38,518,6.093,519,3.38,520,5.371,521,4.844,522,3.38,523,4.776,524,2.185,525,3.38,526,4.844,527,4.844,528,3.788,529,4.207,530,4.844,531,4.844,532,4.844,533,3.38,534,3.38,535,3.38,536,1.871,537,4.207,538,2.104,539,3.38,540,2.935,541,3.38,542,3.134,543,3.38,544,4.435,545,1.98,546,2.643,547,3.38,548,3.38,549,3.38,550,3.38,551,3.38,552,3.38,553,3.38,554,6.546,555,4.207,556,3.38,557,4.844,558,3.38,559,4.844,560,3.38,561,4.844,562,4.207,563,1.98,564,3.38,565,4.844,566,3.38,567,3.38,568,3.38,569,4.844,570,4.844,571,4.844,572,3.38,573,4.844,574,3.38,575,4.844,576,3.38,577,4.844,578,3.38,579,2.935,580,3.38,581,3.38,582,3.38,583,3.474,584,2.25,585,4.844,586,3.38,587,3.38,588,3.38,589,3.38,590,2.935,591,3.38,592,3.38]],["title/directives/AutoGrowDirective.html",[204,0.76,272,0.82]],["body/directives/AutoGrowDirective.html",[3,0.172,4,0.172,8,0.13,10,1.043,11,1.433,14,0.216,18,0.963,27,0.82,30,0.316,32,0.82,33,0.015,34,0.485,35,0.194,36,0.855,74,0.963,83,1.278,95,0.513,98,0.598,139,0.194,140,0.138,141,2.698,190,0.012,204,1.278,271,1.084,272,1.38,277,0.01,278,0.01,501,1.359,593,6.482,594,4.695,595,6.623,596,7.657,597,7.657,598,4.695,599,5.353,600,6.854,601,5.406,602,5.752,603,5.406,604,5.406,605,5.406,606,4.695,607,5.406,608,5.406,609,6.623,610,5.752,611,5.406,612,5.406,613,5.406]],["title/classes/BaseColumn.html",[140,0.101,614,2.307]],["body/classes/BaseColumn.html",[3,0.122,4,0.122,5,1.185,8,0.092,14,0.153,15,0.397,16,4.335,18,0.767,27,0.917,30,0.331,32,0.579,33,0.015,34,0.343,35,0.217,36,0.603,38,3.796,48,2.306,50,4.062,72,1.66,74,0.949,83,1.259,84,1.394,85,1.174,87,3.512,89,3.512,90,3.512,95,0.574,100,2.984,114,0.555,139,0.137,140,0.192,158,4.583,164,2.113,174,2.54,190,0.009,277,0.007,278,0.007,344,2.622,351,2.984,371,1.349,382,3.285,449,2.105,538,2.293,614,3.091,615,3.315,616,3.785,617,4.126,618,4.583,619,4.126,620,4.583,621,6.048,622,5.277,623,4.126,624,3.425,625,4.343,626,3.536,627,3.536,628,4.338,629,4.026,630,4.338,631,3.785,632,4.343,633,4.343,634,4.68,635,5.277,636,3.817,637,4.559,638,3.512,639,3.817,640,3.785,641,3.817,642,3.785,643,3.785,644,3.785,645,3.512,646,3.285,647,3.785,648,3.817,649,4.062,650,4.912,651,3.817,652,3.822,653,3.257,654,5.081,655,3.718,656,3.817,657,3.817,658,2.984,659,1.816,660,3.817,661,2.54,662,2.113,663,5.277,664,3.817,665,5.277,666,3.817,667,3.817,668,3.817,669,3.817,670,3.817,671,3.817,672,2.984,673,3.817,674,3.817]],["title/classes/Bundle.html",[140,0.101,675,2.18]],["body/classes/Bundle.html",[3,0.19,4,0.19,8,0.143,14,0.238,15,0.528,30,0.31,33,0.014,35,0.252,114,0.739,139,0.252,140,0.179,190,0.012,277,0.011,278,0.011,299,1.938,371,2.107,675,3.888,676,4.662,677,6.486,678,5.531,679,5.963,680,5.963,681,5.179,682,2.837]],["title/classes/CarePlan.html",[44,2.18,140,0.101]],["body/classes/CarePlan.html",[3,0.161,4,0.161,8,0.121,14,0.202,15,0.478,30,0.338,33,0.015,35,0.285,44,3.519,47,2.645,48,1.788,72,2.187,85,0.868,91,1.72,95,0.48,114,0.868,139,0.182,140,0.129,190,0.011,277,0.009,278,0.009,371,1.788,373,2.645,374,2.555,375,3.173,378,2.299,493,4.327,512,4.231,583,3.63,683,4.396,684,4.56,685,6.951,686,4.985,687,4.271,688,5.435,689,5.061,690,5.061,691,5.061,692,5.061,693,5.061,694,5.061,695,3.957,696,3.151,697,3.519,698,2.964,699,5.061,700,5.061,701,5.061,702,5.061,703,5.061,704,4.396,705,5.061,706,5.061,707,3.63]],["title/components/CarePlanDisplay.html",[0,0.174,212,0.79]],["body/components/CarePlanDisplay.html",[0,0.227,1,0.575,2,0.895,3,0.091,4,0.091,5,0.644,6,0.644,7,0.644,8,0.069,10,0.553,11,1.744,12,1.002,14,0.115,15,0.323,18,0.748,23,1.351,27,0.435,30,0.327,32,0.975,33,0.015,34,0.629,35,0.26,36,1.016,39,1.713,41,3.389,44,4.262,46,0.861,72,1.351,73,1.098,74,0.969,83,1.24,84,0.532,85,0.492,91,2.38,92,2.363,93,1.588,95,0.542,96,1.163,97,2.377,98,0.317,103,2.057,114,0.542,126,1.713,137,3.427,139,0.103,140,0.073,141,1.432,148,1.002,185,2.377,189,2.702,190,0.008,201,0.597,202,1.002,203,1.002,204,0.553,205,1.103,206,0.669,207,0.669,208,0.575,209,0.669,210,0.575,211,0.669,212,1.288,213,0.669,214,0.575,215,0.669,216,0.575,217,1.201,218,0.669,219,0.575,220,0.669,221,0.575,222,0.669,223,0.575,224,0.669,225,0.575,226,0.669,227,1.103,228,0.669,229,0.575,230,0.575,231,0.669,232,0.575,233,0.669,234,0.575,235,0.669,236,0.575,237,0.669,238,0.575,239,0.669,240,0.575,241,0.669,242,0.575,243,0.929,244,0.929,245,0.669,246,0.575,247,0.669,248,0.575,249,0.669,250,0.575,251,0.669,252,0.575,253,0.669,254,0.575,255,0.669,256,0.575,257,0.669,258,0.669,259,0.575,260,0.644,261,0.669,262,0.575,263,0.669,264,0.575,265,0.597,266,0.669,267,0.575,268,0.669,269,0.575,270,0.669,271,0.575,272,0.597,273,0.669,274,0.597,275,0.644,276,0.669,277,0.005,278,0.005,296,3.164,299,1.294,344,1.098,350,1.909,364,2.781,378,2.339,410,2.733,524,1.013,538,1.866,545,2.516,563,2.516,606,2.491,624,1.505,626,2.144,627,2.144,653,2.144,655,1.505,696,2.674,698,2.516,708,2.491,709,4.295,710,4.026,711,3.586,712,4.295,713,4.295,714,4.295,715,3.08,716,3.805,717,4.1,718,4.295,719,2.674,720,5.149,721,2.243,722,4.295,723,2.868,724,3.559,725,2.868,726,4.295,727,2.868,728,4.295,729,5.717,730,2.868,731,4.295,732,2.868,733,3.08,734,2.868,735,2.859,736,2.868,737,2.868,738,4.295,739,2.868,740,2.868,741,1.588,742,3.08,743,2.144,744,2.868,745,1.68,746,1.364,747,2.057,748,1.909,749,2.516,750,2.859,751,2.057,752,1.909,753,3.559,754,1.909,755,2.057,756,1.909,757,1.909,758,1.909,759,2.057,760,1.909,761,1.909,762,1.909,763,1.909,764,3.427,765,3.205,766,3.427,767,2.243,768,4.026,769,2.868,770,3.693,771,2.057,772,4.295,773,2.243,774,1.68,775,2.243,776,2.868,777,2.868,778,2.868,779,2.057,780,1.786,781,2.868,782,2.868,783,2.491,784,2.491,785,2.243,786,2.868,787,2.057,788,2.057,789,2.868,790,2.868,791,2.491,792,4.295,793,3.73,794,3.08,795,2.057,796,2.057,797,2.243,798,2.243,799,2.868,800,4.295,801,4.295,802,2.868]],["title/injectables/CarePlanService.html",[403,2.307,496,0.99]],["body/injectables/CarePlanService.html",[3,0.134,4,0.134,8,0.101,14,0.168,15,0.424,18,0.82,27,0.855,30,0.3,32,0.964,33,0.015,34,0.571,35,0.244,36,1.005,41,2.328,44,3.52,69,3.016,74,0.82,84,0.78,85,0.721,95,0.727,98,0.465,103,3.016,114,0.443,128,3.51,129,3.752,132,3.921,139,0.151,140,0.107,148,1.701,189,2.208,190,0.01,277,0.007,278,0.007,299,1.417,403,3.302,406,2.909,478,2.208,486,3.959,496,1.417,497,1.827,501,1.78,507,3.979,509,3.725,523,4.232,524,2.503,659,2.001,661,2.799,675,2.328,682,2.001,686,3.016,696,2.618,698,2.463,803,3.653,804,5.638,805,5.638,806,2.618,807,5.638,808,5.638,809,2.399,810,4.206,811,4.411,812,5.638,813,4.206,814,2.799,815,1.61,816,3.289,817,3.016,818,3.959,819,3.959,820,2.618,821,3.016,822,3.289,823,2.618,824,3.016,825,3.653,826,3.289,827,3.653,828,3.653,829,3.289,830,3.289,831,3.653,832,4.206,833,3.289,834,3.653,835,4.206,836,2.463,837,4.206,838,4.206,839,4.206,840,4.896,841,4.206,842,4.206,843,3.653,844,5.638,845,4.206,846,4.206,847,3.653,848,4.206,849,4.206,850,4.206,851,3.653,852,4.206,853,4.206,854,4.206]],["title/components/CarePlansComponent.html",[0,0.174,214,0.79]],["body/components/CarePlansComponent.html",[0,0.266,1,0.554,2,0.87,3,0.088,4,0.088,5,0.939,6,0.621,7,0.621,8,0.066,10,0.534,11,1.739,12,0.975,14,0.111,15,0.314,16,3.288,18,0.607,22,3.107,23,1.315,27,0.634,30,0.334,32,0.634,33,0.015,34,0.541,35,0.249,36,0.661,38,2.514,41,3.508,44,2.788,46,1.391,47,1.739,48,1.476,50,2.602,72,1.315,73,2.149,74,0.921,82,2.448,83,1.163,84,1.257,85,1.033,87,1.841,89,1.841,90,1.841,91,1.42,92,1.536,93,2.313,94,2.997,95,0.643,96,1.131,98,0.306,103,1.983,106,2.997,114,0.291,126,1.103,128,4.738,129,4.993,137,2.781,139,0.099,140,0.143,148,0.645,190,0.007,201,0.576,202,0.975,203,0.975,204,0.534,205,1.083,206,0.645,207,0.645,208,0.554,209,0.645,210,0.554,211,0.645,212,0.554,213,0.645,214,1.125,215,0.645,216,0.554,217,0.645,218,0.645,219,0.554,220,0.645,221,0.554,222,0.645,223,0.554,224,0.645,225,0.554,226,0.645,227,0.534,228,0.645,229,0.554,230,0.554,231,0.645,232,0.554,233,0.645,234,0.554,235,0.645,236,0.554,237,0.645,238,0.554,239,0.645,240,0.554,241,0.645,242,0.554,243,0.904,244,0.904,245,0.645,246,0.554,247,0.645,248,0.554,249,0.645,250,0.554,251,0.645,252,0.554,253,0.645,254,0.554,255,0.645,256,0.554,257,0.975,258,0.645,259,0.554,260,0.621,261,0.645,262,0.554,263,0.645,264,0.554,265,0.576,266,0.645,267,0.554,268,0.645,269,0.554,270,0.645,271,0.554,272,0.576,273,0.645,274,0.576,275,0.621,276,0.645,277,0.005,278,0.005,299,1.05,344,1.6,364,2.738,403,3.855,406,2.528,410,2.625,449,1.103,501,1.266,538,2.439,614,4.263,616,1.983,624,1.452,625,1.841,626,3.285,627,3.285,628,2.997,629,2.781,630,2.997,631,2.997,632,3.352,633,3.352,634,3.612,637,2.781,638,1.841,640,1.983,642,1.983,643,1.983,644,1.983,645,1.841,646,1.722,647,1.983,649,2.602,650,1.983,652,2.448,653,2.802,654,3.612,655,2.644,659,1.316,746,1.316,780,1.722,793,2.402,806,1.722,809,2.142,815,1.059,855,2.402,856,4.179,857,4.179,858,2.781,859,3.267,860,4.179,861,5.037,862,5.037,863,5.613,864,4.179,865,3.267,866,2.765,867,2.765,868,4.179,869,3.629,870,5.298,871,2.162,872,2.162,873,2.162,874,2.162,875,2.765,876,2.765,877,4.011,878,2.765,879,4.179,880,3.495,881,3.629,882,4.179,883,3.938,884,2.765,885,2.162,886,2.162,887,2.162,888,2.162,889,1.841,890,2.402,891,1.983,892,2.162,893,2.162,894,2.765,895,2.402,896,2.765,897,2.162,898,3.267,899,1.983,900,1.059,901,1.531,902,2.765,903,2.765,904,2.162,905,2.765,906,2.765]],["title/classes/Chart.html",[140,0.101,907,2.622]],["body/classes/Chart.html",[3,0.156,4,0.156,8,0.117,14,0.195,15,0.467,30,0.345,33,0.015,34,0.646,35,0.287,47,2.031,48,2.727,73,1.868,84,0.906,85,1.234,91,2.111,114,0.782,118,2.18,139,0.175,140,0.125,190,0.011,277,0.009,278,0.009,299,1.561,363,4.858,371,1.724,373,2.844,375,3.412,451,3.439,470,4.549,542,2.701,688,5.345,707,3.5,779,4.456,907,5.056,908,4.239,909,6.835,910,6.835,911,6.835,912,6.835,913,6.835,914,4.881,915,4.881,916,4.881,917,4.881,918,4.881,919,4.881,920,4.881,921,4.881,922,3.816,923,4.881,924,3.816,925,4.239,926,4.239,927,4.239,928,4.239,929,4.239,930,3.816,931,3.248,932,4.239,933,4.239,934,4.881,935,4.881,936,4.239,937,4.239,938,3.816]],["title/components/CheckboxInline.html",[0,0.174,216,0.79]],["body/components/CheckboxInline.html",[0,0.283,1,0.856,2,1.186,3,0.136,4,0.136,5,0.96,6,0.96,7,0.96,8,0.103,10,0.824,11,1.795,12,1.328,14,0.171,15,0.429,18,0.828,23,1.792,30,0.314,33,0.015,34,0.576,35,0.23,46,0.856,53,1.704,74,0.828,83,0.824,84,1.057,85,0.977,91,1.935,92,1.57,95,0.405,96,1.542,98,0.472,114,0.6,139,0.153,140,0.109,190,0.01,201,0.89,202,1.328,203,1.328,204,0.824,205,1.374,206,0.996,207,0.996,208,0.856,209,0.996,210,0.856,211,0.996,212,0.856,213,0.996,214,0.856,215,0.996,216,1.371,217,1.661,218,0.996,219,0.856,220,0.996,221,0.856,222,0.996,223,0.856,224,0.996,225,0.856,226,0.996,227,0.824,228,0.996,229,0.856,230,0.856,231,0.996,232,0.856,233,0.996,234,0.856,235,0.996,236,0.856,237,0.996,238,0.856,239,0.996,240,0.856,241,0.996,242,0.856,243,1.232,244,1.232,245,0.996,246,0.856,247,0.996,248,0.856,249,0.996,250,0.856,251,0.996,252,0.856,253,0.996,254,0.856,255,0.996,256,0.856,257,0.996,258,0.996,259,0.856,260,0.96,261,0.996,262,0.856,263,0.996,264,0.856,265,0.89,266,0.996,267,0.856,268,0.996,269,0.856,270,0.996,271,0.856,272,0.89,273,0.996,274,0.89,275,0.96,276,0.996,277,0.008,278,0.008,717,4.903,939,6.362,940,3.71,941,5.696,942,5.696,943,6.409,944,6.409,945,3.754,946,4.265,947,4.271,948,4.271,949,4.271,950,4.271,951,4.271,952,3.71,953,4.271,954,3.791,955,4.947]],["title/classes/Client.html",[140,0.101,956,3.08]],["body/classes/Client.html",[3,0.194,4,0.194,8,0.146,14,0.243,15,0.535,30,0.314,33,0.014,34,0.676,35,0.255,114,0.817,140,0.155,190,0.013,277,0.011,278,0.011,371,2.149,374,2.768,956,5.558,957,5.283,958,6.083,959,6.083]],["title/components/ColumnStateSwitcherComponent.html",[0,0.174,219,0.79]],["body/components/ColumnStateSwitcherComponent.html",[0,0.31,1,0.683,2,1.015,3,0.109,4,0.109,5,0.765,6,0.765,7,0.765,8,0.082,10,0.657,11,1.768,12,1.136,14,0.136,16,3.331,18,0.708,23,1.533,24,3.494,27,0.739,30,0.301,32,0.517,33,0.015,34,0.557,35,0.236,36,0.539,38,3.822,39,2.268,40,2.583,41,3.435,46,0.683,48,2.413,52,3.494,53,1.943,72,1.072,73,1.865,74,0.827,83,0.94,84,1.218,95,0.539,96,1.54,98,0.377,114,0.513,139,0.122,140,0.087,148,1.447,174,3.242,190,0.009,201,0.71,202,1.136,203,1.136,204,0.657,205,1.197,206,0.795,207,0.795,208,0.683,209,0.795,210,0.683,211,0.795,212,0.683,213,0.795,214,0.683,215,0.795,216,0.683,217,0.795,218,0.795,219,1.244,220,0.795,221,0.683,222,0.795,223,0.683,224,0.795,225,0.683,226,0.795,227,0.657,228,0.795,229,0.683,230,0.683,231,0.795,232,0.683,233,0.795,234,0.683,235,0.795,236,0.683,237,0.795,238,0.683,239,0.795,240,0.683,241,0.795,242,0.683,243,1.054,244,1.054,245,0.795,246,0.683,247,0.795,248,0.683,249,0.795,250,0.683,251,0.795,252,0.683,253,0.795,254,0.683,255,0.795,256,0.683,257,1.136,258,0.795,259,0.683,260,0.765,261,0.795,262,0.683,263,0.795,264,0.683,265,0.71,266,0.795,267,0.683,268,0.795,269,0.683,270,0.795,271,0.683,272,0.71,273,0.795,274,0.71,275,0.765,276,0.795,277,0.006,278,0.006,410,2.724,449,1.943,501,0.856,536,1.886,614,3.635,617,4.852,624,2.557,626,3.509,627,3.653,649,3.033,653,3.098,721,2.664,746,1.621,752,3.242,818,3.033,891,4.451,892,3.809,900,1.865,931,3.242,960,2.959,961,3.809,962,6.206,963,4.872,964,4.872,965,4.872,966,6.829,967,6.206,968,6.206,969,4.872,970,3.407,971,6.206,972,3.407,973,4.872,974,3.407,975,3.407,976,4.872,977,4.872,978,4.872,979,3.494,980,4.231,981,3.407,982,3.407,983,5.687,984,3.407,985,3.407,986,2.959,987,2.959,988,3.407]],["title/classes/Condition.html",[42,1.874,140,0.101]],["body/classes/Condition.html",[3,0.166,4,0.166,8,0.125,14,0.208,15,0.486,30,0.352,33,0.015,35,0.288,42,3.076,47,2.164,91,2.502,95,0.493,114,0.865,139,0.187,140,0.133,190,0.011,277,0.009,278,0.009,371,1.838,373,3.063,374,2.587,375,2.596,378,2.362,493,4.381,512,3.461,513,6.112,583,3.73,684,4.638,695,4.067,735,4.684,989,4.517,990,7.038,991,7.038,992,7.038,993,5.048,994,7.038,995,5.201,996,5.201,997,5.201,998,5.201,999,5.201,1000,5.201,1001,5.201,1002,5.201,1003,5.201]],["title/injectables/ConditionService.html",[404,1.874,496,0.99]],["body/injectables/ConditionService.html",[3,0.108,4,0.108,8,0.081,14,0.135,15,0.364,18,0.704,27,0.735,30,0.335,32,0.993,33,0.015,34,0.588,35,0.266,36,1.035,38,2.418,39,2.798,42,3.24,74,0.99,83,0.935,84,1.215,85,1.06,95,0.703,98,0.374,101,1.871,114,0.79,118,1.024,130,2.104,139,0.121,140,0.086,148,1.729,190,0.009,205,0.652,277,0.006,278,0.006,299,1.423,358,3.788,364,1.535,370,3.474,404,2.304,406,2.798,410,2.798,449,1.348,478,1.774,486,3.525,496,1.217,497,1.468,501,1.712,506,2.25,507,3.622,509,2.837,523,2.25,524,1.194,536,1.871,538,1.468,555,4.207,624,2.543,626,1.687,627,1.687,629,3.768,659,1.608,661,2.25,675,1.871,682,2.693,746,1.608,809,2.334,811,4.367,814,2.25,815,1.294,817,2.424,818,3.016,819,3.016,820,3.016,821,2.424,822,3.788,823,3.016,824,3.474,825,2.935,826,2.643,827,4.207,828,4.207,869,2.935,899,3.474,900,1.854,1004,2.935,1005,5.662,1006,4.917,1007,6.184,1008,6.184,1009,4.207,1010,4.844,1011,4.844,1012,4.844,1013,4.844,1014,3.38,1015,3.38,1016,4.844,1017,3.38,1018,4.844,1019,3.38,1020,4.844,1021,3.38,1022,4.844,1023,3.38,1024,4.844,1025,3.38,1026,2.104,1027,3.38,1028,3.38,1029,3.38,1030,2.935,1031,4.207,1032,3.38,1033,2.935,1034,3.38,1035,3.38,1036,3.38,1037,3.38,1038,3.38,1039,3.38,1040,3.38,1041,2.935,1042,3.224,1043,2.424,1044,3.38,1045,3.38,1046,3.38,1047,3.38,1048,2.643,1049,3.38,1050,3.38,1051,2.935,1052,2.935,1053,3.788,1054,2.643,1055,2.643,1056,3.38,1057,3.38,1058,3.38,1059,3.38,1060,3.38,1061,3.38,1062,2.935,1063,3.38,1064,3.38,1065,3.38,1066,3.38,1067,3.38,1068,3.38,1069,3.38]],["title/components/ConditionsChartComponent.html",[0,0.174,221,0.79]],["body/components/ConditionsChartComponent.html",[0,0.19,1,0.434,2,0.719,3,0.11,4,0.069,5,0.486,6,0.486,7,0.486,8,0.052,10,0.417,11,1.697,12,0.805,14,0.086,15,0.26,17,3.742,18,0.502,22,2.723,23,1.086,27,0.524,30,0.333,32,0.912,33,0.015,34,0.593,35,0.259,36,0.951,39,1.962,42,3.14,46,0.692,47,0.9,48,2.024,53,0.863,56,2.557,72,1.086,74,0.997,82,1.267,83,1.323,84,0.997,85,1.071,91,1.826,92,2.296,95,0.57,96,0.935,97,1.911,98,0.239,101,1.198,114,0.743,118,0.655,124,1.879,126,2.491,139,0.078,140,0.055,148,0.805,163,1.879,168,2.868,170,2.476,178,1.692,183,3.062,190,0.006,201,0.451,202,0.805,203,0.805,204,0.417,205,1.205,206,0.505,207,0.505,208,0.434,209,0.505,210,0.434,211,0.505,212,0.434,213,0.505,214,0.434,215,0.505,216,0.434,217,0.505,218,0.505,219,0.434,220,0.505,221,0.986,222,0.505,223,0.434,224,0.505,225,0.434,226,0.505,227,0.417,228,0.505,229,0.434,230,0.434,231,0.505,232,0.434,233,0.505,234,0.434,235,0.505,236,0.434,237,0.505,238,0.434,239,0.505,240,0.434,241,0.505,242,0.434,243,0.747,244,0.747,245,0.505,246,0.434,247,0.505,248,0.434,249,0.505,250,0.434,251,0.505,252,0.434,253,0.505,254,0.434,255,0.505,256,0.434,257,0.505,258,0.505,259,0.434,260,0.486,261,0.505,262,0.434,263,0.505,264,0.434,265,0.451,266,0.505,267,0.434,268,0.505,269,0.434,270,0.505,271,0.434,272,0.451,273,0.505,274,0.451,275,0.486,276,0.505,277,0.004,278,0.004,291,2.86,294,1.879,296,1.911,299,1.694,324,1.347,364,1.957,367,2.7,388,1.347,404,2.726,410,2.398,467,2.022,501,1.083,524,1.899,546,1.692,563,4.08,584,2.298,646,1.347,687,2.022,697,2.385,715,2.476,719,2.15,724,3.062,733,2.476,735,2.298,746,1.029,754,1.44,762,1.44,780,2.15,783,1.879,784,1.879,785,1.692,791,1.879,794,2.476,795,3.09,796,1.552,809,1.736,815,0.828,836,1.267,843,1.879,900,1.322,901,1.198,931,1.44,1070,1.879,1071,3.453,1072,3.453,1073,4.309,1074,3.742,1075,4.309,1076,4.309,1077,3.742,1078,4.919,1079,4.919,1080,3.453,1081,3.453,1082,2.7,1083,3.453,1084,3.453,1085,4.919,1086,4.919,1087,3.369,1088,2.163,1089,3.453,1090,2.163,1091,2.163,1092,2.163,1093,2.163,1094,2.163,1095,3.453,1096,4.309,1097,5.375,1098,4.309,1099,2.163,1100,2.163,1101,2.163,1102,3.453,1103,2.163,1104,2.7,1105,2.163,1106,3.453,1107,2.163,1108,3.453,1109,2.163,1110,3.453,1111,2.163,1112,2.163,1113,2.163,1114,2.163,1115,2.163,1116,2.163,1117,2.163,1118,2.163,1119,2.163,1120,1.44,1121,1.879,1122,4.834,1123,2.163,1124,3.453,1125,2.163,1126,3.453,1127,2.163,1128,1.879,1129,3.453,1130,2.163,1131,2.163,1132,2.163,1133,3.453,1134,1.692,1135,1.879,1136,2.163,1137,2.163,1138,2.999,1139,2.163,1140,2.163,1141,4.668,1142,3.453,1143,2.163,1144,2.999,1145,2.163,1146,1.347,1147,3.453,1148,2.163,1149,1.552,1150,1.692,1151,2.163,1152,1.879,1153,2.163,1154,2.163,1155,2.163,1156,1.692,1157,1.879,1158,2.163,1159,3.453,1160,2.163,1161,3.453,1162,2.163,1163,2.163,1164,1.879,1165,1.692,1166,2.163,1167,2.163,1168,2.163,1169,1.692,1170,2.163,1171,2.163,1172,4.309,1173,2.163,1174,4.309,1175,2.163,1176,3.453,1177,2.163,1178,3.453,1179,3.453,1180,3.453,1181,3.453,1182,2.163,1183,2.163,1184,1.692,1185,2.999,1186,3.453,1187,2.163,1188,2.163,1189,2.163,1190,2.163,1191,2.163,1192,2.163,1193,2.163,1194,1.692,1195,2.163,1196,2.163,1197,2.163,1198,3.453,1199,2.163,1200,2.163,1201,1.44,1202,1.879,1203,3.453,1204,2.476,1205,3.453,1206,2.163,1207,2.163,1208,3.453,1209,3.453,1210,2.163,1211,2.163,1212,2.163]],["title/components/ConditionsComponent.html",[0,0.174,223,0.79]],["body/components/ConditionsComponent.html",[0,0.244,1,0.461,2,0.755,3,0.073,4,0.073,5,0.814,6,0.517,7,0.517,8,0.055,10,0.444,11,1.708,12,0.846,14,0.092,15,0.273,16,2.982,18,0.652,22,2.818,23,1.141,25,2.6,27,0.55,30,0.337,32,0.55,33,0.015,34,0.497,35,0.257,36,0.573,38,3.277,39,2.915,42,3.036,46,1.111,48,1.281,50,2.257,53,0.918,54,2.835,55,2.413,72,1.141,73,1.388,74,0.928,80,2.835,82,2.124,83,1.231,84,1.272,85,1.153,87,1.531,89,1.531,90,1.531,91,1.999,92,1.872,94,4.577,95,0.638,96,0.982,97,2.007,98,0.254,101,1.273,114,0.242,118,1.098,126,1.79,139,0.083,140,0.13,145,1.348,148,0.846,190,0.006,201,0.479,202,0.846,203,0.846,204,0.444,205,1.069,206,0.537,207,0.537,208,0.461,209,0.537,210,0.461,211,0.537,212,0.461,213,0.537,214,0.461,215,0.537,216,0.461,217,0.537,218,0.537,219,0.461,220,0.537,221,0.461,222,0.537,223,1.021,224,0.537,225,0.461,226,0.537,227,0.444,228,0.537,229,0.461,230,0.461,231,0.537,232,0.461,233,0.537,234,0.461,235,0.537,236,0.461,237,0.537,238,0.461,239,0.537,240,0.461,241,0.537,242,0.461,243,0.784,244,0.784,245,0.537,246,0.461,247,0.537,248,0.461,249,0.537,250,0.461,251,0.537,252,0.461,253,0.537,254,0.461,255,0.537,256,0.461,257,0.846,258,0.537,259,0.461,260,0.517,261,0.537,262,0.461,263,0.537,264,0.461,265,0.479,266,0.537,267,0.461,268,0.537,269,0.461,270,0.537,271,0.461,272,0.479,273,0.537,274,0.479,275,0.517,276,0.537,277,0.004,278,0.004,291,2.93,299,1.279,324,1.432,344,1.717,346,1.998,364,2.899,382,2.257,404,2.93,406,2.347,410,2.545,449,1.79,467,2.124,501,1.279,524,1.957,538,1.575,546,1.799,614,4.083,616,1.65,624,2.355,625,1.531,626,2.541,627,2.541,628,2.6,629,2.413,630,2.6,631,2.6,632,2.986,633,2.986,634,4.417,637,2.413,638,1.531,640,1.65,642,1.65,643,1.65,644,1.65,645,1.531,646,1.432,647,1.65,649,3.17,650,1.65,652,2.124,653,1.81,654,3.218,655,2.355,659,1.094,719,2.257,724,3.17,746,1.094,748,2.413,774,1.348,780,1.432,787,2.6,806,1.432,809,1.866,815,0.881,859,2.835,870,4.99,871,1.799,872,1.799,873,1.799,874,1.799,877,3.916,885,1.799,886,1.799,887,1.799,888,1.799,889,1.531,897,1.799,898,2.835,899,2.6,900,0.881,901,1.273,904,1.799,936,1.998,952,1.998,961,2.835,979,2.6,980,3.149,993,1.65,1043,3.218,1074,3.897,1077,3.897,1087,3.508,1120,1.531,1121,1.998,1122,3.973,1134,1.799,1135,1.998,1141,1.998,1144,1.998,1165,2.835,1194,2.835,1213,1.799,1214,4.487,1215,5.091,1216,2.124,1217,3.625,1218,3.625,1219,3.625,1220,4.487,1221,4.487,1222,5.091,1223,4.422,1224,3.625,1225,2.301,1226,2.301,1227,2.301,1228,2.301,1229,2.413,1230,2.301,1231,2.301,1232,2.301,1233,2.301,1234,2.301,1235,2.301,1236,2.301,1237,2.301,1238,2.301,1239,1.998,1240,1.799,1241,1.65,1242,1.531,1243,2.301,1244,2.301,1245,2.301,1246,2.301,1247,1.998,1248,1.799,1249,2.301,1250,2.301,1251,2.301,1252,1.998,1253,3.625,1254,2.301,1255,2.301,1256,2.301,1257,2.835,1258,1.998,1259,1.998,1260,1.998,1261,1.998,1262,2.301,1263,3.625,1264,2.301,1265,2.301,1266,2.301,1267,1.998,1268,3.625,1269,3.625,1270,1.998,1271,2.301,1272,2.301,1273,2.301,1274,1.998,1275,2.301,1276,2.301,1277,1.998,1278,2.301,1279,2.301,1280,2.301,1281,2.301,1282,2.301,1283,2.301,1284,2.301,1285,2.301,1286,3.625]],["title/components/ConditionsDisplay.html",[0,0.174,225,0.79]],["body/components/ConditionsDisplay.html",[0,0.201,1,0.473,2,0.77,3,0.075,4,0.075,5,0.53,6,0.53,7,0.53,8,0.057,10,0.455,11,1.713,12,0.862,14,0.094,15,0.278,18,0.663,23,1.163,27,0.561,30,0.327,32,1.027,33,0.015,34,0.639,35,0.261,36,1.07,39,2.567,42,3.842,46,0.473,47,0.981,72,1.163,73,0.903,74,1.003,83,1.199,84,0.686,85,0.634,91,2.345,92,2.489,93,2.857,95,0.564,96,1.234,97,2.046,98,0.261,101,1.305,114,0.543,126,0.941,130,1.468,139,0.085,140,0.06,148,1.204,174,2.46,178,2.89,185,2.523,189,3.378,190,0.007,201,0.491,202,0.862,203,0.862,204,0.455,205,0.996,206,0.55,207,0.55,208,0.473,209,0.55,210,0.473,211,0.55,212,0.473,213,0.55,214,0.473,215,0.55,216,0.473,217,1.063,218,0.55,219,0.473,220,0.55,221,0.473,222,0.55,223,0.473,224,0.55,225,1.192,226,0.55,227,0.996,228,0.55,229,0.473,230,0.473,231,0.55,232,0.473,233,0.55,234,0.473,235,0.55,236,0.473,237,0.55,238,0.473,239,0.55,240,0.473,241,0.55,242,0.473,243,0.8,244,0.8,245,0.55,246,0.473,247,0.55,248,0.473,249,0.55,250,0.473,251,0.55,252,0.473,253,0.55,254,0.473,255,0.55,256,0.473,257,0.862,258,0.55,259,0.473,260,0.53,261,0.55,262,0.473,263,0.55,264,0.473,265,0.491,266,0.55,267,0.473,268,0.55,269,0.473,270,0.55,271,0.473,272,0.491,273,0.55,274,0.491,275,0.53,276,0.55,277,0.004,278,0.004,296,3.747,299,1.146,344,0.903,350,1.57,378,2.344,402,3.441,404,2.957,410,2.48,501,1.146,524,1.306,538,1.981,542,1.305,544,1.691,545,2.67,563,2.165,584,2.46,626,3.103,627,3.103,653,1.845,655,1.238,687,2.165,710,3.565,711,3.283,715,2.651,716,3.435,717,3.702,719,2.301,721,1.844,724,3.213,733,2.651,735,2.46,741,1.305,742,2.651,743,1.845,745,1.381,746,1.122,747,1.691,748,2.46,749,2.165,750,2.46,751,1.691,752,1.57,753,3.49,754,1.57,755,1.691,756,1.57,757,1.57,758,1.57,759,1.691,760,1.57,761,1.57,762,1.57,763,1.57,764,3.435,765,3.213,766,3.435,767,2.89,770,3.702,771,1.691,773,1.844,774,1.381,775,1.844,794,2.651,795,1.691,796,1.691,797,2.89,798,2.89,893,1.844,1033,2.048,1082,2.89,1087,3.565,1104,2.89,1120,1.57,1122,2.651,1138,3.211,1287,2.048,1288,3.697,1289,3.697,1290,3.697,1291,3.697,1292,3.697,1293,3.697,1294,3.697,1295,3.697,1296,4.559,1297,3.697,1298,2.358,1299,2.358,1300,2.358,1301,3.697,1302,2.358,1303,3.697,1304,2.358,1305,3.697,1306,2.358,1307,3.697,1308,2.358,1309,3.697,1310,2.358,1311,3.697,1312,2.358,1313,3.697,1314,2.358,1315,2.358,1316,2.358,1317,3.697,1318,2.358,1319,2.358,1320,2.358,1321,1.844,1322,1.691,1323,2.358,1324,3.211,1325,2.46,1326,4.482,1327,3.697,1328,3.211,1329,2.358,1330,2.358,1331,4.559,1332,2.358,1333,3.96,1334,2.358,1335,2.358,1336,3.697,1337,3.697,1338,1.691,1339,3.211,1340,2.358,1341,2.358,1342,2.358,1343,2.358,1344,2.048,1345,2.358,1346,2.358,1347,2.358,1348,2.358,1349,2.358,1350,2.358,1351,2.358,1352,2.358,1353,2.358,1354,2.358,1355,2.358,1356,2.358,1357,2.358,1358,2.358,1359,2.358,1360,3.211,1361,2.358]],["title/components/ContextMenuComponent.html",[0,0.174,227,0.76]],["body/components/ContextMenuComponent.html",[0,0.243,1,0.456,2,0.749,3,0.073,4,0.073,5,0.511,6,0.511,7,0.511,8,0.055,10,0.439,11,1.707,12,0.838,14,0.091,15,0.27,18,0.523,27,0.345,30,0.315,32,0.888,33,0.015,34,0.588,35,0.24,36,0.926,46,0.893,47,2.106,48,1.27,52,3.63,55,2.965,66,4.201,72,1.734,73,1.376,74,0.801,82,2.106,83,1.063,84,1.18,85,1.09,91,1.72,92,2.153,95,0.423,98,0.252,114,0.533,118,2.137,126,1.434,139,0.082,140,0.058,141,1.136,164,3.242,189,2.657,190,0.006,201,0.474,202,0.838,203,0.838,204,0.439,205,0.976,206,0.531,207,0.531,208,0.456,209,0.531,210,0.456,211,0.531,212,0.456,213,0.531,214,0.456,215,0.531,216,0.456,217,0.531,218,0.531,219,0.456,220,0.531,221,0.456,222,0.531,223,0.456,224,0.531,225,0.456,226,0.531,227,0.976,228,0.531,229,0.456,230,0.456,231,0.531,232,0.456,233,0.531,234,0.456,235,0.531,236,0.456,237,0.531,238,0.456,239,0.531,240,0.456,241,0.531,242,0.456,243,0.778,244,0.778,245,0.531,246,0.456,247,0.531,248,0.456,249,0.531,250,0.456,251,0.531,252,0.456,253,0.531,254,0.456,255,0.531,256,0.456,257,0.531,258,0.531,259,0.456,260,0.511,261,0.531,262,0.456,263,0.531,264,0.456,265,0.474,266,0.531,267,0.456,268,0.531,269,0.456,270,0.531,271,0.456,272,0.474,273,0.531,274,0.474,275,0.511,276,0.531,277,0.004,278,0.004,299,0.903,344,2.908,350,2.393,378,2.299,414,1.417,415,2.393,467,2.106,501,1.644,538,0.989,542,2.466,545,2.106,599,3.63,652,2.965,658,1.78,659,1.083,662,1.26,672,1.78,711,4.65,749,4.372,753,3.151,757,1.515,760,4.082,763,2.393,764,2.393,765,3.151,766,2.393,768,3.484,771,2.578,788,3.63,811,2.238,847,3.122,877,3.369,880,2.774,900,2.242,1184,1.78,1248,3.957,1325,4.626,1362,1.977,1363,3.595,1364,3.595,1365,4.456,1366,3.122,1367,5.316,1368,3.595,1369,3.595,1370,3.595,1371,4.456,1372,5.061,1373,4.456,1374,4.309,1375,3.87,1376,2.924,1377,3.595,1378,3.595,1379,3.595,1380,5.327,1381,2.276,1382,3.595,1383,3.595,1384,3.595,1385,3.63,1386,2.276,1387,3.595,1388,2.276,1389,5.858,1390,3.595,1391,5.858,1392,3.595,1393,2.276,1394,4.396,1395,3.122,1396,3.595,1397,3.122,1398,2.276,1399,5.061,1400,3.595,1401,3.122,1402,3.595,1403,3.122,1404,3.595,1405,3.595,1406,3.595,1407,2.276,1408,2.276,1409,3.122,1410,2.276,1411,3.595,1412,3.595,1413,3.595,1414,5.061,1415,3.122,1416,3.595,1417,4.396,1418,2.276,1419,3.122,1420,4.396,1421,2.276,1422,2.276,1423,2.276,1424,2.276,1425,2.276,1426,2.276,1427,2.276,1428,2.276,1429,4.456,1430,2.276,1431,3.595,1432,1.78,1433,2.276,1434,2.276,1435,3.595,1436,2.276,1437,1.977,1438,3.595,1439,2.276,1440,2.276,1441,2.276,1442,1.977,1443,2.276,1444,2.276,1445,2.276,1446,4.456,1447,1.977,1448,3.595,1449,4.456,1450,1.977,1451,2.276,1452,2.276,1453,2.276,1454,2.276,1455,2.276,1456,2.276,1457,2.276,1458,3.595]],["title/classes/ContextMenuOption.html",[140,0.101,1385,2.825]],["body/classes/ContextMenuOption.html",[3,0.167,4,0.167,8,0.125,14,0.209,15,0.488,30,0.311,32,0.793,33,0.015,34,0.469,35,0.253,47,2.699,54,4.088,72,2.041,73,2.483,83,1.009,114,0.776,118,2.298,139,0.188,140,0.133,145,3.062,164,2.894,190,0.011,227,1.009,277,0.009,278,0.009,371,1.847,378,3.445,393,4.039,542,3.591,711,4.442,749,4.442,753,4.392,765,4.722,768,5.516,1042,4.318,1325,5.216,1366,5.635,1367,4.653,1385,4.653,1395,5.635,1459,4.541,1460,5.228,1461,5.228,1462,6.488,1463,6.488,1464,5.228]],["title/injectables/DoctorService.html",[291,1.874,496,0.99]],["body/injectables/DoctorService.html",[3,0.143,4,0.143,8,0.108,14,0.18,15,0.443,18,0.856,27,0.682,30,0.328,32,0.997,33,0.015,34,0.59,35,0.267,36,1.039,42,2.138,46,1.49,53,1.793,69,3.224,74,0.856,83,0.867,84,1.22,85,1.196,91,2.002,95,0.623,96,1.595,98,0.497,101,2.488,118,1.785,126,2.621,139,0.161,140,0.115,141,2.243,145,2.633,173,5.708,190,0.01,277,0.008,278,0.008,291,2.802,299,1.952,373,1.87,449,2.35,450,4.945,451,2.488,452,2.798,496,1.48,497,1.953,563,2.633,645,2.991,646,2.798,743,2.243,762,2.991,836,2.633,1048,3.514,1062,3.904,1156,3.514,1194,4.606,1229,2.991,1260,3.904,1465,3.904,1466,6.572,1467,5.708,1468,5.891,1469,6.975,1470,3.904,1471,5.891,1472,4.495,1473,4.495,1474,5.891,1475,4.495,1476,4.495,1477,4.495,1478,3.904,1479,4.495,1480,4.495,1481,5.891,1482,4.495,1483,3.514,1484,4.495,1485,4.495,1486,4.495,1487,4.495,1488,4.495,1489,4.495,1490,4.495,1491,4.495,1492,4.495,1493,4.495,1494,5.117,1495,4.495,1496,5.117,1497,4.495,1498,4.495,1499,5.117,1500,4.495,1501,4.495,1502,4.495,1503,3.904,1504,4.495,1505,4.495,1506,4.495]],["title/classes/Encounter.html",[140,0.101,1507,2.18]],["body/classes/Encounter.html",[3,0.148,4,0.148,8,0.111,14,0.185,15,0.452,18,0.873,30,0.348,33,0.015,35,0.28,74,1.026,114,0.848,139,0.166,140,0.118,144,4.024,148,1.822,185,2.564,190,0.011,197,3.323,277,0.008,278,0.008,371,1.637,373,1.927,374,2.452,375,3.329,378,3.321,512,3.083,524,2.123,542,2.564,583,4.31,686,4.783,687,4.133,696,2.884,697,3.906,698,2.714,836,2.714,900,2.701,1507,4.047,1508,4.024,1509,4.698,1510,5.373,1511,7.057,1512,7.057,1513,7.057,1514,7.057,1515,4.633,1516,4.633,1517,4.633,1518,4.633,1519,4.633,1520,4.633,1521,4.633,1522,4.633,1523,4.633,1524,4.633,1525,4.633,1526,4.633,1527,6.009,1528,3.622,1529,5.219,1530,4.633,1531,6.009,1532,4.633,1533,4.633,1534,4.633]],["title/injectables/EncounterService.html",[405,2.18,496,0.99]],["body/injectables/EncounterService.html",[3,0.119,4,0.119,8,0.089,14,0.149,15,0.39,18,0.868,27,0.787,30,0.3,32,0.979,33,0.015,34,0.58,35,0.244,36,1.021,72,2.032,74,0.868,84,0.692,85,0.639,95,0.698,96,1.617,98,0.412,114,0.68,130,2.32,139,0.134,140,0.165,148,1.584,164,3.306,190,0.009,205,0.719,277,0.007,278,0.007,299,0.937,405,2.873,406,2.878,449,2.07,478,1.956,486,3.718,496,1.304,497,1.619,501,1.922,506,2.481,507,3.783,509,3.04,524,1.317,537,4.508,659,1.773,661,2.481,675,2.063,682,2.841,809,2.355,811,4.228,814,2.481,815,1.427,817,2.673,818,4.378,819,3.231,820,2.32,821,2.673,822,2.914,823,2.32,824,2.673,826,2.914,865,4.059,1026,4.228,1030,3.237,1031,3.237,1041,4.508,1042,2.481,1043,3.723,1052,3.237,1053,4.059,1054,2.914,1055,2.914,1150,5.31,1165,2.914,1216,4.31,1376,2.981,1507,4.377,1535,3.237,1536,5.191,1537,6.033,1538,7.358,1539,5.191,1540,4.059,1541,5.191,1542,5.191,1543,5.191,1544,3.727,1545,5.191,1546,5.191,1547,5.191,1548,3.727,1549,5.191,1550,3.727,1551,2.673,1552,3.237,1553,3.727,1554,3.727,1555,3.727,1556,3.727,1557,3.727,1558,3.237,1559,3.727,1560,5.191,1561,3.727,1562,3.727,1563,3.727]],["title/injectables/FhirService.html",[406,1.571,496,0.99]],["body/injectables/FhirService.html",[3,0.152,4,0.152,8,0.114,14,0.19,15,0.46,18,0.889,27,1.025,30,0.339,32,1.025,33,0.015,34,0.607,35,0.271,36,1.068,74,1.037,83,1.18,84,0.884,85,0.817,91,2.296,95,0.58,98,0.527,114,0.844,126,2.441,139,0.171,140,0.122,148,1.427,190,0.011,277,0.008,278,0.008,375,2.378,406,2.441,478,2.501,496,1.538,497,2.07,501,1.698,524,1.684,682,2.911,1376,3.373,1564,4.138,1565,6.759,1566,5.285,1567,6.119,1568,7.132,1569,6.119,1570,6.119,1571,4.765,1572,6.119,1573,4.765,1574,6.119,1575,4.765,1576,6.119,1577,4.765,1578,6.119,1579,6.119,1580,4.765,1581,4.765,1582,4.765,1583,5.314,1584,6.119,1585,6.119,1586,6.406,1587,4.765,1588,4.765,1589,4.765,1590,4.765]],["title/classes/Form.html",[140,0.101,230,0.79]],["body/classes/Form.html",[3,0.19,4,0.19,8,0.143,14,0.239,15,0.529,30,0.33,33,0.014,35,0.286,48,2.485,114,0.74,118,2.264,139,0.214,140,0.153,190,0.012,230,1.41,277,0.011,278,0.011,371,2.111,374,2.748,1591,5.189,1592,5.975,1593,5.975,1594,5.975]],["title/components/FormBuilder.html",[0,0.174,229,0.79]],["body/components/FormBuilder.html",[0,0.253,1,0.692,2,1.374,3,0.11,4,0.11,5,0.775,6,0.775,7,0.775,8,0.083,10,0.665,11,1.77,12,1.146,14,0.138,15,0.37,18,0.832,23,1.547,27,0.868,30,0.339,32,0.523,33,0.015,34,0.56,35,0.27,36,0.545,46,1.251,53,1.376,74,0.959,83,1.361,84,0.64,85,0.591,95,0.466,96,1.55,97,2.721,98,0.382,114,0.657,118,1.045,139,0.124,140,0.088,190,0.009,201,0.719,202,1.146,203,1.146,204,0.665,205,1.273,206,0.805,207,0.805,208,0.692,209,0.805,210,0.692,211,0.805,212,0.692,213,0.805,214,0.692,215,0.805,216,0.692,217,0.805,218,0.805,219,0.692,220,0.805,221,0.692,222,0.805,223,0.692,224,0.805,225,0.692,226,0.805,227,0.665,228,0.805,229,1.251,230,1.446,231,0.805,232,0.692,233,0.805,234,0.692,235,0.805,236,0.692,237,0.805,238,0.692,239,0.805,240,0.692,241,0.805,242,0.692,243,1.063,244,1.063,245,0.805,246,0.692,247,0.805,248,0.692,249,0.805,250,0.692,251,0.805,252,0.692,253,0.805,254,0.692,255,0.805,256,0.692,257,0.805,258,0.805,259,0.692,260,0.775,261,0.805,262,0.692,263,0.805,264,0.692,265,0.719,266,0.805,267,0.692,268,0.805,269,0.692,270,0.805,271,0.692,272,0.719,273,0.805,274,0.719,275,0.775,276,0.805,277,0.006,278,0.006,344,1.32,441,6.045,449,1.376,524,1.219,717,4.476,719,3.06,724,3.886,741,1.909,788,2.474,945,3.354,1146,2.148,1156,2.697,1204,4.107,1216,2.02,1376,3.717,1595,5.726,1596,6.714,1597,2.996,1598,4.915,1599,5.726,1600,5.726,1601,4.915,1602,5.726,1603,6.597,1604,5.726,1605,6.241,1606,4.915,1607,6.241,1608,5.726,1609,5.726,1610,5.726,1611,4.915,1612,3.45,1613,3.45,1614,3.45,1615,3.45,1616,3.45,1617,3.45,1618,3.45,1619,3.45,1620,3.45,1621,4.915,1622,3.45,1623,3.45,1624,3.45,1625,3.45,1626,3.45,1627,3.45,1628,2.474,1629,3.45,1630,3.45,1631,3.45,1632,4.915,1633,3.45,1634,3.45,1635,4.973,1636,3.45,1637,3.45]],["title/modules/FormCreatorModule.html",[388,2.452,401,2.622]],["body/modules/FormCreatorModule.html",[3,0.152,4,0.152,8,0.114,33,0.015,46,0.954,95,0.737,98,0.526,139,0.171,140,0.121,190,0.011,201,0.991,216,1.607,242,1.607,244,1.322,246,1.607,256,1.607,259,1.607,277,0.008,278,0.008,388,2.962,390,3.166,391,3.166,392,5.281,393,2.962,394,3.72,395,5.281,401,5.46,413,4.779,414,2.962,415,3.166,417,4.132,471,5.309,472,5.309,473,3.72,474,3.412,475,5.309,476,3.72,1638,4.132,1639,4.132,1640,4.132,1641,4.757,1642,4.757,1643,4.757,1644,6.112,1645,4.757,1646,4.757,1647,4.757,1648,4.757,1649,4.757,1650,4.757]],["title/directives/HighlightDirective.html",[204,0.76,274,0.82]],["body/directives/HighlightDirective.html",[3,0.179,4,0.179,8,0.135,10,1.086,11,1.468,14,0.225,23,2.136,27,0.854,30,0.299,32,0.854,33,0.015,34,0.505,35,0.244,36,0.89,84,1.044,85,0.965,95,0.534,96,1.524,98,0.623,114,0.714,139,0.202,140,0.144,141,2.809,190,0.012,204,1.309,271,1.128,274,1.414,275,1.525,277,0.01,278,0.01,378,2.557,501,1.414,598,4.888,599,5.427,600,6.911,602,5.895,1651,4.888,1652,6.787,1653,6.787,1654,5.629,1655,5.629,1656,5.629,1657,5.629]],["title/components/HistoricalTrendsComponent.html",[0,0.174,232,0.79]],["body/components/HistoricalTrendsComponent.html",[0,0.21,1,0.507,2,0.813,3,0.081,4,0.081,5,0.569,6,0.569,7,0.569,8,0.061,10,0.488,11,1.725,12,0.911,14,0.101,15,0.294,18,0.568,27,0.592,29,3.035,30,0.322,32,0.878,33,0.015,34,0.592,35,0.236,36,0.916,39,1.558,46,1.075,48,1.894,50,1.576,56,2.55,73,2.343,74,0.89,83,1.181,84,1.075,85,0.993,92,1.436,95,0.625,98,0.28,99,1.684,118,1.445,139,0.091,140,0.065,148,0.59,183,3.606,189,2.503,190,0.007,201,0.527,202,0.911,203,0.911,204,0.488,205,1.034,206,0.59,207,0.59,208,0.507,209,0.59,210,0.507,211,0.59,212,0.507,213,0.59,214,0.507,215,0.59,216,0.507,217,0.59,218,0.59,219,0.507,220,0.59,221,0.507,222,0.59,223,0.507,224,0.59,225,0.507,226,0.59,227,1.034,228,0.59,229,0.507,230,0.783,231,0.59,232,1.075,233,0.59,234,0.507,235,0.59,236,0.507,237,0.59,238,0.507,239,0.59,240,0.507,241,0.59,242,0.507,243,0.845,244,0.845,245,0.59,246,0.507,247,0.59,248,0.507,249,0.59,250,0.507,251,0.59,252,0.507,253,0.59,254,0.507,255,0.59,256,0.507,257,0.59,258,0.59,259,0.507,260,0.569,261,0.59,262,0.507,263,0.59,264,0.507,265,0.527,266,0.59,267,0.507,268,0.59,269,0.507,270,0.59,271,0.507,272,0.527,273,0.59,274,0.527,275,0.569,276,0.59,277,0.008,278,0.004,318,2.198,344,1.495,353,3.053,354,3.053,361,3.392,364,1.15,378,1.15,407,2.814,409,3.532,410,1.009,414,1.576,467,2.287,470,4.385,501,1.854,524,1.38,528,3.053,536,1.401,610,2.198,619,1.979,623,3.053,637,1.684,653,1.949,655,1.328,658,1.979,659,1.204,662,1.401,672,1.979,696,2.431,697,3.822,698,2.287,707,1.815,711,3.393,716,3.568,741,1.401,742,2.801,743,1.949,745,1.482,747,1.815,749,2.287,750,2.599,751,1.815,752,1.684,753,2.431,754,1.684,755,1.815,756,1.684,757,1.684,758,1.684,759,1.815,761,2.599,763,1.684,764,1.684,765,1.576,766,1.684,770,1.815,788,1.815,809,1.996,811,1.576,815,0.969,819,2.431,830,3.053,836,1.482,877,1.684,880,1.576,900,2.69,901,1.401,907,2.599,922,1.979,927,4.141,928,2.198,930,4.529,979,1.815,986,2.198,1229,1.684,1257,4.786,1261,2.198,1325,1.684,1326,2.198,1344,5.317,1403,2.198,1432,3.053,1450,2.198,1635,3.392,1658,2.198,1659,3.905,1660,3.905,1661,4.768,1662,4.141,1663,4.141,1664,4.141,1665,4.768,1666,3.905,1667,5.361,1668,3.905,1669,3.905,1670,3.905,1671,2.531,1672,3.905,1673,3.053,1674,2.531,1675,3.905,1676,2.531,1677,2.531,1678,2.531,1679,3.905,1680,2.531,1681,3.905,1682,2.531,1683,3.905,1684,2.531,1685,6.905,1686,3.905,1687,3.392,1688,2.531,1689,2.531,1690,2.531,1691,2.531,1692,2.531,1693,2.531,1694,1.815,1695,1.979,1696,4.656,1697,2.531,1698,2.531,1699,2.531,1700,2.531,1701,3.905,1702,2.198,1703,4.768,1704,4.768,1705,2.531,1706,2.198,1707,3.392,1708,3.392,1709,2.531,1710,2.531,1711,2.531,1712,2.531,1713,5.793,1714,2.531,1715,5.793,1716,2.531,1717,2.198,1718,2.198,1719,2.198,1720,2.531,1721,2.531,1722,3.905,1723,2.531,1724,2.531,1725,2.531,1726,3.905,1727,3.392,1728,3.905,1729,2.531,1730,2.531,1731,3.905,1732,2.531,1733,2.531,1734,2.198,1735,2.531,1736,3.905,1737,3.905,1738,3.905,1739,3.905,1740,3.392,1741,2.599,1742,3.905,1743,3.053,1744,5.361]],["title/injectables/HistoricalTrendsService.html",[407,2.068,496,0.99]],["body/injectables/HistoricalTrendsService.html",[3,0.094,4,0.094,8,0.071,14,0.118,15,0.33,18,0.637,27,0.793,30,0.305,32,0.939,33,0.015,34,0.676,35,0.222,36,0.979,43,1.471,46,0.591,53,2.815,56,1.402,73,1.678,74,0.9,82,1.726,83,1.009,84,0.813,85,1.113,95,0.496,98,0.326,118,2.259,127,3.427,132,3.721,139,0.106,140,0.075,146,3.806,148,1.646,185,1.631,189,3.251,190,0.008,197,2.113,243,0.637,277,0.005,278,0.005,299,1.101,363,4.091,407,2.3,451,2.426,470,4.697,487,3.806,496,1.101,497,1.28,501,1.315,523,3.856,524,2.44,536,2.426,538,1.28,540,2.559,542,2.426,545,2.567,662,1.631,686,2.113,688,2.304,697,3.593,707,2.113,779,3.143,816,2.304,819,3.856,829,4.091,831,2.559,900,1.678,907,5.35,922,4.53,924,3.427,925,3.806,926,3.806,929,2.559,930,2.304,932,2.559,933,2.559,937,2.559,938,2.304,979,3.753,1026,1.834,1042,1.961,1201,2.917,1202,4.544,1240,2.304,1257,2.304,1324,2.559,1376,3.683,1415,2.559,1662,4.544,1663,3.806,1706,2.559,1707,5.998,1708,5.998,1718,2.559,1719,2.559,1727,2.559,1734,5.637,1745,2.559,1746,5.232,1747,4.382,1748,4.382,1749,4.382,1750,4.382,1751,4.382,1752,4.382,1753,4.382,1754,2.947,1755,4.382,1756,2.947,1757,4.382,1758,4.382,1759,2.947,1760,4.382,1761,2.947,1762,4.382,1763,2.947,1764,2.947,1765,2.947,1766,2.947,1767,2.113,1768,4.382,1769,2.947,1770,2.559,1771,2.947,1772,5.794,1773,2.947,1774,2.947,1775,2.947,1776,2.947,1777,4.382,1778,2.947,1779,2.947,1780,2.947,1781,2.947,1782,2.947,1783,6.722,1784,2.947,1785,2.947,1786,4.382,1787,4.382,1788,4.382,1789,2.947,1790,2.947,1791,5.794,1792,2.947,1793,2.947,1794,2.947,1795,2.947,1796,2.947,1797,2.947,1798,2.947,1799,2.947,1800,4.382,1801,2.947,1802,2.947,1803,2.947,1804,5.232,1805,5.232,1806,2.947,1807,2.947,1808,2.947,1809,2.947,1810,2.947,1811,2.947,1812,2.947,1813,2.947,1814,4.382,1815,4.382,1816,2.947,1817,4.382,1818,2.947,1819,4.382,1820,2.947,1821,2.947,1822,2.947]],["title/components/HomeComponent.html",[0,0.174,234,0.79]],["body/components/HomeComponent.html",[0,0.295,1,0.717,2,1.321,3,0.114,4,0.114,5,0.803,6,0.803,7,0.803,8,0.086,10,0.69,11,1.774,12,1.176,14,0.143,15,0.379,18,0.733,25,3.617,27,0.765,30,0.258,32,0.765,33,0.015,34,0.601,35,0.21,36,0.797,39,2.011,40,2.291,46,1.171,47,2.098,72,1.587,73,1.93,74,0.52,82,2.954,83,0.69,84,0.664,85,0.613,95,0.658,98,0.396,114,0.615,118,1.083,128,3.139,129,3.356,139,0.128,140,0.091,164,1.98,190,0.009,201,0.745,202,1.176,203,1.176,204,0.69,205,1.224,206,0.834,207,0.834,208,0.717,209,0.834,210,0.717,211,0.834,212,0.717,213,0.834,214,0.717,215,0.834,216,0.717,217,0.834,218,0.834,219,0.717,220,0.834,221,0.717,222,0.834,223,0.717,224,0.834,225,0.717,226,0.834,227,0.69,228,0.834,229,0.717,230,0.717,231,0.834,232,0.717,233,0.834,234,1.272,235,0.834,236,0.717,237,0.834,238,0.717,239,0.834,240,0.717,241,0.834,242,0.717,243,1.091,244,1.091,245,0.834,246,0.717,247,0.834,248,0.717,249,0.834,250,0.717,251,0.834,252,0.717,253,0.834,254,0.717,255,0.834,256,0.717,257,0.834,258,0.834,259,0.717,260,1.312,261,0.834,262,0.717,263,0.834,264,0.717,265,1.217,266,0.834,267,0.717,268,0.834,269,0.717,270,0.834,271,0.717,272,0.745,273,0.834,274,0.745,275,0.803,276,0.834,277,0.006,278,0.006,364,3.038,374,2.332,387,4.38,406,2.768,409,3.947,411,4.44,449,1.427,450,4.746,451,1.98,452,2.227,501,1.681,750,3.356,780,2.227,806,2.227,809,2.355,815,1.369,818,3.139,858,3.356,883,3.943,889,2.38,900,1.93,938,3.943,1201,2.38,1376,2.915,1566,3.943,1695,2.797,1702,3.106,1823,3.106,1824,5.043,1825,4.38,1826,4.38,1827,5.043,1828,5.043,1829,7.131,1830,5.043,1831,5.043,1832,3.577,1833,3.577,1834,3.577,1835,3.577,1836,3.106,1837,3.577,1838,3.577,1839,3.577,1840,3.577,1841,3.577,1842,3.577,1843,3.577]],["title/components/HoverBoxComponent.html",[0,0.174,236,0.79]],["body/components/HoverBoxComponent.html",[0,0.273,1,0.588,2,0.91,3,0.094,4,0.094,5,0.659,6,0.659,7,0.659,8,0.07,10,0.566,11,1.748,12,1.019,14,0.117,15,0.329,18,0.635,24,5.146,27,0.792,30,0.329,32,0.877,33,0.015,34,0.603,35,0.253,36,0.914,46,0.588,47,2.697,48,2.29,53,1.743,55,3.474,66,3.134,72,1.375,74,0.841,83,0.843,84,1.28,85,1.183,91,1.774,92,1.606,93,3.588,95,0.278,98,0.325,110,3.417,114,0.609,118,1.324,121,3.795,139,0.105,140,0.075,147,2.549,148,0.685,164,2.419,183,3.6,185,2.419,190,0.008,195,2.549,201,0.611,202,1.019,203,1.019,204,0.566,205,1.25,206,0.685,207,0.685,208,0.588,209,0.685,210,0.588,211,0.685,212,0.588,213,0.685,214,0.588,215,0.685,216,0.588,217,0.685,218,0.685,219,0.588,220,0.685,221,0.588,222,0.685,223,0.588,224,0.685,225,0.588,226,0.685,227,0.566,228,0.685,229,0.588,230,0.588,231,0.685,232,0.588,233,0.685,234,0.588,235,0.685,236,1.159,237,0.685,238,0.588,239,0.685,240,0.588,241,0.685,242,0.588,243,0.945,244,1.707,245,0.685,246,0.588,247,0.685,248,0.588,249,0.685,250,0.588,251,0.685,252,0.588,253,0.685,254,0.588,255,0.685,256,0.588,257,0.685,258,0.685,259,0.588,260,0.659,261,0.685,262,0.588,263,0.685,264,0.588,265,0.611,266,0.685,267,0.588,268,0.685,269,0.588,270,0.685,271,0.588,272,0.611,273,0.685,274,0.611,275,0.659,276,0.685,277,0.005,278,0.005,299,1.554,344,2.57,345,3.417,354,2.295,356,5.023,373,1.221,496,0.738,501,1.453,536,1.625,538,1.898,623,3.417,638,1.954,652,3.387,662,1.625,697,1.625,761,2.908,833,3.417,900,2.367,924,3.417,931,3.474,1201,1.954,1248,4.522,1367,3.134,1374,4.082,1375,5.37,1376,3.086,1380,4.534,1397,2.549,1419,3.795,1420,5.023,1432,2.295,1437,2.549,1442,2.549,1503,2.549,1687,3.795,1696,2.549,1767,3.134,1825,3.795,1826,4.534,1844,2.549,1845,6.83,1846,5.783,1847,3.795,1848,4.37,1849,5.22,1850,5.783,1851,5.22,1852,5.783,1853,4.37,1854,4.37,1855,4.37,1856,2.935,1857,2.935,1858,2.935,1859,2.935,1860,2.935,1861,4.37,1862,2.935,1863,4.37,1864,3.795,1865,4.37,1866,2.935,1867,2.935,1868,2.935,1869,2.935,1870,4.37,1871,2.935,1872,2.935,1873,2.935,1874,2.935,1875,2.935,1876,4.37,1877,2.549,1878,2.935,1879,2.935,1880,2.935,1881,2.935,1882,2.935,1883,2.935,1884,2.935,1885,5.023,1886,6.713]],["title/pipes/HumanizeBytesPipe.html",[1887,2.825,1888,3.08]],["body/pipes/HumanizeBytesPipe.html",[3,0.175,4,0.175,8,0.132,10,1.062,18,0.8,30,0.295,32,1.016,33,0.015,34,0.674,35,0.198,36,1.059,56,3.433,74,0.974,85,0.944,95,0.522,98,0.609,114,0.848,139,0.198,140,0.141,148,1.562,190,0.012,277,0.01,278,0.01,684,3.948,1887,4.803,1888,5.236,1889,5.505,1890,4.781,1891,6.697,1892,5.505,1893,6.697,1894,5.505,1895,6.697,1896,5.505,1897,6.697,1898,7.218,1899,5.505,1900,6.697,1901,5.505,1902,5.505,1903,5.505,1904,5.505,1905,5.505,1906,5.505,1907,5.505]],["title/classes/Link.html",[140,0.101,678,2.825]],["body/classes/Link.html",[3,0.19,4,0.19,8,0.143,14,0.238,15,0.528,30,0.31,33,0.014,35,0.252,114,0.812,139,0.252,140,0.179,190,0.012,277,0.011,278,0.011,299,1.765,371,2.107,675,3.3,676,4.662,677,5.179,678,5.356,681,6.486,682,3.553,1908,5.963,1909,5.963]],["title/components/LoadingAnimation.html",[0,0.174,238,0.79]],["body/components/LoadingAnimation.html",[0,0.324,1,0.94,2,1.262,3,0.149,4,0.149,5,1.054,6,1.054,7,1.054,8,0.113,10,0.905,11,1.804,12,1.413,27,1.017,30,0.207,33,0.014,34,0.602,46,0.94,72,1.476,95,0.445,98,0.519,139,0.168,140,0.12,190,0.011,201,0.977,202,1.413,203,1.413,204,0.905,205,1.368,206,1.094,207,1.094,208,0.94,209,1.094,210,0.94,211,1.094,212,0.94,213,1.094,214,0.94,215,1.094,216,0.94,217,1.094,218,1.094,219,0.94,220,1.094,221,0.94,222,1.094,223,0.94,224,1.094,225,0.94,226,1.094,227,0.905,228,1.094,229,0.94,230,0.94,231,1.094,232,0.94,233,1.094,234,0.94,235,1.094,236,0.94,237,1.094,238,1.507,239,1.094,240,0.94,241,1.094,242,0.94,243,1.31,244,1.31,245,1.094,246,0.94,247,1.094,248,0.94,249,1.094,250,0.94,251,1.094,252,0.94,253,1.094,254,0.94,255,1.094,256,0.94,257,1.094,258,1.094,259,0.94,260,1.054,261,1.094,262,0.94,263,1.094,264,0.94,265,0.977,266,1.094,267,0.94,268,1.094,269,0.94,270,1.094,271,0.94,272,0.977,273,1.094,274,0.977,275,1.054,276,1.094,277,0.008,278,0.008,1767,4.344,1910,4.074,1911,6.057,1912,5.261,1913,6.057,1914,6.057,1915,4.691]],["title/injectables/MapService.html",[408,2.452,496,0.99]],["body/injectables/MapService.html",[3,0.128,4,0.128,8,0.096,14,0.16,15,0.41,30,0.177,33,0.014,35,0.144,53,2.867,56,3.419,84,0.743,85,0.687,95,0.38,98,0.443,139,0.144,140,0.102,190,0.01,277,0.007,278,0.007,353,6.324,408,3.395,496,1.37,497,1.74,743,3.096,1026,2.493,1376,1.999,1741,4.432,1743,5.206,1916,3.478,1917,6.202,1918,6.659,1919,7.486,1920,7.188,1921,6.182,1922,6.659,1923,6.659,1924,5.454,1925,5.454,1926,4.737,1927,6.659,1928,5.454,1929,6.501,1930,6.659,1931,5.454,1932,7.188,1933,8.214,1934,5.454,1935,5.454,1936,7.486,1937,7.188,1938,6.241,1939,5.454,1940,7.486,1941,6.659,1942,5.454,1943,6.659,1944,5.454,1945,5.454,1946,4.737,1947,4.737,1948,7.188,1949,5.454,1950,5.454,1951,6.659,1952,5.454,1953,5.454,1954,6.659,1955,6.659,1956,5.454,1957,5.454,1958,5.454,1959,5.454,1960,4.737,1961,5.454,1962,5.454,1963,5.454,1964,4.005]],["title/classes/Medication.html",[132,2.18,140,0.101]],["body/classes/Medication.html",[3,0.176,4,0.176,8,0.133,14,0.221,15,0.505,27,0.839,30,0.332,32,0.839,33,0.015,34,0.704,35,0.277,36,0.875,48,1.956,114,0.853,132,3.719,139,0.199,140,0.141,190,0.012,277,0.01,278,0.01,371,1.956,375,2.763,696,3.446,697,3.719,698,3.242,834,6.284,840,6.888,851,4.808,1965,4.808,1966,5.836,1967,5.535,1968,5.535,1969,5.535,1970,5.535,1971,5.535,1972,5.535,1973,5.535]],["title/components/MedicationsComponent.html",[0,0.174,240,0.79]],["body/components/MedicationsComponent.html",[0,0.271,1,0.79,2,1.124,3,0.126,4,0.126,5,0.885,6,0.885,7,0.885,8,0.095,10,0.76,11,1.786,12,1.258,14,0.158,15,0.406,18,0.784,22,3.661,23,1.698,27,0.818,30,0.306,32,0.818,33,0.015,34,0.658,35,0.237,36,0.853,46,0.79,74,0.784,83,1.041,93,2.182,95,0.657,96,1.461,98,0.436,128,2.454,132,3.835,137,2.623,139,0.141,140,0.101,185,3.405,190,0.01,201,0.821,202,1.258,203,1.258,204,0.76,205,1.276,206,0.919,207,0.919,208,0.79,209,0.919,210,0.79,211,0.919,212,0.79,213,0.919,214,0.79,215,0.919,216,0.79,217,0.919,218,0.919,219,0.79,220,0.919,221,0.79,222,0.919,223,0.79,224,0.919,225,0.79,226,0.919,227,0.76,228,0.919,229,0.79,230,0.79,231,0.919,232,0.79,233,0.919,234,0.79,235,0.919,236,0.79,237,0.919,238,0.79,239,0.919,240,1.326,241,0.919,242,0.79,243,1.167,244,1.167,245,0.919,246,0.79,247,0.919,248,0.79,249,0.919,250,0.79,251,0.919,252,0.79,253,0.919,254,0.79,255,0.919,256,0.79,257,0.919,258,0.919,259,0.79,260,0.885,261,0.919,262,0.79,263,0.919,264,0.79,265,0.821,266,0.919,267,0.79,268,0.919,269,0.79,270,0.919,271,0.79,272,0.821,273,0.919,274,0.821,275,0.885,276,0.919,277,0.007,278,0.007,296,2.182,299,1.356,344,2.355,403,4.19,407,3.844,501,1.356,809,2.167,815,1.509,816,3.082,830,5.727,890,3.423,901,2.182,1338,2.827,1694,2.827,1974,3.423,1975,5.395,1976,3.942,1977,5.395,1978,5.395,1979,3.942,1980,3.942,1981,3.942,1982,3.942,1983,3.942,1984,3.423,1985,3.942,1986,3.942,1987,3.942,1988,3.942,1989,5.395]],["title/components/NormalBox1.html",[0,0.174,242,0.79]],["body/components/NormalBox1.html",[0,0.287,1,0.883,2,1.211,3,0.14,4,0.14,5,0.989,6,0.989,7,0.989,8,0.106,10,0.849,11,1.798,12,1.355,14,0.176,15,0.437,18,0.845,23,1.829,30,0.287,33,0.014,34,0.584,35,0.209,46,0.883,56,2.765,74,0.64,95,0.418,96,1.573,98,0.487,114,0.612,118,1.334,139,0.158,140,0.112,148,1.355,190,0.01,201,0.917,202,1.355,203,1.355,204,0.849,205,1.335,206,1.027,207,1.027,208,0.883,209,1.027,210,0.883,211,1.027,212,0.883,213,1.027,214,0.883,215,1.027,216,0.883,217,1.027,218,1.027,219,0.883,220,1.027,221,0.883,222,1.027,223,0.883,224,1.027,225,0.883,226,1.027,227,0.849,228,1.027,229,0.883,230,0.883,231,1.027,232,0.883,233,1.027,234,0.883,235,1.027,236,0.883,237,1.027,238,0.883,239,1.027,240,0.883,241,1.027,242,1.387,243,1.598,244,1.69,245,1.027,246,0.883,247,1.027,248,0.883,249,1.027,250,0.883,251,1.027,252,0.883,253,1.027,254,0.883,255,1.027,256,0.883,257,1.027,258,1.027,259,0.883,260,0.989,261,1.027,262,0.883,263,1.027,264,0.883,265,0.917,266,1.027,267,0.883,268,1.027,269,0.883,270,1.027,271,0.883,272,0.917,273,1.027,274,0.917,275,0.989,276,1.027,277,0.008,278,0.008,374,1.619,900,2.225,945,4.053,946,4.33,954,3.868,1990,5.41,1991,3.824,1992,5.812,1993,5.65,1994,4.403,1995,4.403,1996,4.403,1997,5.047,1998,3.158]],["title/components/NormalBox2.html",[0,0.174,246,0.79]],["body/components/NormalBox2.html",[0,0.287,1,0.883,2,1.211,3,0.14,4,0.14,5,0.989,6,0.989,7,0.989,8,0.106,10,0.849,11,1.798,12,1.355,14,0.176,15,0.437,18,0.845,23,1.829,30,0.287,33,0.014,34,0.584,35,0.209,46,0.883,74,0.64,95,0.418,96,1.573,98,0.487,114,0.612,118,1.334,139,0.158,140,0.112,148,1.355,190,0.01,201,0.917,202,1.355,203,1.355,204,0.849,205,1.335,206,1.027,207,1.027,208,0.883,209,1.027,210,0.883,211,1.027,212,0.883,213,1.027,214,0.883,215,1.027,216,0.883,217,1.027,218,1.027,219,0.883,220,1.027,221,0.883,222,1.027,223,0.883,224,1.027,225,0.883,226,1.027,227,0.849,228,1.027,229,0.883,230,0.883,231,1.027,232,0.883,233,1.027,234,0.883,235,1.027,236,0.883,237,1.027,238,0.883,239,1.027,240,0.883,241,1.027,242,0.883,243,1.598,244,1.69,245,1.027,246,1.387,247,1.027,248,0.883,249,1.027,250,0.883,251,1.027,252,0.883,253,1.027,254,0.883,255,1.027,256,0.883,257,1.027,258,1.027,259,0.883,260,0.989,261,1.027,262,0.883,263,1.027,264,0.883,265,0.917,266,1.027,267,0.883,268,1.027,269,0.883,270,1.027,271,0.883,272,0.917,273,1.027,274,0.917,275,0.989,276,1.027,277,0.008,278,0.008,374,1.619,900,2.225,945,4.053,946,4.33,954,3.868,1741,3.868,1990,5.41,1993,5.65,1997,5.047,1998,3.158,1999,3.824,2000,5.812,2001,4.403,2002,4.403,2003,4.403]],["title/classes/Observation.html",[43,1.966,140,0.101]],["body/classes/Observation.html",[3,0.14,4,0.14,8,0.105,14,0.175,15,0.436,18,0.843,30,0.353,32,0.985,33,0.015,34,0.583,35,0.286,36,1.027,43,3.996,47,1.826,74,1.005,85,0.753,95,0.416,113,5.079,114,0.822,139,0.158,140,0.112,145,2.571,148,1.612,184,4.659,190,0.01,243,0.95,277,0.008,278,0.008,299,1.737,371,1.551,373,2.703,374,2.388,378,2.635,493,4.044,516,5.079,684,4.16,687,3.805,695,3.432,743,3.86,829,3.432,993,4.659,1026,4.596,1510,3.148,2004,3.813,2005,6.496,2006,6.496,2007,5.642,2008,5.642,2009,6.911,2010,5.8,2011,5.8,2012,5.8,2013,4.39,2014,4.39,2015,4.39,2016,4.39,2017,4.39,2018,4.39,2019,4.39,2020,4.39,2021,4.39,2022,4.39,2023,4.39,2024,5.8,2025,4.39,2026,5.8,2027,4.39,2028,5.8,2029,4.39,2030,4.39,2031,4.39,2032,4.39,2033,4.39,2034,4.39,2035,4.39,2036,4.39,2037,4.39,2038,4.39,2039,4.39]],["title/components/ObservationRecursiveChart.html",[0,0.174,248,0.79]],["body/components/ObservationRecursiveChart.html",[0,0.268,1,0.774,2,1.108,3,0.123,4,0.123,5,0.867,6,0.867,7,0.867,8,0.093,10,0.745,11,1.783,12,1.24,14,0.154,15,0.4,18,0.773,23,1.674,25,4.364,27,0.585,28,3.353,29,3.382,30,0.321,32,0.807,33,0.015,34,0.618,35,0.247,36,0.841,43,2.655,46,0.774,48,2.72,74,0.885,83,0.745,95,0.622,96,1.647,98,0.427,99,2.57,102,2.404,118,1.843,139,0.139,140,0.099,141,1.927,148,1.24,190,0.009,201,0.804,202,1.24,203,1.24,204,0.745,205,1.265,206,0.9,207,0.9,208,0.774,209,0.9,210,0.774,211,0.9,212,0.774,213,0.9,214,0.774,215,0.9,216,0.774,217,0.9,218,0.9,219,0.774,220,0.9,221,0.774,222,0.9,223,0.774,224,0.9,225,0.774,226,0.9,227,0.745,228,0.9,229,0.774,230,0.774,231,0.9,232,0.774,233,0.9,234,0.774,235,0.9,236,0.774,237,0.9,238,0.774,239,0.9,240,0.774,241,0.9,242,0.774,243,1.151,244,1.151,245,0.9,246,0.774,247,0.9,248,1.315,249,0.9,250,0.774,251,0.9,252,0.774,253,0.9,254,0.774,255,0.9,256,0.774,257,0.9,258,0.9,259,0.774,260,0.867,261,0.9,262,0.774,263,0.9,264,0.774,265,0.804,266,0.9,267,0.774,268,0.9,269,0.774,270,0.9,271,0.774,272,0.804,273,0.9,274,0.804,275,0.867,276,0.9,277,0.007,278,0.007,296,3.368,299,1.648,344,2.329,407,3.442,501,0.97,945,3.841,1229,2.57,1338,2.769,1509,5.127,1673,4.758,1694,2.769,2040,3.353,2041,5.319,2042,5.319,2043,6.085,2044,6.557,2045,5.285,2046,5.319,2047,3.861,2048,3.861,2049,5.319,2050,3.861,2051,3.861,2052,3.861,2053,3.861,2054,3.861,2055,3.861,2056,5.319,2057,3.861,2058,3.861,2059,3.861,2060,5.319,2061,5.319,2062,5.319,2063,5.319,2064,4.62]],["title/injectables/ObservationService.html",[29,1.874,496,0.99]],["body/injectables/ObservationService.html",[3,0.081,4,0.081,8,0.061,14,0.101,15,0.294,18,0.568,27,0.593,29,1.859,30,0.337,32,0.929,33,0.015,34,0.55,35,0.259,36,0.968,40,3.072,43,2.677,47,3.007,48,1.686,53,3.012,56,3.592,71,3.73,74,1.051,83,1.356,84,1.136,85,1.05,92,1.437,95,0.605,98,0.28,102,1.577,114,0.727,118,2.092,126,1.01,139,0.091,140,0.065,148,1.113,183,2.97,190,0.007,277,0.004,278,0.004,299,1.836,364,2.167,373,1.626,374,2.757,375,1.264,406,2.443,410,2.546,467,2.289,478,1.329,496,0.982,497,1.1,501,1.199,507,3.141,509,2.794,524,2.164,590,2.2,632,3.175,633,3.175,655,2.504,662,2.163,675,3.389,682,1.205,746,1.205,806,1.577,809,1.184,814,1.686,817,1.817,819,2.433,823,1.577,824,1.817,904,1.98,931,1.686,993,1.817,1042,1.686,1053,3.055,1054,1.98,1055,1.98,1128,2.2,1134,1.98,1149,1.817,1223,4.658,1252,2.2,1267,2.2,1270,2.2,1274,2.2,1322,2.803,1494,6.464,1509,3.055,1552,2.2,1740,4.658,1741,5.176,1743,4.99,1921,3.055,1926,2.2,1929,2.2,1938,3.055,1946,2.2,1947,2.2,1960,2.2,2065,2.2,2066,5.363,2067,4.771,2068,5.795,2069,4.771,2070,4.771,2071,3.908,2072,4.771,2073,3.908,2074,4.771,2075,3.908,2076,3.908,2077,3.908,2078,5.363,2079,3.908,2080,3.908,2081,2.533,2082,2.533,2083,3.908,2084,2.533,2085,3.908,2086,3.908,2087,3.908,2088,2.533,2089,3.908,2090,2.533,2091,3.908,2092,2.533,2093,2.533,2094,3.908,2095,2.533,2096,2.533,2097,2.533,2098,2.533,2099,2.533,2100,2.533,2101,2.533,2102,2.533,2103,2.533,2104,2.533,2105,2.533,2106,2.533,2107,3.908,2108,2.533,2109,2.533,2110,3.908,2111,2.533,2112,2.533,2113,2.533,2114,2.533,2115,2.533,2116,2.533,2117,2.533,2118,2.533,2119,2.533,2120,2.533,2121,2.533,2122,2.533,2123,2.533,2124,3.908,2125,2.533,2126,2.533,2127,2.533,2128,2.533,2129,3.908,2130,2.533,2131,2.533,2132,1.98,2133,2.533,2134,2.533,2135,2.533,2136,2.533,2137,2.533,2138,2.533,2139,2.533,2140,2.533,2141,2.533,2142,2.533,2143,2.533,2144,4.658,2145,2.533,2146,2.533,2147,2.533,2148,2.533,2149,2.533,2150,2.533,2151,2.533,2152,2.533,2153,2.533,2154,2.533,2155,2.533,2156,3.908,2157,2.533,2158,3.908,2159,2.533,2160,2.533,2161,2.533,2162,2.533,2163,2.533,2164,2.533,2165,2.533,2166,2.533,2167,2.533,2168,3.908,2169,2.533]],["title/components/ObservationsComponent.html",[0,0.174,250,0.79]],["body/components/ObservationsComponent.html",[0,0.227,1,0.573,2,0.892,3,0.091,4,0.091,5,0.962,6,0.642,7,0.642,8,0.069,10,0.551,11,1.744,12,0.999,14,0.114,15,0.322,16,3.58,18,0.623,22,3.158,23,1.348,27,0.649,29,3.165,30,0.335,32,0.649,33,0.015,34,0.549,35,0.26,36,0.677,38,3.203,40,3.109,43,3.321,46,0.573,48,1.513,50,2.666,66,3.072,72,1.616,74,0.889,83,1.179,84,1.27,85,1.1,87,1.902,89,1.902,90,1.902,94,2.049,95,0.695,96,1.545,98,0.316,99,1.902,100,2.234,102,1.779,114,0.451,118,1.852,139,0.103,140,0.146,165,2.482,190,0.008,201,0.595,202,0.999,203,0.999,204,0.551,205,1.101,206,0.666,207,0.666,208,0.573,209,0.666,210,0.573,211,0.666,212,0.573,213,0.666,214,0.573,215,0.666,216,0.573,217,0.666,218,0.666,219,0.573,220,0.666,221,0.573,222,0.666,223,0.573,224,0.666,225,0.573,226,0.666,227,0.551,228,0.666,229,0.573,230,0.573,231,0.666,232,0.573,233,0.666,234,0.573,235,0.666,236,0.573,237,0.666,238,0.573,239,0.666,240,0.573,241,0.666,242,0.573,243,0.927,244,0.927,245,0.666,246,0.573,247,0.666,248,0.573,249,0.666,250,1.144,251,0.666,252,0.573,253,0.666,254,0.573,255,0.666,256,0.573,257,0.999,258,0.666,259,0.573,260,0.642,261,0.666,262,0.573,263,0.666,264,0.573,265,0.595,266,0.666,267,0.573,268,0.666,269,0.573,270,0.666,271,0.573,272,0.595,273,0.666,274,0.595,275,0.642,276,0.666,277,0.005,278,0.005,291,3.165,299,1.291,324,1.779,344,1.639,351,3.349,364,2.333,375,1.426,382,2.666,406,2.56,407,2.995,408,4.143,410,2.654,449,2.438,501,1.613,614,4.294,616,2.049,624,1.5,625,1.902,626,2.564,627,2.564,628,3.072,629,2.85,630,3.072,631,3.072,632,3.419,633,3.419,634,3.684,637,2.85,638,1.902,640,2.049,642,2.049,643,2.049,644,2.049,645,1.902,646,1.779,647,2.049,649,2.666,650,2.049,652,2.509,653,2.138,654,3.684,655,2.696,659,1.359,682,1.359,746,1.359,787,3.072,806,1.779,809,2.12,815,1.094,820,1.779,859,3.349,870,5.351,871,2.234,872,2.234,873,2.234,874,2.234,877,4.555,885,2.234,886,2.234,887,2.234,888,2.234,889,1.902,897,2.234,898,3.349,899,3.072,901,1.582,961,4.017,1146,2.666,1229,2.85,1247,2.482,1394,3.72,1447,2.482,1673,4.017,1694,2.049,1877,4.462,1912,3.72,2170,2.482,2171,4.283,2172,5.137,2173,4.283,2174,2.857,2175,2.857,2176,4.283,2177,4.283,2178,2.857,2179,2.857,2180,2.857,2181,2.857,2182,2.857,2183,2.857,2184,2.857,2185,2.857,2186,2.857,2187,2.857,2188,2.857]],["title/components/ObservationsDisplay.html",[0,0.174,252,0.79]],["body/components/ObservationsDisplay.html",[0,0.249,1,0.479,2,0.778,3,0.076,4,0.076,5,1.032,6,0.536,7,0.536,8,0.057,10,0.461,11,1.715,12,0.871,14,0.095,15,0.281,18,0.755,23,1.175,27,0.566,30,0.318,32,0.947,33,0.015,34,0.61,35,0.248,36,0.987,40,3.279,43,4.044,46,1.252,72,1.635,73,1.429,74,0.908,80,2.919,83,1.088,84,0.693,85,0.891,91,2.257,92,2.296,93,3.761,95,0.535,96,1.011,97,2.066,98,0.264,102,1.487,114,0.484,126,0.953,139,0.086,140,0.117,148,0.871,164,2.876,184,1.713,185,2.876,189,2.728,190,0.007,201,0.497,202,0.871,203,0.871,204,0.461,205,1.003,206,0.557,207,0.557,208,0.479,209,0.557,210,0.479,211,0.557,212,0.479,213,0.557,214,0.479,215,0.557,216,0.479,217,1.072,218,0.557,219,0.479,220,0.557,221,0.479,222,0.557,223,0.479,224,0.557,225,0.479,226,0.557,227,1.003,228,0.557,229,0.479,230,0.479,231,0.557,232,0.479,233,0.557,234,0.479,235,0.557,236,0.479,237,0.557,238,0.479,239,0.557,240,0.479,241,0.557,242,0.479,243,0.808,244,0.808,245,0.557,246,0.479,247,0.557,248,0.479,249,0.557,250,0.479,251,0.557,252,1.198,253,0.557,254,0.479,255,0.557,256,0.479,257,0.557,258,0.557,259,0.479,260,0.536,261,0.557,262,0.479,263,0.557,264,0.479,265,0.497,266,0.557,267,0.479,268,0.557,269,0.479,270,0.557,271,0.479,272,0.497,273,0.557,274,0.497,275,0.536,276,0.557,277,0.004,278,0.004,296,3.995,299,1.306,344,1.429,350,1.59,364,3.018,378,2.088,402,3.309,410,2.578,501,0.938,524,0.844,538,2.808,542,2.066,544,2.678,545,3.044,563,2.692,584,2.485,624,2.728,626,1.863,627,1.863,653,2.594,655,1.96,662,2.066,710,3.594,711,3.501,715,2.678,716,3.459,719,2.324,724,3.235,733,2.678,735,2.485,741,1.322,742,2.678,743,2.594,745,1.399,746,1.136,747,1.713,748,2.485,749,2.692,750,3.753,751,2.678,752,1.59,753,3.235,754,1.59,755,1.713,756,1.59,757,1.59,758,1.59,759,1.713,760,3.059,761,1.59,762,1.59,763,1.59,764,3.059,765,2.861,766,3.059,767,1.867,770,3.296,771,1.713,773,1.867,774,1.399,775,1.867,780,1.487,785,1.867,787,2.678,794,2.678,795,1.713,796,1.713,797,4.063,798,1.867,858,2.485,893,2.919,895,3.242,1122,1.713,1184,2.919,1321,1.867,1322,2.678,1328,2.074,1338,3.727,1339,4.513,1360,3.242,1478,3.242,1767,2.678,2045,3.992,2144,2.074,2189,2.074,2190,3.733,2191,3.733,2192,3.733,2193,3.733,2194,3.733,2195,3.733,2196,4.596,2197,2.074,2198,3.733,2199,2.388,2200,2.388,2201,3.733,2202,3.733,2203,2.388,2204,3.733,2205,5.639,2206,2.388,2207,3.733,2208,2.388,2209,3.733,2210,2.388,2211,3.733,2212,2.388,2213,2.388,2214,3.733,2215,3.733,2216,2.388,2217,2.388,2218,2.388,2219,3.733,2220,3.733,2221,2.388,2222,2.388,2223,2.388,2224,3.733,2225,2.388,2226,2.388,2227,2.388,2228,2.388,2229,2.388,2230,3.733,2231,2.388,2232,3.733,2233,3.733,2234,3.733,2235,3.733,2236,3.733]],["title/classes/Patient.html",[140,0.101,809,1.193]],["body/classes/Patient.html",[3,0.172,4,0.172,8,0.129,14,0.215,15,0.497,30,0.354,33,0.014,34,0.642,35,0.288,91,2.245,114,0.838,139,0.193,140,0.138,168,4.758,190,0.012,277,0.01,278,0.01,299,2.001,371,1.903,374,2.628,809,2.002,2237,4.679,2238,7.149,2239,7.149,2240,7.149,2241,6.209,2242,5.59,2243,7.149,2244,5.387,2245,5.387,2246,5.387,2247,5.387,2248,5.387,2249,5.387,2250,5.387,2251,5.387,2252,5.387]],["title/components/PatientComponent.html",[0,0.174,254,0.79]],["body/components/PatientComponent.html",[0,0.218,1,0.537,2,0.849,3,0.085,4,0.085,5,0.601,6,0.601,7,0.601,8,0.064,10,0.516,11,1.734,12,0.951,14,0.107,15,0.307,18,0.593,22,3.056,27,0.618,30,0.332,32,0.837,33,0.015,34,0.584,35,0.252,36,0.873,42,2.826,46,0.537,47,1.114,53,1.068,56,2.626,73,1.025,74,0.91,83,1.256,84,1.103,85,1.019,91,1.385,92,2.301,95,0.676,96,1.104,97,1.482,98,0.296,101,1.482,114,0.659,126,1.068,139,0.096,140,0.068,142,2.325,148,0.624,150,3.541,154,3.541,189,1.405,190,0.007,201,0.558,202,0.951,203,0.951,204,0.516,205,1.146,206,0.624,207,0.624,208,0.537,209,0.624,210,0.537,211,0.624,212,0.537,213,0.624,214,0.537,215,0.624,216,0.537,217,0.624,218,0.624,219,0.537,220,0.624,221,0.537,222,0.624,223,0.537,224,0.624,225,0.537,226,0.624,227,0.516,228,0.624,229,0.537,230,0.537,231,0.624,232,0.537,233,0.624,234,1.345,235,0.624,236,1.107,237,0.624,238,0.537,239,0.624,240,0.537,241,0.624,242,0.537,243,0.882,244,1.068,245,0.624,246,0.537,247,0.624,248,0.537,249,0.624,250,0.537,251,0.624,252,0.537,253,0.624,254,1.107,255,0.624,256,0.537,257,0.624,258,0.624,259,0.537,260,0.601,261,0.624,262,0.537,263,0.624,264,0.537,265,0.558,266,0.624,267,0.537,268,0.624,269,0.537,270,0.624,271,0.537,272,0.558,273,0.624,274,0.558,275,0.601,276,0.624,277,0.005,278,0.005,291,3.096,299,1.241,324,1.667,344,1.561,358,5.245,404,3.096,405,3.602,449,1.068,450,4.166,451,1.482,452,1.667,496,1.025,501,1.791,536,1.482,652,1.568,741,1.482,743,2.035,745,1.568,809,2.082,815,1.025,833,2.093,836,1.568,891,1.92,900,1.025,901,1.482,1006,4.288,1009,4.795,1043,1.92,1082,3.188,1104,3.188,1120,1.782,1204,2.924,1216,3.666,1467,4.288,1470,2.325,1499,2.325,1507,2.257,1510,4.811,1528,2.093,1529,2.325,1537,3.861,1540,4.317,1551,1.92,1558,2.325,1845,4.795,2242,3.188,2253,2.325,2254,4.077,2255,4.938,2256,6.872,2257,4.938,2258,4.077,2259,4.077,2260,4.077,2261,4.077,2262,2.677,2263,2.677,2264,2.677,2265,2.677,2266,2.677,2267,4.077,2268,2.677,2269,2.677,2270,2.677,2271,2.677,2272,2.677,2273,4.077,2274,2.677,2275,2.677,2276,2.677,2277,2.677,2278,2.093,2279,2.677,2280,2.677,2281,2.677,2282,2.677,2283,2.677,2284,5.521,2285,2.677,2286,2.677,2287,4.077,2288,4.077,2289,2.677,2290,2.677,2291,2.325,2292,2.677,2293,2.677,2294,2.677,2295,2.677,2296,2.677,2297,4.938,2298,5.521,2299,2.677,2300,2.677,2301,4.288,2302,2.677,2303,2.325,2304,2.677,2305,2.677,2306,2.677,2307,2.325,2308,2.677,2309,5.521,2310,2.677,2311,2.677,2312,2.677,2313,2.677,2314,4.077,2315,2.677,2316,4.077,2317,4.077,2318,3.541,2319,4.077,2320,5.521,2321,2.677,2322,2.677,2323,2.677,2324,2.677]],["title/injectables/PatientService.html",[409,2.18,496,0.99]],["body/injectables/PatientService.html",[3,0.146,4,0.146,8,0.11,14,0.183,15,0.448,18,0.866,27,0.903,30,0.321,32,0.903,33,0.015,34,0.535,35,0.238,36,0.941,74,0.866,83,0.882,84,0.848,85,0.783,95,0.708,98,0.505,114,0.697,139,0.164,140,0.117,148,1.389,190,0.011,205,0.882,277,0.008,278,0.008,374,2.581,406,3.032,409,3.296,478,2.398,486,4.124,496,1.497,497,1.985,501,1.829,506,3.041,507,4.112,509,3.488,523,3.041,538,1.985,659,2.174,661,3.041,662,3.667,682,2.174,760,3.041,809,2.361,811,4.124,814,3.041,815,1.749,818,2.845,820,2.845,821,3.277,823,2.845,1149,3.277,1376,3.307,2242,3.573,2307,3.969,2318,3.969,2325,3.969,2326,5.754,2327,7.28,2328,7.02,2329,6.625,2330,5.955,2331,4.57,2332,5.955,2333,4.57,2334,4.57,2335,5.955,2336,4.57,2337,4.57,2338,4.57,2339,4.57,2340,4.57,2341,4.57,2342,4.57,2343,4.57,2344,4.57]],["title/components/ScratchPadUpdate.html",[0,0.174,256,0.79]],["body/components/ScratchPadUpdate.html",[0,0.278,1,0.829,2,1.161,3,0.132,4,0.132,5,0.929,6,0.929,7,0.929,8,0.099,10,0.798,11,1.791,12,1.3,14,0.165,15,0.419,18,0.81,23,1.754,30,0.32,32,0.627,33,0.015,34,0.606,35,0.253,36,0.654,46,0.829,72,2.123,74,0.81,83,1.076,95,0.392,96,1.509,98,0.458,114,0.804,118,1.253,139,0.148,140,0.106,148,0.965,168,3.71,170,3.998,190,0.01,201,0.862,202,1.3,203,1.3,204,0.798,205,1.302,206,0.965,207,0.965,208,0.829,209,0.965,210,0.829,211,0.965,212,0.829,213,0.965,214,0.829,215,0.965,216,0.829,217,0.965,218,0.965,219,0.829,220,0.965,221,0.829,222,0.965,223,0.829,224,0.965,225,0.829,226,0.965,227,0.798,228,0.965,229,0.829,230,0.829,231,0.965,232,0.829,233,0.965,234,0.829,235,0.965,236,0.829,237,0.965,238,0.829,239,0.965,240,0.829,241,0.965,242,0.829,243,1.206,244,1.206,245,0.965,246,0.829,247,0.965,248,0.829,249,0.965,250,0.829,251,0.965,252,0.829,253,0.965,254,0.829,255,0.965,256,1.353,257,1.471,258,0.965,259,0.829,260,0.929,261,0.965,262,0.829,263,0.965,264,0.829,265,0.862,266,0.965,267,0.829,268,0.965,269,0.829,270,0.965,271,0.829,272,0.862,273,0.965,274,0.862,275,0.929,276,0.965,277,0.007,278,0.007,374,1.521,584,4.197,649,3.471,687,3.953,945,3.953,946,4.197,954,3.71,1998,2.967,2345,6.442,2346,3.593,2347,5.575,2348,5.575,2349,5.575,2350,4.137,2351,4.137,2352,5.575,2353,4.137,2354,5.575,2355,4.137,2356,4.137,2357,4.137,2358,4.137,2359,5.575,2360,4.137,2361,5.575]],["title/components/SelectListSingle.html",[0,0.174,259,0.79]],["body/components/SelectListSingle.html",[0,0.287,1,0.88,2,1.208,3,0.14,4,0.14,5,0.986,6,0.986,7,0.986,8,0.105,10,0.847,11,1.797,12,1.353,14,0.175,15,0.436,18,0.843,23,1.825,30,0.287,33,0.014,34,0.583,35,0.208,46,1.55,74,0.638,95,0.416,96,1.57,98,0.486,114,0.61,118,1.33,139,0.158,140,0.112,148,1.353,190,0.01,201,0.914,202,1.353,203,1.353,204,0.847,205,1.333,206,1.024,207,1.024,208,0.88,209,1.024,210,0.88,211,1.024,212,0.88,213,1.024,214,0.88,215,1.024,216,0.88,217,1.024,218,1.024,219,0.88,220,1.024,221,0.88,222,1.024,223,0.88,224,1.024,225,0.88,226,1.024,227,0.847,228,1.024,229,0.88,230,0.88,231,1.024,232,0.88,233,1.024,234,0.88,235,1.024,236,0.88,237,1.024,238,0.88,239,1.024,240,0.88,241,1.024,242,0.88,243,1.255,244,1.255,245,1.024,246,0.88,247,1.024,248,0.88,249,1.024,250,0.88,251,1.024,252,0.88,253,1.024,254,0.88,255,1.024,256,0.88,257,1.024,258,1.024,259,1.386,260,1.614,261,1.024,262,0.88,263,1.024,264,0.88,265,0.914,266,1.024,267,0.88,268,1.024,269,0.88,270,1.024,271,0.88,272,0.914,273,1.024,274,0.914,275,0.986,276,1.024,277,0.008,278,0.008,374,1.614,900,2.22,945,4.048,946,4.324,954,3.861,955,5.038,1998,3.148,2362,6.002,2363,3.813,2364,5.8,2365,5.8,2366,6.496,2367,4.39,2368,4.39,2369,4.39,2370,5.8]],["title/classes/Server.html",[140,0.101,1216,2.307]],["body/classes/Server.html",[3,0.182,4,0.182,8,0.137,14,0.229,15,0.516,27,0.868,30,0.324,32,0.868,33,0.014,34,0.709,35,0.263,36,0.905,114,0.857,139,0.205,140,0.146,190,0.012,277,0.01,278,0.01,371,2.023,682,3.757,1216,4.016,1376,3.883,1966,4.972,2371,4.972,2372,5.725,2373,6.857,2374,5.725]],["title/injectables/SmartService.html",[411,2.452,496,0.99]],["body/injectables/SmartService.html",[3,0.103,4,0.103,8,0.077,10,0.621,14,0.129,15,0.352,18,0.68,27,0.71,30,0.337,32,0.71,33,0.015,34,0.42,35,0.267,36,0.74,58,2.797,74,0.879,83,0.621,84,1.022,85,0.945,95,0.636,98,0.356,114,0.824,130,2.913,139,0.116,140,0.082,148,1.41,190,0.008,197,2.31,205,1.293,230,0.646,277,0.011,278,0.006,345,2.518,373,2.292,406,2.758,409,3.827,411,2.913,415,2.144,449,1.285,450,4.602,451,1.783,452,2.005,478,1.691,479,2.518,480,2.518,481,2.797,496,1.176,497,1.399,501,1.52,506,2.144,507,3.542,509,2.74,524,1.138,536,1.783,624,3.174,682,1.532,779,2.31,809,1.417,820,2.005,823,2.005,889,2.144,900,1.233,1146,2.005,1277,2.797,1496,2.797,1566,2.518,1583,4.063,1586,4.785,1695,2.518,2132,3.658,2326,6.271,2375,2.797,2376,6.047,2377,5.51,2378,5.51,2379,5.51,2380,5.819,2381,5.51,2382,6.047,2383,5.51,2384,6.047,2385,4.679,2386,6.047,2387,6.047,2388,3.221,2389,3.221,2390,4.679,2391,3.221,2392,4.679,2393,3.221,2394,3.221,2395,3.221,2396,3.221,2397,4.679,2398,4.679,2399,4.679,2400,4.679,2401,4.679,2402,3.221,2403,3.221,2404,3.221,2405,4.679,2406,3.221,2407,4.679,2408,4.679,2409,3.221,2410,3.221,2411,3.221,2412,6.047,2413,3.221,2414,4.679,2415,4.679,2416,5.51,2417,4.679,2418,4.679,2419,3.221,2420,3.221,2421,3.221,2422,3.221,2423,3.221,2424,3.221,2425,3.221,2426,3.221,2427,3.221,2428,5.51,2429,5.51,2430,3.221,2431,4.679,2432,3.221,2433,4.679,2434,4.679,2435,4.679,2436,3.221,2437,3.221,2438,3.221,2439,3.221,2440,3.221,2441,3.221,2442,3.221,2443,3.221,2444,3.221,2445,3.221,2446,3.221,2447,3.221,2448,3.221,2449,4.679,2450,3.221,2451,3.221,2452,3.221,2453,3.221,2454,3.221,2455,3.221,2456,3.221,2457,3.221,2458,3.221,2459,3.221,2460,3.221,2461,2.797,2462,3.221,2463,5.51,2464,3.221,2465,3.221,2466,3.221,2467,3.221,2468,3.221,2469,3.221,2470,3.221,2471,3.221,2472,3.221,2473,2.797,2474,3.221,2475,3.221,2476,3.221,2477,4.679,2478,3.221,2479,3.221,2480,3.221,2481,3.221]],["title/classes/Timeline.html",[140,0.101,265,0.82]],["body/classes/Timeline.html",[3,0.177,4,0.177,8,0.134,14,0.222,15,0.507,30,0.35,33,0.014,35,0.285,113,5.671,114,0.826,139,0.2,140,0.142,190,0.012,265,1.404,277,0.01,278,0.01,371,1.967,373,3.017,374,2.666,516,5.671,687,4.248,1026,4.987,2007,6.299,2008,6.299,2482,4.834,2483,5.566,2484,5.566,2485,5.566,2486,5.566,2487,5.566,2488,5.566,2489,5.566]],["title/components/TimelineComponent.html",[0,0.174,262,0.79]],["body/components/TimelineComponent.html",[0,0.249,1,0.673,2,1.004,3,0.107,4,0.107,5,0.754,6,0.754,7,0.754,8,0.081,10,0.648,11,1.766,12,1.124,14,0.134,15,0.363,18,0.701,22,3.412,23,1.517,27,0.509,30,0.337,32,0.509,33,0.015,34,0.554,35,0.251,36,0.531,46,0.673,48,1.703,53,1.923,74,0.988,83,1.446,84,1.047,85,0.967,92,2.266,95,0.619,96,1.305,98,0.371,126,1.923,139,0.12,140,0.086,141,1.676,148,0.783,190,0.009,201,0.699,202,1.124,203,1.124,204,0.648,205,1.189,206,0.783,207,0.783,208,0.673,209,0.783,210,0.673,211,0.783,212,0.673,213,0.783,214,0.673,215,0.783,216,0.673,217,0.783,218,0.783,219,0.673,220,0.783,221,0.673,222,0.783,223,0.673,224,0.783,225,0.673,226,0.783,227,0.648,228,0.783,229,0.673,230,0.673,231,0.783,232,0.673,233,0.783,234,0.673,235,0.783,236,0.673,237,0.783,238,0.673,239,0.783,240,0.673,241,0.783,242,0.673,243,1.043,244,1.043,245,0.783,246,0.673,247,0.783,248,0.673,249,0.783,250,0.673,251,0.783,252,0.673,253,0.783,254,0.673,255,0.783,256,0.673,257,0.783,258,0.783,259,0.673,260,0.754,261,0.783,262,1.236,263,0.783,264,1.236,265,0.699,266,0.783,267,0.673,268,0.783,269,0.673,270,0.783,271,0.673,272,0.699,273,0.783,274,0.699,275,0.754,276,0.783,277,0.006,278,0.006,299,1.211,405,3.762,501,1.883,528,3.769,716,4.103,741,1.858,743,2.406,745,1.966,809,2.059,815,1.285,901,1.858,1242,3.754,1507,2.668,1537,4.82,1540,4.82,1551,2.408,1885,2.916,1984,2.916,2278,2.625,2291,2.916,2490,2.916,2491,4.821,2492,4.821,2493,6.529,2494,5.641,2495,6.529,2496,5.641,2497,6.165,2498,6.165,2499,2.916,2500,4.821,2501,3.357,2502,3.357,2503,3.357,2504,3.357,2505,3.357,2506,3.357,2507,3.357,2508,3.357,2509,3.357,2510,3.357,2511,4.821,2512,3.357,2513,3.357,2514,4.821,2515,3.357,2516,3.357,2517,5.641,2518,3.357,2519,3.357,2520,4.821,2521,3.357,2522,4.821,2523,3.357,2524,3.357,2525,3.357,2526,3.357,2527,3.357,2528,3.357,2529,3.357,2530,3.357,2531,3.357,2532,3.357,2533,3.357,2534,3.357,2535,3.357,2536,3.357]],["title/components/TimelinePopupComponent.html",[0,0.174,264,0.79]],["body/components/TimelinePopupComponent.html",[0,0.262,1,0.739,2,1.073,3,0.117,4,0.117,5,0.828,6,0.828,7,0.828,8,0.088,10,0.711,11,1.778,12,1.201,14,0.147,15,0.387,18,0.749,27,0.559,30,0.309,32,0.9,33,0.015,34,0.629,35,0.251,36,0.939,46,0.739,74,0.749,83,1.24,84,0.684,85,0.632,92,1.894,95,0.665,96,0.998,98,0.408,139,0.132,140,0.094,141,1.84,190,0.009,201,0.768,202,1.201,203,1.201,204,0.711,205,1.24,206,0.86,207,0.86,208,0.739,209,0.86,210,0.739,211,0.86,212,0.739,213,0.86,214,0.739,215,0.86,216,0.739,217,0.86,218,0.86,219,0.739,220,0.86,221,0.739,222,0.86,223,0.739,224,0.86,225,0.739,226,0.86,227,0.711,228,0.86,229,0.739,230,0.739,231,0.86,232,0.739,233,0.86,234,0.739,235,0.86,236,1.289,237,0.86,238,0.739,239,0.86,240,0.739,241,0.86,242,0.739,243,1.114,244,1.114,245,0.86,246,0.739,247,0.86,248,0.739,249,0.86,250,0.739,251,0.86,252,0.739,253,0.86,254,0.739,255,0.86,256,0.739,257,0.86,258,0.86,259,0.739,260,0.828,261,0.86,262,0.739,263,0.86,264,1.289,265,1.237,266,0.86,267,0.739,268,0.86,269,0.739,270,0.86,271,0.739,272,0.768,273,0.86,274,0.768,275,0.828,276,0.86,277,0.007,278,0.007,299,1.492,344,2.589,373,2.674,405,3.878,524,1.82,697,2.04,741,2.04,743,2.571,745,2.159,774,3.017,809,1.117,815,1.411,1204,2.644,1242,3.428,1417,5.583,1507,4.061,1510,2.644,1528,5.026,1551,2.644,1664,6.086,1847,5.156,2064,4.473,2278,2.882,2303,3.201,2499,3.201,2537,3.201,2538,5.151,2539,7.007,2540,5.151,2541,5.151,2542,3.686,2543,5.151,2544,3.686,2545,5.151,2546,3.686,2547,3.686,2548,5.151,2549,3.201,2550,3.686,2551,3.686,2552,3.686,2553,3.686,2554,3.686,2555,3.686,2556,3.686,2557,3.686,2558,3.686,2559,3.686,2560,5.151,2561,5.151,2562,5.151,2563,5.151]],["title/injectables/ToolBarService.html",[412,2.452,496,0.99]],["body/injectables/ToolBarService.html",[3,0.189,4,0.189,8,0.142,14,0.236,15,0.526,27,1.129,30,0.328,33,0.014,35,0.251,95,0.561,98,0.654,114,0.81,139,0.212,140,0.151,190,0.012,277,0.01,278,0.01,412,4.353,496,1.757,497,2.57,2564,5.138,2565,7.444,2566,7.444,2567,6.992,2568,5.916]],["title/components/ToolbarComponent.html",[0,0.174,267,0.79]],["body/components/ToolbarComponent.html",[0,0.283,1,0.642,2,0.97,3,0.102,4,0.102,5,0.719,6,0.719,7,0.719,8,0.077,10,0.617,11,1.76,12,1.086,14,0.128,15,0.35,18,0.677,23,1.465,27,0.706,29,3.282,30,0.304,32,0.485,33,0.015,34,0.541,35,0.197,36,0.506,39,1.858,40,2.115,46,0.642,55,3.099,72,1.007,73,1.783,74,0.876,83,1.163,84,1.019,85,0.549,91,1.582,92,1.712,93,2.578,95,0.671,96,1.261,98,0.354,99,2.13,106,3.34,139,0.115,140,0.082,190,0.008,201,0.667,202,1.086,203,1.086,204,0.617,205,1.163,206,0.746,207,0.746,208,0.642,209,0.746,210,0.642,211,0.746,212,0.642,213,0.746,214,0.642,215,0.746,216,0.642,217,0.746,218,0.746,219,0.642,220,0.746,221,0.642,222,0.746,223,0.642,224,0.746,225,0.642,226,0.746,227,0.617,228,0.746,229,0.642,230,0.642,231,0.746,232,0.642,233,0.746,234,0.642,235,0.746,236,0.642,237,0.746,238,0.642,239,0.746,240,0.642,241,0.746,242,0.642,243,1.007,244,1.007,245,0.746,246,0.642,247,0.746,248,0.642,249,0.746,250,0.642,251,0.746,252,0.642,253,0.746,254,0.642,255,0.746,256,0.642,257,0.746,258,0.746,259,0.642,260,0.719,261,0.746,262,0.642,263,0.746,264,0.642,265,0.667,266,0.746,267,1.209,268,0.746,269,0.642,270,0.746,271,0.642,272,0.667,273,0.746,274,0.667,275,0.719,276,0.746,277,0.006,278,0.006,291,3.282,324,1.992,364,2.115,382,3.753,402,3.7,404,3.282,410,2.752,412,4.296,414,2.899,449,1.277,501,1.84,505,5.236,518,4.045,520,2.779,538,2.904,544,3.34,545,2.728,579,2.779,599,4.324,626,3.444,627,3.444,653,3.444,746,1.522,809,2.142,815,1.225,858,4.013,881,4.045,883,5.528,891,2.295,892,3.641,1120,2.13,1146,1.992,1169,3.641,1321,2.502,1401,4.045,1483,4.714,2197,2.779,2569,2.779,2570,4.657,2571,5.49,2572,6.029,2573,6.029,2574,6.029,2575,5.49,2576,4.657,2577,3.2,2578,3.2,2579,4.657,2580,3.2,2581,3.2,2582,3.2,2583,4.657,2584,6.029,2585,6.029,2586,5.49,2587,4.657,2588,3.2,2589,4.657,2590,3.2,2591,3.2,2592,3.2,2593,3.2,2594,3.2,2595,3.2,2596,3.2,2597,3.2]],["title/components/TripleListComponent.html",[0,0.174,269,0.79]],["body/components/TripleListComponent.html",[0,0.316,1,0.872,2,1.201,3,0.139,4,0.139,5,0.978,6,0.978,7,0.978,8,0.104,10,0.84,11,1.797,12,1.345,14,0.174,23,1.815,27,0.981,30,0.254,33,0.015,34,0.581,35,0.156,39,2.3,40,2.62,41,3.192,46,1.297,72,1.369,95,0.547,96,1.561,98,0.481,117,5.009,118,2.086,139,0.156,140,0.111,190,0.01,201,0.906,202,1.345,203,1.345,204,0.84,205,1.329,206,1.015,207,1.015,208,0.872,209,1.015,210,0.872,211,1.015,212,0.872,213,1.015,214,0.872,215,1.015,216,0.872,217,1.015,218,1.015,219,0.872,220,1.015,221,0.872,222,1.015,223,0.872,224,1.015,225,0.872,226,1.015,227,0.84,228,1.015,229,0.872,230,0.872,231,1.015,232,0.872,233,1.015,234,0.872,235,1.015,236,0.872,237,1.015,238,0.872,239,1.015,240,0.872,241,1.015,242,0.872,243,1.248,244,1.248,245,1.015,246,0.872,247,1.015,248,0.872,249,1.015,250,0.872,251,1.015,252,0.872,253,1.015,254,0.872,255,1.015,256,0.872,257,1.015,258,1.015,259,0.872,260,0.978,261,1.015,262,0.872,263,1.015,264,0.872,265,0.906,266,1.015,267,0.872,268,1.015,269,1.381,270,1.509,271,0.872,272,0.906,273,1.015,274,0.906,275,0.978,276,1.015,277,0.008,278,0.008,617,4.509,618,5.009,809,2.362,815,1.666,858,3.838,865,4.509,1259,5.009,1333,5.009,1483,5.385,2598,3.779,2599,5.767,2600,5.767]],["title/classes/User.html",[140,0.101,880,2.452]],["body/classes/User.html",[3,0.193,4,0.193,8,0.146,14,0.243,15,0.534,30,0.313,33,0.014,34,0.676,35,0.255,48,2.508,114,0.747,139,0.218,140,0.155,190,0.013,277,0.011,278,0.011,371,2.145,374,2.766,880,4.42,2601,5.273,2602,6.071,2603,6.071]],["title/coverage.html",[2604,4.684]],["body/coverage.html",[0,0.358,1,0.677,8,0.081,9,3.472,29,1.606,33,0.015,35,0.121,42,1.606,43,1.685,44,1.869,46,0.677,53,3.306,131,2.64,132,1.869,140,0.2,190,0.009,204,0.934,208,0.677,210,0.677,212,0.677,214,0.677,216,0.677,219,0.677,221,0.677,223,0.677,225,0.677,227,0.651,229,0.677,230,0.677,232,0.677,234,0.677,236,0.677,238,0.677,240,0.677,242,0.677,244,1.047,246,0.677,248,0.677,250,0.677,252,0.677,254,0.97,256,0.677,259,0.677,262,0.677,264,0.677,265,0.703,267,0.677,269,0.677,272,0.703,274,0.703,277,0.006,278,0.006,279,2.932,291,1.606,370,2.421,372,2.932,379,2.932,402,1.869,403,1.977,404,1.606,405,1.869,406,1.347,407,1.772,408,2.102,409,1.869,410,1.347,411,2.102,412,2.102,416,3.785,441,2.64,488,2.64,489,2.64,492,2.247,493,2.102,495,2.932,496,1.936,498,2.932,524,1.193,593,2.932,594,2.932,614,1.977,615,2.932,675,1.869,676,3.785,678,2.421,683,2.932,708,2.932,803,2.932,809,1.023,855,2.932,880,2.102,907,2.247,908,2.932,939,2.932,940,2.932,956,2.64,957,2.932,960,2.932,989,2.932,1004,2.932,1070,2.932,1185,2.932,1213,3.785,1216,1.977,1287,2.932,1362,2.932,1385,2.421,1409,4.914,1459,2.932,1465,2.932,1507,1.869,1508,2.932,1535,2.932,1564,2.932,1591,2.932,1596,2.932,1597,2.932,1651,2.932,1658,2.932,1745,2.932,1823,2.932,1844,2.932,1887,2.421,1888,2.64,1890,2.932,1910,2.932,1916,2.932,1921,2.64,1965,2.932,1974,2.932,1990,3.785,1991,2.932,1999,2.932,2004,2.932,2040,2.932,2065,2.932,2170,2.932,2189,2.932,2237,2.932,2241,2.932,2253,4.204,2325,2.932,2345,2.932,2346,2.932,2362,2.932,2363,2.932,2371,2.932,2375,2.932,2482,2.932,2490,2.932,2537,2.932,2564,2.932,2569,2.932,2598,2.932,2601,2.932,2604,2.932,2605,3.376,2606,2.932,2607,6.18,2608,6.18,2609,3.376,2610,3.376,2611,4.84,2612,5.658,2613,4.84,2614,4.84,2615,3.376,2616,3.376,2617,5.658,2618,3.376,2619,3.376,2620,3.376,2621,3.376,2622,6.18,2623,3.376,2624,3.376,2625,3.376,2626,3.376,2627,5.658,2628,7.013,2629,6.18,2630,5.658,2631,3.376,2632,3.376,2633,3.376,2634,3.376,2635,5.658,2636,3.376,2637,3.376,2638,3.376,2639,3.376,2640,4.84,2641,3.376,2642,3.376,2643,3.376,2644,6.809,2645,5.658,2646,3.376,2647,3.376,2648,4.84,2649,3.376,2650,3.376,2651,3.376,2652,3.376,2653,3.376,2654,3.376,2655,3.376]],["title/dependencies.html",[391,3.156,2656,2.85]],["body/dependencies.html",[10,1.052,33,0.015,98,0.603,105,4.738,190,0.012,277,0.01,278,0.01,391,3.631,393,3.396,422,4.738,449,2.176,451,3.686,452,3.396,467,3.901,469,4.738,470,3.631,473,5.207,474,4.776,476,4.265,479,4.265,480,4.265,620,4.738,659,3.168,1152,4.738,1241,3.913,2549,4.738,2657,5.455,2658,7.982,2659,5.455,2660,5.455,2661,5.455,2662,5.455,2663,5.455,2664,5.455,2665,5.455,2666,5.455,2667,5.455,2668,5.455,2669,5.455,2670,5.455,2671,5.455,2672,5.455,2673,5.455,2674,6.66,2675,5.455,2676,5.455,2677,5.455,2678,5.455,2679,5.455,2680,5.455,2681,5.455,2682,5.455,2683,5.455,2684,5.455]],["title/miscellaneous/enumerations.html",[2685,2.043,2686,4.119]],["body/miscellaneous/enumerations.html",[14,0.254,16,4.269,33,0.013,39,2.534,40,2.886,41,3.516,190,0.013,277,0.011,278,0.011,2685,3.955,2686,5.517,2687,6.353,2688,6.353]],["title/index.html",[14,0.131,2689,3.281,2690,3.281]],["body/index.html",[0,0.252,2,0.891,6,0.961,8,0.103,33,0.012,35,0.154,57,4.952,69,4.089,120,5.941,145,4.006,174,2.847,183,2.663,190,0.01,205,1.1,260,1.281,277,0.01,278,0.008,340,3.715,341,3.715,369,3.715,373,2.668,382,3.993,383,3.715,393,2.663,492,2.847,512,2.847,562,3.715,563,3.34,619,3.345,625,2.847,698,2.505,704,3.715,711,2.505,748,2.847,749,2.505,756,2.847,758,2.847,774,2.505,809,2.072,836,2.505,987,3.715,1048,3.345,1051,3.715,1146,3.55,1149,4.6,1150,3.345,1157,3.715,1164,3.715,1169,3.345,1201,2.847,1241,3.068,1242,2.847,1258,3.715,1322,3.068,1325,2.847,1367,4.089,1374,3.345,1507,2.368,1628,4.089,1717,3.715,1770,5.941,1836,4.952,1864,5.941,1938,3.345,2132,3.345,2301,3.715,2380,4.952,2461,3.715,2473,3.715,2606,3.715,2656,3.715,2691,6.413,2692,4.278,2693,7.125,2694,4.278,2695,4.278,2696,4.278,2697,4.278,2698,4.278,2699,6.84,2700,4.278,2701,4.278,2702,4.278,2703,4.278,2704,6.84,2705,4.278,2706,5.702,2707,4.278,2708,5.702,2709,7.125,2710,5.702,2711,4.278,2712,6.413,2713,4.278,2714,6.84,2715,4.278,2716,4.278,2717,4.278,2718,4.278,2719,4.278,2720,5.702,2721,4.278,2722,6.413,2723,4.278,2724,4.278,2725,4.278,2726,5.702,2727,4.278,2728,4.278,2729,4.278,2730,4.278,2731,5.702,2732,4.278,2733,5.702,2734,4.278,2735,4.278,2736,4.278,2737,4.278,2738,4.278,2739,5.702,2740,4.278,2741,4.278,2742,4.278,2743,4.278,2744,4.278,2745,4.278,2746,4.278,2747,4.278,2748,4.278,2749,5.702,2750,4.278,2751,4.278,2752,4.278,2753,4.278,2754,4.278,2755,4.278,2756,4.278,2757,4.278,2758,4.278,2759,4.278,2760,4.278,2761,4.278,2762,4.278,2763,4.278,2764,4.278,2765,4.278,2766,4.278,2767,4.278,2768,4.278,2769,5.702,2770,4.278,2771,4.278,2772,4.278,2773,4.278,2774,5.702,2775,5.702,2776,4.278,2777,3.345,2778,4.278,2779,4.278,2780,4.278,2781,4.278,2782,4.278,2783,4.278,2784,4.278,2785,4.278,2786,4.278,2787,4.278,2788,4.278,2789,4.278,2790,4.278,2791,4.278,2792,4.278,2793,4.278]],["title/modules.html",[390,3.589]],["body/modules.html",[33,0.013,190,0.013,277,0.011,278,0.011,389,4.547,390,4.219,401,4.219,474,5.221,2794,7.279,2795,7.279,2796,7.279]],["title/overview.html",[2777,4.217]],["body/overview.html",[1,1.209,2,0.79,29,2.868,33,0.015,56,2.499,190,0.009,201,0.79,208,1.209,210,1.453,212,1.209,214,1.209,216,1.453,219,1.209,221,1.209,223,1.209,225,1.209,227,1.163,229,1.209,232,1.209,234,1.209,236,1.209,238,1.209,240,1.209,242,1.453,246,1.453,248,1.209,250,1.209,252,1.209,254,1.209,256,1.453,259,1.453,262,1.209,264,1.209,267,1.209,269,1.209,271,0.76,277,0.007,278,0.007,291,2.868,371,1.34,388,2.361,389,6.034,390,2.524,391,2.524,392,2.966,393,2.361,394,2.966,395,2.966,396,3.294,397,3.294,398,3.294,399,3.294,400,3.294,401,5.318,402,3.337,403,3.531,404,2.868,405,3.337,406,2.404,407,3.164,408,3.753,409,3.337,410,2.404,411,3.753,412,3.753,413,4.108,414,2.361,415,2.524,492,2.524,497,1.648,529,3.294,1638,3.294,1639,3.294,1640,3.294,1741,3.497,1887,2.72,2777,2.966,2797,3.793,2798,3.793]],["title/miscellaneous/typealiases.html",[2685,2.043,2799,4.742]],["body/miscellaneous/typealiases.html",[7,1.372,9,4.381,14,0.244,24,4.381,33,0.013,35,0.256,38,3.556,39,2.842,40,2.774,41,3.381,52,4.381,59,5.305,60,6.188,63,6.188,73,2.338,106,4.381,107,5.305,108,5.305,109,5.305,110,4.776,111,5.305,190,0.013,277,0.011,278,0.011,375,3.049,2685,3.803,2800,6.108,2801,5.305]],["title/miscellaneous/variables.html",[1628,3.401,2685,2.043]],["body/miscellaneous/variables.html",[9,4.122,14,0.23,33,0.015,35,0.273,38,2.868,71,4.493,84,1.364,85,1.261,127,4.493,128,3.578,129,3.825,131,5.374,132,3.181,133,4.991,134,4.991,135,4.991,136,4.991,137,4.574,138,4.991,145,3.366,190,0.012,277,0.01,278,0.01,416,4.493,418,4.991,488,5.374,489,5.374,490,4.991,774,3.366,1213,4.493,1239,4.991,1240,4.493,1241,4.122,1242,3.825,1628,4.122,2685,3.578,2801,4.991,2802,5.747,2803,6.873]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":53,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"coverage.html":{}}}],["0.1.13",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["0.19.47",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1795,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["0.3.5",{"_index":2666,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":1263,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["0.80",{"_index":2155,"title":{},"body":{"injectables/ObservationService.html":{}}}],["0.9.1",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2608,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2612,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2647,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2617,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2630,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2625,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2651,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2624,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2644,"title":{},"body":{"coverage.html":{}}}],["0/39",{"_index":2654,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2628,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2627,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2629,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2635,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1420,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["1",{"_index":56,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"components/NormalBox1.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"overview.html":{}}}],["1'},{'name",{"_index":245,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["1.2.0",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["1.component",{"_index":1645,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["1.component.ts",{"_index":1991,"title":{},"body":{"components/NormalBox1.html":{},"coverage.html":{}}}],["1.component.ts:10",{"_index":1996,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:12",{"_index":1995,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.component.ts:9",{"_index":1994,"title":{},"body":{"components/NormalBox1.html":{}}}],["1.html",{"_index":1992,"title":{},"body":{"components/NormalBox1.html":{}}}],["1/1",{"_index":2611,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2614,"title":{},"body":{"coverage.html":{}}}],["1/21",{"_index":2652,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":528,"title":{},"body":{"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{},"components/TimelineComponent.html":{}}}],["10.19.0",{"_index":2730,"title":{},"body":{"index.html":{}}}],["10/12",{"_index":2610,"title":{},"body":{"coverage.html":{}}}],["10/15",{"_index":2626,"title":{},"body":{"coverage.html":{}}}],["10/17",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1409,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["102588006",{"_index":1956,"title":{},"body":{"injectables/MapService.html":{}}}],["10839",{"_index":1930,"title":{},"body":{"injectables/MapService.html":{}}}],["10px",{"_index":339,"title":{},"body":{"components/AccountComponent.html":{}}}],["12",{"_index":355,"title":{},"body":{"components/AccountComponent.html":{}}}],["12/15",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":613,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["13.0.2",{"_index":2663,"title":{},"body":{"dependencies.html":{}}}],["13969",{"_index":1941,"title":{},"body":{"injectables/MapService.html":{}}}],["14",{"_index":2797,"title":{},"body":{"overview.html":{}}}],["16/17",{"_index":2619,"title":{},"body":{"coverage.html":{}}}],["16/24",{"_index":2623,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2798,"title":{},"body":{"overview.html":{}}}],["17861",{"_index":1939,"title":{},"body":{"injectables/MapService.html":{}}}],["18",{"_index":356,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{}}}],["180",{"_index":640,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["181.us",{"_index":530,"title":{},"body":{"injectables/AssociationService.html":{}}}],["185903001",{"_index":1931,"title":{},"body":{"injectables/MapService.html":{}}}],["1st",{"_index":2584,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["2",{"_index":1741,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"components/NormalBox2.html":{},"injectables/ObservationService.html":{},"overview.html":{}}}],["2'},{'name",{"_index":247,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["2.0",{"_index":2793,"title":{},"body":{"index.html":{}}}],["2.24.0",{"_index":2669,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2670,"title":{},"body":{"dependencies.html":{}}}],["2.component",{"_index":1646,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["2.component.ts",{"_index":1999,"title":{},"body":{"components/NormalBox2.html":{},"coverage.html":{}}}],["2.component.ts:10",{"_index":2003,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:12",{"_index":2002,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.component.ts:9",{"_index":2001,"title":{},"body":{"components/NormalBox2.html":{}}}],["2.compute.amazonaws.com/get_items",{"_index":532,"title":{},"body":{"injectables/AssociationService.html":{}}}],["2.html",{"_index":2000,"title":{},"body":{"components/NormalBox2.html":{}}}],["2/3",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1687,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["200px",{"_index":611,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["2075",{"_index":1924,"title":{},"body":{"injectables/MapService.html":{}}}],["2157",{"_index":1949,"title":{},"body":{"injectables/MapService.html":{}}}],["2160",{"_index":1953,"title":{},"body":{"injectables/MapService.html":{}}}],["220px",{"_index":642,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["2345",{"_index":1936,"title":{},"body":{"injectables/MapService.html":{}}}],["249288007",{"_index":1925,"title":{},"body":{"injectables/MapService.html":{}}}],["25",{"_index":1739,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["2571",{"_index":2116,"title":{},"body":{"injectables/ObservationService.html":{}}}],["26450",{"_index":1948,"title":{},"body":{"injectables/MapService.html":{}}}],["26464",{"_index":1940,"title":{},"body":{"injectables/MapService.html":{}}}],["26478",{"_index":1937,"title":{},"body":{"injectables/MapService.html":{}}}],["26511",{"_index":1927,"title":{},"body":{"injectables/MapService.html":{}}}],["26515",{"_index":1943,"title":{},"body":{"injectables/MapService.html":{}}}],["266998003",{"_index":1957,"title":{},"body":{"injectables/MapService.html":{}}}],["267432004",{"_index":1952,"title":{},"body":{"injectables/MapService.html":{}}}],["2710",{"_index":2113,"title":{},"body":{"injectables/ObservationService.html":{}}}],["2823",{"_index":1947,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["28542",{"_index":1928,"title":{},"body":{"injectables/MapService.html":{}}}],["29",{"_index":529,"title":{},"body":{"injectables/AssociationService.html":{},"overview.html":{}}}],["2951",{"_index":1944,"title":{},"body":{"injectables/MapService.html":{}}}],["29857009",{"_index":1959,"title":{},"body":{"injectables/MapService.html":{}}}],["2c304df8",{"_index":2397,"title":{},"body":{"injectables/SmartService.html":{}}}],["2nd",{"_index":2585,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["3",{"_index":1743,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3.2.1",{"_index":2668,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":2667,"title":{},"body":{"dependencies.html":{}}}],["3.4.5",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2632,"title":{},"body":{"coverage.html":{}}}],["30385",{"_index":1934,"title":{},"body":{"injectables/MapService.html":{}}}],["30428",{"_index":1955,"title":{},"body":{"injectables/MapService.html":{}}}],["3094",{"_index":1960,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["3141",{"_index":2112,"title":{},"body":{"injectables/ObservationService.html":{}}}],["32398004",{"_index":1945,"title":{},"body":{"injectables/MapService.html":{}}}],["32623",{"_index":1962,"title":{},"body":{"injectables/MapService.html":{}}}],["330c01a5ca8e",{"_index":2401,"title":{},"body":{"injectables/SmartService.html":{}}}],["38341003",{"_index":1958,"title":{},"body":{"injectables/MapService.html":{}}}],["39156",{"_index":2114,"title":{},"body":{"injectables/ObservationService.html":{}}}],["4",{"_index":1921,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["4/4",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["44054006",{"_index":1922,"title":{},"body":{"injectables/MapService.html":{}}}],["442311008",{"_index":1961,"title":{},"body":{"injectables/MapService.html":{}}}],["4de9",{"_index":2399,"title":{},"body":{"injectables/SmartService.html":{}}}],["5",{"_index":1740,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{}}}],["5/7",{"_index":2621,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2613,"title":{},"body":{"coverage.html":{}}}],["52",{"_index":527,"title":{},"body":{"injectables/AssociationService.html":{}}}],["54150009",{"_index":1935,"title":{},"body":{"injectables/MapService.html":{}}}],["55284",{"_index":1920,"title":{},"body":{"injectables/MapService.html":{}}}],["58",{"_index":2636,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":353,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{}}}],["6.5.4",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":2633,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2622,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1933,"title":{},"body":{"injectables/MapService.html":{}}}],["7/8",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":2620,"title":{},"body":{"coverage.html":{}}}],["711d",{"_index":2398,"title":{},"body":{"injectables/SmartService.html":{}}}],["718",{"_index":1932,"title":{},"body":{"injectables/MapService.html":{}}}],["72166",{"_index":1926,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["75",{"_index":2631,"title":{},"body":{"coverage.html":{}}}],["777",{"_index":1963,"title":{},"body":{"injectables/MapService.html":{}}}],["785",{"_index":1951,"title":{},"body":{"injectables/MapService.html":{}}}],["786",{"_index":1954,"title":{},"body":{"injectables/MapService.html":{}}}],["789",{"_index":1946,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["8",{"_index":1938,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["8.2.14",{"_index":2658,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":2660,"title":{},"body":{"dependencies.html":{}}}],["8.3.25",{"_index":2662,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1686,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["80394007",{"_index":1942,"title":{},"body":{"injectables/MapService.html":{}}}],["83",{"_index":2609,"title":{},"body":{"coverage.html":{}}}],["8302",{"_index":2111,"title":{},"body":{"injectables/ObservationService.html":{}}}],["8310",{"_index":2115,"title":{},"body":{"injectables/ObservationService.html":{}}}],["8462",{"_index":1923,"title":{},"body":{"injectables/MapService.html":{}}}],["8480",{"_index":1919,"title":{},"body":{"injectables/MapService.html":{}}}],["87",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["89765005",{"_index":1950,"title":{},"body":{"injectables/MapService.html":{}}}],["9",{"_index":1929,"title":{},"body":{"injectables/MapService.html":{},"injectables/ObservationService.html":{}}}],["9/10",{"_index":2616,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":2634,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2615,"title":{},"body":{"coverage.html":{}}}],["90708001",{"_index":1918,"title":{},"body":{"injectables/MapService.html":{}}}],["94",{"_index":2618,"title":{},"body":{"coverage.html":{}}}],["a.getstartdate().gettime",{"_index":2531,"title":{},"body":{"components/TimelineComponent.html":{}}}],["a['code",{"_index":565,"title":{},"body":{"injectables/AssociationService.html":{}}}],["abnormal",{"_index":362,"title":{},"body":{"components/AccountComponent.html":{}}}],["above",{"_index":1051,"title":{},"body":{"injectables/ConditionService.html":{},"index.html":{}}}],["access",{"_index":750,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["accessible",{"_index":90,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["accessing",{"_index":2764,"title":{},"body":{"index.html":{}}}],["according",{"_index":543,"title":{},"body":{"injectables/AssociationService.html":{}}}],["accordionrecursion",{"_index":1,"title":{"components/AccordionRecursion.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordionrecursion'},{'name",{"_index":207,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["accordionrecursion.html",{"_index":13,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["account",{"_index":280,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["account'},{'name",{"_index":209,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["account.html",{"_index":281,"title":{},"body":{"components/AccountComponent.html":{}}}],["accountcomponent",{"_index":208,"title":{"components/AccountComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["achieved",{"_index":1047,"title":{},"body":{"injectables/ConditionService.html":{}}}],["active",{"_index":168,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"classes/Patient.html":{},"components/ScratchPadUpdate.html":{}}}],["activities",{"_index":359,"title":{},"body":{"components/AccountComponent.html":{}}}],["activity",{"_index":685,"title":{},"body":{"classes/CarePlan.html":{}}}],["actual",{"_index":111,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/typealiases.html":{}}}],["actual_component",{"_index":276,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["actually",{"_index":791,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["adams",{"_index":2743,"title":{},"body":{"index.html":{}}}],["add",{"_index":189,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["addgraphconfig",{"_index":1468,"title":{},"body":{"injectables/DoctorService.html":{}}}],["addgraphconfig(list",{"_index":1472,"title":{},"body":{"injectables/DoctorService.html":{}}}],["adding",{"_index":1195,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["addmedicationchart",{"_index":1747,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addmedicationchart(medication",{"_index":1753,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservationchart",{"_index":1748,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addobservationchart(chartname",{"_index":1755,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["addoption",{"_index":1377,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["addoption(option",{"_index":1384,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["address",{"_index":2238,"title":{},"body":{"classes/Patient.html":{}}}],["adds",{"_index":2579,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["addsetting",{"_index":287,"title":{},"body":{"components/AccountComponent.html":{}}}],["addsetting(checked",{"_index":293,"title":{},"body":{"components/AccountComponent.html":{}}}],["adjust",{"_index":2207,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["advancedsearch",{"_index":2255,"title":{},"body":{"components/PatientComponent.html":{}}}],["advantage",{"_index":2758,"title":{},"body":{"index.html":{}}}],["afbe",{"_index":2400,"title":{},"body":{"injectables/SmartService.html":{}}}],["again",{"_index":1875,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["albumin",{"_index":320,"title":{},"body":{"components/AccountComponent.html":{}}}],["aliases",{"_index":2800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allergies",{"_index":358,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["allergies.map(allergy",{"_index":2295,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergies/precautions",{"_index":171,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["allergy",{"_index":2256,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergy.code.text",{"_index":2296,"title":{},"body":{"components/PatientComponent.html":{}}}],["allergyintolerance",{"_index":370,"title":{"classes/AllergyIntolerance.html":{}},"body":{"classes/AllergyIntolerance.html":{},"injectables/ConditionService.html":{},"coverage.html":{}}}],["allow",{"_index":1184,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["allows",{"_index":1491,"title":{},"body":{"injectables/DoctorService.html":{}}}],["already",{"_index":1201,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["alt",{"_index":318,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["amdateformat:'mm/dd/yyyy",{"_index":2321,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdateformat:\\'mm/dd/yyyy",{"_index":2323,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:'years':false)}}yr",{"_index":2322,"title":{},"body":{"components/PatientComponent.html":{}}}],["amdifference:today:\\'years\\':false)}}yr",{"_index":2324,"title":{},"body":{"components/PatientComponent.html":{}}}],["amtimeago",{"_index":2064,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"components/TimelinePopupComponent.html":{}}}],["amtimeago:true",{"_index":1360,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ana",{"_index":313,"title":{},"body":{"components/AccountComponent.html":{}}}],["angular",{"_index":2698,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2657,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2659,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":2661,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2549,"title":{},"body":{"components/TimelinePopupComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["angular/compiler",{"_index":105,"title":{},"body":{"components/AccordionRecursion.html":{},"dependencies.html":{}}}],["angular/core",{"_index":98,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":1152,"title":{},"body":{"components/ConditionsChartComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1913,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["another",{"_index":2784,"title":{},"body":{"index.html":{}}}],["apache",{"_index":2792,"title":{},"body":{"index.html":{}}}],["api",{"_index":555,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{}}}],["app",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":211,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["app.html",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["app/components/accordionrecursion/accordionrecursion.component",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/account/account.component",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/app/app.component",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplandisplay/careplandisplay.component",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/careplans/careplans.component",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/columnstateswitcher/columnstateswitcher.component",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditions/conditions.component",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionschart/conditionschart.component",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/conditionsdisplay/conditionsdisplay.component",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/contextmenu/contextmenu.component",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/form",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/historicaltrends/historicaltrends.component",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/home/home.component",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/hoverbox/hoverbox.component",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/loadinganimation/loadinganimation.component",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/medications/medications.component",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationrecursionchart/observationrecursionchart.component",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observations/observations.component",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/observationsdisplay/observationsdisplay.component",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/patient/patient.component",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline/timeline.component",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/timeline_popup/timeline_popup.component",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/toolbar/toolbar.component",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["app/components/triplelist/triplelist.component",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["app/modules/form.module",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/association.service",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/careplan.service",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/condition.service",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/doctor.service",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/encounter.service",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/fhir.service",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/historicaltrends.service",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/map.service",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/observation.service",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/patient.service",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/scratchpad.service",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/smart.service",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/toolbar.service",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":210,"title":{"components/AppComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1259,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TripleListComponent.html":{}}}],["appears",{"_index":1865,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["application",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseColumn.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["application/json",{"_index":1588,"title":{},"body":{"injectables/FhirService.html":{}}}],["application/x",{"_index":2454,"title":{},"body":{"injectables/SmartService.html":{}}}],["appmodule",{"_index":389,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approach",{"_index":2763,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingproviders",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["approximate",{"_index":643,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["apps",{"_index":2740,"title":{},"body":{"index.html":{}}}],["april",{"_index":1348,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["arbitrary",{"_index":1264,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["arg.url",{"_index":2431,"title":{},"body":{"injectables/SmartService.html":{}}}],["arg.valueuri",{"_index":2433,"title":{},"body":{"injectables/SmartService.html":{}}}],["args",{"_index":1898,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["array",{"_index":299,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/Bundle.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["array.from(medicationmap.values",{"_index":854,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["array.from(this.chartsmap.values",{"_index":1805,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["arriving",{"_index":2415,"title":{},"body":{"injectables/SmartService.html":{}}}],["asc",{"_index":1124,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["assign",{"_index":2339,"title":{},"body":{"injectables/PatientService.html":{}}}],["assignvisible",{"_index":1469,"title":{},"body":{"injectables/DoctorService.html":{}}}],["assignvisible(list",{"_index":1474,"title":{},"body":{"injectables/DoctorService.html":{}}}],["associable",{"_index":493,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{},"coverage.html":{}}}],["associable.model",{"_index":695,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Observation.html":{}}}],["associated",{"_index":542,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Chart.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{}}}],["associatedconditions",{"_index":557,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapconditions",{"_index":499,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedmapobservations",{"_index":500,"title":{},"body":{"injectables/AssociationService.html":{}}}],["associatedobservations",{"_index":559,"title":{},"body":{"injectables/AssociationService.html":{}}}],["association",{"_index":775,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["associations",{"_index":544,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["associationservice",{"_index":402,"title":{"injectables/AssociationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":1157,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["ast",{"_index":319,"title":{},"body":{"components/AccountComponent.html":{}}}],["aud",{"_index":2376,"title":{},"body":{"injectables/SmartService.html":{}}}],["august",{"_index":1351,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["auth",{"_index":2428,"title":{},"body":{"injectables/SmartService.html":{}}}],["authenticate",{"_index":2384,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorize",{"_index":2432,"title":{},"body":{"injectables/SmartService.html":{}}}],["authorizeurl",{"_index":2377,"title":{},"body":{"injectables/SmartService.html":{}}}],["autogrow",{"_index":595,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["autogrow]'},{'name",{"_index":273,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["autogrowdirective",{"_index":272,"title":{"directives/AutoGrowDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":2735,"title":{},"body":{"index.html":{}}}],["available",{"_index":1838,"title":{},"body":{"components/HomeComponent.html":{}}}],["avoid",{"_index":1770,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"index.html":{}}}],["away",{"_index":1879,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["axis",{"_index":930,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["b.getstartdate().gettime",{"_index":2532,"title":{},"body":{"components/TimelineComponent.html":{}}}],["b:encounter",{"_index":2530,"title":{},"body":{"components/TimelineComponent.html":{}}}],["back",{"_index":1737,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["bar",{"_index":1704,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["base",{"_index":1565,"title":{},"body":{"injectables/FhirService.html":{}}}],["basecolumn",{"_index":614,"title":{"classes/BaseColumn.html":{}},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"coverage.html":{}}}],["basecolumn:14",{"_index":887,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:32",{"_index":871,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:39",{"_index":872,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:44",{"_index":873,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:49",{"_index":874,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:52",{"_index":885,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:55",{"_index":888,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["basecolumn:58",{"_index":886,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["based",{"_index":893,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["basic",{"_index":1147,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["bearer",{"_index":1590,"title":{},"body":{"injectables/FhirService.html":{}}}],["before",{"_index":110,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HoverBoxComponent.html":{},"miscellaneous/typealiases.html":{}}}],["begin",{"_index":2711,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":757,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["being",{"_index":82,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{}}}],["below",{"_index":58,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/SmartService.html":{}}}],["best",{"_index":2462,"title":{},"body":{"injectables/SmartService.html":{}}}],["better",{"_index":1276,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["between",{"_index":892,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ToolbarComponent.html":{}}}],["bilirubin",{"_index":321,"title":{},"body":{"components/AccountComponent.html":{}}}],["bind(this",{"_index":770,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["birthdate",{"_index":2239,"title":{},"body":{"classes/Patient.html":{}}}],["blood",{"_index":2121,"title":{},"body":{"injectables/ObservationService.html":{}}}],["blur",{"_index":607,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["body",{"_index":2132,"title":{},"body":{"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"index.html":{}}}],["boolean",{"_index":91,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["bootstrap",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextMenuOption.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":335,"title":{},"body":{"components/AccountComponent.html":{}}}],["bound",{"_index":755,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["box",{"_index":244,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["boxdata",{"_index":1993,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["break",{"_index":154,"title":{},"body":{"components/AccordionRecursion.html":{},"components/PatientComponent.html":{}}}],["brew",{"_index":2708,"title":{},"body":{"index.html":{}}}],["brief",{"_index":2775,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2796,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["buffer",{"_index":1791,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["bugs",{"_index":2753,"title":{},"body":{"index.html":{}}}],["build",{"_index":2700,"title":{},"body":{"index.html":{}}}],["builder",{"_index":1598,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder'},{'name",{"_index":231,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["builder.component",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["builder.component.ts",{"_index":1597,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["builder.component.ts:13",{"_index":1623,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:14",{"_index":1622,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:16",{"_index":1624,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:17",{"_index":1620,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:19",{"_index":1612,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:20",{"_index":1613,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:22",{"_index":1611,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:27",{"_index":1616,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:32",{"_index":1615,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:39",{"_index":1619,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:55",{"_index":1618,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.component.ts:59",{"_index":1614,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder.html",{"_index":1601,"title":{},"body":{"components/FormBuilder.html":{}}}],["builder/form",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"components/FormBuilder.html":{},"coverage.html":{}}}],["bun",{"_index":317,"title":{},"body":{"components/AccountComponent.html":{}}}],["bundle",{"_index":675,"title":{"classes/Bundle.html":{}},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"coverage.html":{}}}],["bundle.entry",{"_index":826,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["bundle.entry.map(e",{"_index":1552,"title":{},"body":{"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["bundle.entry.map(r",{"_index":827,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["bundle.link.find(link",{"_index":1054,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["button",{"_index":1636,"title":{},"body":{"components/FormBuilder.html":{}}}],["c",{"_index":563,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["c.clinicalstatus",{"_index":178,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.id",{"_index":784,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c.isparent",{"_index":796,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.isvisible",{"_index":795,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.parent",{"_index":794,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["c.relativedatetime",{"_index":1138,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{}}}],["c.sort((n1",{"_index":1127,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["c/patient_viewer.git",{"_index":2718,"title":{},"body":{"index.html":{}}}],["c2",{"_index":1255,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c2.onsetdatetime.localecompare(c1.onsetdatetime",{"_index":1256,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["c['code']['text",{"_index":1359,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c['selected",{"_index":783,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{}}}],["c[\\'code\\'][\\'text",{"_index":1361,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["c[element",{"_index":1189,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cache",{"_index":1064,"title":{},"body":{"injectables/ConditionService.html":{}}}],["calcium",{"_index":309,"title":{},"body":{"components/AccountComponent.html":{}}}],["call",{"_index":579,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["called",{"_index":1229,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["calls",{"_index":1065,"title":{},"body":{"injectables/ConditionService.html":{}}}],["cardiovascular",{"_index":2139,"title":{},"body":{"injectables/ObservationService.html":{}}}],["care",{"_index":128,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["care_plan_categories",{"_index":131,"title":{},"body":{"components/AccordionRecursion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["care_plan_categories.map(cat",{"_index":194,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["careplan",{"_index":44,"title":{"classes/CarePlan.html":{}},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"coverage.html":{}}}],["careplandisplay",{"_index":212,"title":{"components/CarePlanDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplandisplay'},{'name",{"_index":213,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplandisplay.html",{"_index":709,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanloadfinished",{"_index":861,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["careplans",{"_index":41,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["careplans'},{'name",{"_index":215,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["careplans.html",{"_index":860,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["careplans.length",{"_index":905,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["careplanscomponent",{"_index":214,"title":{"components/CarePlansComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["careplanselected",{"_index":720,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["careplanservice",{"_index":403,"title":{"injectables/CarePlanService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/MedicationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":150,"title":{},"body":{"components/AccordionRecursion.html":{},"components/PatientComponent.html":{}}}],["cases",{"_index":2787,"title":{},"body":{"index.html":{}}}],["cast",{"_index":1558,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{}}}],["casted",{"_index":1559,"title":{},"body":{"injectables/EncounterService.html":{}}}],["cat",{"_index":181,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cat.count",{"_index":2061,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["cat.display",{"_index":2060,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["catch",{"_index":1190,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["categories",{"_index":71,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/ObservationService.html":{},"miscellaneous/variables.html":{}}}],["categories['active",{"_index":176,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["categories['inactive",{"_index":179,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["categories[cat",{"_index":182,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["categories[category",{"_index":192,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["categorize",{"_index":2108,"title":{},"body":{"injectables/ObservationService.html":{}}}],["categorizedobservations",{"_index":2066,"title":{},"body":{"injectables/ObservationService.html":{}}}],["category",{"_index":113,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["categorynode.category",{"_index":199,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["categorynode.items?.length",{"_index":200,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["cause",{"_index":2772,"title":{},"body":{"index.html":{}}}],["causes",{"_index":1334,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["cd",{"_index":2719,"title":{},"body":{"index.html":{}}}],["certain",{"_index":2085,"title":{},"body":{"injectables/ObservationService.html":{}}}],["chain",{"_index":1036,"title":{},"body":{"injectables/ConditionService.html":{}}}],["change",{"_index":1478,"title":{},"body":{"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{}}}],["changed",{"_index":869,"title":{},"body":{"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{}}}],["changedobs",{"_index":2051,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changedobs.isselected",{"_index":2056,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["changes",{"_index":81,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["changesthen",{"_index":2737,"title":{},"body":{"index.html":{}}}],["chart",{"_index":907,"title":{"classes/Chart.html":{}},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["chart.data",{"_index":1783,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.length",{"_index":1814,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.push",{"_index":1779,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data.sort((p1",{"_index":1784,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].name",{"_index":1819,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.data[0].value",{"_index":1815,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.linechartdata",{"_index":1788,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.normalvalues",{"_index":1799,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.title",{"_index":1772,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemax",{"_index":1797,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chart.yscalemin",{"_index":1796,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["chartevent",{"_index":1677,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmaxdate",{"_index":1722,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate",{"_index":1721,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartmindate.gettime",{"_index":1724,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartname",{"_index":1757,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["charts",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"dependencies.html":{}}}],["chartsize",{"_index":1661,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["chartsmap",{"_index":1746,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["check",{"_index":185,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["check(medication",{"_index":1978,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["checkallcareplans",{"_index":712,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallcareplans(checked",{"_index":726,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkallconditions",{"_index":1289,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallconditions(checked",{"_index":1301,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkallobservations",{"_index":2191,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkallobservations(checked",{"_index":2202,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkbox",{"_index":217,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["checkboxdata",{"_index":943,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxes",{"_index":953,"title":{},"body":{"components/CheckboxInline.html":{}}}],["checkboxinline",{"_index":216,"title":{"components/CheckboxInline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcareplan",{"_index":713,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcareplan(checked",{"_index":728,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked",{"_index":714,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkclicked(careplan",{"_index":731,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkcondition",{"_index":1290,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkcondition(checkedcondition",{"_index":1303,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checked",{"_index":296,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["checked(changedobs",{"_index":2049,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["checkedcareplan",{"_index":729,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["checkedcondition",{"_index":1305,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["checkedconditions",{"_index":520,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedconditions.map(this.extractconditioninfo",{"_index":572,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedconditionsinfo",{"_index":571,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservation",{"_index":2205,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkedobservations",{"_index":518,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["checkedobservations.map(this.extractobservationinfo",{"_index":574,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checkedobservationsinfo",{"_index":573,"title":{},"body":{"injectables/AssociationService.html":{}}}],["checking",{"_index":748,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["checkobservation",{"_index":2192,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["checkobservation(checked",{"_index":2204,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["chief",{"_index":166,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["child",{"_index":655,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["childlevels",{"_index":125,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["children",{"_index":122,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["chloride",{"_index":307,"title":{},"body":{"components/AccountComponent.html":{}}}],["cholesteralbattery",{"_index":282,"title":{},"body":{"components/AccountComponent.html":{}}}],["choose",{"_index":1717,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["class",{"_index":140,"title":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":371,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"classes/Link.html":{},"classes/Medication.html":{},"classes/Observation.html":{},"classes/Patient.html":{},"classes/Server.html":{},"classes/Timeline.html":{},"classes/User.html":{},"overview.html":{}}}],["clean",{"_index":1486,"title":{},"body":{"injectables/DoctorService.html":{}}}],["cleaning",{"_index":1400,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clear",{"_index":550,"title":{},"body":{"injectables/AssociationService.html":{}}}],["click",{"_index":1367,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["clicked",{"_index":788,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{}}}],["clickedset",{"_index":1110,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["clicking",{"_index":763,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["clicks",{"_index":1389,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["clicksubscription",{"_index":1371,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["client",{"_index":956,"title":{"classes/Client.html":{}},"body":{"classes/Client.html":{},"coverage.html":{}}}],["client_id",{"_index":2469,"title":{},"body":{"injectables/SmartService.html":{}}}],["clientid",{"_index":2378,"title":{},"body":{"injectables/SmartService.html":{}}}],["clinical",{"_index":2695,"title":{},"body":{"index.html":{}}}],["clinicalstatus",{"_index":990,"title":{},"body":{"classes/Condition.html":{}}}],["clone",{"_index":2716,"title":{},"body":{"index.html":{}}}],["close",{"_index":1417,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["close(event",{"_index":2541,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["closeable",{"_index":1372,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closeable_delay",{"_index":1373,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closed",{"_index":1439,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["closes",{"_index":1399,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["cluster_appmodule",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule",{"_index":1638,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_declarations",{"_index":1639,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["cluster_formcreatormodule_exports",{"_index":1640,"title":{},"body":{"modules/FormCreatorModule.html":{},"overview.html":{}}}],["clutter",{"_index":2773,"title":{},"body":{"index.html":{}}}],["cnum",{"_index":1176,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["cnum.tostring",{"_index":1180,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["co2",{"_index":308,"title":{},"body":{"components/AccountComponent.html":{}}}],["code",{"_index":373,"title":{},"body":{"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelinePopupComponent.html":{},"index.html":{}}}],["codes",{"_index":2106,"title":{},"body":{"injectables/ObservationService.html":{}}}],["coding",{"_index":583,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{}}}],["collapse",{"_index":336,"title":{},"body":{"components/AccountComponent.html":{}}}],["collapsequeue",{"_index":1073,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["column",{"_index":38,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["column's",{"_index":973,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnheight",{"_index":628,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columns",{"_index":158,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{}}}],["columnstate",{"_index":629,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["columnstatesubscription",{"_index":862,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["columnstateswitcher",{"_index":964,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitcher'},{'name",{"_index":220,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["columnstateswitcher.html",{"_index":965,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["columnstateswitchercomponent",{"_index":219,"title":{"components/ColumnStateSwitcherComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["columntype",{"_index":16,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["columntype.careplans",{"_index":161,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["columntype.conditions",{"_index":151,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["columntype.observations",{"_index":155,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["columtype",{"_index":88,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["combdata",{"_index":1602,"title":{},"body":{"components/FormBuilder.html":{}}}],["combineddata",{"_index":944,"title":{},"body":{"components/CheckboxInline.html":{}}}],["command",{"_index":2731,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2713,"title":{},"body":{"index.html":{}}}],["comment",{"_index":2473,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["comments",{"_index":2781,"title":{},"body":{"index.html":{}}}],["compat",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["compiler",{"_index":1829,"title":{},"body":{"components/HomeComponent.html":{}}}],["complaint",{"_index":167,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["completion",{"_index":2760,"title":{},"body":{"index.html":{}}}],["complex",{"_index":2779,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":206,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["componentfactoryname",{"_index":104,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/form_components/checkbox",{"_index":1642,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/normal",{"_index":1644,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/scrachpad",{"_index":1649,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/form_components/select",{"_index":1647,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["components/home/home.component",{"_index":2279,"title":{},"body":{"components/PatientComponent.html":{}}}],["components/hoverbox/hoverbox.component",{"_index":2550,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["concat",{"_index":1030,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["concat(of(conditions",{"_index":1056,"title":{},"body":{"injectables/ConditionService.html":{}}}],["concat(of(encounters",{"_index":1554,"title":{},"body":{"injectables/EncounterService.html":{}}}],["concatmap",{"_index":1031,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["condition",{"_index":42,"title":{"classes/Condition.html":{}},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{},"coverage.html":{}}}],["condition.code.coding[0].code",{"_index":2563,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.code.coding[0].display",{"_index":2561,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.isvisible",{"_index":1271,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.onsetdatetime",{"_index":2560,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["condition.relativedatetime",{"_index":1273,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["condition.service",{"_index":534,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['code",{"_index":586,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['code']['coding'][0]['system",{"_index":587,"title":{},"body":{"injectables/AssociationService.html":{}}}],["condition['onsetdatetime",{"_index":588,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionally",{"_index":1038,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditiongrouping",{"_index":1074,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["conditiongroupingname",{"_index":1075,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditiongroupingname[conditiongrouping.indexof(c",{"_index":1205,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditions",{"_index":39,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["conditions'},{'name",{"_index":224,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditions.component.ts",{"_index":1481,"title":{},"body":{"injectables/DoctorService.html":{}}}],["conditions.filter(c",{"_index":177,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["conditions.html",{"_index":1219,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["conditions.map(this.extractconditioninfo",{"_index":576,"title":{},"body":{"injectables/AssociationService.html":{}}}],["conditionscache",{"_index":1005,"title":{},"body":{"injectables/ConditionService.html":{}}}],["conditionschart",{"_index":1071,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschart'},{'name",{"_index":222,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionschart.html",{"_index":1072,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["conditionschartcomponent",{"_index":221,"title":{"components/ConditionsChartComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionscomponent",{"_index":223,"title":{"components/ConditionsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay",{"_index":225,"title":{"components/ConditionsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsdisplay'},{'name",{"_index":226,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["conditionsdisplay.html",{"_index":1288,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["conditionselected",{"_index":1087,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{}}}],["conditionservice",{"_index":404,"title":{"injectables/ConditionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionsinfo",{"_index":575,"title":{},"body":{"injectables/AssociationService.html":{}}}],["confidential",{"_index":2741,"title":{},"body":{"index.html":{}}}],["config",{"_index":368,"title":{},"body":{"components/AccountComponent.html":{}}}],["configmode",{"_index":1466,"title":{},"body":{"injectables/DoctorService.html":{}}}],["console.log",{"_index":2767,"title":{},"body":{"index.html":{}}}],["console.log(\"add",{"_index":1705,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["console.log(\"changing",{"_index":2360,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["console.log(\"e",{"_index":2551,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["console.log(\"highlighting",{"_index":1655,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["console.log(\"hover",{"_index":2552,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["console.log(\"loaded",{"_index":904,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["console.log(\"no",{"_index":2148,"title":{},"body":{"injectables/ObservationService.html":{}}}],["console.log(\"saved",{"_index":330,"title":{},"body":{"components/AccountComponent.html":{}}}],["console.log(\"this",{"_index":1200,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log('after",{"_index":2533,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('before",{"_index":2521,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('blur",{"_index":612,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('first",{"_index":2534,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('focus",{"_index":608,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["console.log('loaded",{"_index":1984,"title":{},"body":{"components/MedicationsComponent.html":{},"components/TimelineComponent.html":{}}}],["console.log('log",{"_index":2525,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('patient1',this.patient",{"_index":2515,"title":{},"body":{"components/TimelineComponent.html":{}}}],["console.log('population",{"_index":156,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["console.log('stop",{"_index":2443,"title":{},"body":{"injectables/SmartService.html":{}}}],["console.log('that",{"_index":1192,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(condition",{"_index":1331,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["console.log(data",{"_index":1368,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["console.log(forms",{"_index":1633,"title":{},"body":{"components/FormBuilder.html":{}}}],["console.log(fullpath",{"_index":1197,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["console.log(obs",{"_index":2224,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["console.log(plan",{"_index":772,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["console.log(this.levelnodes",{"_index":160,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["const",{"_index":130,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{},"injectables/EncounterService.html":{},"injectables/SmartService.html":{}}}],["constitutional",{"_index":2130,"title":{},"body":{"injectables/ObservationService.html":{}}}],["construct",{"_index":142,"title":{},"body":{"components/AccordionRecursion.html":{},"components/PatientComponent.html":{}}}],["constructed",{"_index":64,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["constructor(associationservice",{"_index":2197,"title":{},"body":{"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["constructor(careplanservice",{"_index":1976,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["constructor(conditionservice",{"_index":1088,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["constructor(cookieservice",{"_index":1470,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["constructor(doctorservice",{"_index":290,"title":{},"body":{"components/AccountComponent.html":{}}}],["constructor(el",{"_index":598,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["constructor(encounterservice",{"_index":2499,"title":{},"body":{"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["constructor(fhirservice",{"_index":806,"title":{},"body":{"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["constructor(http",{"_index":506,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["constructor(name",{"_index":1966,"title":{},"body":{"classes/Medication.html":{},"classes/Server.html":{}}}],["constructor(observationservice",{"_index":28,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationRecursiveChart.html":{}}}],["constructor(private",{"_index":141,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"directives/HighlightDirective.html":{},"components/ObservationRecursiveChart.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["constructor(public",{"_index":2374,"title":{},"body":{"classes/Server.html":{}}}],["constructor(ref",{"_index":1381,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["constructor(scratchpadservice",{"_index":721,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{}}}],["constructor(trendsservice",{"_index":1671,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["contain",{"_index":107,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/typealiases.html":{}}}],["contained",{"_index":2087,"title":{},"body":{"injectables/ObservationService.html":{}}}],["containing",{"_index":121,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HoverBoxComponent.html":{}}}],["contains",{"_index":124,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["content",{"_index":2453,"title":{},"body":{"injectables/SmartService.html":{}}}],["context",{"_index":749,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["contextmenu",{"_index":1369,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["contextmenu'},{'name",{"_index":228,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["contextmenu.component.ts",{"_index":2789,"title":{},"body":{"index.html":{}}}],["contextmenu.html",{"_index":1370,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["contextmenu/contextmenu.component",{"_index":747,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["contextmenucomponent",{"_index":227,"title":{"components/ContextMenuComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contextmenuoption",{"_index":1385,"title":{"classes/ContextMenuOption.html":{}},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["contexts",{"_index":1413,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["continual",{"_index":2176,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["continually",{"_index":1040,"title":{},"body":{"injectables/ConditionService.html":{}}}],["continue",{"_index":1778,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["convert",{"_index":1545,"title":{},"body":{"injectables/EncounterService.html":{}}}],["cookie",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"injectables/DoctorService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["correct",{"_index":980,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{}}}],["count",{"_index":1494,"title":{},"body":{"injectables/DoctorService.html":{},"injectables/ObservationService.html":{}}}],["coverage",{"_index":2604,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":839,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.code",{"_index":841,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.activity[0].detail.dailyamount.value",{"_index":852,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["cp.period.end",{"_index":801,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp.period.start",{"_index":800,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp['title",{"_index":799,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["cp[\\'title",{"_index":802,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["create",{"_index":69,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/CarePlanService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["createcareplansnodes",{"_index":19,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["createcareplansnodes(careplans",{"_index":67,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["createconditionsnodes",{"_index":20,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["createconditionsnodes(conditions",{"_index":75,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["created",{"_index":1802,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["createobservationsnodes",{"_index":21,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["createobservationsnodes(observations",{"_index":77,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["creating",{"_index":1771,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["creatinine",{"_index":315,"title":{},"body":{"components/AccountComponent.html":{}}}],["cross",{"_index":2444,"title":{},"body":{"injectables/SmartService.html":{}}}],["css",{"_index":2702,"title":{},"body":{"index.html":{}}}],["csub.clinicalstatus",{"_index":1208,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub.relativedatetime",{"_index":1209,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['coding'][0]['code",{"_index":1207,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub['code']['text",{"_index":1206,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'coding\\'][0][\\'code",{"_index":1212,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["csub[\\'code\\'][\\'text",{"_index":1211,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["current",{"_index":50,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["currently",{"_index":538,"title":{},"body":{"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{},"components/ToolbarComponent.html":{}}}],["currstatus",{"_index":2354,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["custom",{"_index":1846,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["d",{"_index":1342,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getdate",{"_index":1357,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["d.getfullyear",{"_index":1358,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["dailyamount",{"_index":700,"title":{},"body":{"classes/CarePlan.html":{}}}],["daniel",{"_index":2744,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1736,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["dashedlines",{"_index":909,"title":{},"body":{"classes/Chart.html":{}}}],["data",{"_index":118,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Chart.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TripleListComponent.html":{}}}],["data.length",{"_index":1769,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["data['rest'][0].security.extension.filter(e",{"_index":2423,"title":{},"body":{"injectables/SmartService.html":{}}}],["data[0].code['text",{"_index":1773,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["datalocation",{"_index":1096,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["datalocation.foreach(element",{"_index":1187,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date",{"_index":697,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/TimelinePopupComponent.html":{}}}],["date().gettime",{"_index":1134,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["date(c.onsetdatetime",{"_index":1343,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["date(c.onsetdatetime).gettime",{"_index":1137,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(condition.onsetdatetime).gettime",{"_index":1272,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["date(cp.period.end",{"_index":850,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(cp.period.start",{"_index":849,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["date(form.maxdate",{"_index":1716,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(form.mindate",{"_index":1714,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["date(newdate).todatestring",{"_index":1139,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["date(ob.effectivedatetime).gettime",{"_index":2160,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(point.relativedatetime",{"_index":1780,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["date(this.conditions[0].onsetdatetime).gettime",{"_index":1135,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["date(this.observations[0].effectivedatetime).gettime",{"_index":2157,"title":{},"body":{"injectables/ObservationService.html":{}}}],["date(this.period.end",{"_index":1533,"title":{},"body":{"classes/Encounter.html":{}}}],["date(this.period.start",{"_index":1532,"title":{},"body":{"classes/Encounter.html":{}}}],["datepipe",{"_index":2539,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["datepipe('en",{"_index":2545,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dates",{"_index":1257,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["datetime",{"_index":585,"title":{},"body":{"injectables/AssociationService.html":{}}}],["dd",{"_index":2555,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["dealing",{"_index":2755,"title":{},"body":{"index.html":{}}}],["debounce",{"_index":669,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debouncetime",{"_index":660,"title":{},"body":{"classes/BaseColumn.html":{}}}],["debugging",{"_index":2474,"title":{},"body":{"injectables/SmartService.html":{}}}],["december",{"_index":1355,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["declarations",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["declare",{"_index":1243,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["declared",{"_index":2751,"title":{},"body":{"index.html":{}}}],["declaring",{"_index":2750,"title":{},"body":{"index.html":{}}}],["decodeuricomponent(tmp[1",{"_index":2481,"title":{},"body":{"injectables/SmartService.html":{}}}],["decorators",{"_index":741,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["default",{"_index":84,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["delay",{"_index":1416,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["delete",{"_index":1163,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["demos",{"_index":1262,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["dependencies",{"_index":391,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependenciesif",{"_index":2723,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1500,"title":{},"body":{"injectables/DoctorService.html":{}}}],["depth",{"_index":51,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["desc",{"_index":1125,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["description",{"_index":72,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AppComponent.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["deserialize",{"_index":1539,"title":{},"body":{"injectables/EncounterService.html":{}}}],["deserialize(input",{"_index":1543,"title":{},"body":{"injectables/EncounterService.html":{}}}],["detail",{"_index":699,"title":{},"body":{"classes/CarePlan.html":{}}}],["details",{"_index":1528,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["detects",{"_index":879,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["determine",{"_index":1339,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["developing",{"_index":2770,"title":{},"body":{"index.html":{}}}],["development",{"_index":2722,"title":{},"body":{"index.html":{}}}],["dietary",{"_index":136,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/variables.html":{}}}],["diff",{"_index":1133,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["directive",{"_index":204,"title":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["directives",{"_index":271,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["directly",{"_index":57,"title":{},"body":{"components/AccordionRecursion.html":{},"index.html":{}}}],["disable",{"_index":1444,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["discussed",{"_index":1050,"title":{},"body":{"injectables/ConditionService.html":{}}}],["display",{"_index":47,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/CarePlan.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{}}}],["display_delay",{"_index":1849,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["displayed",{"_index":73,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["displaying",{"_index":1767,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/ObservationsDisplay.html":{}}}],["displays",{"_index":117,"title":{},"body":{"components/AccordionRecursion.html":{},"components/TripleListComponent.html":{}}}],["div",{"_index":1525,"title":{},"body":{"classes/Encounter.html":{}}}],["do's",{"_index":2748,"title":{},"body":{"index.html":{}}}],["dob",{"_index":2319,"title":{},"body":{"components/PatientComponent.html":{}}}],["doctorservice",{"_index":291,"title":{"injectables/DoctorService.html":{}},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["document",{"_index":1391,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["document.getelementbyid",{"_index":2765,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"cg",{"_index":1179,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["documentation",{"_index":2605,"title":{},"body":{"coverage.html":{}}}],["doing",{"_index":2756,"title":{},"body":{"index.html":{}}}],["doit",{"_index":1892,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["doit(n",{"_index":1893,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["don't",{"_index":2312,"title":{},"body":{"components/PatientComponent.html":{}}}],["done",{"_index":2745,"title":{},"body":{"index.html":{}}}],["dont's",{"_index":2761,"title":{},"body":{"index.html":{}}}],["dosage",{"_index":851,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["dosageunits",{"_index":840,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["doubles/triples",{"_index":1488,"title":{},"body":{"injectables/DoctorService.html":{}}}],["down",{"_index":1218,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["driven",{"_index":2694,"title":{},"body":{"index.html":{}}}],["due",{"_index":360,"title":{},"body":{"components/AccountComponent.html":{}}}],["duration",{"_index":1068,"title":{},"body":{"injectables/ConditionService.html":{}}}],["dynamic",{"_index":620,"title":{},"body":{"classes/BaseColumn.html":{},"dependencies.html":{}}}],["e.resource",{"_index":2143,"title":{},"body":{"injectables/ObservationService.html":{}}}],["e.url",{"_index":2424,"title":{},"body":{"injectables/SmartService.html":{}}}],["each",{"_index":174,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"index.html":{}}}],["earliest",{"_index":1718,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["ears",{"_index":2134,"title":{},"body":{"injectables/ObservationService.html":{}}}],["edge",{"_index":1880,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["effective",{"_index":589,"title":{},"body":{"injectables/AssociationService.html":{}}}],["effectivedatetime",{"_index":516,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["eg",{"_index":882,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["el",{"_index":602,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["elapsed",{"_index":1441,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["electrolytes",{"_index":283,"title":{},"body":{"components/AccountComponent.html":{}}}],["element",{"_index":203,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["elementref",{"_index":599,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/ContextMenuComponent.html":{},"directives/HighlightDirective.html":{},"components/ToolbarComponent.html":{}}}],["elements",{"_index":936,"title":{},"body":{"classes/Chart.html":{},"components/ConditionsComponent.html":{}}}],["ellipsestoggle",{"_index":1078,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["elref",{"_index":2575,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["emit",{"_index":2201,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["empty",{"_index":829,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{}}}],["emsp",{"_index":1886,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["enableprodmode",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["enc",{"_index":2308,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getlogvalue()/5",{"_index":2524,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.getreason",{"_index":2310,"title":{},"body":{"components/PatientComponent.html":{}}}],["enc.getstartdate",{"_index":2528,"title":{},"body":{"components/TimelineComponent.html":{}}}],["enc.position",{"_index":2523,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encodeuri(request",{"_index":2476,"title":{},"body":{"injectables/SmartService.html":{}}}],["encodeuri(this.redirecturi",{"_index":2450,"title":{},"body":{"injectables/SmartService.html":{}}}],["encounter",{"_index":1507,"title":{"classes/Encounter.html":{}},"body":{"classes/Encounter.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{},"index.html":{}}}],["encounter.getreason",{"_index":2557,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["encounters",{"_index":1537,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["encounters.foreach(enc",{"_index":2522,"title":{},"body":{"components/TimelineComponent.html":{}}}],["encounterservice",{"_index":405,"title":{"injectables/EncounterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["encounterslength",{"_index":2493,"title":{},"body":{"components/TimelineComponent.html":{}}}],["end",{"_index":698,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{},"index.html":{}}}],["endindex",{"_index":2494,"title":{},"body":{"components/TimelineComponent.html":{}}}],["endpoint",{"_index":537,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/EncounterService.html":{}}}],["ent",{"_index":2138,"title":{},"body":{"injectables/ObservationService.html":{}}}],["entire",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["entry",{"_index":677,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["entry.description",{"_index":955,"title":{},"body":{"components/CheckboxInline.html":{},"components/SelectListSingle.html":{}}}],["enum",{"_index":89,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["enumerated",{"_index":1490,"title":{},"body":{"injectables/DoctorService.html":{}}}],["enumerations",{"_index":2686,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":1191,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["errors",{"_index":1167,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["even",{"_index":1249,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["event",{"_index":344,"title":{},"body":{"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["event.pagex",{"_index":1437,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["event.pagey",{"_index":1434,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.preventdefault",{"_index":1446,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["event.shiftkey",{"_index":2057,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["event.target.checked",{"_index":1986,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["event.target.innerheight",{"_index":674,"title":{},"body":{"classes/BaseColumn.html":{}}}],["eventemitter",{"_index":724,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{}}}],["events",{"_index":1448,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["example",{"_index":52,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ContextMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["examples",{"_index":2788,"title":{},"body":{"index.html":{}}}],["excessive",{"_index":671,"title":{},"body":{"classes/BaseColumn.html":{}}}],["excludes",{"_index":1495,"title":{},"body":{"injectables/DoctorService.html":{}}}],["exec",{"_index":753,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["execute",{"_index":1365,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["executed",{"_index":1395,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["exercise",{"_index":138,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":843,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{}}}],["existing",{"_index":842,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["exists",{"_index":1202,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["exp",{"_index":1903,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["expand",{"_index":715,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expand(parent",{"_index":733,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["expected",{"_index":925,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["export",{"_index":139,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["exports",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["extends",{"_index":859,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["extra",{"_index":1792,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["extract",{"_index":554,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo",{"_index":502,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractconditioninfo(condition",{"_index":510,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractnewobservations",{"_index":2071,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractnewobservations(observations",{"_index":2080,"title":{},"body":{"injectables/ObservationService.html":{}}}],["extractobservationinfo",{"_index":503,"title":{},"body":{"injectables/AssociationService.html":{}}}],["extractobservationinfo(observation",{"_index":514,"title":{},"body":{"injectables/AssociationService.html":{}}}],["eyes",{"_index":2133,"title":{},"body":{"injectables/ObservationService.html":{}}}],["false",{"_index":92,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["february",{"_index":1346,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["female",{"_index":2287,"title":{},"body":{"components/PatientComponent.html":{}}}],["fhir",{"_index":1538,"title":{},"body":{"injectables/EncounterService.html":{}}}],["fhir.service",{"_index":814,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{}}}],["fhirbaseurl",{"_index":2379,"title":{},"body":{"injectables/SmartService.html":{}}}],["fhirservice",{"_index":406,"title":{"injectables/FhirService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["field",{"_index":1193,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["fields",{"_index":570,"title":{},"body":{"injectables/AssociationService.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":173,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/DoctorService.html":{}}}],["filtering",{"_index":2593,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterscratchpad",{"_index":2572,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filterset",{"_index":2067,"title":{},"body":{"injectables/ObservationService.html":{}}}],["find",{"_index":1882,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["findgetparameter",{"_index":2385,"title":{},"body":{"injectables/SmartService.html":{}}}],["findgetparameter(parametername",{"_index":2390,"title":{},"body":{"injectables/SmartService.html":{}}}],["findings",{"_index":361,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["finished",{"_index":988,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["first",{"_index":197,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/SmartService.html":{}}}],["fit",{"_index":1738,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["fix",{"_index":2459,"title":{},"body":{"injectables/SmartService.html":{}}}],["fixed",{"_index":1560,"title":{},"body":{"injectables/EncounterService.html":{}}}],["fixed[prop",{"_index":1562,"title":{},"body":{"injectables/EncounterService.html":{}}}],["focus",{"_index":606,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{}}}],["folder",{"_index":2732,"title":{},"body":{"index.html":{}}}],["following",{"_index":1864,"title":{},"body":{"components/HoverBoxComponent.html":{},"index.html":{}}}],["foo",{"_index":1657,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["force",{"_index":2733,"title":{},"body":{"index.html":{}}}],["form",{"_index":230,"title":{"classes/Form.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["format",{"_index":924,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{}}}],["formbuilder",{"_index":229,"title":{"components/FormBuilder.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcreatormodule",{"_index":401,"title":{"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["forminput",{"_index":1608,"title":{},"body":{"components/FormBuilder.html":{}}}],["forms",{"_index":1603,"title":{},"body":{"components/FormBuilder.html":{}}}],["formsmodule",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["found",{"_index":2117,"title":{},"body":{"injectables/ObservationService.html":{}}}],["fromevent",{"_index":658,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(document",{"_index":1450,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["fromevent(window",{"_index":667,"title":{},"body":{"classes/BaseColumn.html":{}}}],["front",{"_index":2692,"title":{},"body":{"index.html":{}}}],["fullpath",{"_index":1186,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["function",{"_index":768,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["function(condition",{"_index":1326,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["function(data",{"_index":1364,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["functionality",{"_index":619,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["functions",{"_index":754,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["g",{"_index":2721,"title":{},"body":{"index.html":{}}}],["gender",{"_index":2240,"title":{},"body":{"classes/Patient.html":{}}}],["genderstring",{"_index":2258,"title":{},"body":{"components/PatientComponent.html":{}}}],["genderstring(patient",{"_index":2261,"title":{},"body":{"components/PatientComponent.html":{}}}],["generalchange",{"_index":342,"title":{},"body":{"components/AccountComponent.html":{}}}],["generally",{"_index":934,"title":{},"body":{"classes/Chart.html":{}}}],["generate",{"_index":1489,"title":{},"body":{"injectables/DoctorService.html":{}}}],["generic",{"_index":2785,"title":{},"body":{"index.html":{}}}],["getassociations",{"_index":504,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getassociations(checkedconditions",{"_index":517,"title":{},"body":{"injectables/AssociationService.html":{}}}],["getcheckedconditions",{"_index":1007,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getcheckedobservations",{"_index":2072,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getcode",{"_index":2009,"title":{},"body":{"classes/Observation.html":{}}}],["getcolumnstate",{"_index":1008,"title":{},"body":{"injectables/ConditionService.html":{}}}],["getdata",{"_index":945,"title":{},"body":{"components/CheckboxInline.html":{},"components/FormBuilder.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["getdaterange",{"_index":1749,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdaterange(chart",{"_index":1758,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getdatestring",{"_index":1291,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getdatestring(c",{"_index":1307,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["getenddate",{"_index":1511,"title":{},"body":{"classes/Encounter.html":{}}}],["getforms",{"_index":1605,"title":{},"body":{"components/FormBuilder.html":{}}}],["getgrouping",{"_index":2073,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getgrouping(code",{"_index":2083,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getlevel",{"_index":2044,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["getlogvalue",{"_index":1512,"title":{},"body":{"classes/Encounter.html":{}}}],["getreason",{"_index":1513,"title":{},"body":{"classes/Encounter.html":{}}}],["getrequestoptions",{"_index":1567,"title":{},"body":{"injectables/FhirService.html":{}}}],["getrequestoptions(withauth",{"_index":1572,"title":{},"body":{"injectables/FhirService.html":{}}}],["gets",{"_index":1062,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{}}}],["getscratchpadcareplans",{"_index":863,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["getscratchpadconditions",{"_index":1222,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["getscratchpadcount",{"_index":966,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["getscratchpadobservations",{"_index":2074,"title":{},"body":{"injectables/ObservationService.html":{}}}],["getstartdate",{"_index":1514,"title":{},"body":{"classes/Encounter.html":{}}}],["getters",{"_index":1283,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["gettext",{"_index":2010,"title":{},"body":{"classes/Observation.html":{}}}],["gettext(o",{"_index":2024,"title":{},"body":{"classes/Observation.html":{}}}],["getting",{"_index":2689,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":2386,"title":{},"body":{"injectables/SmartService.html":{}}}],["getunits",{"_index":2011,"title":{},"body":{"classes/Observation.html":{}}}],["getunits(o",{"_index":2026,"title":{},"body":{"classes/Observation.html":{}}}],["geturl",{"_index":1568,"title":{},"body":{"injectables/FhirService.html":{}}}],["getvalue",{"_index":2012,"title":{},"body":{"classes/Observation.html":{}}}],["getvalue(o",{"_index":2028,"title":{},"body":{"classes/Observation.html":{}}}],["getvaluerange",{"_index":1750,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["getvaluerange(chart",{"_index":1760,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["gfr",{"_index":316,"title":{},"body":{"components/AccountComponent.html":{}}}],["git",{"_index":2715,"title":{},"body":{"index.html":{}}}],["given",{"_index":819,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["giving",{"_index":2776,"title":{},"body":{"index.html":{}}}],["glitch",{"_index":1412,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["global",{"_index":1627,"title":{},"body":{"components/FormBuilder.html":{}}}],["glu",{"_index":312,"title":{},"body":{"components/AccountComponent.html":{}}}],["glyphicon",{"_index":766,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["graphconfig",{"_index":1467,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["groupconditions",{"_index":1079,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouping",{"_index":2005,"title":{},"body":{"classes/Observation.html":{}}}],["groupingcount",{"_index":1098,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["grouplist",{"_index":2107,"title":{},"body":{"injectables/ObservationService.html":{}}}],["groupmap",{"_index":2068,"title":{},"body":{"injectables/ObservationService.html":{}}}],["grow.directive.ts",{"_index":594,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["grow.directive.ts:10",{"_index":601,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:15",{"_index":604,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grow.directive.ts:19",{"_index":603,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["grunt",{"_index":2699,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":2747,"title":{},"body":{"index.html":{}}}],["handle",{"_index":80,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["handledocclick",{"_index":1378,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handledocclick(event",{"_index":1387,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleobservationbundle",{"_index":2075,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleobservationbundle(bundle",{"_index":2089,"title":{},"body":{"injectables/ObservationService.html":{}}}],["handleoptionclick",{"_index":1379,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleoptionclick(option",{"_index":1392,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["handleresize",{"_index":631,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handleresize(event",{"_index":647,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["handles",{"_index":1394,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ObservationsComponent.html":{}}}],["hardcode",{"_index":195,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HoverBoxComponent.html":{}}}],["hardcoded",{"_index":127,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/HistoricalTrendsService.html":{},"miscellaneous/variables.html":{}}}],["hashing",{"_index":2460,"title":{},"body":{"injectables/SmartService.html":{}}}],["hasing\")).tostring",{"_index":2465,"title":{},"body":{"injectables/SmartService.html":{}}}],["hba1c",{"_index":311,"title":{},"body":{"components/AccountComponent.html":{}}}],["hdl",{"_index":302,"title":{},"body":{"components/AccountComponent.html":{}}}],["headers",{"_index":1586,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["headers.append('authorization",{"_index":1589,"title":{},"body":{"injectables/FhirService.html":{}}}],["headings",{"_index":59,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/typealiases.html":{}}}],["heart",{"_index":2123,"title":{},"body":{"injectables/ObservationService.html":{}}}],["height",{"_index":637,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["height_offset",{"_index":630,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["here",{"_index":2303,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["hide",{"_index":1380,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hide(event",{"_index":1397,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["hiding",{"_index":1405,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["high",{"_index":938,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{}}}],["highlight",{"_index":275,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["highlightdirective",{"_index":274,"title":{"directives/HighlightDirective.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["highlighted",{"_index":1033,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsDisplay.html":{}}}],["highlighttext",{"_index":1652,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["hii",{"_index":2739,"title":{},"body":{"index.html":{}}}],["historical",{"_index":349,"title":{},"body":{"components/AccountComponent.html":{}}}],["historicaltrends",{"_index":1659,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrends'},{'name",{"_index":233,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["historicaltrends.html",{"_index":1660,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["historicaltrendscomponent",{"_index":232,"title":{"components/HistoricalTrendsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["historicaltrendsservice",{"_index":407,"title":{"injectables/HistoricalTrendsService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["history",{"_index":2127,"title":{},"body":{"injectables/ObservationService.html":{}}}],["home",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":235,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["home.html",{"_index":1827,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":234,"title":{"components/HomeComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["horizontal",{"_index":932,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["host",{"_index":605,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["hover",{"_index":1845,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["hoverbox",{"_index":1847,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["hoverbox'},{'name",{"_index":237,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["hoverbox.component.ts",{"_index":2790,"title":{},"body":{"index.html":{}}}],["hoverbox.html",{"_index":1848,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["hoverbox/hoverbox.component",{"_index":2280,"title":{},"body":{"components/PatientComponent.html":{}}}],["hoverboxcomponent",{"_index":236,"title":{"components/HoverBoxComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hoverstyling",{"_index":2257,"title":{},"body":{"components/PatientComponent.html":{}}}],["hspc",{"_index":2738,"title":{},"body":{"index.html":{}}}],["html",{"_index":202,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["http",{"_index":509,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["http://ec2",{"_index":526,"title":{},"body":{"injectables/AssociationService.html":{}}}],["http://fhir",{"_index":2425,"title":{},"body":{"injectables/SmartService.html":{}}}],["http://localhost:9000",{"_index":2405,"title":{},"body":{"injectables/SmartService.html":{}}}],["httpclient",{"_index":507,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["httpclientmodule",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1583,"title":{},"body":{"injectables/FhirService.html":{},"injectables/SmartService.html":{}}}],["httpheaders({'accept",{"_index":1587,"title":{},"body":{"injectables/FhirService.html":{}}}],["https://github.com/hii",{"_index":2717,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/45594609/which",{"_index":1034,"title":{},"body":{"injectables/ConditionService.html":{}}}],["humanizebytes",{"_index":1891,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["humanizebytespipe",{"_index":1888,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["icon",{"_index":765,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["icons",{"_index":1462,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["id",{"_index":374,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Client.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"classes/Form.html":{},"components/HomeComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"classes/Patient.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"classes/User.html":{}}}],["id.type",{"_index":2341,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.type.coding[0].code",{"_index":2342,"title":{},"body":{"injectables/PatientService.html":{}}}],["id.value",{"_index":2344,"title":{},"body":{"injectables/PatientService.html":{}}}],["id=\"tableparentele",{"_index":1210,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["identifier",{"_index":2241,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["ie",{"_index":625,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"index.html":{}}}],["if(this.endindex",{"_index":2536,"title":{},"body":{"components/TimelineComponent.html":{}}}],["implement",{"_index":986,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["implemented",{"_index":1250,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["implements",{"_index":684,"title":{},"body":{"classes/CarePlan.html":{},"classes/Condition.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Observation.html":{}}}],["import",{"_index":95,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["imports",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["inactive",{"_index":170,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1333,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/TripleListComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["information",{"_index":1826,"title":{},"body":{"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["inherited",{"_index":870,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["initial",{"_index":351,"title":{},"body":{"components/AccountComponent.html":{},"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{}}}],["initialize",{"_index":952,"title":{},"body":{"components/CheckboxInline.html":{},"components/ConditionsComponent.html":{}}}],["initialized",{"_index":751,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["injectable",{"_index":496,"title":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{}},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"coverage.html":{}}}],["injectables",{"_index":497,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"injectables/ToolBarService.html":{},"overview.html":{}}}],["inline",{"_index":941,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline'},{'name",{"_index":218,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["inline.component",{"_index":1643,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["inline.component.ts",{"_index":940,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["inline.component.ts:10",{"_index":950,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:11",{"_index":951,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:13",{"_index":949,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:20",{"_index":948,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.component.ts:9",{"_index":947,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inline.html",{"_index":942,"title":{},"body":{"components/CheckboxInline.html":{}}}],["inner",{"_index":119,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["input",{"_index":96,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["input('highlighttext",{"_index":1654,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["input[prop",{"_index":1563,"title":{},"body":{"injectables/EncounterService.html":{}}}],["inputdata",{"_index":946,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.name",{"_index":954,"title":{},"body":{"components/CheckboxInline.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["inputdata.data.status",{"_index":2361,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["inputs",{"_index":23,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["install",{"_index":2709,"title":{},"body":{"index.html":{}}}],["installed",{"_index":2706,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1546,"title":{},"body":{"injectables/EncounterService.html":{}}}],["instead",{"_index":1164,"title":{},"body":{"components/ConditionsChartComponent.html":{},"index.html":{}}}],["instructions",{"_index":2726,"title":{},"body":{"index.html":{}}}],["interface",{"_index":492,"title":{"interfaces/Associable.html":{}},"body":{"interfaces/Associable.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfaces",{"_index":494,"title":{},"body":{"interfaces/Associable.html":{}}}],["internal",{"_index":1151,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["internally",{"_index":65,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["interval",{"_index":1440,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["invalid",{"_index":1710,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["isallchecked",{"_index":710,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["ischecked",{"_index":1328,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["isconditionassociated",{"_index":1292,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionassociated(condition",{"_index":1309,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked",{"_index":1293,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionchecked(condition",{"_index":1311,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected",{"_index":1294,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isconditionselected(condition",{"_index":1313,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["isdate",{"_index":1853,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isdate(x",{"_index":1857,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isleaf",{"_index":123,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["ismonth",{"_index":1854,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["ismonth(x",{"_index":1859,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["isn't",{"_index":2032,"title":{},"body":{"classes/Observation.html":{}}}],["isobservationassociated",{"_index":2193,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationassociated(observation",{"_index":2209,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked",{"_index":2194,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isobservationchecked(observation",{"_index":2211,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["isparent",{"_index":991,"title":{},"body":{"classes/Condition.html":{}}}],["isvisible",{"_index":992,"title":{},"body":{"classes/Condition.html":{}}}],["it's",{"_index":1196,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["item",{"_index":1885,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/TimelineComponent.html":{}}}],["item.split",{"_index":2479,"title":{},"body":{"injectables/SmartService.html":{}}}],["items",{"_index":24,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/HoverBoxComponent.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":1493,"title":{},"body":{"injectables/DoctorService.html":{}}}],["itself",{"_index":1766,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["january",{"_index":1345,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["john",{"_index":340,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["jquery",{"_index":1241,"title":{},"body":{"components/ConditionsComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":1150,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/EncounterService.html":{},"index.html":{}}}],["json.parse(json.stringify(this.conditions",{"_index":1143,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["json.parse(this.cookieservice.get('graphconfig",{"_index":2283,"title":{},"body":{"components/PatientComponent.html":{}}}],["json.stringify(this.graphconfig",{"_index":1506,"title":{},"body":{"injectables/DoctorService.html":{}}}],["july",{"_index":1350,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["june",{"_index":1349,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["justcreated",{"_index":1220,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["keep",{"_index":1698,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["keeps",{"_index":622,"title":{},"body":{"classes/BaseColumn.html":{}}}],["key",{"_index":165,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ObservationsComponent.html":{}}}],["kidneyfunction",{"_index":284,"title":{},"body":{"components/AccountComponent.html":{}}}],["know",{"_index":1063,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lab",{"_index":365,"title":{},"body":{"components/AccountComponent.html":{}}}],["largest",{"_index":1813,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["last",{"_index":1067,"title":{},"body":{"injectables/ConditionService.html":{}}}],["lastindex",{"_index":2043,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["latest",{"_index":1719,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["launch",{"_index":2380,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["layout",{"_index":2703,"title":{},"body":{"index.html":{}}}],["ldl",{"_index":301,"title":{},"body":{"components/AccountComponent.html":{}}}],["leaf",{"_index":115,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["leave",{"_index":1502,"title":{},"body":{"injectables/DoctorService.html":{}}}],["leaving",{"_index":2766,"title":{},"body":{"index.html":{}}}],["left",{"_index":1374,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"index.html":{}}}],["leftoffset",{"_index":1850,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["leftposition",{"_index":2565,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["legend",{"_index":201,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"overview.html":{}}}],["level",{"_index":25,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationRecursiveChart.html":{}}}],["levelnode",{"_index":60,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/typealiases.html":{}}}],["levelnodes",{"_index":26,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["levels",{"_index":109,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/typealiases.html":{}}}],["levels[0].items",{"_index":198,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["libraries",{"_index":2762,"title":{},"body":{"index.html":{}}}],["library",{"_index":1463,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["license",{"_index":2791,"title":{},"body":{"index.html":{}}}],["line",{"_index":779,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/SmartService.html":{}}}],["linear",{"_index":347,"title":{},"body":{"components/AccountComponent.html":{}}}],["linechartdata",{"_index":910,"title":{},"body":{"classes/Chart.html":{}}}],["lines",{"_index":933,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["link",{"_index":678,"title":{"classes/Link.html":{}},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["link.relation",{"_index":1055,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["links",{"_index":2177,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["linux",{"_index":2727,"title":{},"body":{"index.html":{}}}],["list",{"_index":46,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["listdata",{"_index":2366,"title":{},"body":{"components/SelectListSingle.html":{}}}],["lists",{"_index":1483,"title":{},"body":{"injectables/DoctorService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["literal",{"_index":375,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"classes/Chart.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"injectables/FhirService.html":{},"classes/Medication.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["liverfunction",{"_index":285,"title":{},"body":{"components/AccountComponent.html":{}}}],["load",{"_index":1041,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["loadallergies",{"_index":1009,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["loadallergies(patient",{"_index":1016,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadcareplans",{"_index":804,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadcareplans(patient",{"_index":808,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadconditions",{"_index":1010,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditions(patient",{"_index":1018,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage",{"_index":1011,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loadconditionspage(url",{"_index":1020,"title":{},"body":{"injectables/ConditionService.html":{}}}],["loaded",{"_index":94,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["loadencounters",{"_index":1540,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["loadencounters(patient",{"_index":1547,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage",{"_index":1541,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loadencounterspage(url",{"_index":1549,"title":{},"body":{"injectables/EncounterService.html":{}}}],["loader",{"_index":2665,"title":{},"body":{"dependencies.html":{}}}],["loadfinished",{"_index":17,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["loading",{"_index":1912,"title":{},"body":{"components/LoadingAnimation.html":{},"components/ObservationsComponent.html":{}}}],["loadinganimation",{"_index":238,"title":{"components/LoadingAnimation.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadinganimation'},{'name",{"_index":239,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["loadinganimation.html",{"_index":1914,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["loadmedications",{"_index":805,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadmedications(patient",{"_index":812,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["loadobservationspage",{"_index":2076,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadobservationspage(url",{"_index":2091,"title":{},"body":{"injectables/ObservationService.html":{}}}],["loadpatient",{"_index":2328,"title":{},"body":{"injectables/PatientService.html":{}}}],["locally",{"_index":2771,"title":{},"body":{"index.html":{}}}],["location",{"_index":1432,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["location.search.substr(1).split(\"&\").foreach(item",{"_index":2478,"title":{},"body":{"injectables/SmartService.html":{}}}],["logarithmic",{"_index":348,"title":{},"body":{"components/AccountComponent.html":{}}}],["logic",{"_index":1156,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"components/FormBuilder.html":{}}}],["long",{"_index":1168,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["longer",{"_index":1402,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["losing",{"_index":777,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["low",{"_index":937,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["lower",{"_index":2059,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["m.name",{"_index":1989,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["mac",{"_index":2724,"title":{},"body":{"index.html":{}}}],["magnesium",{"_index":310,"title":{},"body":{"components/AccountComponent.html":{}}}],["main_list",{"_index":1599,"title":{},"body":{"components/FormBuilder.html":{}}}],["maintaining",{"_index":776,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["make",{"_index":1258,"title":{},"body":{"components/ConditionsComponent.html":{},"index.html":{}}}],["makes",{"_index":87,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["male",{"_index":2288,"title":{},"body":{"components/PatientComponent.html":{}}}],["manager",{"_index":2705,"title":{},"body":{"index.html":{}}}],["map",{"_index":523,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/PatientService.html":{}}}],["mapping",{"_index":2086,"title":{},"body":{"injectables/ObservationService.html":{}}}],["mappings",{"_index":2172,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["maps",{"_index":540,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mapservice",{"_index":408,"title":{"injectables/MapService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapService.html":{},"components/ObservationsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapservice.static_mappings",{"_index":2184,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["march",{"_index":1347,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["mark",{"_index":561,"title":{},"body":{"injectables/AssociationService.html":{}}}],["matching",{"_index":190,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(recency_multiplier",{"_index":1270,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["math.log(this.getstartdate().gettime",{"_index":1534,"title":{},"body":{"classes/Encounter.html":{}}}],["math.max(max",{"_index":1818,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.min(min",{"_index":1816,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["math.pow(1024",{"_index":1902,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["max",{"_index":1708,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate",{"_index":1662,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["maxdate.gettime",{"_index":1821,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["maximum",{"_index":928,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["md5",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["md5.hashstr(\"testing",{"_index":2464,"title":{},"body":{"injectables/SmartService.html":{}}}],["md5/dist/md5",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{}}}],["meaning",{"_index":116,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["med",{"_index":844,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["med.periods.push",{"_index":848,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication",{"_index":132,"title":{"classes/Medication.html":{}},"body":{"components/AccordionRecursion.html":{},"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["medication(cp.title",{"_index":846,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medication.dosageunits",{"_index":1808,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.name",{"_index":1807,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medication.periods[i",{"_index":1809,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["medicationmap",{"_index":838,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.get(cp.title",{"_index":845,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medicationmap.set(cp.title",{"_index":853,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["medications",{"_index":830,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{}}}],["medications'},{'name",{"_index":241,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["medications.html",{"_index":1975,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["medicationscomponent",{"_index":240,"title":{"components/MedicationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menu",{"_index":711,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["merged",{"_index":835,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"dependencies.html":{}}}],["method",{"_index":1146,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["methods",{"_index":18,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["min",{"_index":1707,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["mindate",{"_index":1663,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["minimum",{"_index":927,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{}}}],["miscellaneous",{"_index":2685,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":369,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["model",{"_index":1499,"title":{},"body":{"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["models",{"_index":2754,"title":{},"body":{"index.html":{}}}],["models/allergyintolerance.model",{"_index":1032,"title":{},"body":{"injectables/ConditionService.html":{}}}],["models/bundle.model",{"_index":817,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["models/careplan.model",{"_index":103,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{}}}],["models/chart.model",{"_index":1765,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["models/condition.model",{"_index":101,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/PatientComponent.html":{}}}],["models/contextmenuoption.model",{"_index":1425,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["models/encounter.model",{"_index":1551,"title":{},"body":{"injectables/EncounterService.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["models/form.model",{"_index":1626,"title":{},"body":{"components/FormBuilder.html":{}}}],["models/medication.model",{"_index":816,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{},"components/MedicationsComponent.html":{}}}],["models/observation.model",{"_index":102,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["models/patient.model",{"_index":815,"title":{},"body":{"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["models/server.model",{"_index":2281,"title":{},"body":{"components/PatientComponent.html":{}}}],["modified",{"_index":1158,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["modifiers",{"_index":1480,"title":{},"body":{"injectables/DoctorService.html":{}}}],["module",{"_index":388,"title":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["modules",{"_index":390,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"dependencies.html":{}}}],["moment().subtract(months",{"_index":1732,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().subtract(years",{"_index":1729,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment().todate",{"_index":1731,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.maxdate).isvalid",{"_index":1712,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(form.mindate).isvalid",{"_index":1711,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moment(newdate).toisostring",{"_index":1140,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["moment(relativedatetime).toisostring",{"_index":1274,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["momentmodule",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":354,"title":{},"body":{"components/AccountComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["months",{"_index":1344,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{}}}],["months').todate",{"_index":1733,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["months[d.getmonth",{"_index":1356,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["more",{"_index":1260,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["mouse",{"_index":1696,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["mouseevent",{"_index":1664,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["mousemove",{"_index":1700,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mousesubscription",{"_index":1665,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["mouth",{"_index":2136,"title":{},"body":{"injectables/ObservationService.html":{}}}],["movements",{"_index":1697,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["moving",{"_index":1878,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["mr",{"_index":2343,"title":{},"body":{"injectables/PatientService.html":{}}}],["mrn",{"_index":2242,"title":{},"body":{"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["ms",{"_index":1863,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["multiple",{"_index":833,"title":{},"body":{"injectables/CarePlanService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{}}}],["n",{"_index":1895,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["n1.code['coding'][0]['code",{"_index":1129,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n1.effectivedatetime",{"_index":2153,"title":{},"body":{"injectables/ObservationService.html":{}}}],["n1.onsetdatetime",{"_index":1131,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2",{"_index":1128,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{}}}],["n2.code['coding'][0]['code",{"_index":1130,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["n2.onsetdatetime",{"_index":1132,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["name",{"_index":34,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/LoadingAnimation.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["nav2",{"_index":2571,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["navigation",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":2315,"title":{},"body":{"components/PatientComponent.html":{}}}],["necessary",{"_index":1239,"title":{},"body":{"components/ConditionsComponent.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":1503,"title":{},"body":{"injectables/DoctorService.html":{},"components/HoverBoxComponent.html":{}}}],["needed",{"_index":1403,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["needs",{"_index":1485,"title":{},"body":{"injectables/DoctorService.html":{}}}],["new",{"_index":524,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{},"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["newcolumnstate",{"_index":1024,"title":{},"body":{"injectables/ConditionService.html":{}}}],["newdate",{"_index":1136,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newly",{"_index":1801,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["newtable",{"_index":1080,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtable(tablename",{"_index":1095,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["newtoken",{"_index":1578,"title":{},"body":{"injectables/FhirService.html":{}}}],["next",{"_index":1042,"title":{},"body":{"injectables/ConditionService.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/ObservationService.html":{}}}],["nextlink",{"_index":1053,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["nextobservations",{"_index":2142,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ngafterviewinit",{"_index":716,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/TimelineComponent.html":{}}}],["ngmodule",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{}}}],["ngonchanges",{"_index":22,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["ngoninit",{"_index":717,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CheckboxInline.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{}}}],["ngx",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"classes/Chart.html":{},"injectables/DoctorService.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":120,"title":{},"body":{"components/AccordionRecursion.html":{},"index.html":{}}}],["nodes",{"_index":143,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["none",{"_index":1204,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/FormBuilder.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["normal",{"_index":243,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["normalbox1",{"_index":242,"title":{"components/NormalBox1.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalbox2",{"_index":246,"title":{"components/NormalBox2.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["normalvalues",{"_index":911,"title":{},"body":{"classes/Chart.html":{}}}],["nose",{"_index":2135,"title":{},"body":{"injectables/ObservationService.html":{}}}],["note",{"_index":752,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["nothing",{"_index":1709,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["november",{"_index":1354,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["now",{"_index":646,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/ObservationsComponent.html":{}}}],["npm",{"_index":2704,"title":{},"body":{"index.html":{}}}],["null",{"_index":900,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/PatientComponent.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{}}}],["number",{"_index":48,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"classes/Form.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Medication.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/TimelineComponent.html":{},"classes/User.html":{}}}],["numeric",{"_index":1775,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["o",{"_index":184,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["o.category[0].text",{"_index":188,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["o.date",{"_index":2063,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["o.id",{"_index":2228,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o.name",{"_index":2062,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["o.relativedatetime",{"_index":2236,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o['category",{"_index":187,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["o['code']['coding'][0]['display",{"_index":2038,"title":{},"body":{"classes/Observation.html":{}}}],["o['code']['text",{"_index":2037,"title":{},"body":{"classes/Observation.html":{}}}],["o['selected",{"_index":2227,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["o['valuequantity",{"_index":186,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["o['valuequantity']['unit",{"_index":2036,"title":{},"body":{"classes/Observation.html":{}}}],["o['valuequantity']['value",{"_index":2034,"title":{},"body":{"classes/Observation.html":{}}}],["ob",{"_index":2159,"title":{},"body":{"injectables/ObservationService.html":{}}}],["ob.relativedatetime",{"_index":2161,"title":{},"body":{"injectables/ObservationService.html":{}}}],["object",{"_index":1026,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/HistoricalTrendsService.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"classes/Timeline.html":{}}}],["object.keys(categories).map(cat",{"_index":180,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["obs",{"_index":2045,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["observable",{"_index":811,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/PatientService.html":{}}}],["observable.concat",{"_index":1049,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observables",{"_index":1037,"title":{},"body":{"injectables/ConditionService.html":{}}}],["observation",{"_index":43,"title":{"classes/Observation.html":{}},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"injectables/HistoricalTrendsService.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["observation.gettext(o",{"_index":2233,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getunits(o",{"_index":2235,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.getvalue(o",{"_index":2234,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observation.grouping",{"_index":2163,"title":{},"body":{"injectables/ObservationService.html":{}}}],["observation.service",{"_index":535,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation?patient",{"_index":2186,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observation['code']['coding'][0]['code",{"_index":590,"title":{},"body":{"injectables/AssociationService.html":{},"injectables/ObservationService.html":{}}}],["observation['code']['coding'][0]['system",{"_index":591,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observation['effectivedatetime",{"_index":592,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationrecursionchart",{"_index":2041,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationrecursionchart'},{'name",{"_index":249,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationrecursivechart",{"_index":248,"title":{"components/ObservationRecursiveChart.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observations",{"_index":40,"title":{},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["observations'},{'name",{"_index":251,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observations.html",{"_index":2171,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["observations.map(this.extractobservationinfo",{"_index":578,"title":{},"body":{"injectables/AssociationService.html":{}}}],["observationschart.html",{"_index":2042,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["observationscomponent",{"_index":250,"title":{"components/ObservationsComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay",{"_index":252,"title":{"components/ObservationsDisplay.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsdisplay'},{'name",{"_index":253,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["observationsdisplay.html",{"_index":2190,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationselected",{"_index":2196,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["observationservice",{"_index":29,"title":{"injectables/ObservationService.html":{}},"body":{"components/AccordionRecursion.html":{},"modules/AppModule.html":{},"injectables/AssociationService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["observationsincategory",{"_index":191,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["observationsincategory.push(o",{"_index":193,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["observationsinfo",{"_index":577,"title":{},"body":{"injectables/AssociationService.html":{}}}],["obsrvations",{"_index":157,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["occurrence",{"_index":1782,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["occurs",{"_index":2414,"title":{},"body":{"injectables/SmartService.html":{}}}],["october",{"_index":1353,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["of(conditions",{"_index":1058,"title":{},"body":{"injectables/ConditionService.html":{}}}],["of(encounters",{"_index":1556,"title":{},"body":{"injectables/EncounterService.html":{}}}],["onblur",{"_index":596,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["once",{"_index":987,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"index.html":{}}}],["onchanges",{"_index":1153,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ondatapointselect",{"_index":1666,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["ondatapointselect(chartevent",{"_index":1675,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["one",{"_index":836,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ConditionsChartComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"components/PatientComponent.html":{},"index.html":{}}}],["onfocus",{"_index":597,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["onloadcomplete",{"_index":1223,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["onradiochanged",{"_index":2349,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onradiochanged(currstatus",{"_index":2352,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["onscrollclickleft",{"_index":2496,"title":{},"body":{"components/TimelineComponent.html":{}}}],["onscrollclickright",{"_index":2497,"title":{},"body":{"components/TimelineComponent.html":{}}}],["onset",{"_index":584,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ScratchPadUpdate.html":{}}}],["onsetdatetime",{"_index":513,"title":{},"body":{"injectables/AssociationService.html":{},"classes/Condition.html":{}}}],["onsubmitclick",{"_index":1610,"title":{},"body":{"components/FormBuilder.html":{}}}],["onto",{"_index":2304,"title":{},"body":{"components/PatientComponent.html":{}}}],["open",{"_index":774,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/TimelinePopupComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["open(encounter",{"_index":2543,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["opened",{"_index":1414,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["openid",{"_index":2407,"title":{},"body":{"injectables/SmartService.html":{}}}],["opens",{"_index":881,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ToolbarComponent.html":{}}}],["operator",{"_index":1035,"title":{},"body":{"injectables/ConditionService.html":{}}}],["option",{"_index":1325,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"components/HistoricalTrendsComponent.html":{},"index.html":{}}}],["option.exec",{"_index":1452,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.exec(this.data",{"_index":1454,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["option.text",{"_index":1458,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["optional",{"_index":36,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["options",{"_index":760,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["options).pipe(map(res",{"_index":2338,"title":{},"body":{"injectables/PatientService.html":{}}}],["order",{"_index":1240,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"miscellaneous/variables.html":{}}}],["other_grouping",{"_index":2168,"title":{},"body":{"injectables/ObservationService.html":{}}}],["otherwise",{"_index":144,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/Encounter.html":{}}}],["out",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"injectables/SmartService.html":{},"overview.html":{}}}],["output",{"_index":97,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{}}}],["outputs",{"_index":719,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/FormBuilder.html":{},"components/ObservationsDisplay.html":{}}}],["outside",{"_index":1390,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["over",{"_index":832,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["overriden",{"_index":654,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["overview",{"_index":2777,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p1.name",{"_index":1786,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2",{"_index":1785,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["p2.name",{"_index":1787,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["package",{"_index":2656,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["pad",{"_index":627,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["paddedtable",{"_index":334,"title":{},"body":{"components/AccountComponent.html":{}}}],["paddedtd",{"_index":332,"title":{},"body":{"components/AccountComponent.html":{}}}],["padding:10px",{"_index":333,"title":{},"body":{"components/AccountComponent.html":{}}}],["page",{"_index":1043,"title":{},"body":{"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/PatientComponent.html":{}}}],["pages",{"_index":1045,"title":{},"body":{"injectables/ConditionService.html":{}}}],["paginated",{"_index":1039,"title":{},"body":{"injectables/ConditionService.html":{}}}],["param",{"_index":164,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/EncounterService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{}}}],["parameter",{"_index":1396,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["parametername",{"_index":2392,"title":{},"body":{"injectables/SmartService.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["parent",{"_index":735,"title":{},"body":{"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["part",{"_index":857,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["particularly",{"_index":2778,"title":{},"body":{"index.html":{}}}],["pass",{"_index":1492,"title":{},"body":{"injectables/DoctorService.html":{}}}],["passed",{"_index":66,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["passes",{"_index":1217,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["password",{"_index":343,"title":{},"body":{"components/AccountComponent.html":{}}}],["path",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"injectables/AssociationService.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["patient",{"_index":809,"title":{"classes/Patient.html":{}},"body":{"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/MedicationsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"index.html":{}}}],["patient's",{"_index":856,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["patient'},{'name",{"_index":255,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["patient.birthdate",{"_index":2320,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender",{"_index":2286,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.gender.charat(0).touppercase",{"_index":2317,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.html",{"_index":2254,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.id",{"_index":822,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["patient.mrn",{"_index":2318,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["patient.name[0].family[0",{"_index":2316,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient.name[0].given[0",{"_index":2314,"title":{},"body":{"components/PatientComponent.html":{}}}],["patient_viewer",{"_index":2720,"title":{},"body":{"index.html":{}}}],["patientcomponent",{"_index":254,"title":{"components/PatientComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["patientid",{"_index":2327,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientservice",{"_index":409,"title":{"injectables/PatientService.html":{}},"body":{"modules/AppModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["pencil",{"_index":767,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["period",{"_index":686,"title":{},"body":{"classes/CarePlan.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"injectables/HistoricalTrendsService.html":{}}}],["periods",{"_index":834,"title":{},"body":{"injectables/CarePlanService.html":{},"classes/Medication.html":{}}}],["persona",{"_index":2742,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":1887,"title":{"pipes/HumanizeBytesPipe.html":{}},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(concatmap(bundle",{"_index":1052,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/EncounterService.html":{}}}],["pipe(debouncetime(100",{"_index":668,"title":{},"body":{"classes/BaseColumn.html":{}}}],["pipe(map(bundle",{"_index":825,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["pipes",{"_index":1889,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pipetransform",{"_index":1900,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["pixel",{"_index":1883,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["pixels",{"_index":638,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["place",{"_index":2780,"title":{},"body":{"index.html":{}}}],["placed",{"_index":196,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["plan",{"_index":137,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/MedicationsComponent.html":{},"miscellaneous/variables.html":{}}}],["plans",{"_index":129,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":2446,"title":{},"body":{"injectables/SmartService.html":{}}}],["point",{"_index":1734,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["point.name",{"_index":1822,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.name.gettime",{"_index":1820,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.value",{"_index":1817,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity",{"_index":1776,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["point.valuequantity['value",{"_index":1777,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["points",{"_index":922,"title":{},"body":{"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["popover",{"_index":1286,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["populate",{"_index":70,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["populatecategories",{"_index":2077,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populatecategories(categories",{"_index":2094,"title":{},"body":{"injectables/ObservationService.html":{}}}],["populated",{"_index":2030,"title":{},"body":{"classes/Observation.html":{}}}],["popup",{"_index":1242,"title":{},"body":{"components/ConditionsComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["popup'},{'name",{"_index":266,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["pos",{"_index":2527,"title":{},"body":{"components/TimelineComponent.html":{}}}],["position",{"_index":1509,"title":{},"body":{"classes/Encounter.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{}}}],["position:string",{"_index":1526,"title":{},"body":{"classes/Encounter.html":{}}}],["possible",{"_index":963,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["potassium",{"_index":306,"title":{},"body":{"components/AccountComponent.html":{}}}],["prefer",{"_index":2749,"title":{},"body":{"index.html":{}}}],["preparing",{"_index":2697,"title":{},"body":{"index.html":{}}}],["pressure",{"_index":2122,"title":{},"body":{"injectables/ObservationService.html":{}}}],["prevent",{"_index":670,"title":{},"body":{"classes/BaseColumn.html":{}}}],["preventions/exposures",{"_index":172,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["prevents",{"_index":1411,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["previously",{"_index":2336,"title":{},"body":{"injectables/PatientService.html":{}}}],["print",{"_index":2311,"title":{},"body":{"components/PatientComponent.html":{}}}],["printmsg",{"_index":1295,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["printmsg(condition",{"_index":1317,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["prior",{"_index":551,"title":{},"body":{"injectables/AssociationService.html":{}}}],["private",{"_index":501,"title":{},"body":{"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/ToolbarComponent.html":{}}}],["probably",{"_index":1275,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["problem",{"_index":357,"title":{},"body":{"components/AccountComponent.html":{}}}],["problems",{"_index":169,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{}}}],["procedures",{"_index":133,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/variables.html":{}}}],["produces",{"_index":1265,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["product",{"_index":701,"title":{},"body":{"classes/CarePlan.html":{}}}],["productcodableconcept",{"_index":702,"title":{},"body":{"classes/CarePlan.html":{}}}],["productreference",{"_index":706,"title":{},"body":{"classes/CarePlan.html":{}}}],["profile",{"_index":2408,"title":{},"body":{"injectables/SmartService.html":{}}}],["progress",{"_index":134,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":2693,"title":{},"body":{"index.html":{}}}],["prop",{"_index":1561,"title":{},"body":{"injectables/EncounterService.html":{}}}],["proper",{"_index":2306,"title":{},"body":{"components/PatientComponent.html":{}}}],["properties",{"_index":15,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{}}}],["provided",{"_index":146,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/HistoricalTrendsService.html":{}}}],["providers",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}],["provides",{"_index":618,"title":{},"body":{"classes/BaseColumn.html":{},"components/TripleListComponent.html":{}}}],["providing",{"_index":1789,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["proxy.herokuapp.com/token",{"_index":2458,"title":{},"body":{"injectables/SmartService.html":{}}}],["public",{"_index":1376,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/MapService.html":{},"injectables/PatientService.html":{},"classes/Server.html":{}}}],["pug",{"_index":2220,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["purposes",{"_index":1496,"title":{},"body":{"injectables/DoctorService.html":{},"injectables/SmartService.html":{}}}],["push",{"_index":1487,"title":{},"body":{"injectables/DoctorService.html":{}}}],["pushing",{"_index":2768,"title":{},"body":{"index.html":{}}}],["px",{"_index":1435,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["quality",{"_index":1097,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["queued",{"_index":1874,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["r",{"_index":1530,"title":{},"body":{"classes/Encounter.html":{}}}],["r.resource",{"_index":828,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{}}}],["r.text",{"_index":1531,"title":{},"body":{"classes/Encounter.html":{}}}],["random",{"_index":773,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["range",{"_index":1798,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["ranges",{"_index":2031,"title":{},"body":{"classes/Observation.html":{}}}],["rate",{"_index":2124,"title":{},"body":{"injectables/ObservationService.html":{}}}],["reactivity",{"_index":1155,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["readable",{"_index":1906,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["readonly",{"_index":2326,"title":{},"body":{"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["realistic",{"_index":1266,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["reason",{"_index":1510,"title":{},"body":{"classes/Encounter.html":{},"classes/Observation.html":{},"components/PatientComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["reasons",{"_index":1527,"title":{},"body":{"classes/Encounter.html":{}}}],["reasontext",{"_index":2309,"title":{},"body":{"components/PatientComponent.html":{}}}],["recency_multiplier",{"_index":1267,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["recent",{"_index":1261,"title":{},"body":{"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["recompile",{"_index":2736,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":2439,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirect_uri",{"_index":2449,"title":{},"body":{"injectables/SmartService.html":{}}}],["redirecturi",{"_index":2381,"title":{},"body":{"injectables/SmartService.html":{}}}],["ref",{"_index":1383,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["reference",{"_index":707,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["referencerange",{"_index":2006,"title":{},"body":{"classes/Observation.html":{}}}],["reflect",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":790,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["registry.smarthealthit.org/structuredefinition/oauth",{"_index":2426,"title":{},"body":{"injectables/SmartService.html":{}}}],["relation",{"_index":681,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{}}}],["relativedatetime",{"_index":993,"title":{},"body":{"classes/Condition.html":{},"components/ConditionsComponent.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{}}}],["relevant",{"_index":569,"title":{},"body":{"injectables/AssociationService.html":{}}}],["reload",{"_index":868,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["remain",{"_index":1046,"title":{},"body":{"injectables/ConditionService.html":{}}}],["remove",{"_index":1324,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/HistoricalTrendsService.html":{}}}],["removechart",{"_index":1751,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["removechart(chartname",{"_index":1762,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["renderer",{"_index":600,"title":{},"body":{"directives/AutoGrowDirective.html":{},"directives/HighlightDirective.html":{}}}],["rendering",{"_index":1214,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["repository",{"_index":2769,"title":{},"body":{"index.html":{}}}],["representation",{"_index":62,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["representing",{"_index":106,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlansComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":54,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsComponent.html":{},"classes/ContextMenuOption.html":{}}}],["request",{"_index":2467,"title":{},"body":{"injectables/SmartService.html":{}}}],["requestauth",{"_index":2387,"title":{},"body":{"injectables/SmartService.html":{}}}],["res",{"_index":2307,"title":{},"body":{"components/PatientComponent.html":{},"injectables/PatientService.html":{}}}],["res['identifier",{"_index":2340,"title":{},"body":{"injectables/PatientService.html":{}}}],["res['selectedconditions",{"_index":558,"title":{},"body":{"injectables/AssociationService.html":{}}}],["res['selectedobservations",{"_index":560,"title":{},"body":{"injectables/AssociationService.html":{}}}],["reset",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"components/ContextMenuComponent.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetdaterange",{"_index":1667,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["resettodefaultview",{"_index":2573,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resize",{"_index":650,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["resizing",{"_index":621,"title":{},"body":{"classes/BaseColumn.html":{}}}],["respective",{"_index":175,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["respiration",{"_index":2125,"title":{},"body":{"injectables/ObservationService.html":{}}}],["response",{"_index":556,"title":{},"body":{"injectables/AssociationService.html":{}}}],["response_type=code",{"_index":2468,"title":{},"body":{"injectables/SmartService.html":{}}}],["result",{"_index":277,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.tofixed(0",{"_index":1905,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["result.tofixed(2",{"_index":1904,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["results",{"_index":278,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":2185,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["retrieve",{"_index":818,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/HomeComponent.html":{},"injectables/PatientService.html":{}}}],["retrieved",{"_index":2302,"title":{},"body":{"components/PatientComponent.html":{}}}],["retrieves",{"_index":1215,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["retrieving",{"_index":1536,"title":{},"body":{"injectables/EncounterService.html":{}}}],["return",{"_index":148,"title":{},"body":{"components/AccordionRecursion.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{}}}],["returns",{"_index":74,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["reusable",{"_index":1363,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["review",{"_index":2128,"title":{},"body":{"injectables/ObservationService.html":{}}}],["right",{"_index":762,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/ObservationsDisplay.html":{}}}],["root",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["router",{"_index":2664,"title":{},"body":{"dependencies.html":{}}}],["routermodule",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approutes",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["routing",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1169,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["runassociationstool",{"_index":505,"title":{},"body":{"injectables/AssociationService.html":{},"components/ToolbarComponent.html":{}}}],["runassociationstool(checkedconditions",{"_index":521,"title":{},"body":{"injectables/AssociationService.html":{}}}],["running",{"_index":2712,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":659,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":661,"title":{},"body":{"classes/BaseColumn.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["s",{"_index":2284,"title":{},"body":{"components/PatientComponent.html":{}}}],["same",{"_index":1335,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["sandbox",{"_index":1836,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["sass",{"_index":2701,"title":{},"body":{"index.html":{}}}],["save",{"_index":366,"title":{},"body":{"components/AccountComponent.html":{}}}],["savesettings",{"_index":288,"title":{},"body":{"components/AccountComponent.html":{}}}],["scale",{"_index":346,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsComponent.html":{}}}],["scaledates",{"_index":2078,"title":{},"body":{"injectables/ObservationService.html":{}}}],["scaledtimesinceconditiononset",{"_index":1269,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scaledtimesinceobservation",{"_index":2158,"title":{},"body":{"injectables/ObservationService.html":{}}}],["scope",{"_index":2382,"title":{},"body":{"injectables/SmartService.html":{}}}],["scoping",{"_index":758,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["scrachpad",{"_index":2347,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["scratch",{"_index":626,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["scratchpad",{"_index":257,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["scratchpadcheckboxes",{"_index":1081,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadcheckboxes(checked",{"_index":1102,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["scratchpadconditions",{"_index":1221,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["scratchpadmode",{"_index":1296,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["scratchpadservice",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scratchpadservice.statechange$.subscribe",{"_index":897,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["scratchpadupdate",{"_index":256,"title":{"components/ScratchPadUpdate.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["screen",{"_index":1881,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["scripting",{"_index":2445,"title":{},"body":{"injectables/SmartService.html":{}}}],["seems",{"_index":644,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["select",{"_index":260,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["selectcareplan",{"_index":718,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcareplan(careplan",{"_index":738,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["selectcondition",{"_index":1082,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selectcondition(condition",{"_index":1104,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{}}}],["selected",{"_index":364,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["selectedcondition",{"_index":1006,"title":{},"body":{"injectables/ConditionService.html":{},"components/PatientComponent.html":{}}}],["selectedconditions",{"_index":581,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selectedobservations",{"_index":582,"title":{},"body":{"injectables/AssociationService.html":{}}}],["selection",{"_index":895,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ObservationsDisplay.html":{}}}],["selectlistsingle",{"_index":259,"title":{"components/SelectListSingle.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectobservation",{"_index":2195,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selectobservation(observation",{"_index":2215,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"directives/AutoGrowDirective.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["selectpatientbyid",{"_index":1828,"title":{},"body":{"components/HomeComponent.html":{}}}],["selectpatientbyid(id",{"_index":1831,"title":{},"body":{"components/HomeComponent.html":{}}}],["selects",{"_index":1332,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["separate",{"_index":337,"title":{},"body":{"components/AccountComponent.html":{}}}],["september",{"_index":1352,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["series",{"_index":926,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["serve",{"_index":2734,"title":{},"body":{"index.html":{}}}],["server",{"_index":1216,"title":{"classes/Server.html":{}},"body":{"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"components/PatientComponent.html":{},"classes/Server.html":{},"coverage.html":{}}}],["service",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["services",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["services/association.service",{"_index":1321,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/careplan.service",{"_index":890,"title":{},"body":{"components/CarePlansComponent.html":{},"components/MedicationsComponent.html":{}}}],["services/condition.service",{"_index":1120,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/doctor.service",{"_index":324,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/encounter.service",{"_index":2278,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["services/fhir.service",{"_index":889,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsComponent.html":{},"injectables/SmartService.html":{}}}],["services/historicaltrends.service",{"_index":1694,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["services/map.service",{"_index":2182,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["services/observation.service",{"_index":99,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ToolbarComponent.html":{}}}],["services/patient.service",{"_index":1695,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["services/scratchpad.service",{"_index":746,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["services/smart.service",{"_index":1833,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/toolbar.service",{"_index":2588,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["session",{"_index":1069,"title":{},"body":{"injectables/ConditionService.html":{}}}],["set",{"_index":662,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"injectables/PatientService.html":{}}}],["setcolumnstate",{"_index":1012,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setcolumnstate(newcolumnstate",{"_index":1022,"title":{},"body":{"injectables/ConditionService.html":{}}}],["setdaterange",{"_index":1668,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterange(form",{"_index":1679,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths",{"_index":1669,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangemonths(months",{"_index":1681,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears",{"_index":1670,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setdaterangeyears(years",{"_index":1683,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setpatientid",{"_index":2329,"title":{},"body":{"injectables/PatientService.html":{}}}],["setpatientid(patientid",{"_index":2332,"title":{},"body":{"injectables/PatientService.html":{}}}],["sets",{"_index":1728,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["setters",{"_index":1284,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["settimeout",{"_index":1442,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["setting",{"_index":294,"title":{},"body":{"components/AccountComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["settings",{"_index":286,"title":{},"body":{"components/AccountComponent.html":{}}}],["settoken",{"_index":1569,"title":{},"body":{"injectables/FhirService.html":{}}}],["settoken(newtoken",{"_index":1576,"title":{},"body":{"injectables/FhirService.html":{}}}],["setup",{"_index":2214,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["seturl",{"_index":1570,"title":{},"body":{"injectables/FhirService.html":{}}}],["seturl(url",{"_index":1579,"title":{},"body":{"injectables/FhirService.html":{}}}],["several",{"_index":108,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/typealiases.html":{}}}],["shouldn't",{"_index":1800,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["show",{"_index":652,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{}}}],["show(data",{"_index":1406,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["show(items",{"_index":1861,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["showallergyhover",{"_index":2259,"title":{},"body":{"components/PatientComponent.html":{}}}],["showallergyhover(event",{"_index":2267,"title":{},"body":{"components/PatientComponent.html":{}}}],["showdefault",{"_index":632,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["showing",{"_index":1825,"title":{},"body":{"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{}}}],["shown",{"_index":761,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"components/ObservationsDisplay.html":{}}}],["showscratchpad",{"_index":633,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{}}}],["si[exp",{"_index":1907,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["side",{"_index":1703,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["similar",{"_index":2710,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1911,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["simply",{"_index":1165,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/EncounterService.html":{}}}],["single",{"_index":2364,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single'},{'name",{"_index":261,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["single.component",{"_index":1648,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["single.component.ts",{"_index":2363,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["single.component.ts:10",{"_index":2369,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:12",{"_index":2368,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.component.ts:9",{"_index":2367,"title":{},"body":{"components/SelectListSingle.html":{}}}],["single.html",{"_index":2365,"title":{},"body":{"components/SelectListSingle.html":{}}}],["site",{"_index":2416,"title":{},"body":{"injectables/SmartService.html":{}}}],["skip",{"_index":1774,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["small",{"_index":1790,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smallest",{"_index":1812,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["smartextension",{"_index":2422,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartextension[0].extension.foreach(arg",{"_index":2430,"title":{},"body":{"injectables/SmartService.html":{}}}],["smartservice",{"_index":411,"title":{"injectables/SmartService.html":{}},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{},"coverage.html":{},"overview.html":{}}}],["smith",{"_index":341,"title":{},"body":{"components/AccountComponent.html":{},"index.html":{}}}],["sodium",{"_index":305,"title":{},"body":{"components/AccountComponent.html":{}}}],["sort",{"_index":1781,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["sortbydate",{"_index":2498,"title":{},"body":{"components/TimelineComponent.html":{}}}],["sortcondition",{"_index":1083,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["sortcondition(x",{"_index":1106,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Associable.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"modules/FormCreatorModule.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"components/LoadingAnimation.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{}}}],["space",{"_index":1793,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["spacing",{"_index":338,"title":{},"body":{"components/AccountComponent.html":{}}}],["spad",{"_index":898,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["specific",{"_index":1706,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["specifically",{"_index":2729,"title":{},"body":{"index.html":{}}}],["specify",{"_index":1744,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/.../accordionrecursion.component.ts",{"_index":2801,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../columntype.enum.ts",{"_index":2687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../conditions.component.ts",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts",{"_index":9,"title":{},"body":{"components/AccordionRecursion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:128",{"_index":76,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:156",{"_index":78,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:186",{"_index":68,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:57",{"_index":86,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:62",{"_index":37,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:68",{"_index":45,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:75",{"_index":49,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:82",{"_index":61,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:88",{"_index":31,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/accordionrecursion/accordionrecursion.component.ts:96",{"_index":79,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["src/app/components/account/account.component.ts",{"_index":279,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/components/account/account.component.ts:10",{"_index":323,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:11",{"_index":314,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:12",{"_index":304,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:13",{"_index":322,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:14",{"_index":292,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:18",{"_index":295,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:27",{"_index":297,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/account/account.component.ts:33",{"_index":298,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/components/app/app.component.ts",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/components/app/app.component.ts:10",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/components/basecolumn.ts",{"_index":615,"title":{},"body":{"classes/BaseColumn.html":{},"coverage.html":{}}}],["src/app/components/basecolumn.ts:14",{"_index":635,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:32",{"_index":648,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:39",{"_index":651,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:44",{"_index":656,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:49",{"_index":657,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:52",{"_index":636,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:55",{"_index":641,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/basecolumn.ts:58",{"_index":639,"title":{},"body":{"classes/BaseColumn.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts",{"_index":708,"title":{},"body":{"components/CarePlanDisplay.html":{},"coverage.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:111",{"_index":727,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:21",{"_index":744,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:24",{"_index":740,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:27",{"_index":723,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:28",{"_index":725,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:30",{"_index":722,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:39",{"_index":737,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:44",{"_index":736,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:77",{"_index":739,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:85",{"_index":732,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:94",{"_index":730,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplandisplay/careplandisplay.component.ts:98",{"_index":734,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["src/app/components/careplans/careplans.component.ts",{"_index":855,"title":{},"body":{"components/CarePlansComponent.html":{},"coverage.html":{}}}],["src/app/components/careplans/careplans.component.ts:23",{"_index":884,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:26",{"_index":876,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:29",{"_index":875,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:35",{"_index":878,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:38",{"_index":864,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:57",{"_index":867,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/careplans/careplans.component.ts:72",{"_index":866,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts",{"_index":960,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"coverage.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:16",{"_index":970,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:22",{"_index":969,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:29",{"_index":974,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:40",{"_index":975,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/columnstateswitcher/columnstateswitcher.component.ts:53",{"_index":972,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts",{"_index":1213,"title":{},"body":{"components/ConditionsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/conditions/conditions.component.ts:124",{"_index":1230,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:135",{"_index":1226,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:28",{"_index":1236,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:31",{"_index":1232,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:32",{"_index":1235,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:35",{"_index":1234,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:37",{"_index":1238,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:38",{"_index":1231,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:39",{"_index":1233,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:42",{"_index":1237,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:44",{"_index":1225,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:45",{"_index":1224,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:71",{"_index":1227,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditions/conditions.component.ts:87",{"_index":1228,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts",{"_index":1070,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:111",{"_index":1091,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:121",{"_index":1111,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:129",{"_index":1103,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:145",{"_index":1112,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:149",{"_index":1092,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:159",{"_index":1093,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:16",{"_index":1117,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:17",{"_index":1116,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:18",{"_index":1119,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:181",{"_index":1109,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:19",{"_index":1113,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:195",{"_index":1099,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:20",{"_index":1114,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:21",{"_index":1115,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:22",{"_index":1118,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:24",{"_index":1090,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:26",{"_index":1089,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:34",{"_index":1101,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:45",{"_index":1105,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:53",{"_index":1107,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionschart/conditionschart.component.ts:82",{"_index":1094,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts",{"_index":1287,"title":{},"body":{"components/ConditionsDisplay.html":{},"coverage.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:104",{"_index":1319,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:109",{"_index":1304,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:116",{"_index":1314,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:121",{"_index":1312,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:126",{"_index":1310,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:131",{"_index":1302,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:138",{"_index":1306,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:147",{"_index":1318,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:151",{"_index":1308,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:23",{"_index":1320,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:26",{"_index":1298,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:27",{"_index":1300,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:30",{"_index":1299,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:32",{"_index":1297,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:45",{"_index":1316,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/conditionsdisplay/conditionsdisplay.component.ts:50",{"_index":1315,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts",{"_index":1362,"title":{},"body":{"components/ContextMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:113",{"_index":1393,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:133",{"_index":1398,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:28",{"_index":1422,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:33",{"_index":1418,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:35",{"_index":1424,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:36",{"_index":1423,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:37",{"_index":1421,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:43",{"_index":1408,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:50",{"_index":1410,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:51",{"_index":1382,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:58",{"_index":1386,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:67",{"_index":1388,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/contextmenu/contextmenu.component.ts:82",{"_index":1407,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["src/app/components/form",{"_index":1596,"title":{},"body":{"components/FormBuilder.html":{},"coverage.html":{}}}],["src/app/components/form_components/checkbox",{"_index":939,"title":{},"body":{"components/CheckboxInline.html":{},"coverage.html":{}}}],["src/app/components/form_components/normal",{"_index":1990,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"coverage.html":{}}}],["src/app/components/form_components/scrachpad",{"_index":2345,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["src/app/components/form_components/select",{"_index":2362,"title":{},"body":{"components/SelectListSingle.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts",{"_index":1658,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"coverage.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:101",{"_index":1684,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:108",{"_index":1682,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:114",{"_index":1676,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:20",{"_index":1688,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:23",{"_index":1691,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:24",{"_index":1689,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:27",{"_index":1693,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:29",{"_index":1690,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:32",{"_index":1692,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:35",{"_index":1672,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:54",{"_index":1674,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:70",{"_index":1680,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/historicaltrends/historicaltrends.component.ts:81",{"_index":1678,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1823,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:21",{"_index":1830,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:50",{"_index":1832,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts",{"_index":1844,"title":{},"body":{"components/HoverBoxComponent.html":{},"coverage.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:13",{"_index":1866,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:16",{"_index":1873,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:18",{"_index":1871,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:19",{"_index":1867,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:20",{"_index":1872,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:21",{"_index":1868,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:24",{"_index":1869,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:27",{"_index":1855,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:37",{"_index":1862,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:69",{"_index":1856,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:89",{"_index":1858,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/hoverbox/hoverbox.component.ts:97",{"_index":1860,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts",{"_index":1910,"title":{},"body":{"components/LoadingAnimation.html":{},"coverage.html":{}}}],["src/app/components/loadinganimation/loadinganimation.component.ts:10",{"_index":1915,"title":{},"body":{"components/LoadingAnimation.html":{}}}],["src/app/components/medications/medications.component.ts",{"_index":1974,"title":{},"body":{"components/MedicationsComponent.html":{},"coverage.html":{}}}],["src/app/components/medications/medications.component.ts:14",{"_index":1981,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:15",{"_index":1977,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:22",{"_index":1980,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/medications/medications.component.ts:31",{"_index":1979,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts",{"_index":2040,"title":{},"body":{"components/ObservationRecursiveChart.html":{},"coverage.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:13",{"_index":2048,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:14",{"_index":2047,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:15",{"_index":2046,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:20",{"_index":2052,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:24",{"_index":2053,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observationrecursionchart/observationrecursionchart.component.ts:29",{"_index":2050,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["src/app/components/observations/observations.component.ts",{"_index":2170,"title":{},"body":{"components/ObservationsComponent.html":{},"coverage.html":{}}}],["src/app/components/observations/observations.component.ts:21",{"_index":2180,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:22",{"_index":2181,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:23",{"_index":2179,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:25",{"_index":2174,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:27",{"_index":2178,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:30",{"_index":2173,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observations/observations.component.ts:60",{"_index":2175,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts",{"_index":2189,"title":{},"body":{"components/ObservationsDisplay.html":{},"coverage.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:100",{"_index":2216,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:112",{"_index":2212,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:121",{"_index":2206,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:129",{"_index":2203,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:140",{"_index":2210,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:144",{"_index":2208,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:28",{"_index":2218,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:33",{"_index":2221,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:38",{"_index":2217,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:43",{"_index":2199,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:48",{"_index":2200,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:50",{"_index":2198,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/observationsdisplay/observationsdisplay.component.ts:61",{"_index":2213,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["src/app/components/patient/patient.component.ts",{"_index":2253,"title":{},"body":{"components/PatientComponent.html":{},"coverage.html":{}}}],["src/app/components/patient/patient.component.ts:109",{"_index":2268,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:23",{"_index":2277,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:24",{"_index":2276,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:25",{"_index":2269,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:26",{"_index":2272,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:29",{"_index":2270,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:30",{"_index":2271,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:31",{"_index":2274,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:32",{"_index":2275,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:34",{"_index":2260,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:46",{"_index":2262,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:59",{"_index":2266,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:63",{"_index":2265,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:70",{"_index":2263,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/patient/patient.component.ts:92",{"_index":2264,"title":{},"body":{"components/PatientComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts",{"_index":2490,"title":{},"body":{"components/TimelineComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline/timeline.component.ts:14",{"_index":2508,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:15",{"_index":2512,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:16",{"_index":2510,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:17",{"_index":2509,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:18",{"_index":2501,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:19",{"_index":2500,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:24",{"_index":2504,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:27",{"_index":2503,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:32",{"_index":2502,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:48",{"_index":2507,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:55",{"_index":2506,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline/timeline.component.ts:64",{"_index":2505,"title":{},"body":{"components/TimelineComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts",{"_index":2537,"title":{},"body":{"components/TimelinePopupComponent.html":{},"coverage.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:16",{"_index":2540,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:20",{"_index":2546,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:21",{"_index":2547,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:24",{"_index":2544,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/timeline_popup/timeline_popup.component.ts:34",{"_index":2542,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts",{"_index":2569,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:22",{"_index":2577,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:27",{"_index":2576,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:43",{"_index":2582,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:50",{"_index":2581,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:61",{"_index":2578,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/toolbar/toolbar.component.ts:73",{"_index":2580,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/components/triplelist/triplelist.component.ts",{"_index":2598,"title":{},"body":{"components/TripleListComponent.html":{},"coverage.html":{}}}],["src/app/components/triplelist/triplelist.component.ts:16",{"_index":2600,"title":{},"body":{"components/TripleListComponent.html":{}}}],["src/app/directives/auto",{"_index":593,"title":{},"body":{"directives/AutoGrowDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts",{"_index":1651,"title":{},"body":{"directives/HighlightDirective.html":{},"coverage.html":{}}}],["src/app/directives/highlight.directive.ts:8",{"_index":1653,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["src/app/models/allergyintolerance.model.ts",{"_index":372,"title":{},"body":{"classes/AllergyIntolerance.html":{},"coverage.html":{}}}],["src/app/models/allergyintolerance.model.ts:2",{"_index":377,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/allergyintolerance.model.ts:3",{"_index":376,"title":{},"body":{"classes/AllergyIntolerance.html":{}}}],["src/app/models/associable.model.ts",{"_index":495,"title":{},"body":{"interfaces/Associable.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts",{"_index":676,"title":{},"body":{"classes/Bundle.html":{},"classes/Link.html":{},"coverage.html":{}}}],["src/app/models/bundle.model.ts:3",{"_index":679,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:4",{"_index":680,"title":{},"body":{"classes/Bundle.html":{}}}],["src/app/models/bundle.model.ts:8",{"_index":1908,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/bundle.model.ts:9",{"_index":1909,"title":{},"body":{"classes/Link.html":{}}}],["src/app/models/careplan.model.ts",{"_index":683,"title":{},"body":{"classes/CarePlan.html":{},"coverage.html":{}}}],["src/app/models/careplan.model.ts:10",{"_index":692,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:15",{"_index":689,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:4",{"_index":691,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:5",{"_index":694,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:6",{"_index":693,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/careplan.model.ts:7",{"_index":690,"title":{},"body":{"classes/CarePlan.html":{}}}],["src/app/models/chart.model.ts",{"_index":908,"title":{},"body":{"classes/Chart.html":{},"coverage.html":{}}}],["src/app/models/chart.model.ts:14",{"_index":917,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:23",{"_index":921,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:24",{"_index":920,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:28",{"_index":918,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:3",{"_index":919,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:4",{"_index":914,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:5",{"_index":915,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/chart.model.ts:8",{"_index":916,"title":{},"body":{"classes/Chart.html":{}}}],["src/app/models/client.model.ts",{"_index":957,"title":{},"body":{"classes/Client.html":{},"coverage.html":{}}}],["src/app/models/client.model.ts:2",{"_index":958,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/client.model.ts:3",{"_index":959,"title":{},"body":{"classes/Client.html":{}}}],["src/app/models/condition.model.ts",{"_index":989,"title":{},"body":{"classes/Condition.html":{},"coverage.html":{}}}],["src/app/models/condition.model.ts:10",{"_index":998,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:11",{"_index":1001,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:12",{"_index":996,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:4",{"_index":997,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:5",{"_index":1000,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:6",{"_index":1002,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:7",{"_index":1003,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:8",{"_index":995,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/condition.model.ts:9",{"_index":999,"title":{},"body":{"classes/Condition.html":{}}}],["src/app/models/contextmenuoption.model.ts",{"_index":1459,"title":{},"body":{"classes/ContextMenuOption.html":{},"coverage.html":{}}}],["src/app/models/contextmenuoption.model.ts:10",{"_index":1461,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:15",{"_index":1464,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/contextmenuoption.model.ts:23",{"_index":1460,"title":{},"body":{"classes/ContextMenuOption.html":{}}}],["src/app/models/encounter.model.ts",{"_index":1508,"title":{},"body":{"classes/Encounter.html":{},"coverage.html":{}}}],["src/app/models/encounter.model.ts:11",{"_index":1520,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:16",{"_index":1517,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:18",{"_index":1518,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:29",{"_index":1523,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:3",{"_index":1515,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:4",{"_index":1519,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:44",{"_index":1524,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:45",{"_index":1521,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:47",{"_index":1522,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/encounter.model.ts:6",{"_index":1516,"title":{},"body":{"classes/Encounter.html":{}}}],["src/app/models/form.model.ts",{"_index":1591,"title":{},"body":{"classes/Form.html":{},"coverage.html":{}}}],["src/app/models/form.model.ts:2",{"_index":1593,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:3",{"_index":1594,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/form.model.ts:4",{"_index":1592,"title":{},"body":{"classes/Form.html":{}}}],["src/app/models/medication.model.ts",{"_index":1965,"title":{},"body":{"classes/Medication.html":{},"coverage.html":{}}}],["src/app/models/medication.model.ts:10",{"_index":1967,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:3",{"_index":1969,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:4",{"_index":1968,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/medication.model.ts:6",{"_index":1970,"title":{},"body":{"classes/Medication.html":{}}}],["src/app/models/observation.model.ts",{"_index":2004,"title":{},"body":{"classes/Observation.html":{},"coverage.html":{}}}],["src/app/models/observation.model.ts:10",{"_index":2022,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:11",{"_index":2021,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:14",{"_index":2018,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:15",{"_index":2016,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:18",{"_index":2029,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:23",{"_index":2027,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:28",{"_index":2025,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:33",{"_index":2023,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:4",{"_index":2017,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:5",{"_index":2020,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:6",{"_index":2015,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:7",{"_index":2019,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:8",{"_index":2013,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/observation.model.ts:9",{"_index":2014,"title":{},"body":{"classes/Observation.html":{}}}],["src/app/models/patient.model.ts",{"_index":2237,"title":{},"body":{"classes/Patient.html":{},"coverage.html":{}}}],["src/app/models/patient.model.ts:10",{"_index":2252,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:11",{"_index":2250,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:3",{"_index":2244,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:4",{"_index":2248,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:5",{"_index":2246,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:6",{"_index":2247,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:7",{"_index":2245,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:8",{"_index":2249,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/patient.model.ts:9",{"_index":2251,"title":{},"body":{"classes/Patient.html":{}}}],["src/app/models/server.model.ts",{"_index":2371,"title":{},"body":{"classes/Server.html":{},"coverage.html":{}}}],["src/app/models/server.model.ts:1",{"_index":2372,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/server.model.ts:4",{"_index":2373,"title":{},"body":{"classes/Server.html":{}}}],["src/app/models/timeline.model.ts",{"_index":2482,"title":{},"body":{"classes/Timeline.html":{},"coverage.html":{}}}],["src/app/models/timeline.model.ts:2",{"_index":2486,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:3",{"_index":2487,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:4",{"_index":2485,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:5",{"_index":2483,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:6",{"_index":2484,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:7",{"_index":2489,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/timeline.model.ts:8",{"_index":2488,"title":{},"body":{"classes/Timeline.html":{}}}],["src/app/models/user.model.ts",{"_index":2601,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:3",{"_index":2602,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":2603,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/form.module.ts",{"_index":1641,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts",{"_index":1890,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{},"coverage.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:12",{"_index":1894,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/pipes/humanizebytes.pipe.ts:8",{"_index":1899,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["src/app/services/association.service.ts",{"_index":498,"title":{},"body":{"injectables/AssociationService.html":{},"coverage.html":{}}}],["src/app/services/association.service.ts:13",{"_index":533,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:17",{"_index":525,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:18",{"_index":508,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:26",{"_index":522,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:64",{"_index":519,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:88",{"_index":511,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/association.service.ts:97",{"_index":515,"title":{},"body":{"injectables/AssociationService.html":{}}}],["src/app/services/careplan.service.ts",{"_index":803,"title":{},"body":{"injectables/CarePlanService.html":{},"coverage.html":{}}}],["src/app/services/careplan.service.ts:16",{"_index":807,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:24",{"_index":810,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/careplan.service.ts:40",{"_index":813,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["src/app/services/condition.service.ts",{"_index":1004,"title":{},"body":{"injectables/ConditionService.html":{},"coverage.html":{}}}],["src/app/services/condition.service.ts:17",{"_index":1028,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:19",{"_index":1025,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:21",{"_index":1029,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:23",{"_index":1027,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:24",{"_index":1013,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:36",{"_index":1021,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:51",{"_index":1019,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:56",{"_index":1014,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:63",{"_index":1017,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:77",{"_index":1015,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/condition.service.ts:82",{"_index":1023,"title":{},"body":{"injectables/ConditionService.html":{}}}],["src/app/services/doctor.service.ts",{"_index":1465,"title":{},"body":{"injectables/DoctorService.html":{},"coverage.html":{}}}],["src/app/services/doctor.service.ts:10",{"_index":1471,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:15",{"_index":1475,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:46",{"_index":1473,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:8",{"_index":1477,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/doctor.service.ts:9",{"_index":1476,"title":{},"body":{"injectables/DoctorService.html":{}}}],["src/app/services/encounter.service.ts",{"_index":1535,"title":{},"body":{"injectables/EncounterService.html":{},"coverage.html":{}}}],["src/app/services/encounter.service.ts:18",{"_index":1542,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:29",{"_index":1550,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:50",{"_index":1548,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/encounter.service.ts:60",{"_index":1544,"title":{},"body":{"injectables/EncounterService.html":{}}}],["src/app/services/fhir.service.ts",{"_index":1564,"title":{},"body":{"injectables/FhirService.html":{},"coverage.html":{}}}],["src/app/services/fhir.service.ts:10",{"_index":1582,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:12",{"_index":1575,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:16",{"_index":1580,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:20",{"_index":1577,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:24",{"_index":1573,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:5",{"_index":1571,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/fhir.service.ts:9",{"_index":1581,"title":{},"body":{"injectables/FhirService.html":{}}}],["src/app/services/historicaltrends.service.ts",{"_index":1745,"title":{},"body":{"injectables/HistoricalTrendsService.html":{},"coverage.html":{}}}],["src/app/services/historicaltrends.service.ts:12",{"_index":1752,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:138",{"_index":1763,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:147",{"_index":1761,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:165",{"_index":1759,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:17",{"_index":1756,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:80",{"_index":1754,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/historicaltrends.service.ts:9",{"_index":1764,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["src/app/services/map.service.ts",{"_index":1916,"title":{},"body":{"injectables/MapService.html":{},"coverage.html":{}}}],["src/app/services/map.service.ts:5",{"_index":1964,"title":{},"body":{"injectables/MapService.html":{}}}],["src/app/services/observation.service.ts",{"_index":2065,"title":{},"body":{"injectables/ObservationService.html":{},"coverage.html":{}}}],["src/app/services/observation.service.ts:132",{"_index":2092,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:139",{"_index":2090,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:14",{"_index":2104,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:15",{"_index":2099,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:157",{"_index":2093,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:16",{"_index":2101,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:17",{"_index":2100,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:175",{"_index":2082,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:179",{"_index":2096,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:18",{"_index":2102,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:19",{"_index":2103,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:190",{"_index":2081,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:20",{"_index":2105,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:206",{"_index":2084,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:217",{"_index":2095,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:22",{"_index":2079,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:255",{"_index":2088,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:260",{"_index":2097,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/observation.service.ts:264",{"_index":2098,"title":{},"body":{"injectables/ObservationService.html":{}}}],["src/app/services/patient.service.ts",{"_index":2325,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/app/services/patient.service.ts:12",{"_index":2334,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:15",{"_index":2330,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:23",{"_index":2333,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/patient.service.ts:28",{"_index":2331,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/app/services/scratchpad.service.ts",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["src/app/services/smart.service.ts",{"_index":2375,"title":{},"body":{"injectables/SmartService.html":{},"coverage.html":{}}}],["src/app/services/smart.service.ts:106",{"_index":2391,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:17",{"_index":2402,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:18",{"_index":2409,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:19",{"_index":2406,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:21",{"_index":2403,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:22",{"_index":2396,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:23",{"_index":2411,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:24",{"_index":2404,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:25",{"_index":2410,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:26",{"_index":2395,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:28",{"_index":2389,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:73",{"_index":2393,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:88",{"_index":2394,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/smart.service.ts:9",{"_index":2388,"title":{},"body":{"injectables/SmartService.html":{}}}],["src/app/services/toolbar.service.ts",{"_index":2564,"title":{},"body":{"injectables/ToolBarService.html":{},"coverage.html":{}}}],["src/app/services/toolbar.service.ts:5",{"_index":2568,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["src/app/services/toolbar.service.ts:6",{"_index":2567,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["src/app/utils/columntype.enum.ts",{"_index":2688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["standard",{"_index":1445,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["start",{"_index":696,"title":{},"body":{"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"classes/Encounter.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Medication.html":{}}}],["started",{"_index":2690,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":2495,"title":{},"body":{"components/TimelineComponent.html":{}}}],["state",{"_index":624,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"injectables/SmartService.html":{}}}],["statements",{"_index":2606,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["states",{"_index":962,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["static",{"_index":743,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"injectables/DoctorService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["static_mappings",{"_index":1917,"title":{},"body":{"injectables/MapService.html":{}}}],["stats",{"_index":771,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["status",{"_index":687,"title":{},"body":{"classes/CarePlan.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsDisplay.html":{},"classes/Encounter.html":{},"classes/Observation.html":{},"components/ScratchPadUpdate.html":{},"classes/Timeline.html":{}}}],["store",{"_index":979,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["stored",{"_index":2109,"title":{},"body":{"injectables/ObservationService.html":{}}}],["storedata",{"_index":1606,"title":{},"body":{"components/FormBuilder.html":{}}}],["storedata(data",{"_index":1617,"title":{},"body":{"components/FormBuilder.html":{}}}],["stores",{"_index":923,"title":{},"body":{"classes/Chart.html":{}}}],["strange",{"_index":756,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["string",{"_index":114,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"classes/Medication.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"injectables/ToolBarService.html":{},"classes/User.html":{}}}],["strings",{"_index":2293,"title":{},"body":{"components/PatientComponent.html":{}}}],["structure",{"_index":63,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/typealiases.html":{}}}],["structures",{"_index":1066,"title":{},"body":{"injectables/ConditionService.html":{}}}],["stuff",{"_index":1280,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["style",{"_index":1600,"title":{},"body":{"components/FormBuilder.html":{}}}],["styles",{"_index":1595,"title":{},"body":{"components/FormBuilder.html":{}}}],["submit",{"_index":1635,"title":{},"body":{"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{}}}],["submitclick",{"_index":1607,"title":{},"body":{"components/FormBuilder.html":{}}}],["subscribe",{"_index":1447,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ObservationsComponent.html":{}}}],["subscribe((bundle",{"_index":2140,"title":{},"body":{"injectables/ObservationService.html":{}}}],["subscribe((event",{"_index":672,"title":{},"body":{"classes/BaseColumn.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{}}}],["subscribe(res",{"_index":549,"title":{},"body":{"injectables/AssociationService.html":{}}}],["subscribe){data",{"_index":1484,"title":{},"body":{"injectables/DoctorService.html":{}}}],["subscription",{"_index":877,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{}}}],["subtracts",{"_index":1726,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["such",{"_index":562,"title":{},"body":{"injectables/AssociationService.html":{},"index.html":{}}}],["super",{"_index":616,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["support",{"_index":2794,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":2786,"title":{},"body":{"index.html":{}}}],["sure",{"_index":2461,"title":{},"body":{"injectables/SmartService.html":{},"index.html":{}}}],["svg",{"_index":2795,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["switch",{"_index":891,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/PatientComponent.html":{},"components/ToolbarComponent.html":{}}}],["switch(this.columntype",{"_index":149,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["switcher",{"_index":971,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switches",{"_index":2583,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["switching",{"_index":961,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["switchnav",{"_index":2574,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["switchtodefault",{"_index":967,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["switchtoscratchpad",{"_index":968,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["symptoms",{"_index":2131,"title":{},"body":{"injectables/ObservationService.html":{}}}],["system",{"_index":512,"title":{},"body":{"injectables/AssociationService.html":{},"classes/CarePlan.html":{},"classes/Condition.html":{},"classes/Encounter.html":{},"index.html":{}}}],["system:{{condition.code.coding[0].system",{"_index":2562,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["systemjs",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["systems",{"_index":2129,"title":{},"body":{"injectables/ObservationService.html":{}}}],["table",{"_index":1185,"title":{},"body":{"components/ConditionsChartComponent.html":{},"coverage.html":{}}}],["tablename",{"_index":1100,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation",{"_index":1084,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablenavigation(clickedset",{"_index":1108,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2757,"title":{},"body":{"index.html":{}}}],["taken",{"_index":831,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/HistoricalTrendsService.html":{}}}],["telecom",{"_index":2243,"title":{},"body":{"classes/Patient.html":{}}}],["temp",{"_index":1161,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temperature",{"_index":2126,"title":{},"body":{"injectables/ObservationService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["templateurl",{"_index":12,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["temptablevar",{"_index":1178,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["temptablevar.hidden",{"_index":1181,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["terminal",{"_index":2714,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":2746,"title":{},"body":{"index.html":{}}}],["test",{"_index":1877,"title":{},"body":{"components/HoverBoxComponent.html":{},"components/ObservationsComponent.html":{}}}],["tested",{"_index":2728,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1194,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{}}}],["tests",{"_index":135,"title":{},"body":{"components/AccordionRecursion.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":378,"title":{},"body":{"classes/AllergyIntolerance.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"classes/Condition.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"classes/Encounter.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"classes/Observation.html":{},"components/ObservationsDisplay.html":{}}}],["textinputforedit",{"_index":1076,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["thanks",{"_index":2447,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.allergies",{"_index":2294,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies.length",{"_index":2297,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergies[0",{"_index":2299,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.allergy",{"_index":2298,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.associatedmapconditions.clear",{"_index":552,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapconditions.set(c",{"_index":566,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.clear",{"_index":553,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associatedmapobservations.set(o",{"_index":568,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.associationservice.associatedmapconditions.get(condition",{"_index":1341,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.associationservice.associatedmapobservations.get(observation",{"_index":2231,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.associationservice.runassociationstool(checkedconditions",{"_index":2592,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.aud",{"_index":2417,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.authorizeurl",{"_index":2435,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.base",{"_index":1584,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.boxdata",{"_index":1997,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{}}}],["this.careplanloadfinished",{"_index":903,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["this.careplans",{"_index":793,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{}}}],["this.careplanselected.emit(this.selected",{"_index":781,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.careplanservice.loadcareplans(this.patient).subscribe(careplans",{"_index":902,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["this.careplanservice.loadmedications(this.patient).subscribe(medications",{"_index":1982,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.categorizedobservations",{"_index":2118,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.charts",{"_index":1804,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.delete(chartname",{"_index":1811,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(chartname",{"_index":1768,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.has(medication.name",{"_index":1806,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(chartname",{"_index":1803,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.chartsmap.set(medication.name",{"_index":1810,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.clicksubscription",{"_index":1449,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clicksubscription.unsubscribe",{"_index":1457,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.clientid",{"_index":2470,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.closeable",{"_index":1429,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.closeable_delay",{"_index":1443,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.column",{"_index":976,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.columnstate",{"_index":977,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showdefault",{"_index":981,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.showscratchpad",{"_index":982,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.column.updateservice",{"_index":978,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.columnheight",{"_index":663,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.columnstate",{"_index":899,"title":{},"body":{"components/CarePlansComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.columnstatesubscription",{"_index":896,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["this.columntype",{"_index":983,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.compiler.clearcache",{"_index":1834,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.conditiongrouping",{"_index":1126,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping.indexof(c",{"_index":1177,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0",{"_index":1172,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[0].push(c",{"_index":1173,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1",{"_index":1174,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[1].push(c",{"_index":1175,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount",{"_index":1198,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongrouping[groupingcount].push(c",{"_index":1199,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.indexof(tablename",{"_index":1182,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditiongroupingname.push(tablename",{"_index":1183,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditions",{"_index":1122,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.conditions.concat(conditions",{"_index":1251,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.filter(c",{"_index":1060,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.conditions.length",{"_index":1253,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions.sort((c1",{"_index":1254,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.conditions[value].isselected",{"_index":1159,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionselected.emit(this.selected",{"_index":1123,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.conditionservice.conditions",{"_index":546,"title":{},"body":{"injectables/AssociationService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.getcheckedconditions",{"_index":2590,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.conditionservice.getcolumnstate",{"_index":1323,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.loadallergies(this.patient).subscribe(allergies",{"_index":2292,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.conditionservice.loadconditions(this.patient).subscribe(conditions",{"_index":1121,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.conditionservice.selectedcondition",{"_index":1336,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.conditionservice.setcolumnstate(this.columnstate",{"_index":1282,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.cookieservice.get('state",{"_index":2440,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.get('tokenurl",{"_index":2452,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('fhirbaseurl",{"_index":2437,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('graphconfig",{"_index":1505,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.cookieservice.set('state",{"_index":2466,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.cookieservice.set('tokenurl",{"_index":2436,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.createcareplansnodes(this.items",{"_index":162,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.createconditionsnodes(this.items",{"_index":153,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.createobservationsnodes(this.items",{"_index":159,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.data",{"_index":1431,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.datepipe.transform(encounter.getstartdate(),'mm",{"_index":2554,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.description",{"_index":2358,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.deserialize(e['resource",{"_index":1553,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.doctorservice.addgraphconfig(this.settings",{"_index":329,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.assignvisible(this.conditions",{"_index":1144,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.doctorservice.configmode",{"_index":331,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doctorservice.filter",{"_index":327,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.doit(parseint(value",{"_index":1901,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["this.dosageunits",{"_index":1973,"title":{},"body":{"classes/Medication.html":{}}}],["this.el.nativeelement.textcontent",{"_index":1656,"title":{},"body":{"directives/HighlightDirective.html":{}}}],["this.encounters",{"_index":2517,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.concat(encounters",{"_index":2518,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.length",{"_index":2520,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters.sort((a",{"_index":2529,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounters[0",{"_index":2535,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(encounters",{"_index":2516,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.encounterservice.loadencounters(this.patient).subscribe(res",{"_index":2305,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.encounterslength",{"_index":2519,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.extractconditioninfo(c)['code",{"_index":564,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.extractnewobservations(nextobservations",{"_index":2146,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.extractobservationinfo(o)['code",{"_index":567,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.fhirbaseurl",{"_index":2412,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions",{"_index":824,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{}}}],["this.fhirservice.getrequestoptions(false)).subscribe(data",{"_index":2421,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.getrequestoptions(true",{"_index":2337,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.fhirservice.geturl",{"_index":820,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.fhirservice.settoken(data['access_token",{"_index":1841,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.cookieservice.get('fhirbaseurl",{"_index":1835,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.fhirservice.seturl(this.fhirbaseurl",{"_index":2420,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.fhirservice.token",{"_index":1837,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filterset.add(code",{"_index":2166,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.filterset.has(code",{"_index":2162,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.findgetparameter(\"code",{"_index":2448,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"iss",{"_index":2413,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter(\"launch",{"_index":2419,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.findgetparameter('state",{"_index":2441,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.formbuilderservice.gettemplate().then(forms",{"_index":1631,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forminput",{"_index":1634,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.forms",{"_index":1632,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getassociations",{"_index":548,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.getforms",{"_index":1629,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.getgrouping(code",{"_index":2164,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.getscratchpadconditions",{"_index":1246,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.gettoken",{"_index":2442,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.getvaluerange(chart",{"_index":1794,"title":{},"body":{"injectables/HistoricalTrendsService.html":{}}}],["this.graphconfig",{"_index":2282,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.graphconfig.push(list",{"_index":1504,"title":{},"body":{"injectables/DoctorService.html":{}}}],["this.groupconditions",{"_index":1145,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.groupmap",{"_index":2110,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.groupmap[x].indexof(code",{"_index":2167,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handledocclick(event",{"_index":1451,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.handleobservationbundle(bundle",{"_index":2141,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.handleresize(event",{"_index":673,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.height_offset",{"_index":665,"title":{},"body":{"classes/BaseColumn.html":{}}}],["this.hide(event",{"_index":1455,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.hide(null",{"_index":1430,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.historicaltrendsservice.addmedicationchart(medication",{"_index":1987,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.historicaltrendsservice.removechart(medication.name",{"_index":1988,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.hover.show(this.allergies",{"_index":2313,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.hoverbox",{"_index":2553,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverbox.hide(event",{"_index":2559,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverbox.show(details",{"_index":2558,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["this.hoverstyling",{"_index":2300,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.http.get(url",{"_index":823,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{}}}],["this.http.post(\"https://mongo",{"_index":2457,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.http.post(this.path",{"_index":580,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.inputdata.id",{"_index":1998,"title":{},"body":{"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{}}}],["this.isallchecked",{"_index":798,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["this.items",{"_index":147,"title":{},"body":{"components/AccordionRecursion.html":{},"components/HoverBoxComponent.html":{}}}],["this.justcreated",{"_index":1244,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.launch",{"_index":2418,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.left",{"_index":1436,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.level",{"_index":2055,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.levelnodes",{"_index":152,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["this.listdata",{"_index":2370,"title":{},"body":{"components/SelectListSingle.html":{}}}],["this.loadallergies",{"_index":2290,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.loadcareplans(patient).pipe(map(careplans",{"_index":837,"title":{},"body":{"injectables/CarePlanService.html":{}}}],["this.loadconditionspage(nextlink.url",{"_index":1057,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loadconditionspage(url",{"_index":1059,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.loaded",{"_index":1278,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.loadencounters",{"_index":2291,"title":{},"body":{"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.loadencounterspage(nextlink.url",{"_index":1555,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadencounterspage(url",{"_index":1557,"title":{},"body":{"injectables/EncounterService.html":{}}}],["this.loadfinished",{"_index":163,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{}}}],["this.loadobservationspage(nextlink.url",{"_index":2147,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.mappings",{"_index":2183,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.maxdate",{"_index":1715,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.maxdate.gettime",{"_index":1725,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.medications",{"_index":1983,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.medications.length",{"_index":1985,"title":{},"body":{"components/MedicationsComponent.html":{}}}],["this.menu.addoption",{"_index":764,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.menu.show(null",{"_index":1735,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mindate",{"_index":1713,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mouseevent",{"_index":1701,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.mousesubscription",{"_index":1699,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.name",{"_index":1972,"title":{},"body":{"classes/Medication.html":{}}}],["this.nav2",{"_index":2589,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.obs",{"_index":2054,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["this.observations",{"_index":2144,"title":{},"body":{"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{}}}],["this.observations.concat(nextobservations",{"_index":2145,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.reverse",{"_index":2149,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observations.sort((n1",{"_index":2152,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.observationselected.emit(this.selected",{"_index":2225,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.observationservice.getcheckedobservations",{"_index":2591,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.observationservice.loadobservationspage(url",{"_index":2188,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.observationservice.observations",{"_index":547,"title":{},"body":{"injectables/AssociationService.html":{}}}],["this.onloadcomplete",{"_index":1252,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/ObservationService.html":{}}}],["this.options",{"_index":1426,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.options.concat(option",{"_index":1427,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.path",{"_index":821,"title":{},"body":{"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/PatientService.html":{}}}],["this.patient",{"_index":901,"title":{},"body":{"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsComponent.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["this.patient.id",{"_index":2187,"title":{},"body":{"components/ObservationsComponent.html":{}}}],["this.patientid",{"_index":2335,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.loadpatient().subscribe(patient",{"_index":1702,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{}}}],["this.patientservice.setpatientid(id",{"_index":1843,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.periods",{"_index":1971,"title":{},"body":{"classes/Medication.html":{}}}],["this.reason",{"_index":1529,"title":{},"body":{"classes/Encounter.html":{},"components/PatientComponent.html":{}}}],["this.redirecturi",{"_index":2471,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.ref.nativeelement.contains(event.target",{"_index":1428,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.renderer.setelementstyle(this.el.nativeelement",{"_index":609,"title":{},"body":{"directives/AutoGrowDirective.html":{}}}],["this.requestauth",{"_index":2438,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scope",{"_index":2472,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.scratchpadconditions",{"_index":1245,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.addcareplan(plan",{"_index":769,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.addcondition(condition",{"_index":1330,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.addconditionstoscratchpad",{"_index":2594,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.addobservation(observation",{"_index":2223,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.addobservationtoscratchpad",{"_index":2595,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.buttonclicked(true",{"_index":1171,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.checkcareplan(checked",{"_index":792,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkcondition(checked",{"_index":1337,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapcareplans.get(careplan",{"_index":786,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.foreach((ischecked",{"_index":1327,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(c",{"_index":1061,"title":{},"body":{"injectables/ConditionService.html":{}}}],["this.scratchpadservice.checkedmapconditions.get(condition",{"_index":1340,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.foreach((ischecked",{"_index":2222,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(o",{"_index":2154,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.scratchpadservice.checkedmapobservations.get(observation",{"_index":2229,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.checkobservation(checked",{"_index":2230,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.scratchpadservice.conditions.length",{"_index":984,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.getcareplans",{"_index":906,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["this.scratchpadservice.getconditions",{"_index":1285,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.initconditions(this.conditions",{"_index":1281,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["this.scratchpadservice.observations.length",{"_index":985,"title":{},"body":{"components/ColumnStateSwitcherComponent.html":{}}}],["this.scratchpadservice.removecondition(condition",{"_index":1329,"title":{},"body":{"components/ConditionsDisplay.html":{}}}],["this.scratchpadservice.switchtoscratchpad(false",{"_index":2597,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.switchtoscratchpad(true",{"_index":2596,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.indexof(this.conditions[value",{"_index":1162,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.push(this.conditions[value",{"_index":1160,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.toaddtocondsparray.splice(temp",{"_index":1170,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.scratchpadservice.totalcareplans",{"_index":782,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["this.scratchpadservice.totalobservations",{"_index":2226,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["this.selected",{"_index":780,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selected.id",{"_index":785,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsChartComponent.html":{},"components/ObservationsDisplay.html":{}}}],["this.selectedcondition",{"_index":2289,"title":{},"body":{"components/PatientComponent.html":{}}}],["this.selectpatientbyid(data['patient",{"_index":1842,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectpatientbyid(this.patientservice.patientid",{"_index":1839,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.settings",{"_index":328,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.push(setting",{"_index":325,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.settings.splice(this.settings.indexof(setting",{"_index":326,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.smartservice.authenticate().subscribe(data",{"_index":1840,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.sortbydate",{"_index":2514,"title":{},"body":{"components/TimelineComponent.html":{}}}],["this.state",{"_index":2463,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.status",{"_index":2359,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["this.subscription",{"_index":1247,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["this.timeouthandle",{"_index":1876,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["this.token",{"_index":1585,"title":{},"body":{"injectables/FhirService.html":{}}}],["this.tokenurl",{"_index":2434,"title":{},"body":{"injectables/SmartService.html":{}}}],["this.top",{"_index":1433,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this.totaldata",{"_index":1637,"title":{},"body":{"components/FormBuilder.html":{}}}],["this.trendsservice.charts",{"_index":1720,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.trendsservice.getdaterange(chart",{"_index":1723,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["this.uniqueobservations.length",{"_index":2150,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservations.push(observation",{"_index":2165,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.uniqueobservationsloadfinished",{"_index":2151,"title":{},"body":{"injectables/ObservationService.html":{}}}],["this.viewconditionlist",{"_index":1142,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["this.viewtoggle",{"_index":1141,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["this.visible",{"_index":1438,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["this['code']['coding'][0]['code",{"_index":2039,"title":{},"body":{"classes/Observation.html":{}}}],["thismodel",{"_index":1497,"title":{},"body":{"injectables/DoctorService.html":{}}}],["three",{"_index":617,"title":{},"body":{"classes/BaseColumn.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/TripleListComponent.html":{}}}],["throat",{"_index":2137,"title":{},"body":{"injectables/ObservationService.html":{}}}],["through",{"_index":1048,"title":{},"body":{"injectables/ConditionService.html":{},"injectables/DoctorService.html":{},"index.html":{}}}],["throw",{"_index":1166,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tied",{"_index":1453,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["time",{"_index":345,"title":{},"body":{"components/AccountComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/SmartService.html":{}}}],["timeframe",{"_index":352,"title":{},"body":{"components/AccountComponent.html":{}}}],["timeline",{"_index":265,"title":{"classes/Timeline.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{}}}],["timeline.html",{"_index":2492,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timeline_popup.html",{"_index":2538,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["timeline_popup/timeline_popup.component",{"_index":2513,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timelinecomponent",{"_index":262,"title":{"components/TimelineComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinepopupcomponent",{"_index":264,"title":{"components/TimelinePopupComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelines",{"_index":2491,"title":{},"body":{"components/TimelineComponent.html":{}}}],["timelines'},{'name",{"_index":263,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["timeouthandle",{"_index":1851,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["timesinceconditiononset",{"_index":1268,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["timesinceobservation",{"_index":2156,"title":{},"body":{"injectables/ObservationService.html":{}}}],["title",{"_index":688,"title":{},"body":{"classes/CarePlan.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["title/heading",{"_index":112,"title":{},"body":{"components/AccordionRecursion.html":{}}}],["tmp",{"_index":2477,"title":{},"body":{"injectables/SmartService.html":{}}}],["tmp[0",{"_index":2480,"title":{},"body":{"injectables/SmartService.html":{}}}],["today's",{"_index":1727,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["todo",{"_index":536,"title":{},"body":{"injectables/AssociationService.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HoverBoxComponent.html":{},"components/PatientComponent.html":{},"injectables/SmartService.html":{}}}],["toggle",{"_index":367,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ConditionsChartComponent.html":{}}}],["toggleconfigmode",{"_index":289,"title":{},"body":{"components/AccountComponent.html":{}}}],["toggleexpansion",{"_index":1085,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["toggling",{"_index":1148,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["tok",{"_index":2429,"title":{},"body":{"injectables/SmartService.html":{}}}],["token",{"_index":1566,"title":{},"body":{"injectables/FhirService.html":{},"components/HomeComponent.html":{},"injectables/SmartService.html":{}}}],["token_url",{"_index":2451,"title":{},"body":{"injectables/SmartService.html":{}}}],["tokenurl",{"_index":2383,"title":{},"body":{"injectables/SmartService.html":{}}}],["tool",{"_index":545,"title":{},"body":{"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["toolbar",{"_index":883,"title":{},"body":{"components/CarePlansComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":268,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["toolbar.html",{"_index":2570,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":267,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toolbarservice",{"_index":412,"title":{"injectables/ToolBarService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":1203,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["top",{"_index":55,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{},"components/ToolbarComponent.html":{}}}],["topoffset",{"_index":1852,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["topposition",{"_index":2566,"title":{},"body":{"injectables/ToolBarService.html":{}}}],["total",{"_index":300,"title":{},"body":{"components/AccountComponent.html":{}}}],["totalconditions",{"_index":1279,"title":{},"body":{"components/ConditionsComponent.html":{}}}],["totalcount",{"_index":2169,"title":{},"body":{"injectables/ObservationService.html":{}}}],["totaldata",{"_index":1604,"title":{},"body":{"components/FormBuilder.html":{}}}],["track",{"_index":623,"title":{},"body":{"classes/BaseColumn.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{}}}],["tracking",{"_index":541,"title":{},"body":{"injectables/AssociationService.html":{}}}],["tracks",{"_index":2587,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["transactions",{"_index":2696,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1896,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["transform(value",{"_index":1897,"title":{},"body":{"pipes/HumanizeBytesPipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["trend",{"_index":350,"title":{},"body":{"components/AccountComponent.html":{},"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/ObservationsDisplay.html":{}}}],["trends",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"injectables/HistoricalTrendsService.html":{}}}],["trendsservice",{"_index":1673,"title":{},"body":{"components/HistoricalTrendsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{}}}],["trick",{"_index":2219,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["triggered",{"_index":1248,"title":{},"body":{"components/ConditionsComponent.html":{},"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["triggering",{"_index":1404,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["triglycerides",{"_index":303,"title":{},"body":{"components/AccountComponent.html":{}}}],["triple",{"_index":858,"title":{},"body":{"components/CarePlansComponent.html":{},"components/HomeComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist",{"_index":270,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["triplelist.html",{"_index":2599,"title":{},"body":{"components/TripleListComponent.html":{}}}],["triplelistcomponent",{"_index":269,"title":{"components/TripleListComponent.html":{}},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":126,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{}}}],["try",{"_index":1188,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["ts",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"injectables/SmartService.html":{},"dependencies.html":{}}}],["tslib",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":935,"title":{},"body":{"classes/Chart.html":{}}}],["type",{"_index":35,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"classes/AllergyIntolerance.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"classes/Bundle.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"classes/Client.html":{},"components/ColumnStateSwitcherComponent.html":{},"classes/Condition.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Encounter.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Form.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"classes/Link.html":{},"injectables/MapService.html":{},"classes/Medication.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"classes/Observation.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"classes/Patient.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"classes/Server.html":{},"injectables/SmartService.html":{},"classes/Timeline.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"injectables/ToolBarService.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2799,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["typescript's",{"_index":2759,"title":{},"body":{"index.html":{}}}],["typescript/javascript",{"_index":759,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["ui",{"_index":1154,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["unavailable",{"_index":539,"title":{},"body":{"injectables/AssociationService.html":{}}}],["uncheck",{"_index":797,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/ObservationsDisplay.html":{}}}],["unchecked",{"_index":1338,"title":{},"body":{"components/ConditionsDisplay.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsDisplay.html":{}}}],["unclicked",{"_index":789,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["undefined",{"_index":1498,"title":{},"body":{"injectables/DoctorService.html":{}}}],["unintuitive",{"_index":2752,"title":{},"body":{"index.html":{}}}],["uniqueobservations",{"_index":2069,"title":{},"body":{"injectables/ObservationService.html":{}}}],["uniqueobservationsloadfinished",{"_index":2070,"title":{},"body":{"injectables/ObservationService.html":{}}}],["unit",{"_index":2232,"title":{},"body":{"components/ObservationsDisplay.html":{}}}],["units",{"_index":2035,"title":{},"body":{"classes/Observation.html":{}}}],["unknown",{"_index":2285,"title":{},"body":{"components/PatientComponent.html":{}}}],["unsubscribe",{"_index":1456,"title":{},"body":{"components/ContextMenuComponent.html":{}}}],["until",{"_index":1044,"title":{},"body":{"injectables/ConditionService.html":{}}}],["up",{"_index":1401,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/ToolbarComponent.html":{}}}],["update",{"_index":649,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/ScratchPadUpdate.html":{}}}],["update'},{'name",{"_index":258,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{}}}],["update.component",{"_index":1650,"title":{},"body":{"modules/FormCreatorModule.html":{}}}],["update.component.ts",{"_index":2346,"title":{},"body":{"components/ScratchPadUpdate.html":{},"coverage.html":{}}}],["update.component.ts:11",{"_index":2355,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:12",{"_index":2357,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:13",{"_index":2356,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:15",{"_index":2351,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:19",{"_index":2353,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.component.ts:9",{"_index":2350,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["update.html",{"_index":2348,"title":{},"body":{"components/ScratchPadUpdate.html":{}}}],["updatescratchpad",{"_index":1086,"title":{},"body":{"components/ConditionsChartComponent.html":{}}}],["updateservice",{"_index":634,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{}}}],["upon",{"_index":1366,"title":{},"body":{"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{}}}],["upper",{"_index":2058,"title":{},"body":{"components/ObservationRecursiveChart.html":{}}}],["uri",{"_index":703,"title":{},"body":{"classes/CarePlan.html":{}}}],["uris",{"_index":2427,"title":{},"body":{"injectables/SmartService.html":{}}}],["url",{"_index":682,"title":{},"body":{"classes/Bundle.html":{},"injectables/CarePlanService.html":{},"injectables/ConditionService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"classes/Link.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"injectables/PatientService.html":{},"classes/Server.html":{},"injectables/SmartService.html":{}}}],["urlencoded",{"_index":2456,"title":{},"body":{"injectables/SmartService.html":{}}}],["usage",{"_index":847,"title":{},"body":{"injectables/CarePlanService.html":{},"components/ContextMenuComponent.html":{}}}],["use",{"_index":145,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"classes/Observation.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":931,"title":{},"body":{"classes/Chart.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsChartComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{}}}],["user",{"_index":880,"title":{"classes/User.html":{}},"body":{"components/CarePlansComponent.html":{},"components/ContextMenuComponent.html":{},"components/HistoricalTrendsComponent.html":{},"classes/User.html":{},"coverage.html":{}}}],["user's",{"_index":894,"title":{},"body":{"components/CarePlansComponent.html":{}}}],["userid",{"_index":1609,"title":{},"body":{"components/FormBuilder.html":{}}}],["userselected",{"_index":705,"title":{},"body":{"classes/CarePlan.html":{}}}],["uses",{"_index":1630,"title":{},"body":{"components/FormBuilder.html":{}}}],["using",{"_index":1149,"title":{},"body":{"components/ConditionsChartComponent.html":{},"injectables/ObservationService.html":{},"injectables/PatientService.html":{},"index.html":{}}}],["utils/columntype.enum",{"_index":100,"title":{},"body":{"components/AccordionRecursion.html":{},"classes/BaseColumn.html":{},"components/ObservationsComponent.html":{}}}],["val",{"_index":2526,"title":{},"body":{"components/TimelineComponent.html":{}}}],["value",{"_index":85,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"classes/BaseColumn.html":{},"classes/CarePlan.html":{},"components/CarePlanDisplay.html":{},"injectables/CarePlanService.html":{},"components/CarePlansComponent.html":{},"classes/Chart.html":{},"components/CheckboxInline.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/DoctorService.html":{},"injectables/EncounterService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"directives/HighlightDirective.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"pipes/HumanizeBytesPipe.html":{},"injectables/MapService.html":{},"classes/Observation.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/variables.html":{}}}],["valuecodeableconcept",{"_index":2007,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["valuequantity",{"_index":2008,"title":{},"body":{"classes/Observation.html":{},"classes/Timeline.html":{}}}],["values",{"_index":363,"title":{},"body":{"components/AccountComponent.html":{},"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["var",{"_index":205,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"injectables/EncounterService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/LoadingAnimation.html":{},"components/MedicationsComponent.html":{},"components/NormalBox1.html":{},"components/NormalBox2.html":{},"components/ObservationRecursiveChart.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"components/SelectListSingle.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{},"components/TripleListComponent.html":{},"index.html":{}}}],["variable",{"_index":2607,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1628,"title":{"miscellaneous/variables.html":{}},"body":{"components/FormBuilder.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verificationstatus",{"_index":994,"title":{},"body":{"classes/Condition.html":{}}}],["version",{"_index":704,"title":{},"body":{"classes/CarePlan.html":{},"index.html":{}}}],["very",{"_index":2783,"title":{},"body":{"index.html":{}}}],["via",{"_index":2707,"title":{},"body":{"index.html":{}}}],["view",{"_index":653,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ColumnStateSwitcherComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["viewchild",{"_index":745,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{}}}],["viewchild('hover",{"_index":2273,"title":{},"body":{"components/PatientComponent.html":{}}}],["viewchild('hoverbox",{"_index":2548,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["viewchild('menu",{"_index":742,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsDisplay.html":{},"components/HistoricalTrendsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["viewchild('popup",{"_index":2511,"title":{},"body":{"components/TimelineComponent.html":{}}}],["viewchildren",{"_index":1625,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewchildren('form",{"_index":1621,"title":{},"body":{"components/FormBuilder.html":{}}}],["viewer",{"_index":2691,"title":{},"body":{"index.html":{}}}],["views",{"_index":2586,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewtoggle",{"_index":1077,"title":{},"body":{"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{}}}],["visible",{"_index":1375,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["visiblities",{"_index":1479,"title":{},"body":{"injectables/DoctorService.html":{}}}],["visit",{"_index":2301,"title":{},"body":{"components/PatientComponent.html":{},"index.html":{}}}],["vitals",{"_index":2119,"title":{},"body":{"injectables/ObservationService.html":{}}}],["void",{"_index":83,"title":{},"body":{"components/AccordionRecursion.html":{},"components/AccountComponent.html":{},"injectables/AssociationService.html":{},"directives/AutoGrowDirective.html":{},"classes/BaseColumn.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/CheckboxInline.html":{},"components/ColumnStateSwitcherComponent.html":{},"injectables/ConditionService.html":{},"components/ConditionsChartComponent.html":{},"components/ConditionsComponent.html":{},"components/ConditionsDisplay.html":{},"components/ContextMenuComponent.html":{},"classes/ContextMenuOption.html":{},"injectables/DoctorService.html":{},"injectables/FhirService.html":{},"components/FormBuilder.html":{},"components/HistoricalTrendsComponent.html":{},"injectables/HistoricalTrendsService.html":{},"components/HomeComponent.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationRecursiveChart.html":{},"injectables/ObservationService.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/PatientComponent.html":{},"injectables/PatientService.html":{},"components/ScratchPadUpdate.html":{},"injectables/SmartService.html":{},"components/TimelineComponent.html":{},"components/TimelinePopupComponent.html":{},"components/ToolbarComponent.html":{}}}],["waiting",{"_index":1870,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["want",{"_index":1501,"title":{},"body":{"injectables/DoctorService.html":{}}}],["way",{"_index":1277,"title":{},"body":{"components/ConditionsComponent.html":{},"injectables/SmartService.html":{}}}],["weight",{"_index":2120,"title":{},"body":{"injectables/ObservationService.html":{}}}],["west",{"_index":531,"title":{},"body":{"injectables/AssociationService.html":{}}}],["whatever",{"_index":2033,"title":{},"body":{"classes/Observation.html":{}}}],["whenever",{"_index":787,"title":{},"body":{"components/CarePlanDisplay.html":{},"components/ConditionsComponent.html":{},"components/ObservationsComponent.html":{},"components/ObservationsDisplay.html":{}}}],["whenver",{"_index":778,"title":{},"body":{"components/CarePlanDisplay.html":{}}}],["wherever",{"_index":1419,"title":{},"body":{"components/ContextMenuComponent.html":{},"components/HoverBoxComponent.html":{}}}],["whether",{"_index":93,"title":{},"body":{"components/AccordionRecursion.html":{},"components/CarePlanDisplay.html":{},"components/CarePlansComponent.html":{},"components/ConditionsDisplay.html":{},"components/HoverBoxComponent.html":{},"components/MedicationsComponent.html":{},"components/ObservationsDisplay.html":{},"components/ToolbarComponent.html":{}}}],["whose",{"_index":865,"title":{},"body":{"components/CarePlansComponent.html":{},"injectables/EncounterService.html":{},"components/TripleListComponent.html":{}}}],["width",{"_index":610,"title":{},"body":{"directives/AutoGrowDirective.html":{},"components/HistoricalTrendsComponent.html":{}}}],["window",{"_index":666,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerheight",{"_index":664,"title":{},"body":{"classes/BaseColumn.html":{}}}],["window.innerwidth",{"_index":1884,"title":{},"body":{"components/HoverBoxComponent.html":{}}}],["window.location.href",{"_index":2475,"title":{},"body":{"injectables/SmartService.html":{}}}],["windows",{"_index":2725,"title":{},"body":{"index.html":{}}}],["wipes",{"_index":1482,"title":{},"body":{"injectables/DoctorService.html":{}}}],["withauth",{"_index":1574,"title":{},"body":{"injectables/FhirService.html":{}}}],["within",{"_index":1322,"title":{},"body":{"components/ConditionsDisplay.html":{},"injectables/ObservationService.html":{},"components/ObservationsDisplay.html":{},"index.html":{}}}],["without",{"_index":1415,"title":{},"body":{"components/ContextMenuComponent.html":{},"injectables/HistoricalTrendsService.html":{}}}],["work",{"_index":645,"title":{},"body":{"classes/BaseColumn.html":{},"components/CarePlansComponent.html":{},"components/ConditionsComponent.html":{},"injectables/DoctorService.html":{},"components/ObservationsComponent.html":{}}}],["wraps",{"_index":1824,"title":{},"body":{"components/HomeComponent.html":{}}}],["write",{"_index":2774,"title":{},"body":{"index.html":{}}}],["writing",{"_index":2782,"title":{},"body":{"index.html":{}}}],["www",{"_index":2455,"title":{},"body":{"injectables/SmartService.html":{}}}],["x",{"_index":183,"title":{},"body":{"components/AccordionRecursion.html":{},"components/ConditionsChartComponent.html":{},"components/HistoricalTrendsComponent.html":{},"components/HoverBoxComponent.html":{},"injectables/ObservationService.html":{},"index.html":{}}}],["y",{"_index":929,"title":{},"body":{"classes/Chart.html":{},"injectables/HistoricalTrendsService.html":{}}}],["year",{"_index":1742,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years",{"_index":1685,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["years').todate",{"_index":1730,"title":{},"body":{"components/HistoricalTrendsComponent.html":{}}}],["yscalemax",{"_index":912,"title":{},"body":{"classes/Chart.html":{}}}],["yscalemin",{"_index":913,"title":{},"body":{"classes/Chart.html":{}}}],["yyyy').tostring",{"_index":2556,"title":{},"body":{"components/TimelinePopupComponent.html":{}}}],["zone.js",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/FormCreatorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccordionRecursion.html":{"url":"components/AccordionRecursion.html","title":"component - AccordionRecursion","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionRecursion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/accordionRecursion/accordionRecursion.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                accordionRecursion\n            \n\n\n\n\n            \n                templateUrl\n                ./accordionRecursion.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ColumnType\n                            \n                            \n                                loadFinished\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCarePlansNodes\n                            \n                            \n                                createConditionsNodes\n                            \n                            \n                                createObservationsNodes\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnType\n                            \n                            \n                                items\n                            \n                            \n                                level\n                            \n                            \n                                levelNodes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columnType\n                    \n                \n                \n                    \n                        Type :         ColumnType\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:62\n                            \n                        \n                \n                    \n                        The type of column (conditions, observations, or careplans).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Condition[] | Observation[] | CarePlan[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:68\n                            \n                        \n                \n                    \n                        The list of items (conditions, observations, or careplans) \nto display.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:75\n                            \n                        \n                \n                    \n                        The current level or depth. For example, 0 represents \nthe top level, and 1 represents directly below \ntop-level headings.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levelNodes\n                    \n                \n                \n                    \n                        Type :         LevelNode[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:82\n                            \n                        \n                \n                    \n                        Representation of the current level of the display in \nthe tree structure. This is either constructed internally, \nor passed directly to the component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createCarePlansNodes\n                        \n                        \n                    \n                \n            \n            \n                \ncreateCarePlansNodes(carePlans: CarePlan[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:186\n                \n            \n\n\n            \n                \n                    Create and populate the tree structure of careplan categories.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    carePlans\n                                    \n                                                CarePlan[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The careplans that will be displayed.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LevelNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createConditionsNodes\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConditionsNodes(conditions: Condition[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:128\n                \n            \n\n\n            \n                \n                    Create and populate the tree structure of condition categories.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    conditions\n                                    \n                                                Condition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The conditions that will be displayed.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LevelNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createObservationsNodes\n                        \n                        \n                    \n                \n            \n            \n                \ncreateObservationsNodes(observations: Observation[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:156\n                \n            \n\n\n            \n                \n                    Create and populate the tree structure of observation categories.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Observation[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The observations that will be displayed.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LevelNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:96\n                \n            \n\n\n            \n                \n                    Handle changes to the items (conditions, observations, or \ncareplans) being displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ColumnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ColumnType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:57\n                            \n                        \n\n                \n                    \n                        Makes the ColumType enum accessible from the template.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/accordionRecursion/accordionRecursion.component.ts:88\n                            \n                        \n\n                \n                    \n                        Whether the items (conditions, observations, or careplans) \nhave been loaded yet.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output } from '@angular/core';\nimport { ObservationService } from '../../services/observation.service';\nimport { ColumnType } from '../../utils/columnType.enum';\nimport { Condition } from '../../models/condition.model';\nimport { Observation } from '../../models/observation.model';\nimport { CarePlan } from '../../models/carePlan.model';\nimport { componentFactoryName } from '@angular/compiler';\n\n/**\n * A tree structure representing the structure of a column of \n * conditions, observations, or careplans. For example, a column \n * may contain several levels of headings before actual items \n * (like conditions) are displayed.\n */\ntype LevelNode =  {\n    /**\n     * The title/heading of the category.\n     */\n    category: string,\n\n    /**\n     * Whether the current level is a leaf (meaning that it just \n     * displays data), or is an inner node containing other children \n     * levels. \n     */\n    isLeaf: boolean,\n    \n    /**\n     * If `isLeaf` is false, this contains the children levels of the \n     * node.\n     */\n    childLevels?: LevelNode[],\n\n    /**\n     * If `isLeaf` is true, this contains the items to be displayed.\n     */\n    items?: Condition[] | Observation[] | CarePlan[]\n};\n\n/**\n * Hardcoded categories for the care plans column.\n */\nconst CARE_PLAN_CATEGORIES = [\n    'Medication', 'Procedures', \n    'In-Progress Tests', 'Dietary Plan', \n    'Exercise Plan'\n];\n\n@Component({\n    selector: 'accordionRecursion',\n    templateUrl: './accordionRecursion.html'\n})\nexport class AccordionRecursion {\n    /**\n     * Makes the ColumType enum accessible from the template.\n     */\n    ColumnType = ColumnType;\n\n    /**\n     * The type of column (conditions, observations, or careplans).\n     */\n    @Input() columnType: ColumnType;\n\n    /**\n     * The list of items (conditions, observations, or careplans) \n     * to display.\n     */\n    @Input() items?: Condition[] | Observation[] | CarePlan[];\n\n    /**\n     * The current level or depth. For example, 0 represents \n     * the top level, and 1 represents directly below \n     * top-level headings.\n     */\n    @Input() level: number;\n\n    /**\n     * Representation of the current level of the display in \n     * the tree structure. This is either constructed internally, \n     * or passed directly to the component.\n     */\n    @Input() levelNodes?: LevelNode[];\n\n    /**\n     * Whether the items (conditions, observations, or careplans) \n     * have been loaded yet.\n     */\n    loadFinished: boolean = false;\n\n    constructor(private observationService: ObservationService) { }\n\n    /**\n     * Handle changes to the items (conditions, observations, or \n     * careplans) being displayed.\n     */\n    ngOnChanges() {\n        // Only construct level nodes if items (conditions, careplans, \n        // or observations) are passed to the component. Otherwise, \n        // use the provided levelNodes.\n        if (!this.items) {\n            return;\n        }\n\n        switch(this.columnType) {\n            case ColumnType.Conditions: {\n                this.levelNodes = this.createConditionsNodes(this.items);\n                break;\n            }\n            case ColumnType.Observations: {\n                console.log('POPULATION OBSRVATIONS COLUMNS');\n                this.levelNodes = this.createObservationsNodes(this.items);\n                console.log(this.levelNodes);\n                break;\n            }\n            case ColumnType.CarePlans: {\n                this.levelNodes = this.createCarePlansNodes(this.items);\n                break;\n            }\n        }\n        this.loadFinished = true;\n    }\n\n    /**\n     * Create and populate the tree structure of condition categories.\n     * \n     * @param conditions The conditions that will be displayed.\n     */\n    createConditionsNodes(conditions: Condition[]): LevelNode[] {\n        let categories: { [key: string]: Condition[] } = {\n            'Chief Complaint': [],\n            'Active Problems': [],\n            'Inactive Problems': [],\n            'Allergies/Precautions': [],\n            'Preventions/Exposures': []\n        };\n\n        // Filter each condition into its respective category.\n        categories['Active Problems'] = conditions.filter(c => c.clinicalStatus === 'active');\n        categories['Inactive Problems'] = conditions.filter(c => c.clinicalStatus === 'inactive');\n        \n        // Create LevelNodes for each category.\n        return Object.keys(categories).map(cat => {\n            return {\n                category: cat,\n                isLeaf: true,\n                items: categories[cat]\n            };\n        });\n    }\n\n    /**\n     * Create and populate the tree structure of observation categories.\n     * \n     * @param observations The observations that will be displayed.\n     */\n    createObservationsNodes(observations: Observation[]): LevelNode[] {\n        let categories: { [x: string]: Observation[] } = {};\n\n        for (let o of observations) {\n            // Check if the observation has data and a category.\n            if (o['valueQuantity'] && o['category']) {\n                let category = o.category[0].text;\n                \n                // Add the observation to the matching category.\n                let observationsInCategory = categories[category] || [];\n                observationsInCategory.push(o);\n                categories[category] = observationsInCategory;\n            }\n        }\n\n        // Create LevelNodes for each category.\n        return Object.keys(categories).map(cat => {\n            return {\n                category: cat,\n                isLeaf: true,\n                items: categories[cat]\n            };\n        });\n    }\n\n    /**\n     * Create and populate the tree structure of careplan categories.\n     * \n     * @param carePlans The careplans that will be displayed.\n     */\n    createCarePlansNodes(carePlans: CarePlan[]): LevelNode[] {\n        // Create a LevelNode for each category\n        let levels: LevelNode[] = CARE_PLAN_CATEGORIES.map(cat => ({\n            category: cat,\n            isLeaf: true,\n        }));\n\n        // Hardcode all careplans to be placed in the first category.\n        levels[0].items = carePlans;\n        return levels;\n    }\n}\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            {{categoryNode.category}} ({{categoryNode.items?.length || 0}})\n          \n        \n    \n    \n      \n        \n          \n        \n        \n          \n        \n            \n          \n        \n      \n    \n    \n      \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{categoryNode.category}} ({{categoryNode.items?.length || 0}})                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionRecursion'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/account.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                account\n            \n\n\n\n\n            \n                templateUrl\n                ./account.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cholesteralBattery\n                            \n                            \n                                electrolytes\n                            \n                            \n                                kidneyFunction\n                            \n                            \n                                liverFunction\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSetting\n                            \n                            \n                                saveSettings\n                            \n                            \n                                toggleConfigMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(doctorService: DoctorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addSetting\n                        \n                        \n                    \n                \n            \n            \n                \naddSetting(checked: boolean, setting: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    setting\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveSettings\n                        \n                        \n                    \n                \n            \n            \n                \nsaveSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleConfigMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleConfigMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/account.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cholesteralBattery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            electrolytes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            kidneyFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Creatinine\", \"GFR\", \"BUN\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            liverFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            settings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/account.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\n\n@Component({\n  selector: 'account',\n  templateUrl: './account.html',\n})\nexport class AccountComponent {\n  settings: Array = [];\n  electrolytes: Array = [\"Sodium\", \"Potassium\", \"Chloride\", \"CO2\", \"Calcium\", \"Magnesium\", \"HBA1C\", \"GLU\", \"ANA\"];\n  cholesteralBattery: Array = [\"Total\", \"LDL\", \"HDL\", \"Triglycerides\"];\n  liverFunction: Array = [\"ALT\", \"AST\", \"Albumin\", \"Bilirubin\"];\n  kidneyFunction: Array = [\"Creatinine\", \"GFR\", \"BUN\"];\n\n  constructor(private doctorService: DoctorService) { }\n\n  addSetting(checked: boolean, setting: string) {\n    if (checked) {\n      this.settings.push(setting);\n    }\n    else {\n      this.settings.splice(this.settings.indexOf(setting), 1);\n    }\n  }\n\n  saveSettings() {\n    this.doctorService.filter = this.settings;\n    this.doctorService.addGraphConfig(this.settings);\n    console.log(\"saved\");\n  }\n\n  toggleConfigMode() {\n    if (this.doctorService.configMode == true) {\n      this.doctorService.configMode = false;\n    }\n    else {\n      this.doctorService.configMode = true;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  .paddedtd {\n    padding:10px 0;\n  }\n  .paddedtable {\n    border-collapse: separate;\n    border-spacing: 10px 0;\n  }\n\n\n  \n    \n      \n         John Smith\n        \n          GeneralChange password\n          Event Timeline\n          Time Scale:\n            Linear\n            Logarithmic\n          \n          Historical Trend\n          Initial Timeframe:\n          \n            6 month\n            12 month\n            18 month\n          \n          Problem List\n          \n            \n              \n                \n              \n              Active Problems\n              \n                \n              \n              Allergies\n            \n            \n              \n                \n              \n              Inactive Problems\n              \n                \n              \n              Activities Due\n            \n          \n          Findings List\n          \n            \n              \n                \n              \n              Abnormal Values\n              \n                \n              \n              All Values\n            \n            \n              \n                \n              \n              No Values\n              \n                \n              \n              Selected Values\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n            \n          \n          \n            \n              \n                \n              \n              {{lab}}\n                \n              \n            \n          \n          Save\n          Toggle Config Mode\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  .paddedtd {    padding:10px 0;  }  .paddedtable {    border-collapse: separate;    border-spacing: 10px 0;  }                     John Smith                  GeneralChange password          Event Timeline          Time Scale:            Linear            Logarithmic                    Historical Trend          Initial Timeframe:                      6 month            12 month            18 month                    Problem List                                                                                Active Problems                                                          Allergies                                                                                  Inactive Problems                                                          Activities Due                                Findings List                                                                                Abnormal Values                                                          All Values                                                                                  No Values                                                          Selected Values                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                                                                      {{lab}}                                                              Save          Toggle Config Mode                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllergyIntolerance.html":{"url":"classes/AllergyIntolerance.html","title":"class - AllergyIntolerance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllergyIntolerance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/allergyIntolerance.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/allergyIntolerance.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AllergyIntolerance {\n    id: string;\n    code: {\n        text: string;\n    };\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The root component for the entire application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/app/app.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The root component for the entire application.\n */\n@Component({\n  selector: 'app',\n  templateUrl: './app.html'\n})\nexport class AppComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n            Toggle navigation\n          \n          \n          \n           \n        \n    \n    \n      \n         Home\n         Account\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Toggle navigation                                                                        Home         Account            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nCarePlansComponent\n\nCarePlansComponent\n\nAppModule -->\n\nCarePlansComponent->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionRecursion\n                        \n                        \n                            AccountComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CarePlanDisplay\n                        \n                        \n                            CarePlansComponent\n                        \n                        \n                            ColumnStateSwitcherComponent\n                        \n                        \n                            ConditionsChartComponent\n                        \n                        \n                            ConditionsComponent\n                        \n                        \n                            ConditionsDisplay\n                        \n                        \n                            ContextMenuComponent\n                        \n                        \n                            FormBuilder\n                        \n                        \n                            HistoricalTrendsComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            HoverBoxComponent\n                        \n                        \n                            LoadingAnimation\n                        \n                        \n                            MedicationsComponent\n                        \n                        \n                            ObservationRecursiveChart\n                        \n                        \n                            ObservationsComponent\n                        \n                        \n                            ObservationsDisplay\n                        \n                        \n                            PatientComponent\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelinePopupComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TripleListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AssociationService\n                        \n                        \n                            CarePlanService\n                        \n                        \n                            ConditionService\n                        \n                        \n                            DoctorService\n                        \n                        \n                            EncounterService\n                        \n                        \n                            FhirService\n                        \n                        \n                            HistoricalTrendsService\n                        \n                        \n                            MapService\n                        \n                        \n                            ObservationService\n                        \n                        \n                            PatientService\n                        \n                        \n                            ScratchPadService\n                        \n                        \n                            SmartService\n                        \n                        \n                            ToolBarService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormCreatorModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ModuleWithProviders, enableProdMode } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// COMPONENT IMPORTS\nimport { AppComponent } from './app/components/app/app.component';\nimport { HomeComponent } from './app/components/home/home.component';\nimport { PatientComponent } from './app/components/patient/patient.component';\nimport { ConditionsComponent } from './app/components/conditions/conditions.component';\nimport { TimelineComponent } from './app/components/timeline/timeline.component';\nimport { TimelinePopupComponent } from './app/components/timeline_popup/timeline_popup.component';\nimport { ObservationsComponent } from './app/components/observations/observations.component';\nimport { CarePlansComponent } from './app/components/carePlans/carePlans.component';\nimport { HoverBoxComponent } from \"./app/components/hoverBox/hoverBox.component\";\nimport { LoadingAnimation } from './app/components/loadingAnimation/loadingAnimation.component';\nimport { AccountComponent } from './app/components/account/account.component';\nimport { ToolbarComponent } from './app/components/toolbar/toolbar.component';\nimport { TripleListComponent } from './app/components/tripleList/tripleList.component';\nimport { ObservationRecursiveChart } from './app/components/observationRecursionChart/observationRecursionChart.component';\nimport { MedicationsComponent } from './app/components/medications/medications.component';\nimport { ConditionsChartComponent } from './app/components/conditionsChart/conditionsChart.component';\nimport { ColumnStateSwitcherComponent } from './app/components/columnStateSwitcher/columnStateSwitcher.component';\nimport { FormBuilder } from './app/components/form-builder/form-builder.component'\nimport { ContextMenuComponent } from './app/components/contextMenu/contextMenu.component';\nimport { CarePlanDisplay } from './app/components/carePlanDisplay/carePlanDisplay.component';\nimport { AccordionRecursion } from './app/components/accordionRecursion/accordionRecursion.component';\nimport { ConditionsDisplay } from './app/components/conditionsDisplay/conditionsDisplay.component';\nimport { HistoricalTrendsComponent } from './app/components/historicalTrends/historicalTrends.component';\nimport { ObservationsDisplay } from './app/components/observationsDisplay/observationsDisplay.component';\n\n// SERVICE IMPORTS\nimport { CookieService } from 'ngx-cookie-service';\nimport { EncounterService } from './app/services/encounter.service';\nimport { FhirService } from './app/services/fhir.service';\nimport { PatientService } from './app/services/patient.service';\nimport { ConditionService } from './app/services/condition.service';\nimport { CarePlanService } from './app/services/carePlan.service';\nimport { ObservationService } from './app/services/observation.service';\nimport { MapService } from './app/services/map.service';\nimport { DoctorService } from './app/services/doctor.service';\nimport { SmartService } from './app/services/smart.service';\nimport { HistoricalTrendsService } from './app/services/historicalTrends.service';\nimport { ScratchPadService } from './app/services/scratchPad.service';\nimport { ToolBarService } from './app/services/toolbar.service';\nimport { AssociationService } from './app/services/association.service';\n\nimport { MomentModule } from 'ngx-moment';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n\nenableProdMode();\n\n\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormCreatorModule } from './app/modules/form.module';\n\nconst appRoutes: Routes = [\n  { path: 'account', component: AccountComponent },\n  { path: 'trends', component: HistoricalTrendsComponent },\n  { path: '', component: HomeComponent },\n  { path: '**', component: HomeComponent }\n]\nconst appRoutingProviders: any[] = [];\nconst routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n@NgModule({\n  imports: [\n    FormCreatorModule,\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    MomentModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  declarations: [ // Components and Directives\n    AppComponent,\n    HomeComponent,\n    PatientComponent,\n    AccordionRecursion,\n\n    // OBSERVATIONS COLUMN\n    ObservationsComponent,\n    ObservationsDisplay,\n\n    // CONDITIONS COLUMN\n    ConditionsComponent,\n    ConditionsDisplay,\n\n    // CAREPLAN COLUMN\n    CarePlansComponent,\n    CarePlanDisplay,\n    MedicationsComponent,\n\n    TimelineComponent,\n    TimelinePopupComponent,\n    LoadingAnimation,\n    FormBuilder,\n    AccountComponent,\n    ToolbarComponent,\n    TripleListComponent,\n    ObservationRecursiveChart,\n    ConditionsChartComponent,\n    ColumnStateSwitcherComponent,\n    ContextMenuComponent,\n    HoverBoxComponent,\n    HistoricalTrendsComponent,\n  ],\n  providers: [ // Services\n    appRoutingProviders,\n    CookieService,\n    EncounterService,\n    FhirService,\n    PatientService,\n    ObservationService,\n    ConditionService,\n    MapService,\n    DoctorService,\n    SmartService,\n    CarePlanService,\n    HistoricalTrendsService,\n    ScratchPadService,\n    ToolBarService,\n    AssociationService,\n  ],\n  bootstrap: [AppComponent] // Root Component\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Associable.html":{"url":"interfaces/Associable.html","title":"interface - Associable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Associable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/associable.model.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface Associable {\n    \n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AssociationService.html":{"url":"injectables/AssociationService.html","title":"injectable - AssociationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AssociationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/association.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                associatedMapConditions\n                            \n                            \n                                associatedMapObservations\n                            \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractConditionInfo\n                            \n                            \n                                    Private\n                                extractObservationInfo\n                            \n                            \n                                    Private\n                                getAssociations\n                            \n                            \n                                runAssociationsTool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, conditionService: ConditionService, observationService: ObservationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractConditionInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractConditionInfo(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; onsetDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractObservationInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractObservationInfo(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { code: any; system: any; effectiveDateTime: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAssociations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAssociations(checkedConditions: Array, checkedObservations: Array, conditions: Array, observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool(checkedConditions: Array, checkedObservations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/association.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedConditions\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedObservations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            associatedMapObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/association.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ConditionService } from './condition.service';\nimport { ObservationService } from './observation.service';\n\nimport { Condition } from '../models/condition.model';\nimport { Observation } from '../models/observation.model';\n\n@Injectable()\nexport class AssociationService {\n    // TODO: This endpoint is currently unavailable\n    private path = 'http://ec2-52-10-29-181.us-west-2.compute.amazonaws.com/get_items';\n\n    // Maps for tracking which conditions and observations\n    // are currently associated (according to the associations tool)\n    associatedMapConditions: Map = new Map();\n    associatedMapObservations: Map = new Map();\n\n    constructor(\n        private http: HttpClient,\n        private conditionService: ConditionService,\n        private observationService: ObservationService\n    ) { }\n\n    runAssociationsTool(checkedConditions: Array, checkedObservations: Array) {\n        let conditions = this.conditionService.conditions;\n        let observations = this.observationService.observations;\n\n        this.getAssociations(\n            checkedConditions,\n            checkedObservations,\n            conditions,\n            observations\n        ).subscribe(res => {\n            // Clear prior associations\n            this.associatedMapConditions.clear();\n            this.associatedMapObservations.clear();\n\n            // Extract associations API response\n            let associatedConditions = res['selectedConditions'];\n            let associatedObservations = res['selectedObservations'];\n\n            // Mark associated conditions as such\n            for (let a of associatedConditions) {\n                for (let c of conditions) {\n                    if (this.extractConditionInfo(c)['code'] == a['code']) {\n                        this.associatedMapConditions.set(c, true);\n                    }\n                }\n            }\n\n            // Mark associated observations as such\n            for (let a of associatedObservations) {\n                for (let o of observations) {\n                    if (this.extractObservationInfo(o)['code'] == a['code']) {\n                        this.associatedMapObservations.set(o, true);\n                    }\n                }\n            }\n        });\n    }\n\n    private getAssociations(\n        checkedConditions: Array,\n        checkedObservations: Array,\n        conditions: Array,\n        observations: Array,\n    ) {\n        // Extract relevant fields from checked conditions and observations\n        let checkedConditionsInfo = checkedConditions.map(this.extractConditionInfo);\n        let checkedObservationsInfo = checkedObservations.map(this.extractObservationInfo);\n\n        // Extract relevant fields from all conditions and observations\n        let conditionsInfo = conditions.map(this.extractConditionInfo);\n        let observationsInfo = observations.map(this.extractObservationInfo);\n\n        // Call associations API endpoint\n        return this.http.post(this.path, {\n            selectedConditions: checkedConditionsInfo,\n            selectedObservations: checkedObservationsInfo,\n            conditions: conditionsInfo,\n            observations: observationsInfo,\n        });\n    }\n\n    // Extract the code, coding system, and onset datetime from a condition\n    private extractConditionInfo(condition: Condition) {\n        return {\n            code: condition['code']['coding'][0]['code'],\n            system: condition['code']['coding'][0]['system'],\n            onsetDateTime: condition['onsetDateTime'],\n        }\n    }\n\n    // Extract the code, coding system, and effective datetime from an observation\n    private extractObservationInfo(observation: Observation) {\n        return {\n            code: observation['code']['coding'][0]['code'],\n            system: observation['code']['coding'][0]['system'],\n            effectiveDateTime: observation['effectiveDateTime'],\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutoGrowDirective.html":{"url":"directives/AutoGrowDirective.html","title":"directive - AutoGrowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AutoGrowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/auto-grow.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [autoGrow]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlur\n                            \n                            \n                                onFocus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/auto-grow.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFocus\n                        \n                        \n                    \n                \n            \n            \n                \nonFocus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/auto-grow.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer} from '@angular/core';\n\n@Directive({\n\tselector: '[autoGrow]',\n\thost: {\n\t\t'(focus)': 'onFocus()',\n\t\t'(blur)': 'onBlur()'\n\t}\n})\nexport class AutoGrowDirective {\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t}\n\n\tonFocus() {\n\t\t// console.log('focus!');\n\t\tthis.renderer.setElementStyle(this.el.nativeElement, 'width', '200px');\n\t}\n\t onBlur() {\n\t\t//  console.log('blur');\n\t\t this.renderer.setElementStyle(this.el.nativeElement, 'width', '120px');\n\t }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseColumn.html":{"url":"classes/BaseColumn.html","title":"class - BaseColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/baseColumn.ts\n        \n\n            \n                Description\n            \n            \n                Super class of all three columns in the application. Provides\nfunctionality for dynamic resizing, and keeps track of which\nstate the column is currently in (ie, scratch pad or default).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                ColumnType\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/baseColumn.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:52\n                            \n                        \n\n                \n                    \n                        The current height (in pixels) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:58\n                            \n                        \n\n                \n                    \n                        The current state (ie, scratch pad) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ColumnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ColumnType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:14\n                            \n                        \n\n                \n                    \n                        Makes the ColumnType enum accessible from the template.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/baseColumn.ts:55\n                            \n                        \n\n                \n                    \n                        220px is an approximate value that seems to work for now. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:32\n                \n            \n\n\n            \n                \n                    Update the height of the column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:39\n                \n            \n\n\n            \n                \n                    Show default view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:44\n                \n            \n\n\n            \n                \n                    Show scratch pad view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/baseColumn.ts:49\n                \n            \n\n\n            \n                \n                    Update the service. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { ColumnType } from '../utils/columnType.enum';\n\n/**\n * Super class of all three columns in the application. Provides\n * functionality for dynamic resizing, and keeps track of which\n * state the column is currently in (ie, scratch pad or default).\n */\nexport class BaseColumn {\n  /**\n   * Makes the ColumnType enum accessible from the template.\n   */\n  ColumnType = ColumnType;\n\n  constructor() {\n    // Set the initial height of the column.\n    this.columnHeight = window.innerHeight - this.HEIGHT_OFFSET;\n\n    // Resize the column on each window resize event.\n    fromEvent(window, 'resize')\n      .pipe(debounceTime(100)) // Debounce to prevent excessive resizing.\n      .subscribe((event) => {\n        this.handleResize(event);\n    });\n  }\n\n  /**\n   * Update the height of the column.\n   * @param event Resize event\n   */\n  handleResize(event) {\n    this.columnHeight = event.target.innerHeight - this.HEIGHT_OFFSET;\n  }\n\n  /**\n   * Show default view. To be overriden in the child class.\n   */\n  showDefault() { }\n\n  /**\n   * Show scratch pad view. To be overriden in the child class.\n   */\n  showScratchPad() { }\n\n  /**\n   * Update the service. To be overriden in the child class.\n   */\n  updateService() { }\n\n  /** The current height (in pixels) of the column. */\n  columnHeight: number;\n\n  /** 220px is an approximate value that seems to work for now. */\n  HEIGHT_OFFSET: number = 180;\n\n  /** The current state (ie, scratch pad) of the column. */\n  columnState: string = \"default\";\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bundle.html":{"url":"classes/Bundle.html","title":"class - Bundle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bundle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                link\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CarePlan.html":{"url":"classes/CarePlan.html","title":"class - CarePlan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CarePlan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/carePlan.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activity\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/carePlan.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class CarePlan implements Associable {\n    id: string;\n    title: string;\n    status: string;\n    description: string;\n\n\n    period: {\n        start: Date;\n        end: Date;\n    }\n\n    activity: {\n        detail: {\n            status: string;\n            dailyAmount: {\n                value: number;\n                system: string;\n                code: string;\n            }\n            product: {\n                productCodableConcept: {\n                    coding: {\n                        // URI\n                        system: string;\n                        version: string;\n                        code: string;\n                        display: string;\n                        userSelected: boolean;\n                    }[],\n                    text: string;\n                }\n                productReference: {\n                    reference: string;\n                    type: string;\n                    display: string;\n                }\n            }\n        }\n    }[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlanDisplay.html":{"url":"components/CarePlanDisplay.html","title":"component - CarePlanDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlanDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                careplanDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlanDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllCarePlans\n                            \n                            \n                                checkCarePlan\n                            \n                            \n                                checkClicked\n                            \n                            \n                                expand\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectCarePlan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                carePlans\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                careplanSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        carePlans\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        careplanSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllCarePlans(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCarePlan(checked: boolean, checkedCarePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checkedCarePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncheckClicked(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCarePlan\n                        \n                        \n                    \n                \n            \n            \n                \nselectCarePlan(carePlan: CarePlan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    carePlan\n                                    \n                                                CarePlan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlanDisplay/carePlanDisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { CarePlan } from '../../models/carePlan.model';\n\n@Component({\n  selector: 'careplanDisplay',\n  templateUrl: './carePlanDisplay.html'\n})\nexport class CarePlanDisplay {\n  // The currently selected careplan in the list.\n  selected: CarePlan;\n\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of careplans to be displayed\n  @Input() carePlans: Array;\n  @Output() careplanSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu !: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(private scratchPadService: ScratchPadService) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking careplans.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': function (plan) {\n        this.scratchPadService.addCarePlan(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function (plan) {\n        console.log(plan);\n      }.bind(this)\n    });\n  }\n\n  // FOR MAINTAINING CHECK STATE AFTER LOSING FOCUS\n\n  //whenver a line is selected\n  selectCarePlan(carePlan: CarePlan) {\n    this.selected = carePlan;\n    this.careplanSelected.emit(this.selected);\n    for (let c of this.scratchPadService.totalCareplans) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  checkClicked(carePlan: CarePlan) {\n    if (this.scratchPadService.checkedMapCareplans.get(carePlan)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // WHENEVER A CHECKBOX IS CLICKED OR UNCLICKED, IT REGISTERS IT IN THE SCRATCHPADSERVICE (not actually the scratch pad yet)\n  checkCarePlan(checked: boolean, checkedCarePlan: CarePlan) {\n    this.scratchPadService.checkCarePlan(checked, checkedCarePlan);\n  }\n\n  expand(parent: string) {\n    /*\n    for (let c of this.carePlans) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n\n  // Check or uncheck all conditions.\n  checkAllCarePlans(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let carePlan of this.carePlans) {\n      this.scratchPadService.checkCarePlan(checked, carePlan);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n      Description\n      Start\n      End\n    \n  \n  \n     \n      \n        \n      \n      {{cP['title']}}\n      {{cP.period.start}}\n      {{cP.period.end}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Description      Start      End                                       {{cP[\\'title\\']}}      {{cP.period.start}}      {{cP.period.end}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlanDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CarePlanService.html":{"url":"injectables/CarePlanService.html","title":"injectable - CarePlanService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CarePlanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/carePlan.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCarePlans\n                            \n                            \n                                loadMedications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \nloadCarePlans(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMedications\n                        \n                        \n                    \n                \n            \n            \n                \nloadMedications(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/carePlan.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/CarePlan'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/carePlan.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Patient } from '../models/patient.model';\nimport { CarePlan } from '../models/carePlan.model';\nimport { Medication } from '../models/medication.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class CarePlanService {\n  private path = '/CarePlan';\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient\n  ) { }\n\n  // Retrieve care plans for a given patient\n  loadCarePlans(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no care plans, so return an empty array\n          return new Array();\n        }\n      }));\n  }\n\n  // Retrieve medications for a given patient.\n  // If a given medication is taken over multiple periods, it is merged into one.\n  loadMedications(patient: Patient): Observable> {\n    return this.loadCarePlans(patient).pipe(map(carePlans => {\n      let medicationMap: Map = new Map();\n\n      for (let cp of carePlans) {\n        let dosageUnits = cp.activity[0].detail.dailyAmount.code;\n\n        // Retrieve the existing medication, or create it if it does not yet exist.\n        let med: Medication = medicationMap.get(cp.title) || new Medication(cp.title, dosageUnits);\n\n        // Add a period of usage to the medication.\n        med.periods.push({\n          start: new Date(cp.period.start),\n          end: new Date(cp.period.end),\n          dosage: cp.activity[0].detail.dailyAmount.value\n        });\n\n        medicationMap.set(cp.title, med);\n      }\n\n      return Array.from(medicationMap.values());\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarePlansComponent.html":{"url":"components/CarePlansComponent.html","title":"component - CarePlansComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarePlansComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/carePlans/carePlans.component.ts\n\n\n    \n        Description\n    \n    \n        Component representing the list of a patient's \ncare plans. It is a part of the triple list \nview.\n\n    \n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                carePlans\n            \n\n\n\n\n            \n                templateUrl\n                ./carePlans.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carePlanLoadFinished\n                            \n                            \n                                carePlans\n                            \n                            \n                                columnStateSubscription\n                            \n                            \n                                selected\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                ColumnType\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCarePlans\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, carePlanService: CarePlanService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/carePlans/carePlans.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:38\n                            \n                        \n                \n                    \n                        The patient whose care plans are displayed. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCarePlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCarePlans()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlans/carePlans.component.ts:72\n                \n            \n\n\n            \n                \n                    Get care plans currently in the scratch pad for display \nin the list.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/carePlans/carePlans.component.ts:57\n                \n            \n\n\n            \n                \n                    Reload care plans when the patient is changed. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:32\n\n                \n            \n\n\n            \n                \n                    Update the height of the column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:39\n\n                \n            \n\n\n            \n                \n                    Show default view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:44\n\n                \n            \n\n\n            \n                \n                    Show scratch pad view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:49\n\n                \n            \n\n\n            \n                \n                    Update the service. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlanLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:29\n                            \n                        \n\n                \n                    \n                        Whether or not care plans have loaded yet. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carePlans\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:26\n                            \n                        \n\n                \n                    \n                        The care plans being displayed in the list. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnStateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:35\n                            \n                        \n\n                \n                    \n                        Subscription that detects when the user opens \nthe scratch pad (eg, from the toolbar).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CarePlan\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/carePlans/carePlans.component.ts:23\n                            \n                        \n\n                \n                    \n                        The care plan currently selected by the user. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:52\n\n                            \n                        \n\n                \n                    \n                        The current height (in pixels) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:58\n\n                            \n                        \n\n                \n                    \n                        The current state (ie, scratch pad) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ColumnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ColumnType\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:14\n\n                            \n                        \n\n                \n                    \n                        Makes the ColumnType enum accessible from the template.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:55\n\n                            \n                        \n\n                \n                    \n                        220px is an approximate value that seems to work for now. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { CarePlan } from '../../models/carePlan.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n/**\n * Component representing the list of a patient's \n * care plans. It is a part of the triple list \n * view.\n */\n@Component({\n  selector: 'carePlans',\n  templateUrl: './carePlans.html'\n})\nexport class CarePlansComponent extends BaseColumn {\n  /** The care plan currently selected by the user. */\n  selected: CarePlan;\n  \n  /** The care plans being displayed in the list. */\n  carePlans: Array;\n  \n  /** Whether or not care plans have loaded yet. */\n  carePlanLoadFinished: boolean = false;\n\n  /** \n   * Subscription that detects when the user opens \n   * the scratch pad (eg, from the toolbar).\n  */\n  columnStateSubscription: Subscription;\n\n  /** The patient whose care plans are displayed. */\n  @Input() patient: Patient;\n\n  constructor(\n    private fhirService: FhirService, \n    private carePlanService: CarePlanService, \n    private scratchPadService: ScratchPadService\n  ) {\n    super();\n\n    // Switch between scratch pad and default based on user's\n    // selection in the toolbar.\n    this.columnStateSubscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        this.columnState = sPad ? 'scratchpad' : 'default';\n      }\n    );\n  }\n\n  /** Reload care plans when the patient is changed. */\n  ngOnChanges() {\n    this.selected = null;\n    if (this.patient) {\n      this.carePlanService.loadCarePlans(this.patient).subscribe(carePlans => {\n        this.carePlans = carePlans;\n        this.carePlanLoadFinished = true;\n        console.log(\"Loaded \" + carePlans.length + \" care plans.\");\n      });\n    }\n  }\n\n  /**\n   * Get care plans currently in the scratch pad for display \n   * in the list.\n   */\n  getScratchPadCarePlans() {\n    return this.scratchPadService.getCarePlans();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Care Plans\n      \n        \n      \n    \n  \n  \n    \n      \n        \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Care Plans                                                                                                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarePlansComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chart.html":{"url":"classes/Chart.html","title":"class - Chart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chart.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                dashedLines\n                            \n                            \n                                data\n                            \n                            \n                                lineChartData\n                            \n                            \n                                normalValues\n                            \n                            \n                                title\n                            \n                            \n                                yScaleMax\n                            \n                            \n                                yScaleMin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashedLines\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            normalValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            yScaleMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chart.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Chart {\n  title: string;\n  code: string;\n  dashedLines: boolean;\n\n  // An array of data points associated with the chart.\n  data: {\n    value: number;\n    name: any;\n  }[] = [];\n\n  // Stores the chart in the format expected for line charts by NGX-Charts.\n  lineChartData: {\n    name: any;\n    series: {\n      value: number;\n      name: any;\n    }[];\n  }[];\n\n  // The minimum and maximum Y-axis values to be displayed on the chart.\n  yScaleMin: number;\n  yScaleMax: number;\n\n  // Used to display horizontal \"reference\" lines in the NGX-Charts line chart.\n  // Generally an array of two elements (the low and high values).\n  normalValues: {\n    name: string;\n    value: number;\n  }[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxInline.html":{"url":"components/CheckboxInline.html","title":"component - CheckboxInline","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxInline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/checkbox-inline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                checkbox-inline\n            \n\n\n\n\n            \n                templateUrl\n                ./checkbox-inline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxData\n                            \n                            \n                                combinedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/checkbox-inline.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkboxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combinedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/checkbox-inline.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"checkbox-inline\",\n\ttemplateUrl: \"./checkbox-inline.html\"\n})\n\nexport class CheckboxInline{\n\t@Input() inputData: any;\n\tcheckboxData : boolean[] = [];\n\tcombinedData: String[] = [];\n\t\n\tngOnInit(){\n\t\t// initialize the checkboxes all to false\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n      \n       {{entry.description}} \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}                    {{entry.description}}           '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxInline'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Client.html":{"url":"classes/Client.html","title":"class - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/client.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/client.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class Client {\n\tid: string;\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ColumnStateSwitcherComponent.html":{"url":"components/ColumnStateSwitcherComponent.html","title":"component - ColumnStateSwitcherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ColumnStateSwitcherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n\n\n    \n        Description\n    \n    \n        Component for switching between the three states of each column.\nThe three possible states are: Default, Note Pad, and Scratch Pad.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                columnStateSwitcher\n            \n\n\n\n\n            \n                templateUrl\n                ./columnStateSwitcher.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadCount\n                            \n                            \n                                switchToDefault\n                            \n                            \n                                switchToScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                columnType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n                \n                    \n                        Type :         BaseColumn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnType\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:22\n                            \n                        \n                \n                    \n                        The type of the column in which the switcher is used.\nFor example, 'conditions', 'observations', or 'careplans'.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:53\n                \n            \n\n\n            \n                \n                    Retrieve the number of items in the column's scratch pad. This \nnumber is displayed in the switcher component.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToDefault\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:29\n                \n            \n\n\n            \n                \n                    Switch to the default view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchToScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nswitchToScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts:40\n                \n            \n\n\n            \n                \n                    Switch to the scratch pad view of the column.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { BaseColumn } from '../baseColumn';\n\n\n /**\n  * Component for switching between the three states of each column.\n  * The three possible states are: Default, Note Pad, and Scratch Pad.\n  */\n@Component({\n  selector: 'columnStateSwitcher',\n  templateUrl: './columnStateSwitcher.html'\n})\nexport class ColumnStateSwitcherComponent {\n  @Input() column: BaseColumn;\n\n  /**\n   * The type of the column in which the switcher is used.\n   * For example, 'conditions', 'observations', or 'careplans'.\n   */\n  @Input() columnType: string;\n\n  constructor (private scratchPadService: ScratchPadService) { }\n\n  /**\n   * Switch to the default view of the column.\n   */\n  switchToDefault() {\n    if (this.column != null) {\n      this.column.columnState = 'default';\n      this.column.updateService(); // Update the service to store correct column state\n      this.column.showDefault();\n    }\n  }\n\n  /**\n   * Switch to the scratch pad view of the column.\n   */\n  switchToScratchPad() {\n    if (this.column != null) {\n      this.column.columnState = 'scratchpad';\n      // Update the service to store correct column state\n      this.column.updateService(); \n      this.column.showScratchPad();\n    }\n  }\n\n  /**\n   * Retrieve the number of items in the column's scratch pad. This \n   * number is displayed in the switcher component.\n   */\n  getScratchPadCount(): number {\n    if (this.columnType == 'conditions') {\n      return this.scratchPadService.conditions.length;\n    } else if (this.columnType == 'observations') {\n      return this.scratchPadService.observations.length;\n    } else if (this.columnType == 'careplans') {\n      // TODO: Implement once scratch pad is finished for careplans.\n      return 0;\n    }\n    return 0;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n      {{ getScratchPadCount() }}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ getScratchPadCount() }}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ColumnStateSwitcherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Condition.html":{"url":"classes/Condition.html","title":"class - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/condition.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clinicalStatus\n                            \n                            \n                                code\n                            \n                            \n                                id\n                            \n                            \n                                isParent\n                            \n                            \n                                isVisible\n                            \n                            \n                                onsetDateTime\n                            \n                            \n                                parent\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                verificationStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clinicalStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isParent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onsetDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verificationStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/condition.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Condition implements Associable {\n    id: string;\n    onsetDateTime: string;\n    relativeDateTime: string;\n    verificationStatus: string;\n    clinicalStatus: string;\n    isVisible: boolean;\n    isParent: boolean;\n    parent: string;\n\tcode: {\n        coding: [{code: string, display: string, system: string}],\n        text: string\n    };\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConditionService.html":{"url":"injectables/ConditionService.html","title":"injectable - ConditionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConditionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/condition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnState\n                            \n                            \n                                conditions\n                            \n                            \n                                conditionsCache\n                            \n                            \n                                    Private\n                                path\n                            \n                            \n                                selectedCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCheckedConditions\n                            \n                            \n                                getColumnState\n                            \n                            \n                                loadAllergies\n                            \n                            \n                                loadConditions\n                            \n                            \n                                loadConditionsPage\n                            \n                            \n                                setColumnState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColumnState\n                        \n                        \n                    \n                \n            \n            \n                \ngetColumnState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         String\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \nloadAllergies(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditions\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditions(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConditionsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadConditionsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setColumnState\n                        \n                        \n                    \n                \n            \n            \n                \nsetColumnState(newColumnState: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/condition.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newColumnState\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionsCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Condition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/condition.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of, concat } from 'rxjs';\nimport { map, concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Condition } from '../models/condition.model';\nimport { AllergyIntolerance } from '../models/allergyIntolerance.model';\n\n@Injectable()\nexport class ConditionService {\n  private path = '/Condition';\n\n  conditions: Array = [];\n  // The currently selected (highlighted) condition \n  selectedCondition: Condition = null;\n\n  conditionsCache = {};\n  columnState: String;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  // https://stackoverflow.com/questions/45594609/which-operator-to-chain-observables-conditionally\n  // Because the conditions are paginated in the API, we must continually\n  // load the next page until no pages remain. This is achieved through\n  // concatMap and Observable.concat, as discussed above.\n  loadConditionsPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        const conditions = >bundle.entry.map(r => r.resource);\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(conditions), this.loadConditionsPage(nextLink.url));\n        } else {\n          return of(conditions);\n        }\n      }));\n  }\n\n  // Retrieve conditions for a given patient\n  loadConditions(patient: Patient): Observable> {\n    var url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadConditionsPage(url);\n  }\n\n  getCheckedConditions() {\n    return this.conditions.filter(c => {\n      return this.scratchPadService.checkedMapConditions.get(c);\n    });\n  }\n\n  // Retrieve allergies for a given patient\n  loadAllergies(patient: Patient): Observable> {\n    let url = this.fhirService.getUrl() + \"/AllergyIntolerance\" + \"?patient=\" + patient.id;\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(map(bundle => {\n        if (bundle.entry) {\n          return >bundle.entry.map(r => r.resource);\n        } else {\n          // The patient has no allergies\n          return new Array();\n        }\n      }));\n  }\n\n  // Gets the state of the conditions column (default or scratch pad)\n  getColumnState(): String {\n    return this.columnState;\n  }\n\n  // Let the service know that the column state has changed\n  setColumnState(newColumnState: String): void {\n    this.columnState = newColumnState;\n  }\n\n  // TODO: Cache API calls into data structures that last for the duration of a session \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsChartComponent.html":{"url":"components/ConditionsChartComponent.html","title":"component - ConditionsChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsChart/conditionsChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsChart\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collapseQueue\n                            \n                            \n                                conditionGrouping\n                            \n                            \n                                conditionGroupingName\n                            \n                            \n                                conditions\n                            \n                            \n                                selected\n                            \n                            \n                                textInputForEdit\n                            \n                            \n                                viewToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ellipsesToggle\n                            \n                            \n                                expand\n                            \n                            \n                                groupConditions\n                            \n                            \n                                loadFinished\n                            \n                            \n                                newTable\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                scratchPadCheckBoxes\n                            \n                            \n                                selectCondition\n                            \n                            \n                                sortCondition\n                            \n                            \n                                tableNavigation\n                            \n                            \n                                toggleExpansion\n                            \n                            \n                                updateScratchPad\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ellipsesToggle\n                        \n                        \n                    \n                \n            \n            \n                \nellipsesToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            groupConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngroupConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadFinished\n                        \n                        \n                    \n                \n            \n            \n                \nloadFinished()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newTable\n                        \n                        \n                    \n                \n            \n            \n                \nnewTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLocation\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    quality\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupingCount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scratchPadCheckBoxes\n                        \n                        \n                    \n                \n            \n            \n                \nscratchPadCheckBoxes(checked: boolean, value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsortCondition(x: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tableNavigation\n                        \n                        \n                    \n                \n            \n            \n                \ntableNavigation(clickedSet: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    clickedSet\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleExpansion\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nupdateScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collapseQueue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGroupingName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\"Active\", \"Inactive\"]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            textInputForEdit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsChart/conditionsChart.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'conditionsChart',\n  templateUrl: './conditionsChart.html'\n})\nexport class ConditionsChartComponent {\n  selected: Condition;\n  conditions: Array = [];\n  viewToggle: boolean = false;\n  collapseQueue: Array = [];\n  conditionGrouping: Array = [];\n  conditionGroupingName: Array = [\"Active\", \"Inactive\"];\n  textInputForEdit: String;\n\n  @Input() patient: Patient;\n\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  constructor(\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService,\n  ) { }\n\n  ngOnChanges() {\n    this.selected = null;\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = conditions;\n        this.loadFinished();\n      });\n    }\n  }\n\n  selectCondition(condition: Condition) {\n    this.selected = condition;\n    this.conditionSelected.emit(this.selected);\n    for (let c of this.conditions) {\n      c['selected'] = (c.id == this.selected.id);\n    }\n  }\n\n  sortCondition(x: string) {\n    if (x == \"date-asc\" || x == \"date-desc\") {\n      var a = 1;\n      if (x == \"date-asc\") {\n        a = -a;\n      }\n\n      for (let c of this.conditionGrouping) {\n        c.sort((n1, n2) => {\n          if (n1.code['coding'][0]['code'] > n2.code['coding'][0]['code']) {\n            return a;\n          }\n          if (n1.code['coding'][0]['code']  {\n      if (n1.onsetDateTime  n2.onsetDateTime) {\n        return -1;\n      }\n    })\n    var diff = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n\n    for (let c of this.conditions) {\n      c.isVisible = true;\n      var newDate = new Date(c.onsetDateTime).getTime() + diff;\n      c.relativeDateTime = new Date(newDate).toDateString();\n      c.relativeDateTime = moment(newDate).toISOString();\n    }\n    if (this.viewToggle == false) {\n      //this.viewConditionList = JSON.parse(JSON.stringify(this.conditions));\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n    this.conditionService.conditions = this.conditions;\n    this.groupConditions();\n  }\n\n  // Method for basic toggling, using JSON functions to toggle internal Angular2 module OnChanges for UI reactivity\n  ellipsesToggle() {\n    // Basic logic for toggle, assuming this.conditions contains all info, and this.viewConditionList is the modified list being used to display data\n    if (this.viewToggle == false) {\n      for (let c of this.conditions) {\n        c.isVisible = true;\n      }\n      this.viewToggle = true;\n    }\n  }\n\n  toggleExpansion() {\n\n    if (this.viewToggle == true) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n      this.viewToggle = false;\n    }\n  }\n\n  scratchPadCheckBoxes(checked: boolean, value) {\n\n    if (checked) {\n      // this.conditions[value].isSelected = true;\n      this.scratchPadService.toAddToCondSpArray.push(this.conditions[value]);\n    }\n    else {\n      // this.conditions[value].isSelected = false;\n      let temp = this.scratchPadService.toAddToCondSpArray.indexOf(this.conditions[value]);\n      if (temp > -1) {\n        // This will actually delete instead of simply setting to null, which will throw errors in the long run\n        this.scratchPadService.toAddToCondSpArray.splice(temp, 1);\n      }\n    }\n  }\n\n  updateScratchPad() {\n    //this.scratchPadService.buttonClicked(true);\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n\n  groupConditions() {\n    for (let c of this.conditions) {\n      if (c.clinicalStatus == \"active\") {\n        if (!this.conditionGrouping[0]) {\n          this.conditionGrouping[0] = [c];\n        }\n        else {\n          this.conditionGrouping[0].push(c);\n        }\n      }\n      else {\n        if (!this.conditionGrouping[1]) {\n          this.conditionGrouping[1] = [c];\n        }\n        else {\n          this.conditionGrouping[1].push(c);\n        }\n      }\n    }\n    // this.conditionGrouping[1] = this.conditionGrouping[0];\n  }\n\n  tableNavigation(clickedSet: number) {\n    for (let c of this.conditionGrouping) {\n      let cNum = this.conditionGrouping.indexOf(c);\n      if (cNum != clickedSet) {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = true;\n      }\n      else {\n        let tempTableVar = document.getElementById(\"cG\" + cNum.toString());\n        tempTableVar.hidden = false;\n      }\n    }\n  }\n\n  newTable(tableName: string, dataLocation: Array, quality: string, groupingCount: number) {\n    if (this.conditionGroupingName.indexOf(tableName) == -1) {\n      this.conditionGroupingName.push(tableName);\n      for (let c of this.conditions) {\n        // Right now this will only allow for a table with one quality!\n        var fullPath = c;\n        dataLocation.forEach(element => {\n          try {\n            fullPath = c[element];\n          }\n          catch (error) {\n            console.log('That field does not exist on this Condition' + c);\n          }\n        });\n        // Testing condition and adding if it's true\n        if (quality) {\n          console.log(fullPath);\n          if (!this.conditionGrouping[groupingCount]) {\n            this.conditionGrouping[groupingCount] = [c];\n          }\n          else {\n            this.conditionGrouping[groupingCount].push(c);\n\n          }\n        }\n      }\n    }\n    else {\n      console.log(\"This table already exists\");\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    Tools\n    \n      \n      \n    \n  \n  (none)\n  \n    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}\n    \n    \n      \n        \n          \n          Description\n          Status\n          Onset\n           \n        \n      \n      \n        \n          \n            \n              \n            \n            \n              ... {{cSub['code']['text']}} {{cSub['code']['coding'][0]['code']}}\n            \n            {{cSub.clinicalStatus}}\n            {{cSub.relativeDateTime}}\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tools                        (none)   0\" id=\"tableParentEle\">    {{conditionGroupingName[conditionGrouping.indexOf(c)]}}                                          Description          Status          Onset                                                                                                                 ... {{cSub[\\'code\\'][\\'text\\']}} {{cSub[\\'code\\'][\\'coding\\'][0][\\'code\\']}}                        {{cSub.clinicalStatus}}            {{cSub.relativeDateTime}}                              '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsComponent.html":{"url":"components/ConditionsComponent.html","title":"component - ConditionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditions/conditions.component.ts\n\n\n    \n        Description\n    \n    \n        Component that represents the top level of the Conditions column\nin the application. Does not handle rendering; simply retrieves\ndata from server and passes it down.\n\n    \n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditions\n            \n\n\n\n\n            \n                templateUrl\n                ./conditions.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                conditionGrouping\n                            \n                            \n                                conditions\n                            \n                            \n                                justCreated\n                            \n                            \n                                loaded\n                            \n                            \n                                scratchPadConditions\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                viewToggle\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                ColumnType\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getScratchPadConditions\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                updateService\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, conditionService: ConditionService, doctorService: DoctorService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditions/conditions.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:44\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:45\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadConditions\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadConditions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:135\n                \n            \n\n\n            \n                \n                    Retrieves the selected conditions from the scratch pad\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:87\n                \n            \n\n\n            \n                \n                    Called when all conditions have been loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditions/conditions.component.ts:124\n                \n            \n\n\n            \n                \n                    Update the service to store correct column state\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:32\n\n                \n            \n\n\n            \n                \n                    Update the height of the column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:39\n\n                \n            \n\n\n            \n                \n                    Show default view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:44\n\n                \n            \n\n\n            \n                \n                    Show scratch pad view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:49\n\n                \n            \n\n\n            \n                \n                    Update the service. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditionGrouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            conditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:31\n                            \n                        \n\n                \n                    \n                        The list of conditions being displayed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            justCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:35\n                            \n                        \n\n                \n                    \n                        For checking whenever the page is loaded \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scratchPadConditions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:28\n                            \n                        \n\n                \n                    \n                        The currently selected condition in the list. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:42\n                            \n                        \n\n                \n                    \n                        For column switching \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewToggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditions/conditions.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:52\n\n                            \n                        \n\n                \n                    \n                        The current height (in pixels) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:58\n\n                            \n                        \n\n                \n                    \n                        The current state (ie, scratch pad) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ColumnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ColumnType\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:14\n\n                            \n                        \n\n                \n                    \n                        Makes the ColumnType enum accessible from the template.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:55\n\n                            \n                        \n\n                \n                    \n                        220px is an approximate value that seems to work for now. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as moment from 'moment';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Condition } from '../../models/condition.model';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n/** Necessary in order to use jQuery to open popup. */\ndeclare var $: any;\n\n/**\n * Component that represents the top level of the Conditions column\n * in the application. Does not handle rendering; simply retrieves\n * data from server and passes it down.\n */\n@Component({\n  selector: 'conditions',\n  templateUrl: './conditions.html'\n})\nexport class ConditionsComponent extends BaseColumn {\n  /** The currently selected condition in the list. */\n  selected: Condition;\n\n  /** The list of conditions being displayed. */\n  conditions: Array = [];\n  scratchPadConditions: any = [];\n\n  /** For checking whenever the page is loaded */\n  loaded: boolean = false;\n\n  viewToggle: boolean = false;\n  conditionGrouping: Array = [];\n  justCreated: boolean;\n\n  /** For column switching */\n  subscription: Subscription;\n\n  @Input() patient: Patient;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private fhirService: FhirService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private scratchPadService: ScratchPadService\n  ) {\n    super();\n    this.justCreated = true;\n    this.scratchPadConditions = this.getScratchPadConditions();\n\n    this.subscription = scratchPadService.stateChange$.subscribe(\n      sPad => {\n        if (sPad)\n          this.columnState = \"scratchpad\";\n        else\n          this.columnState = \"default\";\n      }\n    );\n  }\n\n  ngOnChanges() {\n    // Triggered if a new patient is selected (not even implemented yet).\n    this.selected = null;\n    this.conditions = [];\n\n    if (this.patient) {\n      this.conditionService.loadConditions(this.patient).subscribe(conditions => {\n        this.conditions = this.conditions.concat(conditions);\n        this.onLoadComplete();\n      });\n    }\n  }\n\n  /**\n   * Called when all conditions have been loaded.\n   */\n  onLoadComplete() {\n    console.log(\"Loaded \" + this.conditions.length + \" conditions.\");\n\n    this.conditions.sort((c1, c2) => {\n      return c2.onsetDateTime.localeCompare(c1.onsetDateTime);\n    });\n\n    // Scale dates to make them appear more recent for demos.\n    // 0.8 is an arbitrary value that produces realistic dates.\n    if (this.conditions.length > 0) {\n      let RECENCY_MULTIPLIER = 0.8;\n      let timeSinceConditionOnset = new Date().getTime() - new Date(this.conditions[0].onsetDateTime).getTime();\n      let scaledTimeSinceConditionOnset = Math.floor(RECENCY_MULTIPLIER * timeSinceConditionOnset);\n\n      for (let condition of this.conditions) {\n        condition.isVisible = true;\n        let relativeDateTime = new Date(condition.onsetDateTime).getTime() + scaledTimeSinceConditionOnset;\n        condition.relativeDateTime = moment(relativeDateTime).toISOString();\n      }\n    }\n\n    if (!this.viewToggle) {\n      this.conditions = this.doctorService.assignVisible(this.conditions);\n    }\n\n    this.conditionService.conditions = this.conditions;\n\n    // for rendering elements only after page is loaded (there probably is a better way)\n    this.loaded = true;\n\n    // initialize the scratchPadService totalConditions with all the stuff\n    this.scratchPadService.initConditions(this.conditions);\n  }\n\n  /**\n   * Update the service to store correct column state\n   */\n  updateService(): void {\n    this.conditionService.setColumnState(this.columnState);\n  }\n\n  // ===============================================================================================================================================\n  // ======================================================== GETTERS AND SETTERS===================================================================\n  // ===============================================================================================================================================\n\n  /**\n   * Retrieves the selected conditions from the scratch pad\n   */\n  getScratchPadConditions() {\n    return this.scratchPadService.getConditions();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Conditions\n      \n        \n      \n    \n  \n  \n    \n      \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  Testing condition popover\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Conditions                                                                                Testing condition popover  '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionsDisplay.html":{"url":"components/ConditionsDisplay.html","title":"component - ConditionsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ConditionsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                conditionsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./conditionsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllConditions\n                            \n                            \n                                checkCondition\n                            \n                            \n                                expand\n                            \n                            \n                                getDateString\n                            \n                            \n                                isConditionAssociated\n                            \n                            \n                                isConditionChecked\n                            \n                            \n                                isConditionSelected\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                printmsg\n                            \n                            \n                                selectCondition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditions\n                            \n                            \n                                scratchPadMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(scratchPadService: ScratchPadService, conditionService: ConditionService, associationService: AssociationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditions\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scratchPadMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        conditionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllConditions\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllConditions(checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCondition\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCondition(checkedCondition: Condition, checked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checkedCondition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateString\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateString(c: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionAssociated(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionChecked(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isConditionSelected\n                        \n                        \n                    \n                \n            \n            \n                \nisConditionSelected(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printmsg\n                        \n                        \n                    \n                \n            \n            \n                \nprintmsg(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/conditionsDisplay/conditionsDisplay.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Condition } from '../../models/condition.model';\n\n@Component({\n  selector: 'conditionsDisplay',\n  templateUrl: './conditionsDisplay.html'\n})\nexport class ConditionsDisplay {\n  // Whether the checkbox for checking all conditions is currently checked or not.\n  isAllChecked: boolean = false;\n\n  // This is the array of conditions to be displayed\n  @Input() conditions: Array;\n  @Output() conditionSelected: EventEmitter = new EventEmitter();\n\n  // Whether this display of conditions is within the scratch pad.\n  @Input() scratchPadMode: boolean = false;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n\n  // ===============================================================================================================================================\n  // ================================================================== EVENT METHODS ==============================================================\n  // ==================================================================---------------==============================================================\n\n  constructor(\n    private scratchPadService: ScratchPadService,\n    private conditionService: ConditionService,\n    private associationService: AssociationService\n  ) { }\n\n  ngOnInit() { }\n\n  //=================================================================== CONTEXT MENU ==============================================================\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add options to the context menu shown when right clicking conditions.\n    if (this.conditionService.getColumnState() === \"scratchpad\") {\n      // Add 'Remove from Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Remove from Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.removeCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    } else {\n      // Add 'Add to Scratch Pad' option.\n      this.menu.addOption({\n        'icon': 'glyphicon-pencil',\n        'text': 'Add to Scratch Pad',\n        'exec': function(condition) {\n          // For each condition, if the condition is checked, add the condition to the scratch pad.\n          this.scratchPadService.checkedMapConditions.forEach((isChecked, condition) => {\n            if (isChecked) {\n              this.scratchPadService.addCondition(condition);\n            }\n          });\n        }.bind(this)\n      });\n    }\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': function(condition) {\n        console.log(condition);\n      }.bind(this)\n    });\n  }\n\n  // Selects an individual condition (which causes it to be highlighted).\n  // This is NOT the same as checking a condition.\n  selectCondition(condition: Condition) {\n    this.conditionService.selectedCondition = condition;\n  }\n\n  // Check or uncheck an individual condition\n  checkCondition(checkedCondition: Condition, checked: boolean) {\n    this.scratchPadService.checkCondition(checked, checkedCondition);\n  \n    // When an individual condition is checked, the \"check all\" checkbox should be unchecked.\n    this.isAllChecked = false;\n  }\n\n  isConditionSelected(condition: Condition) {\n    return condition == this.conditionService.selectedCondition;\n  }\n\n  // Determine whether a condition is currently checked.\n  isConditionChecked(condition: Condition) {\n    return this.scratchPadService.checkedMapConditions.get(condition) || false;\n  }\n\n  // Determine whether a condition is currently associated (based on associations tool)\n  isConditionAssociated(condition: Condition) {\n    return this.associationService.associatedMapConditions.get(condition) || false;\n  }\n\n  // Check or uncheck all conditions.\n  checkAllConditions(checked: boolean) {\n    this.isAllChecked = checked;\n    for (let condition of this.conditions) {\n        this.scratchPadService.checkCondition(checked, condition);\n    }\n  }\n\n  expand(parent: string) {\n    for (let c of this.conditions) {\n      if (c.parent == parent) {\n        c.isVisible = true;\n        c.parent = \"\";\n        c.isParent = false;\n      }\n    }\n  }\n  printmsg(condition: Condition) {\n      console.log(condition);\n  }\n\n  getDateString(c: Condition) {\n    let d = new Date(c.onsetDateTime);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return months[d.getMonth()] + ' ' + d.getDate() + ', ' + d.getFullYear();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n        Description\n        Status\n        Onset\n      \n    \n    \n       \n        \n          \n        \n        \n          ... {{c['code']['text']}} \n        \n        {{c.clinicalStatus}}\n        {{c.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Description        Status        Onset                                                                 ... {{c[\\'code\\'][\\'text\\']}}                 {{c.clinicalStatus}}        {{c.relativeDateTime | amTimeAgo:true}}             '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContextMenuComponent.html":{"url":"components/ContextMenuComponent.html","title":"component - ContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/contextMenu/contextMenu.component.ts\n\n\n    \n        Description\n    \n    \n        A reusable context menu component.\nExample Usage:\n\n    \n\n\n\n    \n        Example\n    \n    \n                \n                    this.menu.addOption({\n  'icon': 'glyphicon-stats', // icon to display\n  'text': 'Add to Trend Tool', // text to display\n  'exec': function(data) { // what to execute upon click\n      console.log(data);\n  }\n});\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                contextMenu\n            \n\n\n\n\n            \n                templateUrl\n                ./contextMenu.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickSubscription\n                            \n                            \n                                closeable\n                            \n                            \n                                CLOSEABLE_DELAY\n                            \n                            \n                                data\n                            \n                            \n                                left\n                            \n                            \n                                options\n                            \n                            \n                                top\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addOption\n                            \n                            \n                                    Private\n                                handleDocClick\n                            \n                            \n                                    Private\n                                handleOptionClick\n                            \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addOption\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addOption(option: ContextMenuOption)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:58\n                \n            \n\n\n            \n                \n                    Add an option to the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                ContextMenuOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleDocClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDocClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:67\n                \n            \n\n\n            \n                \n                    Hide the context menu if user clicks outside of it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the document.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleOptionClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleOptionClick(option, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:113\n                \n            \n\n\n            \n                \n                    Handles clicks on context menu options. If the option \nhas an associated exec function, it is executed with \ndata passed as the parameter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The context menu option that was clicked.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event on the option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:133\n                \n            \n\n\n            \n                \n                    Closes the context menu. Also handles cleaning up \nthe click subscription, which is no longer needed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event triggering the hiding.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(data, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/contextMenu/contextMenu.component.ts:82\n                \n            \n\n\n            \n                \n                    Show the context menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data to be passed to the context menu.\n\n                                    \n                                \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered the menu.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:43\n                            \n                        \n\n                \n                    \n                        Observable subscription to document clicks. Clicking out of the \ncontext menu closes it.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLOSEABLE_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:50\n                            \n                        \n\n                \n                    \n                        Prevents a glitch in contexts where the menu is opened by a left click.\nWithout this delay on being able to close the menu, the menu would close\nthe moment it opened.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:33\n                            \n                        \n\n                \n                    \n                        The data passed into the menu from wherever it was triggered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:28\n                            \n                        \n\n                \n                    \n                        The list of options displayed in the menu.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/contextMenu/contextMenu.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef } from '@angular/core';\nimport { ContextMenuOption } from '../../models/contextMenuOption.model';\nimport { fromEvent } from 'rxjs';\n\n/**\n * A reusable context menu component.\n * \n * Example Usage:\n * \n * @example\n * this.menu.addOption({\n *              'icon': 'glyphicon-stats', // icon to display\n *              'text': 'Add to Trend Tool', // text to display\n *              'exec': function(data) { // what to execute upon click\n *                  console.log(data);\n *              }\n * });\n */\n@Component({\n  selector: 'contextMenu',\n  templateUrl: './contextMenu.html'\n})\nexport class ContextMenuComponent {\n\n  /**\n  * The list of options displayed in the menu.\n  */\n  options: Array = [];\n\n  /**\n  * The data passed into the menu from wherever it was triggered.\n  */\n  data: any = null;\n\n  visible: boolean = false;\n  top: string = '0px';\n  left: string = '0px';\n\n  /**\n  * Observable subscription to document clicks. Clicking out of the \n  * context menu closes it.\n  */\n  clickSubscription: any = null;\n\n  /**\n  * Prevents a glitch in contexts where the menu is opened by a left click.\n  * Without this delay on being able to close the menu, the menu would close\n  * the moment it opened.\n  */\n  CLOSEABLE_DELAY: number = 100;\n  closeable: boolean = false;\n\n  constructor(private ref: ElementRef) { }\n\n  /**\n   * Add an option to the context menu.\n   */\n  public addOption(option: ContextMenuOption) {\n    this.options = this.options.concat(option);\n  }\n\n  /**\n  * Hide the context menu if user clicks outside of it.\n  * \n  * @param event The click event on the document.\n  */\n  private handleDocClick(event) {\n    if (!this.ref.nativeElement.contains(event.target)) {\n      // Only hide the menu if it is currently closeable.\n      if (this.closeable) {\n          this.hide(null);\n      }\n    }\n  }\n\n  /**\n   * Show the context menu.\n   * \n   * @param data Data to be passed to the context menu.\n   * @param event The click event that triggered the menu.\n   */\n  public show(data, event) {\n    this.data = data;\n\n    // Set the location of the menu to where the user clicked.\n    this.top = event.pageY + 'px';\n    this.left = event.pageX + 'px';\n\n    this.visible = true;\n    this.closeable = false;\n\n    // Allow the menu to be closed only after an interval has elapsed.\n    setTimeout(() => { this.closeable = true; }, this.CLOSEABLE_DELAY);\n\n    // Disable the standard click behavior.\n    event.preventDefault();\n\n    // Subscribe to document click events.\n    this.clickSubscription = fromEvent(document, 'click')\n      .subscribe((event) => {\n        this.handleDocClick(event);\n    });\n  }\n\n  /**\n   * Handles clicks on context menu options. If the option \n   * has an associated `exec` function, it is executed with \n   * `data` passed as the parameter.\n   * \n   * @param option The context menu option that was clicked.\n   * @param event The click event on the option\n   */\n  private handleOptionClick(option, event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (option.exec) {\n      // Execute the function tied to the clicked menu option.\n      option.exec(this.data);\n    }\n\n    // Hide the context menu.\n    this.hide(event);\n  }\n\n  /**\n   * Closes the context menu. Also handles cleaning up \n   * the click subscription, which is no longer needed.\n   * \n   * @param event The click event triggering the hiding.\n   */\n  private hide(event) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    // Unsubscribe from document click events.\n    if (this.clickSubscription) {\n      this.clickSubscription.unsubscribe();\n      this.clickSubscription = null;\n    }\n\n    // Hide the menu and reset the associated data.\n    this.visible = false;\n    this.data = null;\n  }\n}\n    \n\n    \n        \n\n  {{ option.text }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ option.text }}'\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextMenuOption.html":{"url":"classes/ContextMenuOption.html","title":"class - ContextMenuOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextMenuOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contextMenuOption.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a context menu option for use with \nContextMenuComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exec\n                            \n                            \n                                icon\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exec\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:23\n                            \n                        \n\n                \n                    \n                        Function to be executed upon click of the option\nin the context menu. \n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        data\n                                                        \n                                                                Data associated with the context menu.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:10\n                            \n                        \n\n                \n                    \n                        Icon to display next to the option (from the \nBootstrap Icons library).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/contextMenuOption.model.ts:15\n                            \n                        \n\n                \n                    \n                        Text to be displayed in the option.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ContextMenuOption {\n    /**\n     * Icon to display next to the option (from the \n     * Bootstrap Icons library).\n     */\n    icon: string;\n\n    /**\n     * Text to be displayed in the option.\n     */\n    text: string;\n\n    /**\n     * Function to be executed upon click of the option\n     * in the context menu. \n     * \n     * @param data Data associated with the context menu.\n     */\n    exec: (data) => void;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DoctorService.html":{"url":"injectables/DoctorService.html","title":"injectable - DoctorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DoctorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/doctor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configMode\n                            \n                            \n                                filter\n                            \n                            \n                                graphConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addGraphConfig\n                            \n                            \n                                assignVisible\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGraphConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddGraphConfig(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assignVisible\n                        \n                        \n                    \n                \n            \n            \n                \nassignVisible(list: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/doctor.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/doctor.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { Condition } from '../models/condition.model';\n\n@Injectable()\nexport class DoctorService {\n  filter: Array = [];\n  configMode: boolean = true;\n  graphConfig: Array> = [];\n\n  constructor(private cookieService: CookieService) { }\n\n  // The change to visiblities modifiers for the list should be an input to assignVisible(), and input through conditions.component.ts\n  assignVisible(list: Array) {\n    // Wipes the lists, as assignVisible() gets called on subscribe){data == true} for conditions.component.ts\n    // Needs to have a clean list, or it will push doubles/triples, or more\n\n    // Use \"let of\" to generate enumerated list, allows for pass by value iteration\n    let count = 0;\n    for (let c of list) {\n      // Right now the logic only excludes one code, for testing purposes\n      // thisModel is a undefined data model, depending on if we want to leave the service with the data we need to create a static model, but\n      // it should work for testing purposes\n\n      if (count ) {\n    this.graphConfig.push(list);\n    this.cookieService.set('graphConfig', JSON.stringify(this.graphConfig));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Encounter.html":{"url":"classes/Encounter.html","title":"class - Encounter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Encounter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/encounter.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                period\n                            \n                            \n                                position\n                            \n                            \n                                reason\n                            \n                            \n                                status\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEndDate\n                            \n                            \n                                getLogValue\n                            \n                            \n                                getReason\n                            \n                            \n                                getStartDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/encounter.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEndDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetEndDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLogValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetLogValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReason\n                        \n                        \n                    \n                \n            \n            \n                \ngetReason()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStartDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetStartDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/encounter.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Encounter {\n  \n  id: string;\n  status: string;\n\n  period: {\n    start: string;\n    end: string;\n  };\n\n  text: {\n    status: string;\n    div: string;\n  }\n\n  position:string;\n  // Reasons for the encounter.\n  reason: {\n    text: string;\n\n    // Coding details for the encounter reason.\n    coding: {\n      system: string;\n      code: string;\n    }[];\n  }[];\n\n  // Get the first reason for the encounter (if there is one). Otherwise, return null.\n  getReason(): string {\n    // Check if there are any reasons. If not, return null.\n    if (!this.reason) {\n      return null;\n    }\n\n    for (let r of this.reason) {\n      if (r.text) {\n        // Return the text associated with the reason.\n        return r.text;\n      }\n    }\n\n    return null;\n  }\n  getStartDate(): Date { return new Date(this.period.start)}\n  getEndDate(): Date { return new Date(this.period.end)}\n\n  getLogValue(): any {\n    return Math.log(this.getStartDate().getTime())\n  }\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EncounterService.html":{"url":"injectables/EncounterService.html","title":"injectable - EncounterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EncounterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/encounter.service.ts\n        \n\n            \n                Description\n            \n            \n                A service for retrieving patient encounters\nfrom the FHIR server\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                    Public\n                                loadEncounters\n                            \n                            \n                                    Private\n                                loadEncountersPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/encounter.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(input: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:60\n                \n            \n\n\n            \n                \n                    Convert a JSON encounter object from the FHIR server\nto an instance of the Encounter class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JSON encounter object from FHIR server\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Encounter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:50\n                \n            \n\n\n            \n                \n                    Retrieve encounters for a given patient from the FHIR server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The patient whose encounters to retrieve\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncountersPage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncountersPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/encounter.service.ts:29\n                \n            \n\n\n            \n                \n                    Load a page of encounters\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Endpoint from which to retrieve encounters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Encounter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/encounter.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, concat } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\n\nimport { Bundle } from '../models/bundle.model';\nimport { Patient } from '../models/patient.model';\nimport { Encounter } from '../models/encounter.model';\n\n/**\n * A service for retrieving patient encounters\n * from the FHIR server\n */\n@Injectable()\nexport class EncounterService {\n  private path = '/Encounter';\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  /**\n   * Load a page of encounters\n   * @param url Endpoint from which to retrieve encounters\n   */\n  private loadEncountersPage(url: string): Observable> {\n    return this.http.get(url, this.fhirService.getRequestOptions())\n      .pipe(concatMap(bundle => {\n        let encounters: Array = [];\n        if (bundle.entry) {\n          encounters = bundle.entry.map(e => this.deserialize(e['resource']));\n        }\n\n        let nextLink = bundle.link.find(link => link.relation == 'next');\n        if (nextLink) {\n          return concat(of(encounters), this.loadEncountersPage(nextLink.url));\n        } else {\n          return of(encounters);\n        }\n      }));\n  }\n\n  /**\n   * Retrieve encounters for a given patient from the FHIR server.\n   * @param patient The patient whose encounters to retrieve\n   */\n  public loadEncounters(patient: Patient): Observable> {\n    const url = this.fhirService.getUrl() + this.path + \"?patient=\" + patient.id;\n    return this.loadEncountersPage(url);\n  }\n\n  /**\n   * Convert a JSON encounter object from the FHIR server\n   * to an instance of the Encounter class\n   * @param input JSON encounter object from FHIR server\n   */\n  private deserialize(input: any): Encounter {\n    // We cannot simply cast the JSON object to an Encounter, because this casted\n    // Encounter will not have the methods of the Encounter class.\n    var fixed: Encounter = new Encounter();\n\n    for (let prop in input) {\n      fixed[prop] = input[prop];\n    }\n\n    return fixed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FhirService.html":{"url":"injectables/FhirService.html","title":"injectable - FhirService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FhirService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/fhir.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                base\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequestOptions\n                            \n                            \n                                getUrl\n                            \n                            \n                                setToken\n                            \n                            \n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/fhir.service.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequestOptions\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequestOptions(withAuth: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    withAuth\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrl\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetToken(newToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsetUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/fhir.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/fhir.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class FhirService {\n\n  constructor() { }\n\n  private base: string;\n  public token: string;\n\n  getUrl(): string {\n    return this.base;\n  }\n\n  setUrl(url: string) {\n    this.base = url;\n  }\n\n  setToken(newToken: string) {\n    this.token = newToken;\n  }\n\n  getRequestOptions(withAuth: boolean = true): { headers: HttpHeaders } {\n    let headers = new HttpHeaders({'Accept': 'application/json'});\n    if (withAuth) {\n      headers = headers.append('Authorization', 'Bearer ' + this.token);\n    }\n    return { headers: headers };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/form.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/form.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Form {\n\tid: number;\n\ttype: string;\n\tdata : any;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormBuilder.html":{"url":"components/FormBuilder.html","title":"component - FormBuilder","body":"\n                   \n\n\n\n\n\n  Components\n  FormBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form-builder/form-builder.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                form-builder\n            \n\n\n            \n                styles\n                #main_list {list-style-type: none;}\n            \n\n\n            \n                templateUrl\n                ./form-builder.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                combData\n                            \n                            \n                                components\n                            \n                            \n                                    Public\n                                forms\n                            \n                            \n                                totalData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getData\n                            \n                            \n                                getForms\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                storeData\n                            \n                            \n                                    Public\n                                submitClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formInput\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmitClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formInput\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         String\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSubmitClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForms\n                        \n                        \n                    \n                \n            \n            \n                \ngetForms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            storeData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            submitClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form-builder/form-builder.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            combData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('form')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            forms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Form[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form-builder/form-builder.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Form } from '../../models/form.model';\n\n@Component({\n  selector: 'form-builder',\n  templateUrl: './form-builder.html',\n  styles: [\"#main_list {list-style-type: none;}\"]\n})\n\nexport class FormBuilder  {\n\t// GLOBAL VARIABLES\n\tpublic forms: Form[];\n\t@ViewChildren('form') components: any;\n\t\n\ttotalData: String[] = [];\n\tcombData: any;\n\t\n\t@Input() formInput: any[];\n\t@Input() userId: String; \n\t\n\t@Output() onSubmitClick: EventEmitter = new EventEmitter();\n\t\n\t// ============================== EVENT METHODS ==================================\n\tconstructor(){}\n\t\n\tngOnInit(): void {\n\t\tthis.getForms();\n\t}\n\t\t\n\t// method that uses service to get the forms from the server\n\tgetForms(): void {\n\t\t//this.formBuilderService.getTemplate().then(forms => {this.forms = forms; console.log(forms);});\n\t\tthis.forms = this.formInput;\n\t}\n\t\n\t// ===================== LOGIC WHEN SUBMIT BUTTON CLICKED ========================\n\t\n\tpublic submitClick(): void {\n\t\tthis.totalData = [];\n\t\n\t\tfor (var i = 0 ; i \n    \n\n    \n        \n\n  \n    \n    \n       \n    \n    \n       \n    \n    \n       \n    \n    \n      \n    \n    \n      \n    \n  \n   Submit \n\n    \n\n    \n            #main_list {list-style-type: none;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Submit '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormBuilder'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormCreatorModule.html":{"url":"modules/FormCreatorModule.html","title":"module - FormCreatorModule","body":"\n                   \n\n\n\n\n    Modules\n    FormCreatorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxInline\n                        \n                        \n                            NormalBox1\n                        \n                        \n                            NormalBox2\n                        \n                        \n                            ScratchPadUpdate\n                        \n                        \n                            SelectListSingle\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { CheckboxInline } from '../components/form_components/checkbox-inline.component';\nimport { NormalBox1 } from '../components/form_components/normal-box-1.component';\nimport { NormalBox2 } from '../components/form_components/normal-box-2.component';\nimport { SelectListSingle } from '../components/form_components/select-list-single.component';\nimport { ScratchPadUpdate } from '../components/form_components/scrachpad-update.component';\n\n@NgModule({\n\timports: [\n\t\tFormsModule,\n\t\tBrowserModule\n\t],\n\tdeclarations: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t], exports: [\n\t\tCheckboxInline,\n\t\tNormalBox1,\n\t\tNormalBox2,\n\t\tSelectListSingle,\n\t\tScratchPadUpdate\n\t]\n})\n\nexport class FormCreatorModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/HighlightDirective.html":{"url":"directives/HighlightDirective.html","title":"directive - HighlightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  HighlightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/highlight.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [highlight]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                highlightText\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        highlightText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/highlight.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Directive, ElementRef, Renderer, Input} from '@angular/core';\n\n@Directive({\n\tselector: '[highlight]'\n})\nexport class HighlightDirective {\n\n\t@Input('highlightText') text: string = '';\n\n\tconstructor(private el: ElementRef, private renderer: Renderer) {\n\t\tconsole.log(\"Highlighting!\");\n\t\tthis.el.nativeElement.textContent = 'foo';\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoricalTrendsComponent.html":{"url":"components/HistoricalTrendsComponent.html","title":"component - HistoricalTrendsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoricalTrendsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/historicalTrends/historicalTrends.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                historicalTrends\n            \n\n\n\n\n            \n                templateUrl\n                ./historicalTrends.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartSize\n                            \n                            \n                                    Private\n                                maxDate\n                            \n                            \n                                menu\n                            \n                            \n                                    Private\n                                minDate\n                            \n                            \n                                mouseEvent\n                            \n                            \n                                mouseSubscription\n                            \n                            \n                                    Private\n                                patient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onDataPointSelect\n                            \n                            \n                                resetDateRange\n                            \n                            \n                                setDateRange\n                            \n                            \n                                setDateRangeMonths\n                            \n                            \n                                setDateRangeYears\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trendsService: HistoricalTrendsService, observationService: ObservationService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDataPointSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonDataPointSelect(chartEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartEvent\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nresetDateRange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRange\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRange(form)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeMonths\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeMonths(months)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    months\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDateRangeYears\n                        \n                        \n                    \n                \n            \n            \n                \nsetDateRangeYears(years)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    years\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            chartSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [800, 200]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            patient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/historicalTrends/historicalTrends.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { fromEvent } from 'rxjs';\n\nimport * as moment from 'moment';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { PatientService } from '../../services/patient.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'historicalTrends',\n  templateUrl: './historicalTrends.html'\n})\nexport class HistoricalTrendsComponent {\n  // Width and height of displayed charts.\n  private chartSize: number[] = [800, 200];\n\n  // The minimum and maximum dates for the x-axis of the displayed charts.\n  private minDate: Date = null;\n  private maxDate: Date = null;\n\n  // Reference to the current patient.\n  private patient: Patient;\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  // Observable subscription to mouse movements.\n  mouseSubscription: any = null;\n\n  // Store the most recent mouse event to keep track of the mouse location.\n  mouseEvent: any = null;\n\n  constructor(\n    private trendsService: HistoricalTrendsService,\n    private observationService: ObservationService,\n    private patientService: PatientService\n  ) {\n      // Track the location of the mouse (needed for context menu).\n      this.mouseSubscription = fromEvent(document, 'mousemove')\n        .subscribe((event) => {\n          this.mouseEvent = event;\n      });\n\n      this.patientService.loadPatient().subscribe(patient => {\n        this.patient = patient;\n      })\n    }\n\n  // Can only access view child after the view has been initialized.\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n\n    // Add option to the context menu shown when clicking data points.\n    this.menu.addOption({\n      'icon': 'glyphicon-list-alt',\n      'text': 'Add to Side Bar',\n      'exec': function(condition) {\n        console.log(\"Add to Side Bar\");\n        // TODO: Implement Add to Side Bar functionality.\n      }.bind(this)\n    });\n  }\n\n  // Set specific (user selected) min and max dates for the x-axis of displayed charts.\n  setDateRange(form) {\n    // Do nothing if one of the dates is invalid.\n    if (!moment(form.minDate).isValid() || !moment(form.maxDate).isValid()) {\n      return;\n    }\n\n    this.minDate = new Date(form.minDate);\n    this.maxDate = new Date(form.maxDate);\n  }\n\n  // Reset the min and max dates for the x-axis of displayed charts (so all data is shown).\n  resetDateRange() {\n    this.minDate = null;\n    this.maxDate = null;\n\n    // Choose the earliest date of all charts, and the latest date of all charts.\n    for (let chart of this.trendsService.charts) {\n      let [chartMinDate, chartMaxDate] = this.trendsService.getDateRange(chart);\n\n      if (this.minDate == null || chartMinDate.getTime()  this.maxDate.getTime()) {\n        this.maxDate = chartMaxDate;\n      }\n    }\n  }\n\n  // Subtracts the given number of years from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeYears(years) {\n    this.minDate = moment().subtract(years, 'years').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Subtracts the given number of months from today's date, and sets the result\n  // as the minimum date on the x-axis of displayed charts.\n  setDateRangeMonths(months) {\n    this.minDate = moment().subtract(months, 'months').toDate();\n    this.maxDate = moment().toDate();\n  }\n\n  // Called when a data point is clicked on a chart.\n  onDataPointSelect(chartEvent) {\n    this.menu.show(null, this.mouseEvent);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n       Dashboard\n      Back\n    \n    \n      \n        \n          Conditions\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Findings List\n        \n        \n          \n            \n              \n            \n          \n        \n      \n      \n        \n          Medications\n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Fit All\n    25 Years\n    10 Years\n    5 Years\n    2 Years\n    1 Year\n    6 Months\n    3 Months\n    1 Month\n    \n       Specify\n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n    \n      Specify start and end dates\n        ×\n      \n      \n        \n          \n          \n          Submit\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Dashboard      Back                                Conditions                                                                                                                Findings List                                                                                                                Medications                                                                                                    Fit All    25 Years    10 Years    5 Years    2 Years    1 Year    6 Months    3 Months    1 Month           Specify                                Specify start and end dates        ×                                                  Submit                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HistoricalTrendsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoricalTrendsService.html":{"url":"injectables/HistoricalTrendsService.html","title":"injectable - HistoricalTrendsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoricalTrendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/historicalTrends.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                charts\n                            \n                            \n                                chartsMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMedicationChart\n                            \n                            \n                                    Public\n                                addObservationChart\n                            \n                            \n                                    Public\n                                getDateRange\n                            \n                            \n                                    Private\n                                getValueRange\n                            \n                            \n                                    Public\n                                removeChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMedicationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMedicationChart(medication: Medication)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addObservationChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addObservationChart(chartName, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDateRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDateRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getValueRange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValueRange(chart: Chart)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chart\n                                    \n                                                Chart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeChart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeChart(chartName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/historicalTrends.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            charts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartsMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/historicalTrends.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Chart } from '../models/chart.model';\nimport { Medication } from '../models/medication.model';\n\n@Injectable()\nexport class HistoricalTrendsService {\n  // Maps the name of a chart to the chart object itself.\n  chartsMap: Map = new Map();\n  \n  // Store all the charts currently being displayed.\n  charts: Array = [];\n\n  constructor() { }\n\n  // Add a new chart displaying a specific observation in the trends tool.\n  public addObservationChart(chartName, data) {\n    // A chart already exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      return;\n    }\n\n    if (data == null || data.length == 0) {\n      // Avoid creating an empty chart.\n      return;\n    }\n\n    let chart = new Chart();\n\n    // Get the title associated with the data point.\n    chart.title = data[0].code['text'];\n\n    for (let point of data) {\n      // Skip data points without a numeric value.\n      if (!point.valueQuantity || !point.valueQuantity['value']) {\n        continue;\n      }\n\n      // Add the data point to the chart.\n      chart.data.push({\n        name: new Date(point.relativeDateTime),\n        value: point.valueQuantity['value']\n      });\n    }\n\n    // Sort data points in order of date of occurrence.\n    chart.data = chart.data.sort((p1, p2) => p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    // Set the min and max y-axis values for the chart, providing a small buffer\n    // of extra space.\n    let [min, max] = this.getValueRange(chart);\n    let buffer = (max - min) * 0.2;\n\n    chart.yScaleMin = min - buffer;\n    chart.yScaleMax = max + buffer;\n\n    // Add the normal range values for the chart (displayed as horizontal \"reference\" lines).\n    chart.normalValues = [\n      {\n        name: \"Low\",\n        value: min // TODO: These shouldn't be hardcoded.\n      },\n      {\n        name: \"High\",\n        value: max // TODO: These shouldn't be hardcoded.\n      }\n    ];\n\n    // Add the newly created chart to the list of charts.\n    this.chartsMap.set(chartName, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  public addMedicationChart(medication: Medication) {\n    // A chart already exists for the given medication.\n    if (this.chartsMap.has(medication.name)) {\n      return;\n    }\n\n    let chart = new Chart();\n    chart.title = medication.name + ' (' + medication.dosageUnits + ')';\n\n    // Add every period the medication was taken to the chart.\n    for (let i = 0; i  0 ? medication.periods[i - 1] : null;\n      let next = i  p1.name - p2.name);\n\n    // Store the data points in the format expected by NGX-Charts for line charts.\n    chart.lineChartData = [{\n      name: chart.title,\n      series: chart.data\n    }];\n\n    this.chartsMap.set(medication.name, chart);\n    this.charts = Array.from(this.chartsMap.values());\n  }\n\n  // Remove the chart with the given name from the trends tool.\n  public removeChart(chartName) {\n    // First check if a chart exists with the given name.\n    if (this.chartsMap.has(chartName)) {\n      this.chartsMap.delete(chartName);\n      this.charts = Array.from(this.chartsMap.values());\n    }\n  }\n\n  // Get the smallest and largest values from a given chart.\n  private getValueRange(chart: Chart) {\n    // If the data provided is empty, return [0, 0].\n    if (!chart.data || chart.data.length == 0) {\n      return [0, 0];\n    }\n\n    let min = chart.data[0].value;\n    let max = chart.data[0].value;\n\n    for (let point of chart.data) {\n      min = Math.min(min, point.value);\n      max = Math.max(max, point.value);\n    }\n\n    return [min, max];\n  }\n\n  // Get the earliest and latest dates associated with any point in a chart.\n  public getDateRange(chart: Chart) {\n    // If the data provided is empty, return today's date.\n    if (!chart.data || chart.data.length == 0) {\n      return [new Date(), new Date()];\n    }\n    \n    let minDate: Date = chart.data[0].name;\n    let maxDate: Date = chart.data[0].name;\n\n    for (let point of chart.data) {\n      if (point.name.getTime()  maxDate.getTime()) {\n        maxDate = point.name;\n      }\n    }\n\n    return [minDate, maxDate];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        High-level component that wraps the components showing \npatient information, the toolbar, the timeline, and the \ntriple list (conditions, observations, and care plans).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                home\n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectPatientById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, patientService: PatientService, cookieService: CookieService, smartService: SmartService, compiler: Compiler)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartService\n                                                  \n                                                        \n                                                                        SmartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compiler\n                                                  \n                                                        \n                                                                        Compiler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectPatientById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectPatientById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:50\n                \n            \n\n\n            \n                \n                    Select a patient to display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the selected patient.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Patient\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/home/home.component.ts:21\n                            \n                        \n\n                \n                    \n                        The patient that is being displayed. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Compiler } from '@angular/core';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport { PatientService } from '../../services/patient.service';\nimport { SmartService } from '../../services/smart.service';\nimport { FhirService } from '../../services/fhir.service';\n\nimport { Patient } from '../../models/patient.model';\n\n/**\n * High-level component that wraps the components showing \n * patient information, the toolbar, the timeline, and the \n * triple list (conditions, observations, and care plans).\n */\n@Component({\n    selector: 'home',\n    templateUrl: './home.html'\n})\nexport class HomeComponent {\n    /** The patient that is being displayed. */\n    selected: Patient = null;\n\n    constructor(\n        private fhirService: FhirService,\n        private patientService: PatientService,\n        private cookieService: CookieService,\n        private smartService: SmartService,\n        private compiler: Compiler\n    ) {\n        this.compiler.clearCache();\n        this.fhirService.setUrl(this.cookieService.get('fhirBaseUrl'));\n\n        // Retrieve patient data from sandbox.\n        if (this.fhirService.token) {\n            // Access token is already available.\n            this.selectPatientById(this.patientService.patientId);\n        } else {\n            // Retrieve the access token and patient.\n            this.smartService.authenticate().subscribe(data => {\n                this.fhirService.setToken(data['access_token']);\n                this.selectPatientById(data['patient']);\n            });\n        }\n    }\n\n    /**\n     * Select a patient to display.\n     * @param id The id of the selected patient.\n     */\n    public selectPatientById(id: string) {\n        this.patientService.setPatientId(id);\n        this.patientService.loadPatient().subscribe(patient => {\n            this.selected = patient;\n        });\n    }\n}\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoverBoxComponent.html":{"url":"components/HoverBoxComponent.html","title":"component - HoverBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HoverBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hoverBox/hoverBox.component.ts\n\n\n    \n        Description\n    \n    \n        A component for displaying a hover box containing \ncustom information. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hoverBox\n            \n\n\n\n\n            \n                templateUrl\n                ./hoverBox.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DISPLAY_DELAY\n                            \n                            \n                                items\n                            \n                            \n                                left\n                            \n                            \n                                leftOffset\n                            \n                            \n                                timeoutHandle\n                            \n                            \n                                top\n                            \n                            \n                                topOffset\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Private\n                                isDate\n                            \n                            \n                                    Private\n                                isMonth\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hoverBox/hoverBox.component.ts:27\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hide(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:69\n                \n            \n\n\n            \n                \n                    Hide the hover box.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDate(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:89\n                \n            \n\n\n            \n                \n                    Check whether x is a date to display it in a custom \nformat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isMonth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMonth(x)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:97\n                \n            \n\n\n            \n                \n                    Check whether x is a month to display it in a custom \nformat.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(items: Array, event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/hoverBox/hoverBox.component.ts:37\n                \n            \n\n\n            \n                \n                    Show the hover box with multiple items.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The items to display in the hover box.\n\n                                    \n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The click event that triggered showing the hover box.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DISPLAY_DELAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:27\n                            \n                        \n\n                \n                    \n                        Time (in ms) following a hover before the hover box appears. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:13\n                            \n                        \n\n                \n                    \n                        The data passed into the hover box from wherever it was triggered. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeoutHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:24\n                            \n                        \n\n                \n                    \n                        Used to track whether the hover box is waiting to be shown. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topOffset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 18\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/hoverBox/hoverBox.component.ts:16\n                            \n                        \n\n                \n                    \n                        Whether the hover box is currently visible or not. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable } from '@angular/core';\n\n/**\n * A component for displaying a hover box containing \n * custom information. \n */\n@Component({\n  selector: 'hoverBox',\n  templateUrl: './hoverBox.html'\n})\nexport class HoverBoxComponent {\n  /** The data passed into the hover box from wherever it was triggered. */\n  items: Array = null;\n\n  /** Whether the hover box is currently visible or not. */\n  visible: boolean = false;\n\n  top: string = '0px';\n  left: string = '0px';\n  topOffset: number = 18;\n  leftOffset: number = 18;\n\n  /** Used to track whether the hover box is waiting to be shown. */\n  timeoutHandle: any = null;\n\n  /** Time (in ms) following a hover before the hover box appears. */\n  DISPLAY_DELAY: number = 200;\n\n  constructor() { }\n\n  /**\n   * Show the hover box with multiple items.\n   * \n   * @param items The items to display in the hover box.\n   * @param event The click event that triggered showing the hover box.\n   */\n  public show(items: Array, event) {\n    // The hover box is already queued to display, no need to display again.\n    if (this.timeoutHandle != null) {\n      return;\n    }\n\n    this.timeoutHandle = setTimeout(() => {\n      this.items = items;\n\n      // Set the location of the hover box to where the mouse is.\n      var topOffset = 0;\n      var leftOffset = 0;\n      // Code used to test moving the hover box away from the edge of the screen. \n      // TODO: do not hardcode pixels, find information of the pixel box\n       \n      if (window.innerWidth - event.pageX \n    \n\n    \n        \n\n  \n    \n      \n        {{item}}\n        &emsp; &emsp; &emsp; &emsp; &emsp; &emsp; &emsp;\n        \n      \n      {{item}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item}}                                         {{item}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'HoverBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HumanizeBytesPipe.html":{"url":"pipes/HumanizeBytesPipe.html","title":"pipe - HumanizeBytesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HumanizeBytesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/humanizeBytes.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        humanizeBytes\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doIt\n                        \n                        \n                    \n                \n            \n            \n                \ndoIt(n)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string, args: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/humanizeBytes.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'humanizeBytes'\n})\nexport class HumanizeBytesPipe implements PipeTransform {\n\n    transform(value: string, args: string[]) {\n        return this.doIt(parseInt(value));\n    }\n\n    doIt(n): string {\n        if (n  (1 / Math.pow(1024, exp - 1))) ? result.toFixed(2) : result.toFixed(0);\n        return readable + si[exp - 1];\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Link.html":{"url":"classes/Link.html","title":"class - Link","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Link\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/bundle.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                relation\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/bundle.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Bundle {\n\tentry: Array;\n\tlink: Array;\n}\n\nexport class Link {\n\trelation: string;\n\turl: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingAnimation.html":{"url":"components/LoadingAnimation.html","title":"component - LoadingAnimation","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingAnimation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loadingAnimation/loadingAnimation.component.ts\n\n\n    \n        Description\n    \n    \n        A simple component displaying a loading animation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                loadingAnimation\n            \n\n\n\n\n            \n                templateUrl\n                ./loadingAnimation.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loadingAnimation/loadingAnimation.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * A simple component displaying a loading animation.\n */\n@Component({\n  selector: 'loadingAnimation',\n  templateUrl: './loadingAnimation.html'\n})\nexport class LoadingAnimation {\n  constructor() { }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingAnimation'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapService.html":{"url":"injectables/MapService.html","title":"injectable - MapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/map.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                STATIC_MAPPINGS\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            STATIC_MAPPINGS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/map.service.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MapService {\n    public static STATIC_MAPPINGS = {\n        // \"90708001\": [\"8480-6\", \"55284-4\"],\n        // \"44054006\": [\"8480-6\", \"55284-4\", \"8462-4\"],\n        \"90708001\": [\"8480-6\", \"55284-4\"],\n        \"44054006\": [\"8480-6\", \"2075-0\", \"8462-4\"],\n        \"249288007\": [\"72166-2\", \"26511-6\", \"28542-9\", \"10839-9\"],\n        \"185903001\": [\"718-7\", \"30385-9\"],\n        \"54150009\": [\"2345-7\", \"26478-8\", \"17861-6\", \"26464-8\", \"13969-1\"],\n        \"80394007\": [\"26464-8\", \"26515-7\", \"2951-2\"],\n        \"32398004\": [\"789-8\", \"2823-3\", \"2345-7\", \"26450-7\", \"2157-6\"],\n        \"89765005\": [\"26464-8\", \"26450-7\", \"785-6\"],\n        \"267432004\": [\"2160-0\", \"786-4\", \"718-7\", \"30428-7\", \"10839-9\"],\n        \"102588006\": [\"26478-8\", \"2345-7\"],\n        \"266998003\": [\"785-6\", \"26450-7\", \"26511-6\", \"26515-7\"],\n        \"38341003\": [\"718-7\", \"26478-8\", \"786-4\", \"2345-7\"],\n        \"29857009\": [\"26464-8\", \"30428-7\", \"13969-1\", \"3094-0\"],\n        \"442311008\": [\"32623-1\", \"777-3\"]\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medication.html":{"url":"classes/Medication.html","title":"class - Medication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/medication.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dosageUnits\n                            \n                            \n                                name\n                            \n                            \n                                periods\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, dosageUnits: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/medication.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dosageUnits\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dosageUnits\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            periods\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/medication.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Medication {\n    name: string;\n    dosageUnits: string;\n\n    periods: {\n        start: Date;\n        end: Date;\n        dosage: number;\n    }[];\n    \n    constructor(name: string, dosageUnits: string) {\n        this.periods = [];\n        this.name = name;\n        this.dosageUnits = dosageUnits;\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MedicationsComponent.html":{"url":"components/MedicationsComponent.html","title":"component - MedicationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MedicationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/medications/medications.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                medications\n            \n\n\n\n\n            \n                templateUrl\n                ./medications.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                medications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(carePlanService: CarePlanService, historicalTrendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        carePlanService\n                                                  \n                                                        \n                                                                        CarePlanService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historicalTrendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck(medication: Medication, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    medication\n                                    \n                                                Medication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/medications/medications.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/medications/medications.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { CarePlanService } from '../../services/carePlan.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Medication } from '../../models/medication.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'medications',\n  templateUrl: './medications.html'\n})\nexport class MedicationsComponent {\n  medications: Array;\n  @Input() patient: Patient;\n\n  constructor(\n    private carePlanService: CarePlanService,\n    private historicalTrendsService: HistoricalTrendsService\n  ) { }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.carePlanService.loadMedications(this.patient).subscribe(medications => {\n        this.medications = medications;\n        console.log('Loaded ' + this.medications.length + ' medications.');\n      })\n    }\n  }\n\n  check(medication: Medication, event: any) {\n    // Check whether care plan was checked or unchecked.\n    if (event.target.checked) {\n      this.historicalTrendsService.addMedicationChart(medication);\n    } else {\n      this.historicalTrendsService.removeChart(medication.name);\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    \n      \n      Name\n    \n  \n  \n     \n      \n        \n      \n      {{m.name}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Name                                       {{m.name}}      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'MedicationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox1.html":{"url":"components/NormalBox1.html","title":"component - NormalBox1","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox1\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-1.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-1\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-1.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-1.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-1.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-1\",\n\ttemplateUrl: \"./normal-box-1.html\"\n})\n\nexport class NormalBox1{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox1'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NormalBox2.html":{"url":"components/NormalBox2.html","title":"component - NormalBox2","body":"\n                   \n\n\n\n\n\n  Components\n  NormalBox2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/normal-box-2.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                normal-box-2\n            \n\n\n\n\n            \n                templateUrl\n                ./normal-box-2.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                boxData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/normal-box-2.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            boxData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/normal-box-2.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"normal-box-2\",\n\ttemplateUrl: \"./normal-box-2.html\"\n})\n\nexport class NormalBox2{\n\t@Input() inputData: any;\n\tboxData: String;\n\t\n\tgetData(): any {\n\t\tif (this.boxData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.boxData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'NormalBox2'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Observation.html":{"url":"classes/Observation.html","title":"class - Observation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Observation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/observation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Associable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                grouping\n                            \n                            \n                                id\n                            \n                            \n                                referenceRange\n                            \n                            \n                                relativeDateTime\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCode\n                            \n                            \n                                    Static\n                                getText\n                            \n                            \n                                    Static\n                                getUnits\n                            \n                            \n                                    Static\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grouping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            referenceRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relativeDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/observation.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getText(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnits(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(o: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/observation.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    o\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Associable } from './associable.model';\n\nexport class Observation implements Associable {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\trelativeDateTime: string;\n\tcategory: Array;\n\tcode: Array;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n\n\t// This should be populated with the normal ranges, but isn't for whatever reason.\n\treferenceRange: Object;\n\tgrouping: string;\n\n\t// Get the value of an observation\n\tstatic getValue(o: Observation) {\n\t\treturn o['valueQuantity']['value'];\n\t}\n\n\t// Get the units for an observation\n\tstatic getUnits(o: Observation) {\n\t\treturn o['valueQuantity']['unit'];\n\t}\n\n\t// Get the text for an observation\n\tstatic getText(o: Observation) {\n\t\t// If the text is empty, use the display.\n\t\treturn o['code']['text'] || o['code']['coding'][0]['display'];\n\t}\n\n\tgetCode() {\n\t\treturn this['code']['coding'][0]['code'];\n\t}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationRecursiveChart.html":{"url":"components/ObservationRecursiveChart.html","title":"component - ObservationRecursiveChart","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationRecursiveChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationRecursionChart\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsChart.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                getData\n                            \n                            \n                                getLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                level\n                            \n                            \n                                obs\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observationService: ObservationService, trendsService: HistoricalTrendsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        obs\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checked\n                        \n                        \n                    \n                \n            \n            \n                \nchecked(changedObs: any, event, position: number, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changedObs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLevel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLevel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationRecursionChart/observationRecursionChart.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ObservationService } from '../../services/observation.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\n\nimport { Observation } from '../../models/observation.model';\n\n@Component({\n  selector: 'observationRecursionChart',\n  templateUrl: './observationsChart.html'\n})\nexport class ObservationRecursiveChart {\n  @Input() obs: Array;\n  @Input() level: number;\n  lastIndex: number;\n\n  constructor(private observationService: ObservationService,\n    private trendsService: HistoricalTrendsService) { }\n\n  getData(): Array {\n    return this.obs;\n  }\n\n  getLevel(): number {\n    return this.level;\n  }\n\n  // Called when an observation is either checked or unchecked.\n  checked(changedObs: any, event, position: number, data) {\n    changedObs.isSelected = !changedObs.isSelected;\n\n    if (event.shiftKey) {\n      let upper: number, lower: number;\n      if (position \n    \n\n    \n        \n\n  \n    {{cat.display}} ({{cat.count}})\n  \n  \n    \n      \n        \n          \n            \n          \n          {{o.name}}\n          {{o.date | amTimeAgo}}\n        \n      \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{cat.display}} ({{cat.count}})                                                                {{o.name}}          {{o.date | amTimeAgo}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationRecursiveChart'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObservationService.html":{"url":"injectables/ObservationService.html","title":"injectable - ObservationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ObservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/observation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categorizedObservations\n                            \n                            \n                                count\n                            \n                            \n                                filterSet\n                            \n                            \n                                groupMap\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                uniqueObservations\n                            \n                            \n                                uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractNewObservations\n                            \n                            \n                                getCheckedObservations\n                            \n                            \n                                getGrouping\n                            \n                            \n                                getScratchPadObservations\n                            \n                            \n                                handleObservationBundle\n                            \n                            \n                                loadObservationsPage\n                            \n                            \n                                onLoadComplete\n                            \n                            \n                                populateCategories\n                            \n                            \n                                scaleDates\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, http: HttpClient, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            extractNewObservations\n                        \n                        \n                    \n                \n            \n            \n                \nextractNewObservations(observations: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observations\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGrouping\n                        \n                        \n                    \n                \n            \n            \n                \ngetGrouping(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:206\n                \n            \n\n\n            \n                \n                    Given a certain observation ID, returns the position mapping of that\n ID contained within the groupMap\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getScratchPadObservations\n                        \n                        \n                    \n                \n            \n            \n                \ngetScratchPadObservations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleObservationBundle\n                        \n                        \n                    \n                \n            \n            \n                \nhandleObservationBundle(bundle: Bundle)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bundle\n                                    \n                                                Bundle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadObservationsPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadObservationsPage(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoadComplete\n                        \n                        \n                    \n                \n            \n            \n                \nonLoadComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateCategories\n                        \n                        \n                    \n                \n            \n            \n                \npopulateCategories(categories: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDates\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:260\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/observation.service.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categorizedObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Set()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uniqueObservationsLoadFinished\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/observation.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport * as moment from 'moment';\n\nimport { FhirService } from './fhir.service';\nimport { ScratchPadService } from '../services/scratchPad.service';\n\nimport { Observation } from '../models/observation.model';\nimport { Bundle } from '../models/bundle.model';\n\n@Injectable()\nexport class ObservationService {\n  uniqueObservations: Array = [];\n  categorizedObservations: any;\n  groupMap: { [x: string]: Array };\n  count = 0;\n  observations: Array = [];\n  selected: Array = [];\n  uniqueObservationsLoadFinished = false;\n\n  filterSet = new Set();\n\n  constructor(\n    private fhirService: FhirService,\n    private http: HttpClient,\n    private scratchPadService: ScratchPadService\n  ) {\n    // these are the codes of the observations; \n    // groupList is used to categorize where in categorizedObservations this is stored\n    this.groupMap = {\n      \"1-1\": [\"8302-2\", \"3141-9\", \"2710-2\"],\n      \"1-2\": [],\n      \"1-3\": [],\n      \"1-4\": [\"39156-5\", \"8310-5\"],\n      \"1-5\": [],\n      \"2-1\": [\"2571-8\"],\n      \"2-2-1\": [\"789-8\", \"3094-0\", \"72166-2\"],\n      \"2-2-2\": [],\n      \"2-2-3\": [\"2823-3\"]\n    };\n\n    // categories of the observations; found using groupList\n    this.categorizedObservations = {\n      \"categories\": [\n        {\n          \"display\": \"Vitals\",\n          \"id\": \"1\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Weight\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-1\"\n            },\n            {\n              \"display\": \"Blood Pressure\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-2\"\n            },\n            {\n              \"display\": \"Heart Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-3\"\n            },\n            {\n              \"display\": \"Respiration Rate\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-4\"\n            },\n            {\n              \"display\": \"Temperature\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"1-5\"\n            }\n          ]\n        },\n\n        {\n          \"display\": \"Patient History / Review of Systems\",\n          \"id\": \"2\",\n          \"count\": 0,\n          \"child\": [\n            {\n              \"display\": \"Constitutional Symptoms\",\n              \"data\": [],\n              \"count\": 0,\n              \"id\": \"2-1\"\n            },\n            {\n              \"display\": \"Body Systems\",\n              \"count\": 0,\n              \"id\": \"2-2\",\n              \"child\": [\n                {\n                  \"display\": \"Eyes\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-1\"\n                },\n                {\n                  \"display\": \"Ears, Nose, Mouth and Throat (ENT)\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-2\"\n                },\n                {\n                  \"display\": \"Cardiovascular\",\n                  \"data\": [],\n                  \"count\": 0,\n                  \"id\": \"2-2-3\"\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"display\": \"Other\",\n          \"id\": \"3\",\n          \"count\": 0,\n          \"data\": []\n        }\n      ]\n    };\n  }\n\n  loadObservationsPage(url: string): void {\n    this.http.get(url, this.fhirService.getRequestOptions())\n      .subscribe((bundle) => {\n        this.handleObservationBundle(bundle);\n      });\n  }\n\n  handleObservationBundle(bundle: Bundle): void {\n    if (bundle) {\n      let nextObservations = >bundle.entry.map(e => e.resource);\n      this.observations = this.observations.concat(nextObservations);\n      this.extractNewObservations(nextObservations);\n\n      let nextLink = bundle.link.find(link => link.relation == 'next');\n      if (nextLink) {\n        this.loadObservationsPage(nextLink.url);\n      } else {\n        this.onLoadComplete();\n      }\n    } else {\n      console.log(\"No observations for patient.\");\n      this.observations = new Array();\n    }\n  }\n\n  onLoadComplete() {\n    this.observations = this.observations.reverse();\n    console.log(\"Loaded \" + this.uniqueObservations.length + \" observations.\");\n    this.uniqueObservationsLoadFinished = true;\n\n    this.observations.sort((n1, n2) => {\n      return n1.effectiveDateTime  this.scratchPadService.checkedMapObservations.get(o));\n  }\n\n  scaleDates(): void {\n    let RECENCY_MULTIPLIER = 0.80;\n    let timeSinceObservation = new Date().getTime() - new Date(this.observations[0].effectiveDateTime).getTime();\n    let scaledTimeSinceObservation = Math.floor(RECENCY_MULTIPLIER * timeSinceObservation);\n\n    for (let ob of this.observations) {\n      let relativeDateTime = new Date(ob.effectiveDateTime).getTime() + scaledTimeSinceObservation;\n      ob.relativeDateTime = moment(relativeDateTime).toISOString();\n    }\n  }\n\n  extractNewObservations(observations: Array): void {\n    for (let observation of observations) {\n      let code: string = observation['code']['coding'][0]['code'];\n      if (!this.filterSet.has(code)) {\n        observation.grouping = this.getGrouping(code);\n        this.uniqueObservations.push(observation);\n\n        this.filterSet.add(code);\n      }\n    }\n  }\n\n  /**\n  * Given a certain observation ID, returns the position mapping of that\n   * ID contained within the groupMap\n   */\n  getGrouping(code: string): string {\n    for (let x in this.groupMap) {\n      if (this.groupMap[x].indexOf(code) !== -1) {\n        return x;\n      }\n    }\n\n    let OTHER_GROUPING = '3';\n    return OTHER_GROUPING;\n  }\n\n  populateCategories(categories: Array): number {\n    let totalCount = 0;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsComponent.html":{"url":"components/ObservationsComponent.html","title":"component - ObservationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observations/observations.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseColumn\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observations\n            \n\n\n\n\n            \n                templateUrl\n                ./observations.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mappings\n                            \n                            \n                                observations\n                            \n                            \n                                selected\n                            \n                            \n                                subscription\n                            \n                            \n                                test\n                            \n                            \n                                columnHeight\n                            \n                            \n                                columnState\n                            \n                            \n                                ColumnType\n                            \n                            \n                                HEIGHT_OFFSET\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                handleResize\n                            \n                            \n                                showDefault\n                            \n                            \n                                showScratchPad\n                            \n                            \n                                updateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fhirService: FhirService, observationService: ObservationService, mapService: MapService, doctorService: DoctorService, trendsService: HistoricalTrendsService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapService\n                                                  \n                                                        \n                                                                        MapService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trendsService\n                                                  \n                                                        \n                                                                        HistoricalTrendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observations/observations.component.ts:60\n                \n            \n\n\n            \n                \n                    Description: This method is called whenever the patient data is passed as input to the application. Handles\nthe initial subscription to the observation service and continual loading of the data links.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleResize\n                        \n                        \n                    \n                \n            \n            \n                \nhandleResize(event)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:32\n\n                \n            \n\n\n            \n                \n                    Update the height of the column.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Resize event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showDefault\n                        \n                        \n                    \n                \n            \n            \n                \nshowDefault()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:39\n\n                \n            \n\n\n            \n                \n                    Show default view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nshowScratchPad()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:44\n\n                \n            \n\n\n            \n                \n                    Show scratch pad view. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateService\n                        \n                        \n                    \n                \n            \n            \n                \nupdateService()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseColumn\n\n                \n            \n            \n                \n                        Defined in         BaseColumn:49\n\n                \n            \n\n\n            \n                \n                    Update the service. To be overriden in the child class.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:30\n                            \n                        \n\n                \n                    \n                        For column switching \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observations/observations.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:52\n\n                            \n                        \n\n                \n                    \n                        The current height (in pixels) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"default\"\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:58\n\n                            \n                        \n\n                \n                    \n                        The current state (ie, scratch pad) of the column. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ColumnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ColumnType\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:14\n\n                            \n                        \n\n                \n                    \n                        Makes the ColumnType enum accessible from the template.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEIGHT_OFFSET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 180\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseColumn\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseColumn:55\n\n                            \n                        \n\n                \n                    \n                        220px is an approximate value that seems to work for now. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { FhirService } from '../../services/fhir.service';\nimport { ObservationService } from '../../services/observation.service';\nimport { MapService } from '../../services/map.service';\nimport { DoctorService } from '../../services/doctor.service';\nimport { HistoricalTrendsService } from '../../services/historicalTrends.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\n\nimport { Observation } from '../../models/observation.model';\nimport { ColumnType } from '../../utils/columnType.enum';\nimport { Patient } from '../../models/patient.model';\nimport { BaseColumn } from '../baseColumn';\n\n@Component({\n  selector: 'observations',\n  templateUrl: './observations.html'\n})\nexport class ObservationsComponent extends BaseColumn{\n  selected: Observation;\n  test: Observation;\n  observations: Array = [];\n\n  @Input() patient: Patient;\n\n  mappings: { [key: string]: Array } = {};\n\n  /** For column switching */\n  subscription: Subscription;\n\n  constructor(\n    private fhirService: FhirService,\n    private observationService: ObservationService,\n    private mapService: MapService,\n    private doctorService: DoctorService,\n    private trendsService: HistoricalTrendsService,\n    private scratchPadService: ScratchPadService\n  ) {\n      super();\n      this.mappings = MapService.STATIC_MAPPINGS;\n\n      // subscribe to scratch pad service for column switching\n      this.subscription = scratchPadService.stateChange$.subscribe(\n        sPad => {\n          if (sPad)\n            this.columnState = \"scratchpad\";\n          else\n            this.columnState = \"default\";\n        }\n      );\n  }\n\n  // ===================== FOR DATA RETRIEVAL FROM OBSERVATIONS SERVICE ============\n\n  /**\n   * Description: This method is called whenever the patient data is passed as input to the application. Handles\n   * the initial subscription to the observation service and continual loading of the data links.\n   **/\n  ngOnChanges() {\n    if (this.patient) { //If the patient is loaded\n      let url = this.fhirService.getUrl() + \"/Observation?patient=\" + this.patient.id;\n      this.observationService.loadObservationsPage(url);    \n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      Observations\n      \n        \n      \n    \n  \n  \n    \n      \n        \n        \n      \n      \n        \n      \n    \n    \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Observations                                                                                                      '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObservationsDisplay.html":{"url":"components/ObservationsDisplay.html","title":"component - ObservationsDisplay","body":"\n                   \n\n\n\n\n\n  Components\n  ObservationsDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/observationsDisplay/observationsDisplay.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying observations within \nthe observations list of the triple list.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                observationsDisplay\n            \n\n\n\n\n            \n                templateUrl\n                ./observationsDisplay.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAllChecked\n                            \n                            \n                                menu\n                            \n                            \n                                Observation\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllObservations\n                            \n                            \n                                checkObservation\n                            \n                            \n                                expand\n                            \n                            \n                                isObservationAssociated\n                            \n                            \n                                isObservationChecked\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectObservation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                observations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                observationSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, scratchPadService: ScratchPadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        observations\n                    \n                \n                \n                    \n                        Type :         Array\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:43\n                            \n                        \n                \n                    \n                        The array of observations to be displayed.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        observationSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:48\n                            \n                        \n                \n                    \n                        Emit an event whenever an observation is selected.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkAllObservations\n                        \n                        \n                    \n                \n            \n            \n                \ncheckAllObservations(checked)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:129\n                \n            \n\n\n            \n                \n                    Either check or uncheck all observations.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    checked\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to check or uncheck.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkObservation\n                        \n                        \n                    \n                \n            \n            \n                \ncheckObservation(checked: boolean, checkedObservation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:121\n                \n            \n\n\n            \n                \n                    Change the state of an observation to either checked or unchecked.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    checked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether to set to checked or unchecked.\n\n                                    \n                                \n                                \n                                    checkedObservation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The observation to adjust the state of.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expand\n                        \n                        \n                    \n                \n            \n            \n                \nexpand(parent: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationAssociated\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationAssociated(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:140\n                \n            \n\n\n            \n                \n                    Determine whether an observation is currently associated,\nbased on the associations tool.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isObservationChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisObservationChecked(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:112\n                \n            \n\n\n            \n                \n                    Determine whether an observation is currently checked.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:61\n                \n            \n\n\n            \n                \n                    Setup the context menu with options. We can only access the view child after \nthe view has been initialized.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectObservation\n                        \n                        \n                    \n                \n            \n            \n                \nselectObservation(observation: Observation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:100\n                \n            \n\n\n            \n                \n                    Handle the selection of an observation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    observation\n                                    \n                                                Observation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The selected observation.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllChecked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:38\n                            \n                        \n\n                \n                    \n                        Whether the checkbox for checking all observations are currently checked.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextMenuComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('menu', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Observation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Observation\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:28\n                            \n                        \n\n                \n                    \n                        Trick to allow access to static methods of Observation class in pug template\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/observationsDisplay/observationsDisplay.component.ts:33\n                            \n                        \n\n                \n                    \n                        The currently selected observation in the list.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\n\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { ContextMenuComponent } from '../contextMenu/contextMenu.component';\n\nimport { Observation } from '../../models/observation.model';\n\n/**\n * Component for displaying observations within \n * the observations list of the triple list.\n */\n@Component({\n  selector: 'observationsDisplay',\n  templateUrl: './observationsDisplay.html'\n})\nexport class ObservationsDisplay {\n  /**\n   * Trick to allow access to static methods of Observation class in pug template\n   */\n  Observation = Observation;\n\n  /**\n   * The currently selected observation in the list.\n   */\n  selected: Observation;\n\n  /**\n   * Whether the checkbox for checking all observations are currently checked.\n   */\n  isAllChecked : boolean = false;\n\n  /**\n   * The array of observations to be displayed.\n   */\n  @Input() observations: Array;\n  \n  /**\n   * Emit an event whenever an observation is selected.\n   */\n  @Output() observationSelected: EventEmitter = new EventEmitter();\n\n  @ViewChild('menu', { static: false }) menu: ContextMenuComponent;\n\n  constructor(\n    private associationService: AssociationService, \n    private scratchPadService: ScratchPadService\n  ) { }\n\n  /**\n   * Setup the context menu with options. We can only access the view child after \n   * the view has been initialized.\n   */\n  ngAfterViewInit() {\n    // NOTE: 'exec' functions must be bound to 'this' to access scratchPadService.\n    // This is a strange behavior with scoping in Typescript/Javascript.\n    \n    // Add options to the context menu shown when right clicking observations.\n    this.menu.addOption({\n      'icon': 'glyphicon-pencil',\n      'text': 'Add to Scratch Pad',\n      'exec': (obs => {\n        // Add every checked observation to the scratch pad\n        this.scratchPadService.checkedMapObservations.forEach((isChecked, observation) => {\n          if (isChecked) {\n            this.scratchPadService.addObservation(observation);\n          }\n        });\n      }).bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-stats',\n      'text': 'Add to Trend Tool',\n      'exec': (obs => {\n        console.log(obs);\n      }).bind(this)\n    });\n\n    this.menu.addOption({\n      'icon': 'glyphicon-random',\n      'text': 'Open Association Tool',\n      'exec': (obs => {\n        console.log(obs);\n      }).bind(this)\n    });\n  }\n\n  /**\n   * Handle the selection of an observation.\n   * @param observation The selected observation.\n   */\n  selectObservation(observation: Observation) {\n    this.selected = observation;\n    this.observationSelected.emit(this.selected);\n\n    for (let o of this.scratchPadService.totalObservations) {\n      o['selected'] = (o.id == this.selected.id);\n    }\n  }\n\n  /**\n   * Determine whether an observation is currently checked.\n   */\n  isObservationChecked(observation: Observation): boolean {\n    return this.scratchPadService.checkedMapObservations.get(observation) || false;\n  }\n\n  /**\n   * Change the state of an observation to either checked or unchecked.\n   * @param checked Whether to set to checked or unchecked.\n   * @param checkedObservation The observation to adjust the state of.\n   */\n  checkObservation(checked: boolean, checkedObservation: Observation) {\n    this.scratchPadService.checkObservation(checked, checkedObservation);\n  }\n  \n  /**\n   * Either check or uncheck all observations.\n   * @param checked Whether to check or uncheck.\n   */\n  checkAllObservations(checked){\n    this.isAllChecked = checked;\n    for (let c of this.observations){\n      this.scratchPadService.checkObservation(checked, c);\n    }\n  }\n\n  /**\n   * Determine whether an observation is currently associated,\n   * based on the associations tool.\n   */\n  isObservationAssociated(observation: Observation): boolean {\n    return this.associationService.associatedMapObservations.get(observation) || false;\n  }\n\n  expand(parent: string) {\n    /**\n    for (let c of this.conditions) {\n        if (c.parent == parent) {\n            c.isVisible = true;\n            c.parent = \"\";\n            c.isParent = false;\n        }\n    }\n    */\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        Observation\n        Value\n        Unit\n        Onset\n      \n    \n    \n      \n        \n          \n        \n        \n          \n            ...\n          \n          {{Observation.getText(o)}}\n          \n        \n        {{Observation.getValue(o)}}\n        {{Observation.getUnits(o)}}\n        {{o.relativeDateTime | amTimeAgo:true}}\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Observation        Value        Unit        Onset                                                                            ...                    {{Observation.getText(o)}}                          {{Observation.getValue(o)}}        {{Observation.getUnits(o)}}        {{o.relativeDateTime | amTimeAgo:true}}            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObservationsDisplay'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Patient.html":{"url":"classes/Patient.html","title":"class - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/patient.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                address\n                            \n                            \n                                birthDate\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                identifier\n                            \n                            \n                                mrn\n                            \n                            \n                                name\n                            \n                            \n                                telecom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mrn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            telecom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/patient.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Patient {\n\n    active: boolean;\n    id: string;\n    birthDate: string;\n    gender: string;\n    address: Array;\n    identifier: Array;\n    name: Array;\n    telecom: Array;\n    mrn: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PatientComponent.html":{"url":"components/PatientComponent.html","title":"component - PatientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PatientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/patient/patient.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                patient\n            \n\n\n\n\n            \n                templateUrl\n                ./patient.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                advancedSearch\n                            \n                            \n                                allergies\n                            \n                            \n                                allergy\n                            \n                            \n                                graphConfig\n                            \n                            \n                                hover\n                            \n                            \n                                hoverStyling\n                            \n                            \n                                reason\n                            \n                            \n                                selectedCondition\n                            \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                genderString\n                            \n                            \n                                    Private\n                                loadAllergies\n                            \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectCondition\n                            \n                            \n                                showAllergyHover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cookieService: CookieService, doctorService: DoctorService, homeComponent: HomeComponent, conditionService: ConditionService, encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        homeComponent\n                                                  \n                                                        \n                                                                        HomeComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genderString\n                        \n                        \n                    \n                \n            \n            \n                \ngenderString(patient: Patient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patient\n                                    \n                                                Patient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadAllergies\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllergies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCondition\n                        \n                        \n                    \n                \n            \n            \n                \nselectCondition(condition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAllergyHover\n                        \n                        \n                    \n                \n            \n            \n                \nshowAllergyHover(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/patient/patient.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            advancedSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hover', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverStyling\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reason\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCondition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Condition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Server\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/patient/patient.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Input, Output, ViewChild } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { EncounterService } from '../../services/encounter.service';\nimport { CookieService } from 'ngx-cookie-service';\n\nimport { HomeComponent } from '../../components/home/home.component';\nimport { HoverBoxComponent } from '../hoverBox/hoverBox.component';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\nimport { Server } from '../../models/server.model';\nimport { Condition } from '../../models/condition.model';\n\n@Injectable()\n@Component({\n  selector: 'patient',\n  templateUrl: './patient.html'\n})\nexport class PatientComponent {\n  @Input() patient: Patient;\n  server: Server;\n  selectedCondition: Condition;\n  advancedSearch = false;\n  graphConfig: any;\n\n  //allergy details\n  allergies: Array = [];\n  allergy: string = '';\n  hoverStyling: boolean = false;\n  reason: string = '';\n\n  @ViewChild('hover', { static: false }) hover: HoverBoxComponent;\n\n  constructor(\n    private cookieService: CookieService,\n    private doctorService: DoctorService,\n    private homeComponent: HomeComponent,\n    private conditionService: ConditionService,\n    private encounterService: EncounterService\n  ) {\n    this.graphConfig = JSON.parse(this.cookieService.get('graphConfig') || '{}');\n  }\n\n  genderString(patient: Patient) {\n    var s = 'Unknown';\n    switch (patient.gender) {\n      case 'female':\n        s = 'Female';\n        break;\n      case 'male':\n        s = 'Male';\n        break;\n    }\n    return s;\n  }\n\n  selectCondition(condition) {\n    this.selectedCondition = condition;\n  }\n\n  ngOnChanges() {\n    if (this.patient) {\n      this.loadAllergies();\n      this.loadEncounters();\n    }\n  }\n\n  private loadAllergies(): void {\n    this.conditionService.loadAllergies(this.patient).subscribe(allergies => {\n      if (allergies) {\n        //add allergy strings to allergies\n        this.allergies = allergies.map(allergy => allergy.code.text);\n\n        // Construct displayed allergy string\n        if (this.allergies.length == 0) {\n          this.allergy = \"None\";\n        } else if (this.allergies.length == 1) {\n          this.allergy = this.allergies[0];\n        } else {\n          this.allergy = \"Multiple...\";\n          this.hoverStyling = true;\n        }\n      }\n      else { //no allergies\n        this.allergy = \"None\";\n      }\n    });\n  }\n\n  private loadEncounters(): void {\n    // TODO: Display the reason for visit retrieved here onto the page.\n    this.encounterService.loadEncounters(this.patient).subscribe(res => {\n      // Cast the array of encounters to the proper model (Encounter).\n      let encounters = >res;\n\n      for (let enc of encounters) {\n        let reasonText = enc.getReason();\n\n        // Only print if reasonText is not null.\n        if (reasonText) {\n          this.reason = reasonText;\n        }\n      }\n    });\n  }\n\n  showAllergyHover(event) {\n    // Don't show hover box if there is only one allergy.\n    if (this.allergies.length > 1) {\n      this.hover.show(this.allergies, event);\n    }\n  }\n}\n\n    \n\n    \n        \n\n\t\n\t\t\n\t\t\n\t\n  \n    \n        \n          \n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{patient.name[0].given[0]}}\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t{{patient.name[0].family[0]}}\n\t\t\t\t\t\t\n            \n               {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}}, \n            \n\t\t\t\t\t\t\tDOB: \n\t\t\t\t\t\t\t{{patient.birthDate | amDateFormat:'MM/DD/YYYY'}} ({{-1 * (patient.birthDate | amDifference:today:'years':false)}}yr)\n\t\t\t\t\t\t\n\t\t  \n        \n  \n  \n    \n        \n          \n            \n\t\t\t\tAllergies:\n              {{allergy}}\n            \n            Reason for Visit: {{reason}}\n          \n        \n  \n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t                        \t\t\t\t\t\t\t\t\t\t\t\t\t{{patient.name[0].given[0]}}\t\t\t\t\t\t\t \t\t\t\t\t\t\t{{patient.name[0].family[0]}}\t\t\t\t\t\t                           {{patient.gender.charAt(0).toUpperCase()}}, MRN: {{patient.mrn}},             \t\t\t\t\t\t\tDOB: \t\t\t\t\t\t\t{{patient.birthDate | amDateFormat:\\'MM/DD/YYYY\\'}} ({{-1 * (patient.birthDate | amDifference:today:\\'years\\':false)}}yr)\t\t\t\t\t\t\t\t                                                \t\t\t\tAllergies:              {{allergy}}                        Reason for Visit: {{reason}}                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'PatientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                            \n                                    Public\n                                patientId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPatient\n                            \n                            \n                                setPatientId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, fhirService: FhirService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPatient\n                        \n                        \n                    \n                \n            \n            \n                \nloadPatient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPatientId\n                        \n                        \n                    \n                \n            \n            \n                \nsetPatientId(patientId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/patient.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/Patient'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            patientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/patient.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FhirService } from './fhir.service';\nimport { Patient } from '../models/patient.model';\n\n@Injectable()\nexport class PatientService {\n  private readonly path = '/Patient';\n\n  // The id of the currently set patient\n  public patientId: string;\n\n  constructor(\n    private http: HttpClient,\n    private fhirService: FhirService\n  ) { }\n\n  // Set the id of the patient\n  setPatientId(patientId) {\n    this.patientId = patientId;\n  }\n\n  // Retrieve the patient with the id previously set using setPatientId()\n  loadPatient(): Observable {\n    var url = this.fhirService.getUrl() + this.path + '/' + this.patientId;\n    let options = this.fhirService.getRequestOptions(true);\n\n    return this.http.get(url, options).pipe(map(res => {\n      let patient = res;\n\n      // Assign patient MRN\n      for (let id of res['identifier']) {\n        if (id.type && id.type.coding[0].code == \"MR\") {\n          patient.mrn = id.value;\n        }\n      }\n      return patient;\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScratchPadUpdate.html":{"url":"components/ScratchPadUpdate.html","title":"component - ScratchPadUpdate","body":"\n                   \n\n\n\n\n\n  Components\n  ScratchPadUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/scrachpad-update.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                scratchpad-update\n            \n\n\n\n\n            \n                templateUrl\n                ./scrachpad-update.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                onset\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                            \n                                onRadioChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRadioChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonRadioChanged(currStatus: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/scrachpad-update.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/scrachpad-update.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"scratchpad-update\",\n\ttemplateUrl: \"./scrachpad-update.html\"\n})\n\nexport class ScratchPadUpdate{\n\t@Input() inputData: any;\n\t\n\tdescription: string;\n\tstatus: string;\n\tonset: string;\n\t\n\tgetData(): any {\t\t\n\t\treturn {id: this.inputData.id, data: {description: this.description, status: this.status}};\n\t}\n\t\n\tonRadioChanged(currStatus: string): void {\n\t\tconsole.log(\"changing!!!\");\n\t\tthis.status = currStatus;\n\t}\n}\n    \n\n    \n        \n\n  {{inputData.data.name}} : {{inputData.data.status}}\n  \n    \n      \n    \n    \n      \n        \n          Active\n        \n        \n          Inactive\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{inputData.data.name}} : {{inputData.data.status}}                                            Active                          Inactive                    '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ScratchPadUpdate'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectListSingle.html":{"url":"components/SelectListSingle.html","title":"component - SelectListSingle","body":"\n                   \n\n\n\n\n\n  Components\n  SelectListSingle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/form_components/select-list-single.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                select-list-single\n            \n\n\n\n\n            \n                templateUrl\n                ./select-list-single.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                listData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getData\n                        \n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/form_components/select-list-single.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/form_components/select-list-single.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: \"select-list-single\",\n\ttemplateUrl: \"./select-list-single.html\"\n})\n\nexport class SelectListSingle{\n\t@Input() inputData: any;\n\tlistData: String;\n\t\n\tgetData(): any {\n\t\tif (this.listData == null)\n\t\t\treturn null;\n\t\t\n\t\treturn {id: this.inputData.id, data: this.listData};\n\t}\n}\n    \n\n    \n        \n\n   {{inputData.data.name}} \n  \n    \n     {{entry.description}} \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{inputData.data.name}}            {{entry.description}}   '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectListSingle'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Server.html":{"url":"classes/Server.html","title":"class - Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Server\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/server.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/server.model.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/server.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Server {\n\t// name: String;\n    // url: String;\n\tconstructor(public name: string, public url: string) {\n\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartService.html":{"url":"injectables/SmartService.html","title":"injectable - SmartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SmartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/smart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aud\n                            \n                            \n                                authorizeUrl\n                            \n                            \n                                    Readonly\n                                clientId\n                            \n                            \n                                fhirBaseUrl\n                            \n                            \n                                launch\n                            \n                            \n                                    Readonly\n                                redirectUri\n                            \n                            \n                                    Readonly\n                                scope\n                            \n                            \n                                state\n                            \n                            \n                                tokenUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                findGetParameter\n                            \n                            \n                                getToken\n                            \n                            \n                                requestAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService, fhirService: FhirService, patientService: PatientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/smart.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fhirService\n                                                  \n                                                        \n                                                                        FhirService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        patientService\n                                                  \n                                                        \n                                                                        PatientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nauthenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findGetParameter\n                        \n                        \n                    \n                \n            \n            \n                \nfindGetParameter(parameterName)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameterName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestAuth\n                        \n                        \n                    \n                \n            \n            \n                \nrequestAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/smart.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aud\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authorizeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"2c304df8-711d-4de9-afbe-330c01a5ca8e\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fhirBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            launch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            redirectUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:9000\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"launch patient/*.* openid profile\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/smart.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FhirService } from '../services/fhir.service';\nimport { PatientService } from '../services/patient.service';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class SmartService {\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private fhirService: FhirService,\n    private patientService: PatientService\n  ) { }\n\n  readonly clientId: string = \"2c304df8-711d-4de9-afbe-330c01a5ca8e\";\n  readonly scope: string = \"launch patient/*.* openid profile\";\n  readonly redirectUri: string = \"http://localhost:9000\";\n\n  fhirBaseUrl: string;\n  authorizeUrl: string;\n  tokenUrl: string;\n  launch: string;\n  state: string;\n  aud: string;\n\n  authenticate() {\n    this.fhirBaseUrl = this.findGetParameter(\"iss\");\n\n    if (this.fhirBaseUrl) {\n      // Occurs when arriving to the site for the first time.\n      this.aud = this.fhirBaseUrl;\n      this.launch = this.findGetParameter(\"launch\");\n\n      this.fhirService.setUrl(this.fhirBaseUrl);\n\n      const url = this.fhirService.getUrl() + '/metadata';\n      this.http.get(url, this.fhirService.getRequestOptions(false)).subscribe(data => {\n        var smartExtension = data['rest'][0].security.extension.filter(e => {\n          return (e.url === \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\");\n        });\n\n        var auth;\n        var tok;\n\n        smartExtension[0].extension.forEach(arg => {\n          if (arg.url === \"authorize\") {\n            auth = arg.valueUri;\n          } else if (arg.url === \"token\") {\n            tok = arg.valueUri;\n          }\n        });\n\n        this.tokenUrl = tok;\n        this.authorizeUrl = auth;\n\n        this.cookieService.set('tokenUrl', this.tokenUrl);\n        this.cookieService.set('fhirBaseUrl', this.fhirBaseUrl);\n\n        this.requestAuth();\n      });\n    } else {\n      // Occurs when arriving to the site after the redirect.\n      if (this.cookieService.get('state') == this.findGetParameter('state')) {\n        return this.getToken();\n      } else {\n        console.log('Stop cross-site scripting please, thanks');\n      }\n    }\n  }\n\n  getToken() {\n    var code = this.findGetParameter(\"code\");\n\n    var body = 'code=' + code\n      + '&redirect_uri=' + encodeURI(this.redirectUri)\n      + '&token_url=' + this.cookieService.get('tokenUrl');\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n\n    return this.http.post(\"https://mongo-proxy.herokuapp.com/token\",\n      body, { headers: headers });\n  }\n\n  requestAuth() {\n    //TODO Fix hashing method - not sure best way to do it\n\n    this.state = (Md5.hashStr(\"testing Hasing\")).toString();\n    this.cookieService.set('state', this.state);\n\n    var request = this.authorizeUrl + \"?response_type=code\"\n      + \"&client_id=\" + this.clientId\n      + \"&redirect_uri=\" + this.redirectUri\n      + \"&launch=\" + this.launch\n      + \"&scope=\" + this.scope\n      + \"&state=\" + this.state\n      + \"&aud=\" + this.aud;\n\n    // Comment out the below line for debugging purposes.\n    window.location.href = encodeURI(request);\n  }\n\n  findGetParameter(parameterName) {\n    let result = null;\n    let tmp = [];\n\n    location.search.substr(1).split(\"&\").forEach(item => {\n      tmp = item.split(\"=\");\n      if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);\n    });\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Timeline.html":{"url":"classes/Timeline.html","title":"class - Timeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Timeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/timeline.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                code\n                            \n                            \n                                effectiveDateTime\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                valueCodeableConcept\n                            \n                            \n                                valueQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveDateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueCodeableConcept\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/timeline.model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Timeline {\n\tid: string;\n\tstatus: string;\n\teffectiveDateTime: string;\n\tcategory: Object;\n\tcode: Object;\n\tvalueQuantity: Object;\n\tvalueCodeableConcept: Object;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineComponent.html":{"url":"components/TimelineComponent.html","title":"component - TimelineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline/timeline.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timelines\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                encounters\n                            \n                            \n                                encountersLength\n                            \n                            \n                                endIndex\n                            \n                            \n                                popup\n                            \n                            \n                                startIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadEncounters\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                onScrollClickLeft\n                            \n                            \n                                    Private\n                                onScrollClickRight\n                            \n                            \n                                    Private\n                                sortByDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/timeline/timeline.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            loadEncounters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadEncounters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onScrollClickLeft\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onScrollClickLeft()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onScrollClickRight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onScrollClickRight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortByDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline/timeline.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encounters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encountersLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimelinePopupComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('popup', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline/timeline.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\n\nimport { EncounterService } from '../../services/encounter.service';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\nimport {TimelinePopupComponent} from '../timeline_popup/timeline_popup.component';\n\n@Component({\n  selector: 'timelines',\n  templateUrl: './timeline.html'\n})\nexport class TimelineComponent {\n  encounters: Array = [];\n  startIndex = 0;\n  endIndex = 10;\n  encountersLength: any;\n  @Input() patient: Patient;\n  @ViewChild('popup', { static: false }) popup: TimelinePopupComponent;\n\n  constructor(private encounterService: EncounterService) { }\n  \n\n  ngOnChanges(): void {\n    this.loadEncounters();\n  }\n  ngAfterViewInit(): void{\n    this.sortByDate();\n\n  }\n\n  private loadEncounters(): void {\n    console.log('patient1',this.patient);\n    if (this.patient) {\n      this.encounterService.loadEncounters(this.patient).subscribe(encounters => {\n        this.encounters = this.encounters.concat(encounters);\n        this.encountersLength = this.encounters.length;\n        // console.log('Loaded ' + this.encounters.length + ' encounters.');\n   //     console.log('before', this.encounters);\n        this.sortByDate();\n        // encounters.forEach(enc => enc.position = enc.getLogValue()/5 + \"%\")\n        // encounters.forEach(enc =>  console.log('Log Val pos: ' + enc.getStartDate())) \n      });\n    }\n\n  }\n\n  private sortByDate(): void{\n    this.encounters.sort((a : Encounter, b:Encounter) => {\n        return a.getStartDate().getTime() - b.getStartDate().getTime();\n    });\n   // console.log('after', this.encounters);\n\n  }\n  private onScrollClickRight(): void{\n    console.log('first item', this.encounters[0]);\n\n    if(this.endIndex \n    \n\n    \n        \n  \n      \n        \n          \n        \n        \n          \n            \n            = startIndex && i \n            \n           \n        \n        \n           encountersLength ? true : false}\">\n        \n      \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            = startIndex && i                                                   encountersLength ? true : false}\">                '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelinePopupComponent.html":{"url":"components/TimelinePopupComponent.html","title":"component - TimelinePopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimelinePopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/timeline_popup/timeline_popup.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                timeline-popup\n            \n\n\n\n\n            \n                templateUrl\n                ./timeline_popup.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePipe\n                            \n                            \n                                details\n                            \n                            \n                                hoverBox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(encounterService: EncounterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/timeline_popup/timeline_popup.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        encounterService\n                                                  \n                                                        \n                                                                        EncounterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(encounter: Encounter, event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encounter\n                                    \n                                                Encounter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePipe\n\n                        \n                    \n                    \n                        \n                            Default value : new DatePipe('en-US')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverBox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HoverBoxComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('hoverBox', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/timeline_popup/timeline_popup.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, Input } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { HoverBoxComponent } from '../../components/hoverBox/hoverBox.component';\nimport { EncounterService } from '../../services/encounter.service';\n\nimport { Encounter } from '../../models/encounter.model';\nimport { Patient } from '../../models/patient.model';\n\n@Component({\n  selector: 'timeline-popup',\n  templateUrl: './timeline_popup.html'\n})\n\nexport class TimelinePopupComponent {\n  @ViewChild('hoverBox', { static: false }) hoverBox: HoverBoxComponent;\n\n  constructor(private encounterService: EncounterService) { }\n\n   datePipe: DatePipe = new DatePipe('en-US');\n   details : Array;\n\n   \n  open(encounter : Encounter, event: MouseEvent): void {\n    //console.log(\"e here is : \",encounter);\n   // console.log(\"hover\", this.hoverBox);\n    let details: Array  = [\n      'Date: ' + this.datePipe.transform(encounter.getStartDate(),'MM-dd-yyyy').toString(),\n      'Reason: ' + (encounter.getReason() || 'None')\n   ];\n    this.hoverBox.show(details, event);\n  }\n\n  close(event: MouseEvent): void {\n    this.hoverBox.hide(event);\n  }\n\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n        ×\n        Encounter from {{condition.onsetDateTime | amTimeAgo}}\n      \n      \n        {{condition.code.coding[0].display}}\n        Code System:{{condition.code.coding[0].system}}\n        Code: {{condition.code.coding[0].code}}\n      \n      \n        Close\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    ×        Encounter from {{condition.onsetDateTime | amTimeAgo}}                    {{condition.code.coding[0].display}}        Code System:{{condition.code.coding[0].system}}        Code: {{condition.code.coding[0].code}}                    Close            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelinePopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToolBarService.html":{"url":"injectables/ToolBarService.html","title":"injectable - ToolBarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToolBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toolbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leftPosition\n                            \n                            \n                                topPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leftPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/toolbar.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ToolBarService {\n  leftPosition: string;\n  topPosition: string;\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toolbar/toolbar.component.ts\n\n\n    \n        Description\n    \n    \n        A component representing the toolbar at the top of \nthe application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nav2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterScratchPad\n                            \n                            \n                                resetToDefaultView\n                            \n                            \n                                runAssociationsTool\n                            \n                            \n                                switchNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(associationService: AssociationService, conditionService: ConditionService, doctorService: DoctorService, observationService: ObservationService, scratchPadService: ScratchPadService, toolbarService: ToolBarService, elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toolbar/toolbar.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        associationService\n                                                  \n                                                        \n                                                                        AssociationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionService\n                                                  \n                                                        \n                                                                        ConditionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doctorService\n                                                  \n                                                        \n                                                                        DoctorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        observationService\n                                                  \n                                                        \n                                                                        ObservationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scratchPadService\n                                                  \n                                                        \n                                                                        ScratchPadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toolbarService\n                                                  \n                                                        \n                                                                        ToolBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:22\n                            \n                        \n                \n                    \n                        The patient currently displayed by the application. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterScratchPad\n                        \n                        \n                    \n                \n            \n            \n                \nfilterScratchPad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:61\n                \n            \n\n\n            \n                \n                    Adds the currently selected conditions and observations to the \nscratch pad, and opens up the scratch pad view of the triple \nlists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetToDefaultView\n                        \n                        \n                    \n                \n            \n            \n                \nresetToDefaultView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:73\n                \n            \n\n\n            \n                \n                    Reset triple lists to their default view (not the scratch pad).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runAssociationsTool\n                        \n                        \n                    \n                \n            \n            \n                \nrunAssociationsTool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:50\n                \n            \n\n\n            \n                \n                    Run the associations tool.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            switchNav\n                        \n                        \n                    \n                \n            \n            \n                \nswitchNav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/toolbar/toolbar.component.ts:43\n                \n            \n\n\n            \n                \n                    Switches between the 1st and 2nd views of the \ntoolbar.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nav2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/toolbar/toolbar.component.ts:27\n                            \n                        \n\n                \n                    \n                        Tracks whether the toolbar is currently in its 1st or 2nd view. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ElementRef } from '@angular/core';\n\nimport { DoctorService } from '../../services/doctor.service';\nimport { ToolBarService } from '../../services/toolbar.service';\nimport { ScratchPadService } from '../../services/scratchPad.service';\nimport { ConditionService } from '../../services/condition.service';\nimport { ObservationService} from '../../services/observation.service';\nimport { AssociationService } from '../../services/association.service';\n\nimport { Patient } from '../../models/patient.model';\n\n/** \n * A component representing the toolbar at the top of \n * the application.\n */\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.html'\n})\nexport class ToolbarComponent {\n  /** The patient currently displayed by the application. */\n  @Input() patient: Patient;\n  \n  /** \n   * Tracks whether the toolbar is currently in its 1st or 2nd view. \n   */\n  private nav2: boolean = false;\n\n  constructor(\n    private associationService: AssociationService,\n    private conditionService: ConditionService,\n    private doctorService: DoctorService,\n    private observationService: ObservationService,\n    private scratchPadService: ScratchPadService,\n    private toolbarService: ToolBarService,\n    private elRef: ElementRef\n  ) { }\n  \n  /**\n   * Switches between the 1st and 2nd views of the \n   * toolbar.\n   */\n  switchNav() {\n    this.nav2 = !this.nav2;\n  }\n\n  /**\n   * Run the associations tool.\n   */\n  runAssociationsTool() {\n    let checkedConditions = this.conditionService.getCheckedConditions();\n    let checkedObservations = this.observationService.getCheckedObservations();\n    this.associationService.runAssociationsTool(checkedConditions, checkedObservations);\n  }\n\n  /**\n   * Adds the currently selected conditions and observations to the \n   * scratch pad, and opens up the scratch pad view of the triple \n   * lists.\n   */\n  filterScratchPad() {\n    // Call the filtering method in the service\n    this.scratchPadService.addConditionsToScratchPad();\n    this.scratchPadService.addObservationToScratchPad();\n\n    // also switch the views to the scratch pad view\n    this.scratchPadService.switchToScratchPad(true);\n  }\n\n  /**\n   * Reset triple lists to their default view (not the scratch pad).\n   */\n  resetToDefaultView() {\n    this.scratchPadService.switchToScratchPad(false);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n    \n    \n    \n    \n     \n  \n  \n    \n    \n    \n     \n    \n     \n    \n     \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripleListComponent.html":{"url":"components/TripleListComponent.html","title":"component - TripleListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TripleListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tripleList/tripleList.component.ts\n\n\n    \n        Description\n    \n    \n        A component that displays the triple list of \nconditions, observations, and careplans. It provides \nthe patient data to these individual lists.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                triplelist\n            \n\n\n\n\n            \n                templateUrl\n                ./tripleList.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                patient\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        patient\n                    \n                \n                \n                    \n                        Type :         Patient\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/tripleList/tripleList.component.ts:16\n                            \n                        \n                \n                    \n                        The patient whose data will appear in the three lists. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Patient } from '../../models/patient.model';\n\n/**\n * A component that displays the triple list of \n * conditions, observations, and careplans. It provides \n * the patient data to these individual lists.\n */\n@Component({\n  selector: 'triplelist',\n  templateUrl: './tripleList.html'\n})\n\nexport class TripleListComponent {\n  /** The patient whose data will appear in the three lists. */\n  @Input() patient: Patient;\n  \n  constructor() { }\n}\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AccordionRecursion', 'selector': 'accordionRecursion'},{'name': 'AccountComponent', 'selector': 'account'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'CarePlanDisplay', 'selector': 'careplanDisplay'},{'name': 'CarePlansComponent', 'selector': 'carePlans'},{'name': 'CheckboxInline', 'selector': 'checkbox-inline'},{'name': 'ColumnStateSwitcherComponent', 'selector': 'columnStateSwitcher'},{'name': 'ConditionsChartComponent', 'selector': 'conditionsChart'},{'name': 'ConditionsComponent', 'selector': 'conditions'},{'name': 'ConditionsDisplay', 'selector': 'conditionsDisplay'},{'name': 'ContextMenuComponent', 'selector': 'contextMenu'},{'name': 'FormBuilder', 'selector': 'form-builder'},{'name': 'HistoricalTrendsComponent', 'selector': 'historicalTrends'},{'name': 'HomeComponent', 'selector': 'home'},{'name': 'HoverBoxComponent', 'selector': 'hoverBox'},{'name': 'LoadingAnimation', 'selector': 'loadingAnimation'},{'name': 'MedicationsComponent', 'selector': 'medications'},{'name': 'NormalBox1', 'selector': 'normal-box-1'},{'name': 'NormalBox2', 'selector': 'normal-box-2'},{'name': 'ObservationRecursiveChart', 'selector': 'observationRecursionChart'},{'name': 'ObservationsComponent', 'selector': 'observations'},{'name': 'ObservationsDisplay', 'selector': 'observationsDisplay'},{'name': 'PatientComponent', 'selector': 'patient'},{'name': 'ScratchPadUpdate', 'selector': 'scratchpad-update'},{'name': 'SelectListSingle', 'selector': 'select-list-single'},{'name': 'TimelineComponent', 'selector': 'timelines'},{'name': 'TimelinePopupComponent', 'selector': 'timeline-popup'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TripleListComponent', 'selector': 'triplelist'}];\n    var DIRECTIVES = [{'name': 'AutoGrowDirective', 'selector': '[autoGrow]'},{'name': 'HighlightDirective', 'selector': '[highlight]'}];\n    var ACTUAL_COMPONENT = {'name': 'TripleListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n\tid: number;\n\tname: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            appRoutingProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            routing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/accordionRecursion/accordionRecursion.component.ts\n            \n            component\n            AccordionRecursion\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/components/accordionRecursion/accordionRecursion.component.ts\n            \n            variable\n            CARE_PLAN_CATEGORIES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/baseColumn.ts\n            \n            class\n            BaseColumn\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/components/carePlanDisplay/carePlanDisplay.component.ts\n            \n            component\n            CarePlanDisplay\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/carePlans/carePlans.component.ts\n            \n            component\n            CarePlansComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/components/columnStateSwitcher/columnStateSwitcher.component.ts\n            \n            component\n            ColumnStateSwitcherComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            component\n            ConditionsComponent\n            \n                66 %\n                (16/24)\n            \n        \n        \n            \n                \n                src/app/components/conditions/conditions.component.ts\n            \n            variable\n            $\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/conditionsChart/conditionsChart.component.ts\n            \n            component\n            ConditionsChartComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/conditionsDisplay/conditionsDisplay.component.ts\n            \n            component\n            ConditionsDisplay\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/contextMenu/contextMenu.component.ts\n            \n            component\n            ContextMenuComponent\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                src/app/components/form-builder/form-builder.component.ts\n            \n            component\n            FormBuilder\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/form_components/checkbox-inline.component.ts\n            \n            component\n            CheckboxInline\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-1.component.ts\n            \n            component\n            NormalBox1\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/normal-box-2.component.ts\n            \n            component\n            NormalBox2\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/form_components/scrachpad-update.component.ts\n            \n            component\n            ScratchPadUpdate\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/form_components/select-list-single.component.ts\n            \n            component\n            SelectListSingle\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/historicalTrends/historicalTrends.component.ts\n            \n            component\n            HistoricalTrendsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/hoverBox/hoverBox.component.ts\n            \n            component\n            HoverBoxComponent\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                src/app/components/loadingAnimation/loadingAnimation.component.ts\n            \n            component\n            LoadingAnimation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/components/medications/medications.component.ts\n            \n            component\n            MedicationsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/observationRecursionChart/observationRecursionChart.component.ts\n            \n            component\n            ObservationRecursiveChart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/observations/observations.component.ts\n            \n            component\n            ObservationsComponent\n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                src/app/components/observationsDisplay/observationsDisplay.component.ts\n            \n            component\n            ObservationsDisplay\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            component\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/patient/patient.component.ts\n            \n            injectable\n            PatientComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/timeline_popup/timeline_popup.component.ts\n            \n            component\n            TimelinePopupComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/tripleList/tripleList.component.ts\n            \n            component\n            TripleListComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/directives/auto-grow.directive.ts\n            \n            directive\n            AutoGrowDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/directives/highlight.directive.ts\n            \n            directive\n            HighlightDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/allergyIntolerance.model.ts\n            \n            class\n            AllergyIntolerance\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/associable.model.ts\n            \n            interface\n            Associable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Bundle\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/bundle.model.ts\n            \n            class\n            Link\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/carePlan.model.ts\n            \n            class\n            CarePlan\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/chart.model.ts\n            \n            class\n            Chart\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/client.model.ts\n            \n            class\n            Client\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/condition.model.ts\n            \n            class\n            Condition\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/contextMenuOption.model.ts\n            \n            class\n            ContextMenuOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/encounter.model.ts\n            \n            class\n            Encounter\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/form.model.ts\n            \n            class\n            Form\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/medication.model.ts\n            \n            class\n            Medication\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/observation.model.ts\n            \n            class\n            Observation\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/patient.model.ts\n            \n            class\n            Patient\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/server.model.ts\n            \n            class\n            Server\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/timeline.model.ts\n            \n            class\n            Timeline\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pipes/humanizeBytes.pipe.ts\n            \n            pipe\n            HumanizeBytesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/association.service.ts\n            \n            injectable\n            AssociationService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/carePlan.service.ts\n            \n            injectable\n            CarePlanService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/condition.service.ts\n            \n            injectable\n            ConditionService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/doctor.service.ts\n            \n            injectable\n            DoctorService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/encounter.service.ts\n            \n            injectable\n            EncounterService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/services/fhir.service.ts\n            \n            injectable\n            FhirService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/historicalTrends.service.ts\n            \n            injectable\n            HistoricalTrendsService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/map.service.ts\n            \n            injectable\n            MapService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/observation.service.ts\n            \n            injectable\n            ObservationService\n            \n                4 %\n                (1/21)\n            \n        \n        \n            \n                \n                src/app/services/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/scratchPad.service.ts\n            \n            injectable\n            ScratchPadService\n            \n                0 %\n                (0/39)\n            \n        \n        \n            \n                \n                src/app/services/smart.service.ts\n            \n            injectable\n            SmartService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/services/toolbar.service.ts\n            \n            injectable\n            ToolBarService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.14\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/cli : ^8.3.25\n        \n            @angular/common : ^8.2.14\n        \n            @angular/compiler : ^8.2.14\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ^8.2.14\n        \n            @angular/platform-browser : ^8.2.14\n        \n            @angular/platform-browser-dynamic : ^8.2.14\n        \n            @angular/router : ^8.2.14\n        \n            @swimlane/ngx-charts : ^13.0.2\n        \n            angular2-router-loader : ^0.3.5\n        \n            bootstrap : ^3.3.7\n        \n            jquery : ^3.2.1\n        \n            moment : ^2.24.0\n        \n            ngx-cookie-service : ^2.3.0\n        \n            ngx-moment : ^3.5.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^6.5.4\n        \n            rxjs-compat : ^6.5.4\n        \n            systemjs : ^0.19.47\n        \n            ts-md5 : ^1.2.0\n        \n            tslib : ^1.9.0\n        \n            typescript : ^3.4.5\n        \n            zone.js : ^0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColumnType   (src/.../columnType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/utils/columnType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ColumnType\n                    \n                \n                        \n                            \n                                 Conditions\n                            \n                        \n                        \n                            \n                                 Observations\n                            \n                        \n                        \n                            \n                                 CarePlans\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPatient Viewer\n\nFront-end project for context-driven clinical transactions.\nPreparing the Application\nThis is an Angular 8 project using grunt as the build system, SASS for CSS, and Bootstrap for layout. npm is the package manager. \nAssuming you already have node installed via brew install node or similar, begin by running the following commands in the terminal:\ngit clone https://github.com/HII-C/patient_viewer.git\ncd patient_viewer\nnpm install -g grunt\nnpm install # to install project development dependenciesIf you do not have npm installed, do the following:\n\nMac: brew install node in Terminal\nWindows: Instructions\nLinux: Instructions\n\nThe project was tested specifically with node version 10.19.0.\nRunning the Application\nTo launch in development mode, run the following terminal command from the patient_viewer folder:\ngrunt --force # to serve the project and automatically recompile on file changesThen, do the following:\n\nVisit HSPC Sandbox, select the \"HII-C\" sandbox, choose the \"Apps\" option from the left menu, click on the \"HII-C Confidential [USE THIS]\" app, and then click \"Launch\". \nSelect the persona \"John Smith\", and patient Adams, Daniel X in the popup. This should open the Patient Viewer application.\nOnce you are done running Patient Viewer, make sure to terminate the grunt --force command in the terminal.\n\nDevelopment Guidelines\nDo's:\n\nPrefer to use let rather than var for declaring variables. The scoping for variables declared with var is unintuitive and can result in strange bugs.\nPrefer to create models (such as Encounter) rather than dealing with JSON directly. By doing so, we can take advantage of Typescript's type checking and code completion.\n\nDont's:\n\nAvoid using libraries like jQuery. Also avoid using any other approach to accessing the DOM directly (ie, document.getElementById(..)).\nAvoid leaving console.log(..) statements in the code when pushing to the repository. You can use them while developing locally but it can cause clutter in the repository.\nWrite a brief comment above each component and method that you write giving a brief overview of the functionality. If some code is particularly complex, place comments within the body of the method too.\nAvoid writing components that are very similar to one another. Instead, create a generic component that supports all use cases through an interface (examples are contextMenu.component.ts and hoverBox.component.ts).\n\nLicense\nApache 2.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormCreatorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_FormCreatorModule\n\n\n\ncluster_FormCreatorModule_declarations\n\n\n\ncluster_FormCreatorModule_exports\n\n\n\n\nAccordionRecursion\n\nAccordionRecursion\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccordionRecursion->AppModule\n\n\n\n\n\nAccountComponent\n\nAccountComponent\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarePlanDisplay\n\nCarePlanDisplay\n\nAppModule -->\n\nCarePlanDisplay->AppModule\n\n\n\n\n\nCarePlansComponent\n\nCarePlansComponent\n\nAppModule -->\n\nCarePlansComponent->AppModule\n\n\n\n\n\nColumnStateSwitcherComponent\n\nColumnStateSwitcherComponent\n\nAppModule -->\n\nColumnStateSwitcherComponent->AppModule\n\n\n\n\n\nConditionsChartComponent\n\nConditionsChartComponent\n\nAppModule -->\n\nConditionsChartComponent->AppModule\n\n\n\n\n\nConditionsComponent\n\nConditionsComponent\n\nAppModule -->\n\nConditionsComponent->AppModule\n\n\n\n\n\nConditionsDisplay\n\nConditionsDisplay\n\nAppModule -->\n\nConditionsDisplay->AppModule\n\n\n\n\n\nContextMenuComponent\n\nContextMenuComponent\n\nAppModule -->\n\nContextMenuComponent->AppModule\n\n\n\n\n\nFormBuilder\n\nFormBuilder\n\nAppModule -->\n\nFormBuilder->AppModule\n\n\n\n\n\nHistoricalTrendsComponent\n\nHistoricalTrendsComponent\n\nAppModule -->\n\nHistoricalTrendsComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nHoverBoxComponent\n\nHoverBoxComponent\n\nAppModule -->\n\nHoverBoxComponent->AppModule\n\n\n\n\n\nLoadingAnimation\n\nLoadingAnimation\n\nAppModule -->\n\nLoadingAnimation->AppModule\n\n\n\n\n\nMedicationsComponent\n\nMedicationsComponent\n\nAppModule -->\n\nMedicationsComponent->AppModule\n\n\n\n\n\nObservationRecursiveChart\n\nObservationRecursiveChart\n\nAppModule -->\n\nObservationRecursiveChart->AppModule\n\n\n\n\n\nObservationsComponent\n\nObservationsComponent\n\nAppModule -->\n\nObservationsComponent->AppModule\n\n\n\n\n\nObservationsDisplay\n\nObservationsDisplay\n\nAppModule -->\n\nObservationsDisplay->AppModule\n\n\n\n\n\nPatientComponent\n\nPatientComponent\n\nAppModule -->\n\nPatientComponent->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelinePopupComponent\n\nTimelinePopupComponent\n\nAppModule -->\n\nTimelinePopupComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nTripleListComponent\n\nTripleListComponent\n\nAppModule -->\n\nTripleListComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nFormCreatorModule\n\nFormCreatorModule\n\nAppModule -->\n\nFormCreatorModule->AppModule\n\n\n\n\n\nCheckboxInline \n\nCheckboxInline \n\nCheckboxInline  -->\n\nFormCreatorModule->CheckboxInline \n\n\n\n\n\nNormalBox1 \n\nNormalBox1 \n\nNormalBox1  -->\n\nFormCreatorModule->NormalBox1 \n\n\n\n\n\nNormalBox2 \n\nNormalBox2 \n\nNormalBox2  -->\n\nFormCreatorModule->NormalBox2 \n\n\n\n\n\nScratchPadUpdate \n\nScratchPadUpdate \n\nScratchPadUpdate  -->\n\nFormCreatorModule->ScratchPadUpdate \n\n\n\n\n\nSelectListSingle \n\nSelectListSingle \n\nSelectListSingle  -->\n\nFormCreatorModule->SelectListSingle \n\n\n\n\n\nAssociationService\n\nAssociationService\n\nAppModule -->\n\nAssociationService->AppModule\n\n\n\n\n\nCarePlanService\n\nCarePlanService\n\nAppModule -->\n\nCarePlanService->AppModule\n\n\n\n\n\nConditionService\n\nConditionService\n\nAppModule -->\n\nConditionService->AppModule\n\n\n\n\n\nDoctorService\n\nDoctorService\n\nAppModule -->\n\nDoctorService->AppModule\n\n\n\n\n\nEncounterService\n\nEncounterService\n\nAppModule -->\n\nEncounterService->AppModule\n\n\n\n\n\nFhirService\n\nFhirService\n\nAppModule -->\n\nFhirService->AppModule\n\n\n\n\n\nHistoricalTrendsService\n\nHistoricalTrendsService\n\nAppModule -->\n\nHistoricalTrendsService->AppModule\n\n\n\n\n\nMapService\n\nMapService\n\nAppModule -->\n\nMapService->AppModule\n\n\n\n\n\nObservationService\n\nObservationService\n\nAppModule -->\n\nObservationService->AppModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nAppModule -->\n\nPatientService->AppModule\n\n\n\n\n\nScratchPadService\n\nScratchPadService\n\nAppModule -->\n\nScratchPadService->AppModule\n\n\n\n\n\nSmartService\n\nSmartService\n\nAppModule -->\n\nSmartService->AppModule\n\n\n\n\n\nToolBarService\n\nToolBarService\n\nAppModule -->\n\nToolBarService->AppModule\n\n\n\n\n\nCheckboxInline\n\nCheckboxInline\n\nFormCreatorModule -->\n\nCheckboxInline->FormCreatorModule\n\n\n\n\n\nNormalBox1\n\nNormalBox1\n\nFormCreatorModule -->\n\nNormalBox1->FormCreatorModule\n\n\n\n\n\nNormalBox2\n\nNormalBox2\n\nFormCreatorModule -->\n\nNormalBox2->FormCreatorModule\n\n\n\n\n\nScratchPadUpdate\n\nScratchPadUpdate\n\nFormCreatorModule -->\n\nScratchPadUpdate->FormCreatorModule\n\n\n\n\n\nSelectListSingle\n\nSelectListSingle\n\nFormCreatorModule -->\n\nSelectListSingle->FormCreatorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LevelNode   (src/.../accordionRecursion.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/accordionRecursion/accordionRecursion.component.ts\n    \n    \n        \n            \n                \n                    \n                    LevelNode\n                \n            \n            \n                \n                    A tree structure representing the structure of a column of \nconditions, observations, or careplans. For example, a column \nmay contain several levels of headings before actual items \n(like conditions) are displayed.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../conditions.component.ts)\n                        \n                        \n                            appRoutingProviders   (src/.../app.module.ts)\n                        \n                        \n                            CARE_PLAN_CATEGORIES   (src/.../accordionRecursion.component.ts)\n                        \n                        \n                            routing   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/conditions/conditions.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Necessary in order to use jQuery to open popup. \n\n                    \n                \n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appRoutingProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes)\n                        \n                    \n\n\n            \n        \n\n    src/app/components/accordionRecursion/accordionRecursion.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CARE_PLAN_CATEGORIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'Medication', 'Procedures', \n    'In-Progress Tests', 'Dietary Plan', \n    'Exercise Plan'\n]\n                        \n                    \n\n                \n                    \n                        Hardcoded categories for the care plans column.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
