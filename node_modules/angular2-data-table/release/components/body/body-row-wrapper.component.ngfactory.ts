/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '../../../../src/components/body/body-row-wrapper.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/common/src/directives/ng_if';
import * as import14 from '@angular/core/src/security';
import * as import15 from '../../../node_modules/@angular/common/src/directives/ng_template_outlet.ngfactory';
import * as import16 from '@angular/common/src/directives/ng_template_outlet';
export class Wrapper_DataTableRowWrapperComponent {
  context:import0.DataTableRowWrapperComponent;
  changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this.context = new import0.DataTableRowWrapperComponent(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
  }
  check_rowDetailTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this.changed = true;
      this.context.rowDetailTemplate = currValue;
      this._expr_0 = currValue;
    }
  }
  check_detailRowHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this.changed = true;
      this.context.detailRowHeight = currValue;
      this._expr_1 = currValue;
    }
  }
  check_expanded(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this.changed = true;
      this.context.expanded = currValue;
      this._expr_2 = currValue;
    }
  }
  check_row(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this.changed = true;
      this.context.row = currValue;
      this._expr_3 = currValue;
    }
  }
  detectChangesInInputProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
  detectChangesInHostProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
}
var renderType_DataTableRowWrapperComponent_Host:import4.RenderComponentType = (null as any);
class _View_DataTableRowWrapperComponent_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _DataTableRowWrapperComponent_0_4:Wrapper_DataTableRowWrapperComponent;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_DataTableRowWrapperComponent_Host0,renderType_DataTableRowWrapperComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer,'datatable-row-wrapper',import2.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_DataTableRowWrapperComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableRowWrapperComponent_0_4 = new Wrapper_DataTableRowWrapperComponent(new import8.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._DataTableRowWrapperComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._DataTableRowWrapperComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DataTableRowWrapperComponent) && (0 === requestNodeIndex))) { return this._DataTableRowWrapperComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._DataTableRowWrapperComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    this._DataTableRowWrapperComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableRowWrapperComponent_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_DataTableRowWrapperComponent_Host === (null as any))) { (renderType_DataTableRowWrapperComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_DataTableRowWrapperComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const DataTableRowWrapperComponentNgFactory:import10.ComponentFactory<import0.DataTableRowWrapperComponent> = new import10.ComponentFactory<import0.DataTableRowWrapperComponent>('datatable-row-wrapper',viewFactory_DataTableRowWrapperComponent_Host0,import0.DataTableRowWrapperComponent);
const styles_DataTableRowWrapperComponent:any[] = ([] as any[]);
var renderType_DataTableRowWrapperComponent:import4.RenderComponentType = (null as any);
class _View_DataTableRowWrapperComponent0 extends import3.AppView<import0.DataTableRowWrapperComponent> {
  _text_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import5.AppElement;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import11.Wrapper_NgIf;
  _text_3:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_DataTableRowWrapperComponent0,renderType_DataTableRowWrapperComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.renderer.projectNodes(parentRenderNode,import2.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_1 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_2 = new import5.AppElement(2,(null as any),this,this._anchor_2);
    this._TemplateRef_2_5 = new import12.TemplateRef_(this._appEl_2,viewFactory_DataTableRowWrapperComponent1);
    this._NgIf_2_6 = new import11.Wrapper_NgIf(this._appEl_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this.init(([] as any[]),[
      this._text_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import13.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.context.expanded;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.detectChangesInInputProps(this,this._anchor_2,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_DataTableRowWrapperComponent0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.DataTableRowWrapperComponent> {
  if ((renderType_DataTableRowWrapperComponent === (null as any))) { (renderType_DataTableRowWrapperComponent = viewUtils.createRenderComponentType('',1,import9.ViewEncapsulation.None,styles_DataTableRowWrapperComponent,{})); }
  return new _View_DataTableRowWrapperComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableRowWrapperComponent1 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _appEl_2:import5.AppElement;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import11.Wrapper_NgIf;
  _text_3:any;
  /*private*/ _expr_7:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_DataTableRowWrapperComponent1,renderType_DataTableRowWrapperComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_7 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'div',new import2.InlineArray2(2,'class','datatable-row-detail'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_2 = new import5.AppElement(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import12.TemplateRef_(this._appEl_2,viewFactory_DataTableRowWrapperComponent2);
    this._NgIf_2_6 = new import11.Wrapper_NgIf(this._appEl_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import13.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2_0_0:any = this.parent.context.rowDetailTemplate;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.detectChangesInInputProps(this,this._anchor_2,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_7:any = this.parent.context.detailRowHeight;
    if (import2.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementStyle(this._el_0,'height',((this.viewUtils.sanitizer.sanitize(import14.SecurityContext.STYLE,currVal_7) == (null as any))? (null as any): (this.viewUtils.sanitizer.sanitize(import14.SecurityContext.STYLE,currVal_7).toString() + 'px')));
      this._expr_7 = currVal_7;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableRowWrapperComponent1(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_DataTableRowWrapperComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableRowWrapperComponent2 extends import3.AppView<any> {
  _anchor_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _TemplateRef_0_5:any;
  _NgTemplateOutlet_0_6:import15.Wrapper_NgTemplateOutlet;
  _map_4:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_DataTableRowWrapperComponent2,renderType_DataTableRowWrapperComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._map_4 = import2.pureProxy1((p0:any):{[key: string]:any} => {
      return {row: p0};
    });
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._anchor_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import12.TemplateRef_(this._appEl_0,viewFactory_DataTableRowWrapperComponent3);
    this._NgTemplateOutlet_0_6 = new import15.Wrapper_NgTemplateOutlet(this._appEl_0.vcRef);
    this.init(([] as any[]).concat([this._appEl_0]),[this._anchor_0],([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import16.NgTemplateOutlet) && (0 === requestNodeIndex))) { return this._NgTemplateOutlet_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this._map_4(this.parent.parent.context.row);
    this._NgTemplateOutlet_0_6.check_ngOutletContext(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parent.parent.context.rowDetailTemplate;
    this._NgTemplateOutlet_0_6.check_ngTemplateOutlet(currVal_0_0_1,throwOnChange,false);
    this._NgTemplateOutlet_0_6.detectChangesInInputProps(this,this._anchor_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableRowWrapperComponent2(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_DataTableRowWrapperComponent2(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableRowWrapperComponent3 extends import3.AppView<any> {
  _text_0:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_DataTableRowWrapperComponent3,renderType_DataTableRowWrapperComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._text_0 = this.renderer.createText((null as any),'\n      ',(null as any));
    this.init(([] as any[]).concat([this._text_0]),[this._text_0],([] as any[]),([] as any[]));
    return (null as any);
  }
}
function viewFactory_DataTableRowWrapperComponent3(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_DataTableRowWrapperComponent3(viewUtils,parentInjector,declarationEl);
}