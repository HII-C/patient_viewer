/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '../../../src/components/datatable.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/linker/query_list';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '../directives/visibility.directive.ngfactory';
import * as import13 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import14 from './body/body.component.ngfactory';
import * as import15 from '@angular/core/src/zone/ng_zone';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/common/src/directives/ng_if';
import * as import18 from '../../../src/components/body/body.component';
import * as import19 from '../../../src/directives/visibility.directive';
import * as import20 from './header/header.component.ngfactory';
import * as import21 from '../../../src/components/header/header.component';
import * as import22 from './footer/footer.component.ngfactory';
import * as import23 from '../../../src/components/footer/footer.component';
export class Wrapper_DatatableComponent {
  context:import0.DatatableComponent;
  changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this.context = new import0.DatatableComponent(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._expr_10 = import1.UNINITIALIZED;
    this._expr_11 = import1.UNINITIALIZED;
    this._expr_12 = import1.UNINITIALIZED;
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
    this._expr_15 = import1.UNINITIALIZED;
    this._expr_16 = import1.UNINITIALIZED;
    this._expr_17 = import1.UNINITIALIZED;
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
    this._expr_21 = import1.UNINITIALIZED;
    this._expr_22 = import1.UNINITIALIZED;
    this._expr_23 = import1.UNINITIALIZED;
    this._expr_24 = import1.UNINITIALIZED;
    this._expr_25 = import1.UNINITIALIZED;
    this._expr_26 = import1.UNINITIALIZED;
    this._expr_27 = import1.UNINITIALIZED;
  }
  check_rows(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this.changed = true;
      this.context.rows = currValue;
      this._expr_0 = currValue;
    }
  }
  check_columns(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this.changed = true;
      this.context.columns = currValue;
      this._expr_1 = currValue;
    }
  }
  check_selected(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this.changed = true;
      this.context.selected = currValue;
      this._expr_2 = currValue;
    }
  }
  check_scrollbarV(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this.changed = true;
      this.context.scrollbarV = currValue;
      this._expr_3 = currValue;
    }
  }
  check_scrollbarH(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this.changed = true;
      this.context.scrollbarH = currValue;
      this._expr_4 = currValue;
    }
  }
  check_rowHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this.changed = true;
      this.context.rowHeight = currValue;
      this._expr_5 = currValue;
    }
  }
  check_detailRowHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this.changed = true;
      this.context.detailRowHeight = currValue;
      this._expr_6 = currValue;
    }
  }
  check_columnMode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this.changed = true;
      this.context.columnMode = currValue;
      this._expr_7 = currValue;
    }
  }
  check_headerHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this.changed = true;
      this.context.headerHeight = currValue;
      this._expr_8 = currValue;
    }
  }
  check_footerHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_9,currValue))) {
      this.changed = true;
      this.context.footerHeight = currValue;
      this._expr_9 = currValue;
    }
  }
  check_externalPaging(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_10,currValue))) {
      this.changed = true;
      this.context.externalPaging = currValue;
      this._expr_10 = currValue;
    }
  }
  check_limit(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_11,currValue))) {
      this.changed = true;
      this.context.limit = currValue;
      this._expr_11 = currValue;
    }
  }
  check_count(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_12,currValue))) {
      this.changed = true;
      this.context.count = currValue;
      this._expr_12 = currValue;
    }
  }
  check_offset(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_13,currValue))) {
      this.changed = true;
      this.context.offset = currValue;
      this._expr_13 = currValue;
    }
  }
  check_loadingIndicator(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_14,currValue))) {
      this.changed = true;
      this.context.loadingIndicator = currValue;
      this._expr_14 = currValue;
    }
  }
  check_selectionType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_15,currValue))) {
      this.changed = true;
      this.context.selectionType = currValue;
      this._expr_15 = currValue;
    }
  }
  check_reorderable(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_16,currValue))) {
      this.changed = true;
      this.context.reorderable = currValue;
      this._expr_16 = currValue;
    }
  }
  check_sortType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_17,currValue))) {
      this.changed = true;
      this.context.sortType = currValue;
      this._expr_17 = currValue;
    }
  }
  check_sorts(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_18,currValue))) {
      this.changed = true;
      this.context.sorts = currValue;
      this._expr_18 = currValue;
    }
  }
  check_rowDetailTemplate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_19,currValue))) {
      this.changed = true;
      this.context.rowDetailTemplate = currValue;
      this._expr_19 = currValue;
    }
  }
  check_cssClasses(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_20,currValue))) {
      this.changed = true;
      this.context.cssClasses = currValue;
      this._expr_20 = currValue;
    }
  }
  check_messages(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_21,currValue))) {
      this.changed = true;
      this.context.messages = currValue;
      this._expr_21 = currValue;
    }
  }
  check_rowIdentity(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_22,currValue))) {
      this.changed = true;
      this.context.rowIdentity = currValue;
      this._expr_22 = currValue;
    }
  }
  detectChangesInInputProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  detectChangesInHostProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_23:any = this.context.isFixedHeader;
    if (import2.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      view.renderer.setElementClass(el,'fixed-header',currVal_23);
      this._expr_23 = currVal_23;
    }
    const currVal_24:any = this.context.isFixedRow;
    if (import2.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      view.renderer.setElementClass(el,'fixed-row',currVal_24);
      this._expr_24 = currVal_24;
    }
    const currVal_25:any = this.context.isVertScroll;
    if (import2.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      view.renderer.setElementClass(el,'scroll-vertical',currVal_25);
      this._expr_25 = currVal_25;
    }
    const currVal_26:any = this.context.isHorScroll;
    if (import2.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      view.renderer.setElementClass(el,'scroll-horz',currVal_26);
      this._expr_26 = currVal_26;
    }
    const currVal_27:any = this.context.isSelectable;
    if (import2.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      view.renderer.setElementClass(el,'selectable',currVal_27);
      this._expr_27 = currVal_27;
    }
  }
}
var renderType_DatatableComponent_Host:import4.RenderComponentType = (null as any);
class _View_DatatableComponent_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _DatatableComponent_0_4:Wrapper_DatatableComponent;
  _query_DataTableColumnDirective_0_0:import6.QueryList<any>;
  _query_DatatableRowDetailDirective_0_1:import6.QueryList<any>;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement) {
    super(_View_DatatableComponent_Host0,renderType_DatatableComponent_Host,import8.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer,'datatable',import2.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_DatatableComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DatatableComponent_0_4 = new Wrapper_DatatableComponent(this.renderer,new import9.ElementRef(this._el_0));
    this._query_DataTableColumnDirective_0_0 = new import6.QueryList<any>();
    this._query_DatatableRowDetailDirective_0_1 = new import6.QueryList<any>();
    this._appEl_0.initComponent(this._DatatableComponent_0_4.context,([] as any[]),compView_0);
    this._query_DatatableRowDetailDirective_0_1.reset(([] as any[]));
    this._DatatableComponent_0_4.context.rowDetailTemplateChild = this._query_DatatableRowDetailDirective_0_1.first;
    compView_0.create(this._DatatableComponent_0_4.context,this.projectableNodes,(null as any));
    var disposable_0:Function = this.renderer.listenGlobal('window','resize',this.eventHandler(this._handle_resize_0_0.bind(this)));
    const subscription_0:any = this._DatatableComponent_0_4.context.resize.subscribe(this.eventHandler(this._handle_resize_0_0.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],[disposable_0],[subscription_0]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DatatableComponent) && (0 === requestNodeIndex))) { return this._DatatableComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._DatatableComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) { if (this._query_DataTableColumnDirective_0_0.dirty) {
      this._query_DataTableColumnDirective_0_0.reset(([] as any[]));
      this._DatatableComponent_0_4.context.columnTemplates = this._query_DataTableColumnDirective_0_0;
      this._query_DataTableColumnDirective_0_0.notifyOnChanges();
    } }
    this._DatatableComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._DatatableComponent_0_4.context.ngAfterViewInit(); } }
  }
  private _handle_resize_0_0($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this._DatatableComponent_0_4.context.recalculate()) !== false);
    return (true && pd_0_0);
  }
}
function viewFactory_DatatableComponent_Host0(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_DatatableComponent_Host === (null as any))) { (renderType_DatatableComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_DatatableComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const DatatableComponentNgFactory:import11.ComponentFactory<import0.DatatableComponent> = new import11.ComponentFactory<import0.DatatableComponent>('datatable',viewFactory_DatatableComponent_Host0,import0.DatatableComponent);
const styles_DatatableComponent:any[] = ([] as any[]);
var renderType_DatatableComponent:import4.RenderComponentType = (null as any);
class _View_DatatableComponent0 extends import3.AppView<import0.DatatableComponent> {
  _viewQuery_DataTableBodyComponent_0:import6.QueryList<any>;
  _text_0:any;
  _el_1:any;
  _VisibilityDirective_1_3:import12.Wrapper_VisibilityDirective;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import5.AppElement;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import13.Wrapper_NgIf;
  _text_4:any;
  _el_5:any;
  /*private*/ _appEl_5:import5.AppElement;
  _DataTableBodyComponent_5_4:import14.Wrapper_DataTableBodyComponent;
  _text_6:any;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _appEl_8:import5.AppElement;
  _TemplateRef_8_5:any;
  _NgIf_8_6:import13.Wrapper_NgIf;
  _text_9:any;
  _text_10:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement) {
    super(_View_DatatableComponent0,renderType_DatatableComponent,import8.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_DataTableBodyComponent_0 = new import6.QueryList<any>();
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import2.createRenderElement(this.renderer,parentRenderNode,'div',new import2.InlineArray2(2,'visibility-observer',''),(null as any));
    this._VisibilityDirective_1_3 = new import12.Wrapper_VisibilityDirective(new import9.ElementRef(this._el_1),this.parentInjector.get(import15.NgZone));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_3 = new import5.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import16.TemplateRef_(this._appEl_3,viewFactory_DatatableComponent1);
    this._NgIf_3_6 = new import13.Wrapper_NgIf(this._appEl_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_5 = import2.createRenderElement(this.renderer,this._el_1,'datatable-body',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._appEl_5 = new import5.AppElement(5,1,this,this._el_5);
    var compView_5:any = import14.viewFactory_DataTableBodyComponent0(this.viewUtils,this.injector(5),this._appEl_5);
    this._DataTableBodyComponent_5_4 = new import14.Wrapper_DataTableBodyComponent(new import9.ElementRef(this._el_5),this.renderer);
    this._appEl_5.initComponent(this._DataTableBodyComponent_5_4.context,([] as any[]),compView_5);
    this._text_6 = this.renderer.createText((null as any),'\n      ',(null as any));
    compView_5.create(this._DataTableBodyComponent_5_4.context,([] as any[]),(null as any));
    this._text_7 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_8 = new import5.AppElement(8,1,this,this._anchor_8);
    this._TemplateRef_8_5 = new import16.TemplateRef_(this._appEl_8,viewFactory_DatatableComponent2);
    this._NgIf_8_6 = new import13.Wrapper_NgIf(this._appEl_8.vcRef,this._TemplateRef_8_5);
    this._text_9 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_10 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_1,'visible',this.eventHandler(this._handle_visible_1_0.bind(this)));
    const subscription_0:any = this._VisibilityDirective_1_3.context.visible.subscribe(this.eventHandler(this._handle_visible_1_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_5,'page',this.eventHandler(this._handle_page_5_0.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_5,'activate',this.eventHandler(this._handle_activate_5_1.bind(this)));
    var disposable_3:Function = this.renderer.listen(this._el_5,'select',this.eventHandler(this._handle_select_5_2.bind(this)));
    var disposable_4:Function = this.renderer.listen(this._el_5,'detailToggle',this.eventHandler(this._handle_detailToggle_5_3.bind(this)));
    var disposable_5:Function = this.renderer.listen(this._el_5,'scroll',this.eventHandler(this._handle_scroll_5_4.bind(this)));
    const subscription_1:any = this._DataTableBodyComponent_5_4.context.scroll.subscribe(this.eventHandler(this._handle_scroll_5_4.bind(this)));
    const subscription_2:any = this._DataTableBodyComponent_5_4.context.page.subscribe(this.eventHandler(this._handle_page_5_0.bind(this)));
    const subscription_3:any = this._DataTableBodyComponent_5_4.context.activate.subscribe(this.eventHandler(this._handle_activate_5_1.bind(this)));
    const subscription_4:any = this._DataTableBodyComponent_5_4.context.select.subscribe(this.eventHandler(this._handle_select_5_2.bind(this)));
    const subscription_5:any = this._DataTableBodyComponent_5_4.context.detailToggle.subscribe(this.eventHandler(this._handle_detailToggle_5_3.bind(this)));
    this._viewQuery_DataTableBodyComponent_0.reset([this._DataTableBodyComponent_5_4.context]);
    this.context.bodyComponent = this._viewQuery_DataTableBodyComponent_0.first;
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._text_10
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5
    ]
    ,[
      subscription_0,
      subscription_1,
      subscription_2,
      subscription_3,
      subscription_4,
      subscription_5
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import17.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import18.DataTableBodyComponent) && ((5 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._DataTableBodyComponent_5_4.context; }
    if (((token === import16.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import17.NgIf) && (8 === requestNodeIndex))) { return this._NgIf_8_6.context; }
    if (((token === import19.VisibilityDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 9)))) { return this._VisibilityDirective_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._VisibilityDirective_1_3.detectChangesInInputProps(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = this.context.headerHeight;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.detectChangesInInputProps(this,this._anchor_3,throwOnChange);
    const currVal_5_0_0:any = this.context.scrollbarV;
    this._DataTableBodyComponent_5_4.check_scrollbarV(currVal_5_0_0,throwOnChange,false);
    const currVal_5_0_1:any = this.context.scrollbarH;
    this._DataTableBodyComponent_5_4.check_scrollbarH(currVal_5_0_1,throwOnChange,false);
    const currVal_5_0_2:any = this.context.loadingIndicator;
    this._DataTableBodyComponent_5_4.check_loadingIndicator(currVal_5_0_2,throwOnChange,false);
    const currVal_5_0_3:any = this.context.rowHeight;
    this._DataTableBodyComponent_5_4.check_rowHeight(currVal_5_0_3,throwOnChange,false);
    const currVal_5_0_4:any = this.context.offsetX;
    this._DataTableBodyComponent_5_4.check_offsetX(currVal_5_0_4,throwOnChange,false);
    const currVal_5_0_5:any = this.context.detailRowHeight;
    this._DataTableBodyComponent_5_4.check_detailRowHeight(currVal_5_0_5,throwOnChange,false);
    const currVal_5_0_6:any = this.context.messages.emptyMessage;
    this._DataTableBodyComponent_5_4.check_emptyMessage(currVal_5_0_6,throwOnChange,false);
    const currVal_5_0_7:any = this.context.selectionType;
    this._DataTableBodyComponent_5_4.check_selectionType(currVal_5_0_7,throwOnChange,false);
    const currVal_5_0_8:any = this.context.selected;
    this._DataTableBodyComponent_5_4.check_selected(currVal_5_0_8,throwOnChange,false);
    const currVal_5_0_9:any = this.context.rowIdentity;
    this._DataTableBodyComponent_5_4.check_rowIdentity(currVal_5_0_9,throwOnChange,false);
    const currVal_5_0_10:any = this.context.rowDetailTemplate;
    this._DataTableBodyComponent_5_4.check_rowDetailTemplate(currVal_5_0_10,throwOnChange,false);
    const currVal_5_0_11:any = this.context.pageSize;
    this._DataTableBodyComponent_5_4.check_pageSize(currVal_5_0_11,throwOnChange,false);
    const currVal_5_0_12:any = this.context.rows;
    this._DataTableBodyComponent_5_4.check_rows(currVal_5_0_12,throwOnChange,false);
    const currVal_5_0_13:any = this.context.columns;
    this._DataTableBodyComponent_5_4.check_columns(currVal_5_0_13,throwOnChange,false);
    const currVal_5_0_14:any = this.context.offset;
    this._DataTableBodyComponent_5_4.check_offset(currVal_5_0_14,throwOnChange,false);
    const currVal_5_0_15:any = this.context.rowCount;
    this._DataTableBodyComponent_5_4.check_rowCount(currVal_5_0_15,throwOnChange,false);
    const currVal_5_0_16:any = this.context.innerWidth;
    this._DataTableBodyComponent_5_4.check_innerWidth(currVal_5_0_16,throwOnChange,false);
    const currVal_5_0_17:any = this.context.bodyHeight;
    this._DataTableBodyComponent_5_4.check_bodyHeight(currVal_5_0_17,throwOnChange,false);
    if (this._DataTableBodyComponent_5_4.detectChangesInInputProps(this,this._el_5,throwOnChange)) { this._appEl_5.componentView.markAsCheckOnce(); }
    const currVal_8_0_0:any = this.context.footerHeight;
    this._NgIf_8_6.check_ngIf(currVal_8_0_0,throwOnChange,false);
    this._NgIf_8_6.detectChangesInInputProps(this,this._anchor_8,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._VisibilityDirective_1_3.detectChangesInHostProps(this,this._el_1,throwOnChange);
    this._DataTableBodyComponent_5_4.detectChangesInHostProps(this,this._el_5,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_visible_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_1_0:any = ((<any>this.context.recalculate()) !== false);
    return (true && pd_1_0);
  }
  private _handle_page_5_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this.context.onBodyPage($event)) !== false);
    return (true && pd_5_0);
  }
  private _handle_activate_5_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this.context.activate.emit($event)) !== false);
    return (true && pd_5_0);
  }
  private _handle_select_5_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this.context.select.emit($event)) !== false);
    return (true && pd_5_0);
  }
  private _handle_detailToggle_5_3($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this.context.detailToggle.emit($event)) !== false);
    return (true && pd_5_0);
  }
  private _handle_scroll_5_4($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_5_0:any = ((<any>this.context.onBodyScroll($event)) !== false);
    return (true && pd_5_0);
  }
}
export function viewFactory_DatatableComponent0(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement):import3.AppView<import0.DatatableComponent> {
  if ((renderType_DatatableComponent === (null as any))) { (renderType_DatatableComponent = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_DatatableComponent,{})); }
  return new _View_DatatableComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_DatatableComponent1 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _DataTableHeaderComponent_0_4:import20.Wrapper_DataTableHeaderComponent;
  _text_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement) {
    super(_View_DatatableComponent1,renderType_DatatableComponent,import8.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'datatable-header',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import20.viewFactory_DataTableHeaderComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableHeaderComponent_0_4 = new import20.Wrapper_DataTableHeaderComponent(new import9.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._DataTableHeaderComponent_0_4.context,([] as any[]),compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n      ',(null as any));
    compView_0.create(this._DataTableHeaderComponent_0_4.context,([] as any[]),(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'sort',this.eventHandler(this._handle_sort_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_0,'resize',this.eventHandler(this._handle_resize_0_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_0,'reorder',this.eventHandler(this._handle_reorder_0_2.bind(this)));
    const subscription_0:any = this._DataTableHeaderComponent_0_4.context.sort.subscribe(this.eventHandler(this._handle_sort_0_0.bind(this)));
    const subscription_1:any = this._DataTableHeaderComponent_0_4.context.reorder.subscribe(this.eventHandler(this._handle_reorder_0_2.bind(this)));
    const subscription_2:any = this._DataTableHeaderComponent_0_4.context.resize.subscribe(this.eventHandler(this._handle_resize_0_1.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    ,[
      subscription_0,
      subscription_1,
      subscription_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.DataTableHeaderComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._DataTableHeaderComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parent.context.cssClasses.sortAscending;
    this._DataTableHeaderComponent_0_4.check_sortAscendingIcon(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parent.context.cssClasses.sortDescending;
    this._DataTableHeaderComponent_0_4.check_sortDescendingIcon(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parent.context.scrollbarH;
    this._DataTableHeaderComponent_0_4.check_scrollbarH(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parent.context.innerWidth;
    this._DataTableHeaderComponent_0_4.check_innerWidth(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parent.context.offsetX;
    this._DataTableHeaderComponent_0_4.check_offsetX(currVal_0_0_4,throwOnChange,false);
    const currVal_0_0_5:any = this.parent.context.sorts;
    this._DataTableHeaderComponent_0_4.check_sorts(currVal_0_0_5,throwOnChange,false);
    const currVal_0_0_6:any = this.parent.context.sortType;
    this._DataTableHeaderComponent_0_4.check_sortType(currVal_0_0_6,throwOnChange,false);
    const currVal_0_0_7:any = this.parent.context.headerHeight;
    this._DataTableHeaderComponent_0_4.check_headerHeight(currVal_0_0_7,throwOnChange,false);
    const currVal_0_0_8:any = this.parent.context.columns;
    this._DataTableHeaderComponent_0_4.check_columns(currVal_0_0_8,throwOnChange,false);
    if (this._DataTableHeaderComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    this._DataTableHeaderComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_sort_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this.parent.context.onColumnSort($event)) !== false);
    return (true && pd_0_0);
  }
  private _handle_resize_0_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this.parent.context.onColumnResize($event)) !== false);
    return (true && pd_0_0);
  }
  private _handle_reorder_0_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this.parent.context.onColumnReorder($event)) !== false);
    return (true && pd_0_0);
  }
}
function viewFactory_DatatableComponent1(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_DatatableComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_DatatableComponent2 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _DataTableFooterComponent_0_4:import22.Wrapper_DataTableFooterComponent;
  _text_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement) {
    super(_View_DatatableComponent2,renderType_DatatableComponent,import8.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'datatable-footer',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import22.viewFactory_DataTableFooterComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableFooterComponent_0_4 = new import22.Wrapper_DataTableFooterComponent(new import9.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._DataTableFooterComponent_0_4.context,([] as any[]),compView_0);
    this._text_1 = this.renderer.createText((null as any),'\n      ',(null as any));
    compView_0.create(this._DataTableFooterComponent_0_4.context,([] as any[]),(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'page',this.eventHandler(this._handle_page_0_0.bind(this)));
    const subscription_0:any = this._DataTableFooterComponent_0_4.context.page.subscribe(this.eventHandler(this._handle_page_0_0.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[disposable_0],[subscription_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import23.DataTableFooterComponent) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._DataTableFooterComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parent.context.footerHeight;
    this._DataTableFooterComponent_0_4.check_footerHeight(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parent.context.rowCount;
    this._DataTableFooterComponent_0_4.check_rowCount(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parent.context.pageSize;
    this._DataTableFooterComponent_0_4.check_pageSize(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parent.context.offset;
    this._DataTableFooterComponent_0_4.check_offset(currVal_0_0_3,throwOnChange,false);
    const currVal_0_0_4:any = this.parent.context.cssClasses.pagerLeftArrow;
    this._DataTableFooterComponent_0_4.check_pagerLeftArrowIcon(currVal_0_0_4,throwOnChange,false);
    const currVal_0_0_5:any = this.parent.context.cssClasses.pagerRightArrow;
    this._DataTableFooterComponent_0_4.check_pagerRightArrowIcon(currVal_0_0_5,throwOnChange,false);
    const currVal_0_0_6:any = this.parent.context.cssClasses.pagerPrevious;
    this._DataTableFooterComponent_0_4.check_pagerPreviousIcon(currVal_0_0_6,throwOnChange,false);
    const currVal_0_0_7:any = this.parent.context.cssClasses.pagerNext;
    this._DataTableFooterComponent_0_4.check_pagerNextIcon(currVal_0_0_7,throwOnChange,false);
    const currVal_0_0_8:any = this.parent.context.messages.totalMessage;
    this._DataTableFooterComponent_0_4.check_totalMessage(currVal_0_0_8,throwOnChange,false);
    if (this._DataTableFooterComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    this._DataTableFooterComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_page_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this.parent.context.onFooterPage($event)) !== false);
    return (true && pd_0_0);
  }
}
function viewFactory_DatatableComponent2(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_DatatableComponent2(viewUtils,parentInjector,declarationEl);
}