/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '../../../../src/components/header/header-cell.component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/security';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import12 from '../../../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/common/src/directives/ng_if';
import * as import18 from '@angular/common/src/directives/ng_class';
import * as import19 from '../../../node_modules/@angular/common/src/directives/ng_template_outlet.ngfactory';
import * as import20 from '@angular/common/src/directives/ng_template_outlet';
export class Wrapper_DataTableHeaderCellComponent {
  context:import0.DataTableHeaderCellComponent;
  changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  constructor() {
    this.changed = false;
    this.context = new import0.DataTableHeaderCellComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._expr_10 = import1.UNINITIALIZED;
    this._expr_11 = import1.UNINITIALIZED;
  }
  check_sortType(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this.changed = true;
      this.context.sortType = currValue;
      this._expr_0 = currValue;
    }
  }
  check_column(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this.changed = true;
      this.context.column = currValue;
      this._expr_1 = currValue;
    }
  }
  check_sortAscendingIcon(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this.changed = true;
      this.context.sortAscendingIcon = currValue;
      this._expr_2 = currValue;
    }
  }
  check_sortDescendingIcon(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this.changed = true;
      this.context.sortDescendingIcon = currValue;
      this._expr_3 = currValue;
    }
  }
  check_headerHeight(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this.changed = true;
      this.context.headerHeight = currValue;
      this._expr_4 = currValue;
    }
  }
  check_sorts(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this.changed = true;
      this.context.sorts = currValue;
      this._expr_5 = currValue;
    }
  }
  detectChangesInInputProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
  detectChangesInHostProps(view:import3.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_6:any = this.context.headerHeight;
    if (import2.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      view.renderer.setElementStyle(el,'height',((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_6) == (null as any))? (null as any): (view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_6).toString() + 'px')));
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this.context.columnCssClasses;
    if (import2.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementProperty(el,'className',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context.name;
    if (import2.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      view.renderer.setElementAttribute(el,'title',((currVal_8 == (null as any))? (null as any): currVal_8.toString()));
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context.minWidth;
    if (import2.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementStyle(el,'minWidth',((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_9) == (null as any))? (null as any): (view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_9).toString() + 'px')));
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context.maxWidth;
    if (import2.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementStyle(el,'maxWidth',((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_10) == (null as any))? (null as any): (view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_10).toString() + 'px')));
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.context.width;
    if (import2.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      view.renderer.setElementStyle(el,'width',((view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_11) == (null as any))? (null as any): (view.viewUtils.sanitizer.sanitize(import4.SecurityContext.STYLE,currVal_11).toString() + 'px')));
      this._expr_11 = currVal_11;
    }
  }
}
var renderType_DataTableHeaderCellComponent_Host:import5.RenderComponentType = (null as any);
class _View_DataTableHeaderCellComponent_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import6.AppElement;
  _DataTableHeaderCellComponent_0_4:Wrapper_DataTableHeaderCellComponent;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement) {
    super(_View_DataTableHeaderCellComponent_Host0,renderType_DataTableHeaderCellComponent_Host,import8.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = import2.selectOrCreateRenderHostElement(this.renderer,'datatable-header-cell',import2.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import6.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_DataTableHeaderCellComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DataTableHeaderCellComponent_0_4 = new Wrapper_DataTableHeaderCellComponent();
    this._appEl_0.initComponent(this._DataTableHeaderCellComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._DataTableHeaderCellComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DataTableHeaderCellComponent) && (0 === requestNodeIndex))) { return this._DataTableHeaderCellComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._DataTableHeaderCellComponent_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    this._DataTableHeaderCellComponent_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableHeaderCellComponent_Host0(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement):import3.AppView<any> {
  if ((renderType_DataTableHeaderCellComponent_Host === (null as any))) { (renderType_DataTableHeaderCellComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_DataTableHeaderCellComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const DataTableHeaderCellComponentNgFactory:import10.ComponentFactory<import0.DataTableHeaderCellComponent> = new import10.ComponentFactory<import0.DataTableHeaderCellComponent>('datatable-header-cell',viewFactory_DataTableHeaderCellComponent_Host0,import0.DataTableHeaderCellComponent);
const styles_DataTableHeaderCellComponent:any[] = ([] as any[]);
var renderType_DataTableHeaderCellComponent:import5.RenderComponentType = (null as any);
class _View_DataTableHeaderCellComponent0 extends import3.AppView<import0.DataTableHeaderCellComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import6.AppElement;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import11.Wrapper_NgIf;
  _text_4:any;
  _anchor_5:any;
  /*private*/ _appEl_5:import6.AppElement;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import11.Wrapper_NgIf;
  _text_6:any;
  _el_7:any;
  _NgClass_7_3:import12.Wrapper_NgClass;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement) {
    super(_View_DataTableHeaderCellComponent0,renderType_DataTableHeaderCellComponent,import8.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import6.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import2.createRenderElement(this.renderer,parentRenderNode,'div',import2.EMPTY_INLINE_ARRAY,(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_3 = new import6.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import13.TemplateRef_(this._appEl_3,viewFactory_DataTableHeaderCellComponent1);
    this._NgIf_3_6 = new import11.Wrapper_NgIf(this._appEl_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_5 = new import6.AppElement(5,1,this,this._anchor_5);
    this._TemplateRef_5_5 = new import13.TemplateRef_(this._appEl_5,viewFactory_DataTableHeaderCellComponent2);
    this._NgIf_5_6 = new import11.Wrapper_NgIf(this._appEl_5.vcRef,this._TemplateRef_5_5);
    this._text_6 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_7 = import2.createRenderElement(this.renderer,this._el_1,'span',new import2.InlineArray2(2,'class','sort-btn'),(null as any));
    this._NgClass_7_3 = new import12.Wrapper_NgClass(this.parentInjector.get(import14.IterableDiffers),this.parentInjector.get(import15.KeyValueDiffers),new import16.ElementRef(this._el_7),this.renderer);
    this._text_8 = this.renderer.createText(this._el_7,'\n      ',(null as any));
    this._text_9 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_10 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    this.init(([] as any[]),[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._anchor_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._text_10
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import17.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6.context; }
    if (((token === import13.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import17.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6.context; }
    if (((token === import18.NgClass) && ((7 <= requestNodeIndex) && (requestNodeIndex <= 8)))) { return this._NgClass_7_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:boolean = !this.context.column.headerTemplate;
    this._NgIf_3_6.check_ngIf(currVal_3_0_0,throwOnChange,false);
    this._NgIf_3_6.detectChangesInInputProps(this,this._anchor_3,throwOnChange);
    const currVal_5_0_0:any = this.context.column.headerTemplate;
    this._NgIf_5_6.check_ngIf(currVal_5_0_0,throwOnChange,false);
    this._NgIf_5_6.detectChangesInInputProps(this,this._anchor_5,throwOnChange);
    const currVal_7_0_0:any = 'sort-btn';
    this._NgClass_7_3.check_klass(currVal_7_0_0,throwOnChange,false);
    const currVal_7_0_1:any = this.context.sortClasses(this.context.sortDir);
    this._NgClass_7_3.check_ngClass(currVal_7_0_1,throwOnChange,false);
    this._NgClass_7_3.detectChangesInInputProps(this,this._el_7,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._NgClass_7_3.detectChangesInHostProps(this,this._el_7,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_DataTableHeaderCellComponent0(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement):import3.AppView<import0.DataTableHeaderCellComponent> {
  if ((renderType_DataTableHeaderCellComponent === (null as any))) { (renderType_DataTableHeaderCellComponent = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_DataTableHeaderCellComponent,{})); }
  return new _View_DataTableHeaderCellComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderCellComponent1 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement) {
    super(_View_DataTableHeaderCellComponent1,renderType_DataTableHeaderCellComponent,import8.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._expr_2 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = import2.createRenderElement(this.renderer,(null as any),'span',new import2.InlineArray2(2,'class','datatable-header-cell-label draggable'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n      ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_0.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[disposable_0],([] as any[]));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_2:any = this.parent.context.name;
    if (import2.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'innerHTML',this.viewUtils.sanitizer.sanitize(import4.SecurityContext.HTML,currVal_2));
      this._expr_2 = currVal_2;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this.parent.context.onSort()) !== false);
    return (true && pd_0_0);
  }
}
function viewFactory_DataTableHeaderCellComponent1(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement):import3.AppView<any> {
  return new _View_DataTableHeaderCellComponent1(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderCellComponent2 extends import3.AppView<any> {
  _anchor_0:any;
  /*private*/ _appEl_0:import6.AppElement;
  _TemplateRef_0_5:any;
  _NgTemplateOutlet_0_6:import19.Wrapper_NgTemplateOutlet;
  _map_4:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement) {
    super(_View_DataTableHeaderCellComponent2,renderType_DataTableHeaderCellComponent,import8.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
    this._map_4 = import2.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        column: p0,
        sortDir: p1
      }
      ;
    });
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._anchor_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this._appEl_0 = new import6.AppElement(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import13.TemplateRef_(this._appEl_0,viewFactory_DataTableHeaderCellComponent3);
    this._NgTemplateOutlet_0_6 = new import19.Wrapper_NgTemplateOutlet(this._appEl_0.vcRef);
    this.init(([] as any[]).concat([this._appEl_0]),[this._anchor_0],([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import20.NgTemplateOutlet) && (0 === requestNodeIndex))) { return this._NgTemplateOutlet_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this._map_4(this.parent.context.column,this.parent.context.sortDir);
    this._NgTemplateOutlet_0_6.check_ngOutletContext(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parent.context.column.headerTemplate;
    this._NgTemplateOutlet_0_6.check_ngTemplateOutlet(currVal_0_0_1,throwOnChange,false);
    this._NgTemplateOutlet_0_6.detectChangesInInputProps(this,this._anchor_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DataTableHeaderCellComponent2(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement):import3.AppView<any> {
  return new _View_DataTableHeaderCellComponent2(viewUtils,parentInjector,declarationEl);
}
class _View_DataTableHeaderCellComponent3 extends import3.AppView<any> {
  _text_0:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement) {
    super(_View_DataTableHeaderCellComponent3,renderType_DataTableHeaderCellComponent,import8.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._text_0 = this.renderer.createText((null as any),'\n      ',(null as any));
    this.init(([] as any[]).concat([this._text_0]),[this._text_0],([] as any[]),([] as any[]));
    return (null as any);
  }
}
function viewFactory_DataTableHeaderCellComponent3(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import6.AppElement):import3.AppView<any> {
  return new _View_DataTableHeaderCellComponent3(viewUtils,parentInjector,declarationEl);
}