{"version":3,"file":"calendar.pipe.js","sourceRoot":"","sources":["calendar.pipe.ts"],"names":[],"mappings":"AAAA,6DAA6D;;AAE7D,qBAAsF,eAAe,CAAC,CAAA;AACtG,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AAGjC,4FAA4F;AAC5F,IAAM,iBAAiB,GAAyC,MAAO,CAAC,OAAO,IAAI,MAAM,CAAC;AAG1F;IAaE,sBAAoB,MAAyB,EAAU,OAAe;QAbxE,iBAmFC;QAtEqB,WAAM,GAAN,MAAM,CAAmB;QAAU,YAAO,GAAP,OAAO,CAAQ;QACpE,qFAAqF;QACrF,YAAY,CAAC,UAAU,EAAE,CAAC;QAE1B,YAAY,CAAC,KAAK,EAAE,CAAC;QAErB,+EAA+E;QAC/E,kFAAkF;QAClF,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;YAC7B,OAAA,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC;gBACnD,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,YAAY,EAAE,EAA1B,CAA0B,CAAC,CAAC;YACrD,CAAC,CAAC;QAFF,CAEE,CAAC,CAAC;IACR,CAAC;IAED,gCAAS,GAAT,UAAU,KAA2B;QAAE,cAAc;aAAd,WAAc,CAAd,sBAAc,CAAd,IAAc;YAAd,6BAAc;;QACnD,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC7C,CAAC;IAED,kCAAW,GAAX;QACE,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3B,YAAY,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7B,YAAY,CAAC,YAAY,EAAE,CAAC;QAC9B,CAAC;QAED,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAEc,uBAAU,GAAzB;QACE,uBAAuB;QACvB,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5B,YAAY,CAAC,SAAS,GAAG,IAAI,mBAAY,EAAQ,CAAC;YAClD,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;gBAClC,IAAI,YAAY,GAAG,YAAY,CAAC,2BAA2B,EAAE,CAAC;gBAC9D,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC;oBACtC,wBAAwB;oBACxB,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;oBAExC,oBAAoB;oBACpB,YAAY,CAAC,YAAY,EAAE,CAAC;oBAC5B,YAAY,CAAC,UAAU,EAAE,CAAC;gBAC5B,CAAC,EAAE,YAAY,CAAC,CAAC;YACnB,CAAC;QACH,CAAC;IACH,CAAC;IAEc,yBAAY,GAA3B;QACE,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACzC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;YAC3B,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAChC,CAAC;IACH,CAAC;IAEc,wCAA2B,GAA1C;QACE,IAAI,GAAG,GAAG,iBAAiB,EAAE,CAAC;QAC9B,IAAI,QAAQ,GAAG,iBAAiB,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QACjE,IAAI,cAAc,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QACxD,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,0BAA0B;IAC1D,CAAC;IAxED;;;OAGG;IACY,kBAAK,GAAW,CAAC,CAAC;IAqE5B,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,WAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,EAAG,EAAE;KAC5D,CAAC;IACF,kBAAkB;IACX,2BAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,wBAAiB,GAAG;QAC3B,EAAC,IAAI,EAAE,aAAM,GAAG;KACf,CAAC;IACF,mBAAC;AAAD,CAAC,AAnFD,IAmFC;AAnFY,oBAAY,eAmFxB,CAAA","sourcesContent":["/* angular2-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nimport {Pipe, ChangeDetectorRef, PipeTransform, EventEmitter, OnDestroy, NgZone} from '@angular/core';\nimport * as moment from 'moment';\nimport {Subscription} from 'rxjs';\n\n// under systemjs, moment is actually exported as the default export, so we account for that\nconst momentConstructor: (value?: any) => moment.Moment = (<any>moment).default || moment;\n\n\nexport class CalendarPipe implements PipeTransform, OnDestroy {\n\n  /**\n   * @private Internal reference counter, so we can clean up when no instances are in use\n   * @type {number}\n   */\n  private static _refs: number = 0;\n\n  private static _timer: number;\n  private static _midnight: EventEmitter<Date>;\n\n  private _midnightSub: Subscription;\n\n  constructor(private _cdRef: ChangeDetectorRef, private _ngZone: NgZone) {\n    // using a single static timer for all instances of this pipe for performance reasons\n    CalendarPipe._initTimer();\n\n    CalendarPipe._refs++;\n\n    // values such as Today will need to be replaced with Yesterday after midnight,\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\n    this._ngZone.runOutsideAngular(() =>\n      this._midnightSub = CalendarPipe._midnight.subscribe(() => {\n        this._ngZone.run(() => this._cdRef.markForCheck());\n      }));\n  }\n\n  transform(value: Date | moment.Moment, ...args: any[]): any {\n    return momentConstructor(value).calendar();\n  }\n\n  ngOnDestroy(): void {\n    if (CalendarPipe._refs > 0) {\n      CalendarPipe._refs--;\n    }\n\n    if (CalendarPipe._refs === 0) {\n      CalendarPipe._removeTimer();\n    }\n\n    this._midnightSub.unsubscribe();\n  }\n\n  private static _initTimer() {\n    // initialize the timer\n    if (!CalendarPipe._midnight) {\n      CalendarPipe._midnight = new EventEmitter<Date>();\n      if (typeof window !== 'undefined') {\n        let timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\n        CalendarPipe._timer = window.setTimeout(() => {\n          // emit the current date\n          CalendarPipe._midnight.emit(new Date());\n\n          // refresh the timer\n          CalendarPipe._removeTimer();\n          CalendarPipe._initTimer();\n        }, timeToUpdate);\n      }\n    }\n  }\n\n  private static _removeTimer() {\n    if (CalendarPipe._timer) {\n      window.clearTimeout(CalendarPipe._timer);\n      CalendarPipe._timer = null;\n      CalendarPipe._midnight = null;\n    }\n  }\n\n  private static _getMillisecondsUntilUpdate() {\n    var now = momentConstructor();\n    var tomorrow = momentConstructor().startOf('day').add(1, 'days');\n    var timeToMidnight = tomorrow.valueOf() - now.valueOf();\n    return timeToMidnight + 1000; // 1 second after midnight\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{ name: 'amCalendar', pure: false }, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: ChangeDetectorRef, },\n{type: NgZone, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}